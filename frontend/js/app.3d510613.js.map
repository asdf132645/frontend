{"version":3,"file":"js/app.3d510613.js","mappings":"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,CACCT,MAAO,KACPC,KAAM,gBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,YACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,eACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,aACNV,QAAS,KACTgB,IAAK,GACLC,IAAK,GACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,WACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,EACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,aACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,EACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,WACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,EACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,QACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,cACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,OACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,SACP,CACCT,MAAO,KACPC,KAAM,iBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,SACP,CACCT,MAAO,KACPC,KAAM,uBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,SACP,CACCT,MAAO,KACPC,KAAM,mBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,SACP,CACCT,MAAO,KACPC,KAAM,UACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,SAEN,CACIT,MAAO,KACPC,KAAM,sBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,KACP,CACCT,MAAO,KACPC,KAAM,sBACNV,QAAS,KACTgB,IAAK,EACLC,IAAK,IACLC,KAAM,MAIDC,GAAmB,CAC5B,CAAExsB,KAAM,aAAcD,MAAO,KAAM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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constFile/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constFile/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constFile/analysis.ts","webpack://uimdCell/./src/common/defines/constFile/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constFile/settings.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?7f70","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?ea5c","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/lib/commonfunction/settingFunctions.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/common/lib/sendWebSocket/common.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/common/defines/constFile/classArr.ts","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/defines/constFile/rbc.ts","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constFile/lis.ts","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/storeSetData/common.ts","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 2475,\n\t\"./uz-latn.js\": 2475,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]","export const testType = [\r\n    {value: '01', text: 'Diff'},\r\n    {value: '04', text: 'Premium'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];","import { commonCodeList } from '@/common/defines/constFile/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constFile/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, pbiaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const baseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    return `${baseUrl}/images/getImageRealTime?folder=${pbiaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}`;\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"P\"),\n  /*#__PURE__*/_createTextVNode(\"rocessing \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"I\"),\n  /*#__PURE__*/_createTextVNode(\"nformation \")\n], -1)\nconst _hoisted_2 = { class: \"processInfoUl\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)\nconst _hoisted_6 = { class: \"proVal\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\nconst _hoisted_13 = { class: \"proSpan\" }\nconst _hoisted_14 = { class: \"proVal\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)\nconst _hoisted_16 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"ul\", _hoisted_2, [\n      _createElementVNode(\"li\", null, [\n        _hoisted_3,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_5,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_7,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_9,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_13, _toDisplayString(siteCd.value === '0019' ? 'Order Date' : 'Analyzed Date'), 1),\n        _createElementVNode(\"span\", _hoisted_14, _toDisplayString(siteCd.value === '0019' ? processInfoItem.value?.analyzedDttm   : processInfoItem.value?.orderDate), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_15,\n        _createElementVNode(\"span\", _hoisted_16, _toDisplayString(prevOilCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">P</span>rocessing <span class=\"greenColor\">I</span>nformation </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <span class=\"proSpan\">\r\n          {{ siteCd === '0019' ? 'Order Date' : 'Analyzed Date' }}\r\n        </span>\r\n        <span class=\"proVal\">\r\n          {{ siteCd === '0019' ? processInfoItem?.analyzedDttm   : processInfoItem?.orderDate }}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const analysisOptions = [\r\n    {value: '01', text: 'WBC Diff (Standard)'},\r\n    {value: '04', text: 'PBS (Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'},\r\n    // {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const wbcCountOptions = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const bmCountOptions = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const stitchCountOptions = [{value: '1', text: '1 stitch'},\r\n    {value: '2', text: '2 stitch'},\r\n    {value: '3', text: '3 stitch'},\r\n    {value: '4', text: '4 stitch'},\r\n    {value: '5', text: '5 stitch'}];\r\n\r\nexport const slideCard = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ]\r\n};\r\n\r\nexport const slideCard100a = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ]\r\n};\r\n","interface Messages {\r\n    [key: string]: string;\r\n}\r\nexport  const messages: Messages = {\r\n    Logout: 'Would you like to log out?',\r\n\r\n    // login page\r\n    GET_POSITION_LIST: 'getPositionList',\r\n    GET_LOGIN_HISTORY: 'getLoginHistory',\r\n    SET_USER: 'setUser',\r\n    IS_REGIST_USER: 'isRegistUser',\r\n    UPDATE_LOGIN_DTTM: 'updateLoginDttm',\r\n    UPDATE_USER_AVAILABLE: 'updateUserAvailable',\r\n\r\n    // WBC classification\r\n    GET_WBC_CLASS_LIST: 'getWbcClassList',\r\n    GET_WBC_CLASS_LIST_ALL: 'getWbcClassListAll',\r\n    GET_WBC_TOTAL_COUNT: 'getWbcTotalCount',\r\n    UPDATE_WBC_COUNT: 'updateWbcCount',\r\n    GET_WBC_COUNT: 'getWbcCount',\r\n    GET_TEST_TYPE: 'getTestType',\r\n    // 인하대 test type 명칭 변경\r\n    GET_MODIFIED_TEST_TYPE: 'getModifiedTestType',\r\n    GET_STITCH_COUNT: 'getStitchCount',\r\n    GET_RBC_COUNT: 'getRbcCount',\r\n    GET_RBC_COUNT_HIST: 'getRbcCountHist',\r\n    GET_RBC_COUNT_SKMC: 'getRbcCountSkmc',\r\n    UPDATE_DEGREE: 'updateDegree',\r\n    INIT_WBC_COUNT: 'initWbcCount',\r\n    INIT_RBC_DEGREE: 'initRbcDegree',\r\n    GET_WBC_INFO: 'getWbcInfo',\r\n    SET_WBC_IMAGE_HIST: 'setWbcImageHist',\r\n    GET_WBC_IMAGE_HIST: 'getWbcImageHist',\r\n    INIT_WBC_IMAGE_HIST: 'initWbcImageHist',\r\n    INSERT_WBC_CLASSIFICATION: 'insertWbcClassification',\r\n    SET_WBC_CUSTOM_LIST: 'setWbcClassList',\r\n    UPDATE_HOT_KEYS: 'updateHotKeys',\r\n    UPDATE_BF_HOT_KEYS: 'updateBfHotKeys',\r\n    UPDATE_ORDER: 'updateOrder',\r\n    UPDATE_ORDER_BF: 'updateOrderBf',\r\n    UPDATE_IMAGE_HIST: 'updateImageHist',\r\n    SET_CURRENT_WBC_RESULTS: 'setCurrentWbcResults',\r\n    GET_CURRENT_WBC_RESULTS: 'getCurrentWbcResults',\r\n    SET_BEFORE_WBC_RESULTS: 'setBeforeWbcResults',\r\n    GET_BEFORE_WBC_RESULTS: 'getBeforeWbcResults',\r\n\r\n    // 집계\r\n    GET_WBC_MODIFY_LIST: 'getWbcModifyList',\r\n    GET_WBC_MODIFY_LIST_ALL: 'getWbcModifyListAll',\r\n    GET_BF_MODIFY_LIST: 'getBfModifyList',\r\n\r\n    // RBC classification\r\n    GET_RBC_CLASS_LIST: 'getRbcClassList',\r\n    GET_MALARIA_COUNT: 'getMalariaCount',\r\n    UPDATE_MALARIA_COUNT: 'updateMalariaCount',\r\n    SET_CURRENT_RBC_RESULTS: 'setCurrentRbcResults',\r\n    GET_CURRENT_RBC_RESULTS: 'getCurrentRbcResults',\r\n\r\n    SET_CLASSIFICATION: 'setClassification',\r\n    GET_CLASSIFICATION_ITEM: 'getClassificationItem',\r\n    SET_CLASSIFICATION_ITEM: 'setClassificationItem',\r\n\r\n    UPDATE_RBC_CLASSIFICATION: 'updateRbcClassificatin',\r\n    UPDATE_RBC_CLASSIFICATION_SKMC: 'updateRbcClassificatinSkmc',\r\n    INSERT_WBC_SUCCESS: 'insertWbcSuccess',\r\n    SELECT_RBC_DEGREE: 'selectRbcDegree',\r\n    UPDATE_RBC_DEGREE: 'updateRbcDegree',\r\n\r\n    // Test page\r\n    SET_TEST_LIST: 'setTestList',\r\n    GET_TEST_LIST: 'getTestList',\r\n    GET_TEST_RESULT: 'getTestResult',\r\n    GET_RBC_FIELDS: 'getRbcFields',\r\n    GET_WBC_FIELDS: 'getWbcFields',\r\n    GET_RBC_ITEMS: 'getRbcItems',\r\n    GET_WBC_ITEMS: 'getWbcItems',\r\n    INIT_OIL_COUNT: 'initOilCount',\r\n    UPDATE_RESULT: 'updateResult',\r\n    UPDATE_RUNNING_STATE: 'updateRunningState',\r\n    GET_ORDER_LIST: 'getOrderList',\r\n    SET_ORDER_LIST: 'setOrderList',\r\n    UPDATE_ORDER_LIST: 'updateOrderList',\r\n    INIT_ORDER_LIST: 'initOrderList',\r\n    GET_TEST_RESULT_ALL: 'getTestResultAll',\r\n    GET_SEARCH_OPTIONS: 'getSearchOptions',\r\n    UPDATE_SEARCH_OPTIONS: 'updateSearchOption',\r\n    SET_TEST_HISTORY: 'setTestHistory',\r\n    GET_TEST_HISTORY_LIST: 'getTestHistoryList',\r\n    ALL_TEST_HISTORY_LIST: 'allTestHistoryList',\r\n    SEARCH_TEST_HISTORY_LIST: 'searchTestHistoryList',\r\n    UPDATE_TEST_HISTORY: 'updateTestHistory',\r\n    GET_TEST_HISTORY: 'getTestHistory',\r\n    DELETE_TEST_HISTORY: 'deleteTestHistory',\r\n    UPDATE_SIGNED_STATE: 'updatesubmitState',\r\n    UPDATE_TEST_HISTORY_WBC_INFO: 'updateTestHistoryWbcInfo',\r\n    GET_RBC_COMMENT: 'getRbcComment',\r\n    GET_WBC_COMMENT: 'getWbcComment',\r\n    GET_RUNNING_INTERVAL_ID: 'getRunningIntervalId',\r\n    SET_RUNNING_INTERVAL_ID: 'setRuningIntervalId',\r\n    UPDATE_TIMER: 'updateWorkingTimer',\r\n    GET_TIMER: 'getWorkingTimer',\r\n    SET_TIMER: 'setWorkingTimer',\r\n    SET_WORKING_INTERVAL_ID: 'setWorkingIntervalId',\r\n    GET_WORKING_INTERVAL_ID: 'getWorkingIntervalId',\r\n    GET_RUNNING_STATE: 'getRunningState',\r\n    SET_SLIDE_TIMER: 'setSlideTimer',\r\n    UPDATE_SLIDE_TIMER: 'updateSlideTimer',\r\n    GET_SLIDE_TIME_COUNT: 'getSlideTimeCount',\r\n    SET_USER_STOP: 'setUserStop',\r\n    GET_USER_STOP: 'getUserStop',\r\n    SET_WBC_CELL_POSITION: 'setWbcCellPosition',\r\n    GET_WBC_CELL_POSITION: 'getWbcCellPosition',\r\n    GET_TEST_HISTORY_PREV: 'getTestHistoryPrev',\r\n    GET_TEST_HISTORY_NEXT: 'getTestHistoryNext',\r\n    SET_IS_RECOVERY_RUN: 'setIsRecoveryRun',\r\n    GET_IS_RECOVERY_RUN: 'getIsRecoveryRun',\r\n\r\n    // Work List\r\n    SET_WORK_LIST: 'setWorkList',\r\n    GET_WORK_LIST: 'getWorkList',\r\n    INIT_WORK_LIST: 'initWorkList',\r\n    DELETE_WORK_LIST: 'deleteWorkList',\r\n    UPDATE_WORK_LIST: 'updateWorkList',\r\n    UPDATE_WORK_LIST_BM: 'updateWorkListBm',\r\n    UPDATE_SIGNED_WORK_LIST: 'updateSignedWorkList',\r\n    UPDATE_RBC_COMMENT: 'updateRbcComment',\r\n    UPDATE_WBC_COMMENT: 'updateWbcComment',\r\n    UPDATE_BM_COMMENT: 'updateBmComment',\r\n    UPDATE_SELECT_ORDER_ID: 'updateSelectOrderId',\r\n    GET_SELECT_ORDER_ID: 'getSelectOrderId',\r\n    ADD_WORK_LIST: 'addWorkList',\r\n    GET_TEST_BARCODES: 'getTestBarcodes',\r\n    ADD_DSP_LIST: 'addDspList',\r\n    GET_DSP_LIST: 'getDspList',\r\n\r\n    // Common\r\n    // lis 단축키 추가\r\n    SET_LIS_HOT_KEY: 'setLisHotKey',\r\n    UPDATE_NEW_TEST_SET: 'updateNewTestSet',\r\n    UPDATE_EXEC_TEST_TYPE: 'updateExecTestType',\r\n    INITIALIZE_MOUNT_CNT: 'initializeMountCnt',\r\n    UPDATE_MOUNT_CNT: 'updateMountCnt',\r\n    GET_CURRENT_USER: 'getCurrentUser',\r\n    GET_SETTINGS: 'getSettings',\r\n    UPDATE_RUNNING_PATH: 'updateRunningPath',\r\n    UPDATE_RESULT_PATH_WBC: 'updateResultPathWbc',\r\n    UPDATE_RESULT_PATH_RBC: 'updateResultPathRbc',\r\n    UPDATE_BARCODE_PATH: 'updateBarcodePath',\r\n    GET_SYSTEM_TIME_ID: 'getSystemTimeId',\r\n    SET_SYSTEM_TIME_ID: 'setSystemTimeId',\r\n    GET_USER: 'getUser',\r\n    UPDATE_REMEMBER_STATE: 'updateRememberState',\r\n    SET_CURRENT_USER: 'setCurrentUser',\r\n    UPDATE_ROOT_PATH: 'updateRootPath',\r\n    GET_FILE_FILTER: 'getFileFilter',\r\n    GET_USER_LIST: 'getUserList',\r\n    UPDATE_ANALYSIS_TYPE: 'updateAnalysisType',\r\n    UPDATE_TEST_TYPE: 'updateTestType',\r\n    UPDATE_RUNNING_MODE: 'updateRunningMode',\r\n    UPDATE_USER: 'updateUser',\r\n    DELETE_USER: 'deleteUser',\r\n    UPDATE_MARKER_STATE: 'updateMarkerState',\r\n    GET_MARKER_STATE: 'getMarkerState',\r\n    SET_PAUSE_STATE: 'setPauseState',\r\n    GET_PAUSE_STATE: 'getPauseState',\r\n    GET_BF_WHOLE_SLIDE_PATH: 'getBfWholeSlidePath',\r\n    GET_BF_WBC_CLASS_LIST: 'getBfWbcClassList',\r\n    GET_SIZE_SLIDE_VALUE: 'getSizeSlideValue',\r\n    UPDATE_LIS_CODE: 'updateLisCode',\r\n    SELECT_LIS_CODE: 'selectLisCode',\r\n    SELECT_LIS_CODE_RBC: 'selectLisCodeRbc',\r\n    UPDATE_CBC_CODE: 'updateCbcCode',\r\n    SELECT_CBC_CODE: 'selectCbcCode',\r\n    UPDATE_LIS_CONN_PATH: 'updateLisConnPath',\r\n    SELECT_LIS_CONN_PATH: 'selectLisConnPath',\r\n    GET_BACKUP_LIST: 'getBackupList',\r\n    RESTORE_BACKUP_DATA: 'restoreBackupData',\r\n    DELETE_BACKUP_DATA: 'deleteBackupData',\r\n    RESET_RBC_DEGREE: 'resetRbcDegree',\r\n    GET_DEFAULT_RBC_DEGREE: 'getDefaultRbcDegree',\r\n    UPDATE_CHECKED_CELL: 'updateCheckedCell',\r\n    SET_LOCK_SLIDE: 'setLockSlide',\r\n    SET_HOST_IP: 'setHostIp',\r\n    GET_HOST_IP: 'getHostIp',\r\n    GET_NORMAL_RANGE: 'getNormalRange',\r\n    UPDATE_NORMAL_RANGE: 'updateNormalRange',\r\n    GET_LOCK_STATE: 'getLockState',\r\n    GET_KUMC_CBC_PATH: 'getKumcCbcPath',\r\n    SET_WBC_NORMAL_RANGE: 'setWbcNormalRange',\r\n    GET_WBC_NORMAL_RANGE: 'getWbcNormalRange',\r\n    GET_SKMC_RESULT_CD: 'getSkmcResultCd',\r\n    SET_SKMC_RESULT_CD: 'setSkmcResultCd',\r\n    REMOVE_SKMC_RESULT_CD: 'removeSkmcResultCd',\r\n    GET_SKMC_REMARK: 'getSkmcRemark',\r\n    SET_SKMC_REMARK: 'setSkmcRemark',\r\n    REMOVE_SKMC_REMARK: 'removeSkmcRemark',\r\n    SET_SKMC_FAVORITE: 'setSkmcFavorite',\r\n    GET_SKMC_FAVORITE: 'getSkmcFavorite',\r\n    GET_SKMC_LIS_RESULTS: 'getSkmcLisResults',\r\n    SET_SKMC_LIS_RESULTS: 'setSkmcLisResults',\r\n    SET_ALARM_COUNT: 'setAlarmCount',\r\n    SET_SORT_TYPE: 'setSortType',\r\n    GET_SORT_TYPE: 'getSortType',\r\n    SET_CUSTOM_CLASS: 'setCustomClass',\r\n    GET_CUSTOM_CLASS: 'getCustomClass',\r\n    SET_SYS_INFO: 'setSysInfo',\r\n    GET_SYS_INFO: 'getSysInfo',\r\n    SET_BACKEND_DATA: 'setBackendData',\r\n    GET_BACKEND_DATA: 'getBackendData',\r\n\r\n    // 인하대 임시\r\n    SELECT_CBC_CODE_INHA: 'selectCbcCodeInha',\r\n    SELECT_LIS_CODE_INHA: 'selectLisCodeInha',\r\n    SELECT_LIS_CODE_RBC_INHA: 'selectLisCodeRbcInha',\r\n    SELECT_LIS_CONN_PATH_INHA: 'selectLisConnPathInha',\r\n    GET_RBC_COUNT_INHA: 'getRbcCountInha',\r\n    SELECT_WBC_RUNNING_COUNT: 'selectWbcRunningCount',\r\n\r\n    // wbc\r\n    GET_BRIGHTNESS_SLIDE_VALUE: 'getBrightnessSlideValue',\r\n    GET_RED_VALUE: 'getRedValue',\r\n    GET_GREEN_VALUE: 'getGreenValue',\r\n    GET_BLUE_VALUE: 'getBlueValue',\r\n    GET_RGB_VALUE: 'getRgbValue',\r\n    SET_SIZE_SLIDE_VALUE: 'setSizeSlideValue',\r\n    SET_BRIGHTNESS_SLIDE_VALUE: 'setBrightnessSlideValue',\r\n    SET_RED_VALUE: 'setRedValue',\r\n    SET_GREEN_VALUE: 'setGreenValue',\r\n    SET_BLUE_VALUE: 'setBlueValue',\r\n    SET_RGB_VALUE: 'setRgbValue',\r\n    SET_ROLLBACK_LIST: 'setRollbackList',\r\n    GET_ROLLBACK_LIST: 'getRollbackList',\r\n    GET_IMAGE_ROLLBACK_LIST: 'getImageRollbackList',\r\n    SET_CLONED_WBC_INFO: 'setClonedWbcInfo',\r\n\r\n    // rbc\r\n    GET_RBC_BRIGHTNESS_SLIDE_VALUE: 'getRbcBrightnessSlideValue',\r\n    GET_RBC_RED_VALUE: 'getRbcRedValue',\r\n    GET_RBC_GREEN_VALUE: 'getRbcGreenValue',\r\n    GET_RBC_BLUE_VALUE: 'getRbcBlueValue',\r\n    SET_RBC_BRIGHTNESS_SLIDE_VALUE: 'setRbcBrightnessSlideValue',\r\n    SET_RBC_RED_VALUE: 'setRbcRedValue',\r\n    SET_RBC_GREEN_VALUE: 'setRbcGreenValue',\r\n    SET_RBC_BLUE_VALUE: 'setRbcBlueValue',\r\n    SET_CLONED_RBC_INFO: 'setClonedRbcInfo',\r\n\r\n    UPDATE_OIL_COUNT: 'updateOilCount',\r\n    SET_RESULT_LIST: 'setResultList',\r\n    CLEAR_RESULT_LIST: 'clearResultList',\r\n    GET_RESULT_LIST: 'getResultList',\r\n    SET_WBC_REPORT_PRINT: 'setWbcReportPrint',\r\n    GET_WBC_REPORT_PRINT: 'getWbcReportPrint',\r\n    SET_RBC_REPORT_PRINT: 'setRbcReportPrint',\r\n    GET_RBC_REPORT_PRINT: 'getRbcReportPrint',\r\n    SET_RBC_SIZE: 'setRbcSize',\r\n    GET_RBC_SIZE: 'getRbcSize',\r\n    SET_RBC_CHROMIA: 'setRbcChromia',\r\n    GET_RBC_CHROMIA: 'getRbcChromia',\r\n    SET_RBC_SHAPE: 'setRbcShape',\r\n    GET_RBC_SHAPE: 'getRbcShape',\r\n    PUSH_RBC_SHAPE: 'pushRbcShape',\r\n    POP_RBC_SHAPE: 'popRbcShape',\r\n    SET_RBC_PLATELET: 'setRbcPlatelet',\r\n    GET_RBC_PLATELET: 'getRbcPlatelet',\r\n    PUSH_RBC_PLATELET: 'pushRbcPlatelet',\r\n    POP_RBC_PLATELET: 'popRbcPlatelet',\r\n    SET_RBC_INCLUSION: 'setRbcInclusion',\r\n    GET_RBC_INCLUSION: 'getRbcInclusion',\r\n    POP_RBC_INCLUSION: 'popRbcInclusion',\r\n    PUSH_RBC_INCLUSION: 'pushRbcInclusion',\r\n    SET_IS_SHOW_MODAL_BARCODE: 'setIsShowModalBarcode',\r\n    GET_IS_SHOW_MODAL_BARCODE: 'getIsShowModalBarcode',\r\n    SET_IS_NS_NB_INTEGRATION: 'setIsNsNbIntegration',\r\n    GET_IS_NS_NB_INTEGRATION: 'getIsNsNbIntegration',\r\n    SET_IS_ALARM: 'setIsAlarm',\r\n    GET_IS_ALARM: 'getIsAlarm',\r\n    SET_IS_CBC_SHOW: 'setIsCbcShow',\r\n    GET_IS_CBC_SHOW: 'getIsCbcShow',\r\n    SET_SITE_CD: 'setSiteCd',\r\n    GET_SITE_CD: 'getSiteCd',\r\n    SET_DEVICE_BARCODE: 'setDeviceBarcode',\r\n    GET_DEVICE_BARCODE: 'getDeviceBarcode',\r\n\r\n    SELECT_BF_HOT_KEY: 'selectBfHotKey',\r\n    SELECT_WBC_HOT_KEY: 'selectWbcHotKey',\r\n    SELECT_WBC_CUSTOM_CLASS: 'selectWbcCustomClass',\r\n    SELECT_EMP_NO: 'selectEmpNo',\r\n\r\n    // log history\r\n    INSERT_WBC_MODIFY_HIST: 'insetWbcModifyHist',\r\n    GET_WBC_MODIFY_HIST: 'getWbcModifyHist',\r\n    UPDATE_WBC_HIST_LIST: 'updateWbcHistList',\r\n    GET_WBC_HIST_LIST: 'getWbcHistList',\r\n\r\n    // Code group\r\n    GET_COMMON_CODE_LIST: 'getCommonCodeList',\r\n    GET_COMMON_CODE: 'getCommonCode',\r\n\r\n    GET_CODE_LIST_USER_POSITION: '00',\r\n    GET_CODE_LIST_USER_AUTHORIZATION: '01',\r\n    GET_CODE_LIST_USER_CASSETE_STATE: '02',\r\n    GET_CODE_LIST_PROCESSING_STATE: '03',\r\n    GET_CODE_LIST_ANALYSIS_TYPE: '04',\r\n    GET_CODE_LIST_CELL_COUNT: '05',\r\n    GET_CODE_LIST_GENERAL_STAIN: '06',\r\n    GET_CODE_LIST_SPECIAL_STAIN: '07',\r\n    GET_CODE_LIST_IMMUNO_STAIN: '08',\r\n    GET_CODE_LIST_SAMPLING_STAIN: '09',\r\n    GET_CODE_LIST_GENDER: '10',\r\n    GET_CODE_LIST_TEST_TYPE: '11',\r\n    GET_CODE_SIGNED_STATE: '12',\r\n    GET_CODE_LOG_TYPE: '13',\r\n    GET_CODE_SLOT_STATE: '14',\r\n\r\n    // log code\r\n    EVENT_TYPE_USER: '00',\r\n    EVENT_TYPE_SYSTEM: '01',\r\n\r\n    // System log\r\n    SET_EVENT_LOG: 'setEventLog',\r\n    GET_EVENT_LOG: 'getEventLog',\r\n    REMOVE_EVENT_LOG: 'removeEventLog',\r\n\r\n    // Storage\r\n    REMEMBER_PWD_KEY: 'uimdia190$^!00000000000000000000',\r\n    REMEMBER_PWD_IV: '0000000000000000',\r\n\r\n    // Workers\r\n    RECEIVE_DATA_BROADCAST_CHAN: 'RECEIVE_DATA_BROADCAST_CHAN',\r\n\r\n    // PB APIS [\r\n    GET_PB_CLASSIFICATIONS: 'getPbClassifications',\r\n    GET_CLASSIFICATION_IMAGES: 'getClassificationImages',\r\n    GET_MARKER_POSITION: 'getMarkerPosition',\r\n    GET_PB_HOT_KEYS: 'getPbHotKeys',\r\n    UPDATE_CLASSIFICATION: 'updateClassification',\r\n    PB_IA_MOVE_IMAGE: 'PbIaMoveImage',\r\n    SET_WBC_IMAGE_LIST: 'setWbcImageList',\r\n    GET_PB_WBC_IMAGES: 'getPbWbcImages',\r\n    SET_SELECTED_ITEM: 'setSelectedItem',\r\n    GET_SELECTED_ITEM: 'getSelectedItem',\r\n    IA_SET_CUSTOM_CLASS: 'iaSetCustomClass',\r\n    IA_GET_CUSTOM_CLASS: 'iaGetCustomClass',\r\n    // PB APIS ]\r\n\r\n\r\n    // Message\r\n    IDS_MSG_SUCCESS: 'Success',\r\n    IDS_MSG_FAILED: 'Failed',\r\n    IDS_MSG_OIL_REMAIN_COUNTER: 'Reset Immersion oil counter after final test or changing the Oil',\r\n    IDS_MSG_POWEROFF: 'Shutdown the system.',\r\n    IDS_MSG_INITALIZE: 'Please execute after initialization.',\r\n    IDS_MSG_SIGNING_COMPLETE: 'Signing is complete.',\r\n    IDS_MSG_DELETE_THE_SELECTED_ITEMS: 'Delete the selected items?',\r\n    IDS_MSG_ACCOUNT_CHANGED: 'Account conversion is complete.',\r\n    IDS_MSG_DELETE_ACCOUNT: 'Are you sure you want to delete your account?',\r\n    IDS_MSG_LOGOUT: 'Are you sure you want to logout now?',\r\n    IDS_MSG_DUPLICATE_KEY: 'The %s key is a duplicate key.',\r\n    IDS_MSG_HOTKEY_IN_ENGLISH: 'Please recheck the key',\r\n\r\n    IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD: 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP: 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID: 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR: 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID: 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING: 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS: 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR: 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS: 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO: 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST: 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2: 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS: 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM: 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE: 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED: 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST: 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS: 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION: 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO: 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID: 'Please confirm your user ID.',\r\n\r\n    IDS_DOWNLOAD_COMPLETE: 'Download Complete',\r\n    IDS_SELECT_SLIDE: 'Please select a slide.',\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED: 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION: 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE: 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE: 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS: 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE: 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM: 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER: 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL: 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION: 'This is a duplicate abbreviation.',\r\n    IDS_THIS_CARD_HAS_ALREADY_BEEN_USED: 'This card has already been used.',\r\n    IDS_MSG_UPLOAD_LIS: 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE: 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE: 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS: 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE: 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH: 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE: 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND: 'No data found.',\r\n    IDS_MSG_DATA_BACKUP: 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE: 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS: 'Size and Chromia categories are linked with LIS data.',\r\n\r\n    UPDATE_SUCCESSFULLY : 'Update Successfully',\r\n    TCP_DiSCONNECTED: 'The TCP connection was disconnected.',\r\n    alreadyInitialized: 'It has already been initialized.',\r\n};","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n\r\n    const formattedTime = now.format('YYYYMMDDHHmmssSSS');\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            }\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport { Endpoint, GenericObject } from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: boolean;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: boolean;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        // console.log(type !== undefined)\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        if (contentType === 'blob'){\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain'){\r\n            options.headers=  {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if(formData){\r\n            options.headers =  {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, { ...options, data: payload });\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","\r\nexport const apiConstants = {\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification:{\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user:{\r\n        register:{\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login:{\r\n            endpoint:'user/login',\r\n            requiresToken: false,\r\n        },\r\n        userCheck:{\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        userIp:{\r\n            endpoint: 'ip',\r\n            requiresToken: false,\r\n        },\r\n        getUsers:{\r\n            endpoint:'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint:'user/update',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings:{\r\n        cellImgAnalyzedPost:{\r\n            cellImgAdd:{\r\n                endpoint:'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet:{\r\n                endpoint:'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut:{\r\n                endpoint:'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree:{\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree:{\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass:{\r\n            create: {\r\n                endpoint: 'wbcCustomClass/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcCustomClass/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'normalRange/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCodeRbc/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'cbcCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'filePathSet/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'minCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete:{\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail:{\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown:{\r\n                endpoint:'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState:{\r\n                endpoint:'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState:{\r\n                endpoint:'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get:{\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get:{\r\n                endpoint:'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'classOrders/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n    },\r\n    images:{\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf:{\r\n        post:{\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem:{\r\n        post:{\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGet:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate:{\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message:{\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create:{\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    backUp:{\r\n        backUpDate:{\r\n            endpoint: 'backup/post',\r\n            requiresToken: false,\r\n        }\r\n    }\r\n\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lis code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// minCount, runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// -----mincount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};","// EventBus.ts\r\n\r\ntype EventHandler = (...args: any[]) => void;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 발행하는 메서드\r\n     public publish(eventName: string, ...args: any[]): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            handlers.forEach(handler => handler(...args));\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const testTypeList = [\r\n    {value: '01', text: 'PB standard'},\r\n    {value: '04', text: 'PB premium'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n    {value: '06', text: 'BM squash'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const WbcPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PltPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', testCd: '', testNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', testCd: '', testNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', testCd: '', testNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', testCd: '', testNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', testCd: '', testNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', testCd: '', testNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', testCd: '', testNm: 'Basophils', isSelected: true},\r\n    {cd: '08', testCd: '', testNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', testCd: '', testNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', testCd: '', testNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', testCd: '', testNm: 'Blasts', isSelected: true},\r\n    {cd: '12', testCd: '', testNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', testCd: '', testNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', testCd: '', testNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', testCd: '', testNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', testCd: '', testNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', testCd: '', testNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', testCd: '', testNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', testCd: '', testNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', testCd: '', testNm: 'Others', isSelected: true},\r\n    {cd: '21', testCd: '', testNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', testCd: '', testNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', testCd: '', testNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', testCd: '', testNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', testCd: '', testNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', testCd: '', testNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', testCd: '', testNm: 'WBC', isSelected: true},\r\n    {cd: '28', testCd: '', testNm: 'RBC', isSelected: true},\r\n    {cd: '29', testCd: '', testNm: 'HGB', isSelected: true},\r\n    {cd: '30', testCd: '', testNm: 'HCT', isSelected: true},\r\n    {cd: '31', testCd: '', testNm: 'MCV', isSelected: true},\r\n    {cd: '32', testCd: '', testNm: 'MCH', isSelected: true},\r\n    {cd: '33', testCd: '', testNm: 'MCHC', isSelected: true},\r\n    {cd: '34', testCd: '', testNm: 'RDW', isSelected: true},\r\n    {cd: '35', testCd: '', testNm: 'Platelet', isSelected: true},\r\n    {cd: '36', testCd: '', testNm: 'PCT', isSelected: true},\r\n    {cd: '37', testCd: '', testNm: 'MPV', isSelected: true},\r\n    {cd: '38', testCd: '', testNm: 'PDW', isSelected: true},\r\n    {cd: '39', testCd: '', testNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    },\r\n    {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    },\r\n    {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    },\r\n    {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    },\r\n    {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    },\r\n    {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    },\r\n    {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    },\r\n    {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    },\r\n    {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    },\r\n    {\r\n        id: '15', title: 'AR', name: 'Artifact(Smudge)', count: 0, percent: 0, key: '', order: 19\r\n    },\r\n    {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    },\r\n    {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    },\r\n    {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    },\r\n    {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    },]\r\nexport const bmHotKeys = [{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]\r\nexport const bfHotKeys = [{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n}, {\r\n    id: '02', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '03', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '04', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 4\r\n}, {\r\n    id: '05', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 5\r\n}, {\r\n    id: '06', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 6\r\n}, {\r\n    id: '07', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 7\r\n}, {\r\n    id: '08', title: 'NR', name: 'NRBC', count: 0, percent: 0, key: '', order: 8\r\n}, {\r\n    id: '09', title: 'AR', name: 'Artifact(Smudge)', count: 0, percent: 0, key: '', order: 9\r\n}, {\r\n    id: '10', title: 'MC', name: 'Malignant cell', count: 0, percent: 0, key: '', order: 10\r\n}, {\r\n    id: '11', title: 'MT', name: 'Mesothelial cell', count: 0, percent: 0, key: '', order: 11\r\n}]\r\n\r\nexport const normalRange = [{\r\n    title: 'NE',\r\n    name: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    title: 'ME',\r\n    name: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    title: 'MY',\r\n    name: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    title: 'PR',\r\n    name: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    title: 'LY',\r\n    name: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    title: 'MO',\r\n    name: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    title: 'EO',\r\n    name: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    title: 'BA',\r\n    name: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    title: 'BL',\r\n    name: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    title: 'PC',\r\n    name: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    title: 'NR',\r\n    name: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    title: 'GP',\r\n    name: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    title: 'PA',\r\n    name: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    title: 'AR',\r\n    name: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    title: 'MA',\r\n    name: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n    {\r\n        title: 'LR',\r\n        name: 'Reactive lymphocyte',\r\n        classId: '61',\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n    }, {\r\n        title: 'LA',\r\n        name: 'Abnormal lymphocyte',\r\n        classId: '62',\r\n        min: 0,\r\n        max: 100,\r\n        unit: '%'\r\n    },\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { text: 'Neutrophil', value: '01', code: '', checked: false },\r\n    { text: 'Neutrophil-Segmented', value: '71', code: '', checked: false },\r\n    { text: 'Neutrophil-Band', value: '72', code: '', checked: false },\r\n    { text: 'Metamyelocyte', value: '02', code: '',checked: false },\r\n    { text: 'Myelocyte', value: '03', code: '',checked: false },\r\n    { text: 'Promyelocyte', value: '04', code: '', checked: false },\r\n    { text: 'Lymphocyte', value: '05', code: '', checked: false },\r\n    { text: 'Reactive lymphocyte', value: '61', code: '', checked: false },\r\n    { text: 'Abnormal lymphocyte', value: '62', code: '', checked: false },\r\n    { text: 'Monocyte', value: '07', code: '',checked: false },\r\n    { text: 'Eosinophil', value: '08', code: '', checked: false },\r\n    { text: 'Basophil', value: '09', code: '' ,checked: false},\r\n    { text: 'Blast', value: '10', code: '' ,checked: false},\r\n    { text: 'Plasma cell', value: '11', code: '' ,checked: false},\r\n    { text: 'nRBC', value: '12', code: '' ,checked: false},\r\n    { text: 'Giant platelet', value: '13', code: '' ,checked: false},\r\n    { text: 'Platelet aggregation', value: '14', code: '' ,checked: false},\r\n    { text: 'Malaria', value: '16', code: '' ,checked: false},\r\n    { text: 'Artifact(Smudge)', value: '15', code: '' ,checked: false},\r\n    { text: 'rbcPrintModel', value: '99999', code: '' ,checked: false},\r\n]\r\nexport const imagePrintAndBm = [{\r\n    text: 'Neutrophil',\r\n    value: '01'\r\n}, {\r\n    text: 'Neutrophil-Segmented',\r\n    value: '71'\r\n}, {\r\n    text: 'Neutrophil-Band',\r\n    value: '72'\r\n}, {\r\n    text: 'Metamyelocyte',\r\n    value: '02'\r\n}, {\r\n    text: 'Myelocyte',\r\n    value: '03'\r\n}, {\r\n    text: 'Promyelocyte',\r\n    value: '04'\r\n}, {\r\n    text: 'Lymphocyte',\r\n    value: '05'\r\n}, {\r\n    text: 'Abnormal lymphocyte',\r\n    value: '06'\r\n}, {\r\n    text: 'Monocyte',\r\n    value: '07'\r\n}, {\r\n    text: 'Eosinophil',\r\n    value: '08'\r\n}, {\r\n    text: 'Basophil',\r\n    value: '09'\r\n}, {\r\n    text: 'Blast',\r\n    value: '10'\r\n}, {\r\n    text: 'Plasma cell',\r\n    value: '11'\r\n}, {\r\n    text: 'Orthochromic Normoblast',\r\n    value: '12'\r\n}, {\r\n    text: 'Polychromic Normoblast',\r\n    value: '13'\r\n}, {\r\n    text: 'Basophilic Normoblast',\r\n    value: '14'\r\n}, {\r\n    text: 'Proerythroblast',\r\n    value: '15'\r\n}, {\r\n    text: 'Histiocyte',\r\n    value: '16'\r\n}, {\r\n    text: 'Others',\r\n    value: '17'\r\n}];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { text: 'Neutrophil', value: '01', code: '' },\r\n    { text: 'Neutrophil-Segmented', value: '71', code: '' },\r\n    { text: 'Neutrophil-Band', value: '72', code: '' },\r\n    { text: 'Metamyelocyte', value: '02', code: '' },\r\n    { text: 'Myelocyte', value: '03', code: '' },\r\n    { text: 'Promyelocyte', value: '04', code: '' },\r\n    { text: 'Lymphocyte', value: '05', code: '' },\r\n    { text: 'Reactive lymphocyte', value: '61', code: '' },\r\n    { text: 'Abnormal lymphocyte', value: '62', code: '' },\r\n    { text: 'Monocyte', value: '07', code: '' },\r\n    { text: 'Eosinophil', value: '08', code: '' },\r\n    { text: 'Basophil', value: '09', code: '' },\r\n    { text: 'Blast', value: '10', code: '' },\r\n    { text: 'Plasma cell', value: '11', code: '' },\r\n    { text: 'nRBC', value: '12', code: '' },\r\n    { text: 'Giant platelet', value: '13', code: '' },\r\n    { text: 'Platelet aggregation', value: '14', code: '' },\r\n    { text: 'Malaria', value: '16', code: '' },\r\n    { text: 'Artifact(Smudge)', value: '15', code: '' },\r\n    { text: 'rbcPrintModel', value: '99999', code: '' },\r\n];\r\n\r\nexport const lisCodeRbcOption = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', classNm: 'Macrocyte', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', classNm: 'Microcyte', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', classNm: 'Anisocytosis', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', classNm: 'Hyperchromic', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', classNm: 'Hypochromic', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', classNm: 'Polychromia', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', classNm: 'Poikilocytosis', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', classNm: 'Target Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', classNm: 'Burr Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', classNm: 'Acanthocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', classNm: 'Ovalocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', classNm: 'Schistocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', classNm: 'Sickle Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', classNm: 'Stomatocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', classNm: 'Tear Drop Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', classNm: 'Spherocyte', code: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', classNm: 'Howell-Jolly Body', code: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', classNm: 'Basophilic Stippling', code: '0' }\r\n];\r\n\r\n\r\n\r\nexport const minRunCount = [\r\n    { minGpCount:0, minPaCount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [{\r\n    id: '01',\r\n    min: 0,\r\n    max: 700,\r\n    wbcCount: 50\r\n}, {\r\n    id: '02',\r\n    min: 701,\r\n    max: 1000,\r\n    wbcCount: 100\r\n}, {\r\n    id: '03',\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcCount: 150\r\n}, {\r\n    id: '04',\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const barcodeImgDir = {\r\n    barcodeDirName: '00_Barcode_Image'\r\n}\r\n\r\nexport const dirName = {\r\n    howellJollyDirName: '19_Howell_jolly',\r\n    malariaDirName: '43_InclusionBody_Malaria',\r\n    noMalariaDirName: '44_InclusionBody_NoMalaria',\r\n    rbcClassDirName: '03_RBC_Classification',\r\n    rbcImageDirName: '02_RBC_Image',\r\n    barcodeDirName: '00_Barcode_Image',\r\n    wbcClassDirName: '01_WBC_Classification',\r\n    bfDirName: '02_LowPower_Image',\r\n    bfHighDirName: '03_HighPower_Image',\r\n    bfClassDirName: '05_BF_Classification',\r\n    pbiaRootPath: 'D:/ia_proc',\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"startStopP\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"startStopP\"\n}\nconst _hoisted_7 = { class: \"stopDiv\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = [\"disabled\"]\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \" INITIALIZING \", -1)\n\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n  // console.log(newIsRecoveryRun)\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.cellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.cellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbAnalysisType2;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfAnalysisType;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 8, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\",\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountOptions), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_11))\n          }), 128))\n        ], 8, _hoisted_10), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y'}]),\n          onClick: sendInit\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'rotate-right'],\n            style: {\"font-size\":\"0.9rem\"},\n            class: _normalizeClass({ 'disabled': isInit.value !== 'N' })\n          }, null, 8, [\"class\"]),\n          _hoisted_12\n        ], 2)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n            @click=\"isInit === 'Y' && toggleStartStop('start')\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else>\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' @click=\"toggleStartStop('stop')\"/>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in stitchCountOptions\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y'}\">\r\n        <font-awesome-icon :icon=\"['fas', 'rotate-right']\" style=\"font-size: 0.9rem;\"\r\n                           :class=\"{ 'disabled': isInit !== 'N' }\"\r\n        />\r\n        <span> INITIALIZING </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n  // console.log(newIsRecoveryRun)\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.cellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.cellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbAnalysisType2;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfAnalysisType;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"INPUT\", -1)\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"OUTPUT\", -1)\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_10\n      ]),\n      _createElementVNode(\"ul\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.output, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_12\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">INPUT</p>\r\n      </ul>\r\n      <!-- output -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.output\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p class=\"mt1\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"O\"),\n  /*#__PURE__*/_createTextVNode(\"rder \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"L\"),\n  /*#__PURE__*/_createTextVNode(\"ist\")\n], -1)\nconst _hoisted_3 = { class: \"orderListTable\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Barcode ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [\n  /*#__PURE__*/_createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\n\nimport {computed, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"table\", _hoisted_3, [\n      _hoisted_4,\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.analyzedDttm ? _unref(formatDateString)(slot?.analyzedDttm) : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(getCommonCode)('14', slot?.state)), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_6, _hoisted_8))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">O</span>rder <span class=\"greenColor\">L</span>ist</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n      <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n        <td>{{ slot?.barcodeId }}</td>\r\n        <td>{{ slot?.patientName }}</td>\r\n        <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n        <td>{{\r\n            slot?.analyzedDttm ? formatDateString(slot?.analyzedDttm) : formatDateString(slot?.orderDate)\r\n          }}\r\n        </td>\r\n        <!--        {{ slot?.state }}-->\r\n        <td>{{ getCommonCode('14', slot?.state) }}</td>\r\n      </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"BM\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"WBC\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_6 = { class: \"analysisWbc\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_8 = { class: \"categoryNm\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = { class: \"classNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_13 = { class: \"degree\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = {\n  key: 0,\n  class: \"categories mt1\"\n}\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_22 = { class: \"classNm\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_24 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_25 = { class: \"degree\" }\nconst _hoisted_26 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_27 = { class: \"mt1\" }\nconst _hoisted_28 = { class: \"categoryNm\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_30 = { class: \"classNm\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_32 = { key: 0 }\nconst _hoisted_33 = { class: \"degree\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\n\nimport {computed, ref, onMounted, watch, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {WbcInfo, basicWbcArr, basicBmClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _hoisted_2,\n            _createTextVNode(),\n            _hoisted_3,\n            _createTextVNode(\"lassification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _hoisted_4,\n            _createTextVNode(),\n            _hoisted_5,\n            _createTextVNode(\"lassification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createElementVNode(\"ul\", _hoisted_8, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_10, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_12, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_13, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                    _createElementVNode(\"ul\", _hoisted_20, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_22, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_24, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_25, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_26, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_27, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_28, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_29, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_30, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_33, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34))\n                : _createCommentVNode(\"\", true),\n              _hoisted_35\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\"><span class=\"greenColor\">BM</span> <span class=\"greenColor\">C</span>lassification\r\n      </template>\r\n      <template v-else><span class=\"greenColor\">WBC</span> <span class=\"greenColor\">C</span>lassification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li>\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li>\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt1\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <!--      nonrbc-->\r\n      <div class='mt1'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n              <li>{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {WbcInfo, basicWbcArr, basicBmClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n  /*#__PURE__*/_createTextVNode(\" Slide Image \")\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"col\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n], -1)\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"RBC\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\"),\n  /*#__PURE__*/_createTextVNode(\"lassification \")\n], -1)\nconst _hoisted_10 = { class: \"categoryNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { class: \"classNmRbc\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Platelets\"),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Malaria\")\n], -1)\nconst _hoisted_23 = { class: \"degree analysis\" }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = { style: {\"font-size\":\"0.7rem\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.category_id === rbcCategory.categoryId &&\r\n            degreeStandard.class_id === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.category_id === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.category_id === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(rbcInfo)\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    console.log(data);\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_4)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_12, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_14, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ]))\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_20, [\n        _hoisted_21,\n        _hoisted_22,\n        _createElementVNode(\"ul\", _hoisted_23, [\n          _createElementVNode(\"li\", _hoisted_24, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n          _createElementVNode(\"li\", _hoisted_25, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">RBC</span> <span class=\"greenColor\">C</span>lassification\r\n      </h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li>{{ classInfo?.classNm }}</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                  />\r\n                </li>\r\n                <li v-else>\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>Platelets</li>\r\n          <li>Malaria</li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.category_id === rbcCategory.categoryId &&\r\n            degreeStandard.class_id === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.category_id === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.category_id === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(rbcInfo)\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    console.log(data);\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=48cad242&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e5e792d0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch} from 'vue';\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps} from 'vue';\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData']);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.slider {\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-height: 135px;\r\n}\r\n.slider img {\r\n  width: 12%;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./foundingCells.vue?vue&type=style&index=0&id=e5e792d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e5e792d0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent pb100a\" }\nconst _hoisted_10 = { class: \"mt1\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView100A',\n  props: [ 'parsedData','pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    console.log('afterChange')\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 1),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _createElementVNode(\"p\", _hoisted_10, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent pb100a'>\r\n        <p>INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData','pb100aCassette']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    console.log('afterChange')\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-de316cce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData','isClass', 'startStatus', 'pb100aCassette'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      (pbVersion.value !== '100a')\n        ? (_openBlock(), _createBlock(workingView, {\n            key: 0,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : (_openBlock(), _createBlock(WorkingView100A, {\n            key: 1,\n            parsedData: props.parsedData,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\", \"pb100aCassette\"])),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 2,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData\n        }, null, 8, [\"parsedData\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute />\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <workingView :parsedData=\"props.parsedData\" class=\"contentRightChild\" v-if=\"pbVersion !== '100a'\"/>\r\n    <WorkingView100A :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\" class=\"contentRightChild\" v-else/>\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\nconst emits = defineEmits();\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData','isClass', 'startStatus', 'pb100aCassette']);\r\nconst pbVersion = ref<any>('');\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped src=\"@/assets/css/layout.css\">\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"@/assets/css/layout.css?vue&type=style&index=0&id=de316cce&lang=css&scoped=true&external\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-de316cce\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {CellImgAnalyzedRequest, CellImgAnalyzedResponse} from \"@/common/api/service/setting/dto/cellImgAnalyzedDto\";\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, '', true);\r\n};\r\n\r\nexport const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.user.userIp, '');\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \"CREATE ACCOUNT\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\nconst _hoisted_11 = [\n  _hoisted_9,\n  _hoisted_10\n]\n\nimport {ref} from \"vue\";\r\nimport {createUser, getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const result = await getUserIpApi();\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n    state: '',\r\n    pcIp: result.data,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, [\n            _hoisted_3,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_4,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_5,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_6,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_7,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_8,\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event))\n            }, _hoisted_11, 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt2 mb4\">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\">\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser, getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const result = await getUserIpApi();\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n    state: '',\r\n    pcIp: result.data,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    putOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    updateNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi, putRbcDegreeApi, getRbcDegreeApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport process from \"process\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {defaultRbcDegree, normalRange, rbcClassList} from \"@/common/defines/constFile/settings\";\r\n\r\nconst saveHttpType = ref('');\r\nconst cellimgId = ref('');\r\nconst orderHttpType = ref('');\r\nconst normalItems = ref<any>(normalRange);\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    pbAnalysisType: projectType ? '500':'100',\r\n    wbcPositionMargin: '0',\r\n    rbcPositionMargin: '0',\r\n    pltPositionMargin: '0',\r\n    pbAnalysisType2: '100',\r\n    stitchCount: '1',\r\n    bfAnalysisType: '100',\r\n    pbiaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\nexport const firstCellImgSet = async () => {\r\n    let cellImgData;\r\n\r\n    const result = await getCellImgApi();\r\n    if (result && result.data) {\r\n        cellImgData = result.data;\r\n    }\r\n\r\n    if (!cellImgData) {\r\n        saveHttpType.value = 'post';\r\n    } else {\r\n        saveHttpType.value = 'put';\r\n    }\r\n\r\n    const cellImgSet = {\r\n        analysisType: defaultCellImgData.testTypeCd,\r\n        cellAnalyzingCount: defaultCellImgData.pbAnalysisType,\r\n        wbcPositionMargin: defaultCellImgData.wbcPositionMargin,\r\n        rbcPositionMargin: defaultCellImgData.rbcPositionMargin,\r\n        pltPositionMargin: defaultCellImgData.pltPositionMargin,\r\n        pbAnalysisType2: defaultCellImgData.pbAnalysisType2,\r\n        stitchCount: defaultCellImgData.stitchCount,\r\n        bfAnalysisType: defaultCellImgData.bfAnalysisType,\r\n        pbiaRootPath: defaultCellImgData.pbiaRootPath,\r\n        isNsNbIntegration: defaultCellImgData.isNsNbIntegration,\r\n        isAlarm: defaultCellImgData.isAlarm,\r\n        alarmCount: defaultCellImgData.alarmCount,\r\n        keepPage: defaultCellImgData.keepPage,\r\n        backupPath: defaultCellImgData.backupPath,\r\n        backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n        backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n    };\r\n    if (saveHttpType.value === 'post') {\r\n        try {\r\n            const result = await createCellImgApi(cellImgSet);\r\n            if (result) {\r\n                sessionStorage.setItem('isNsNbIntegration', defaultCellImgData?.isNsNbIntegration ? 'Y' : 'N');\r\n                sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.wbcPositionMargin));\r\n                sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.rbcPositionMargin));\r\n                sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.pltPositionMargin));\r\n                sessionStorage.setItem('pbiaRootPath', String(defaultCellImgData?.pbiaRootPath));\r\n                sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const firstSaveOrderClass = async (userId: any) => {\r\n    const orderList: any = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    for (const index in orderList) {\r\n        orderList[index].userName = userId;\r\n        orderList[index].orderText = index;\r\n    }\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n        if (result?.data.length === 0) {\r\n            orderHttpType.value = 'post';\r\n        }else{\r\n            orderHttpType.value = 'put';\r\n        }\r\n    }\r\n    try {\r\n        if (orderHttpType.value === 'post') {\r\n            await createOrderClassApi(orderList);\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const firstSaveNormalRange = async (userId: any) => {\r\n    try {\r\n        const result = await getNormalRangeApi();\r\n        if (result) {\r\n            if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n                await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n            }\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport const firstCreateRbcDegreeData = async (userId: any) => {\r\n    await combindDegree();\r\n    const rbcDegreeList: any = [];\r\n\r\n    rbcClassListArr.value.forEach((category: any) => {\r\n        category.classInfo.forEach((classItem: any) => {\r\n            rbcDegreeList.push({\r\n                category_id: category.categoryId,\r\n                category_nm: category.categoryNm,\r\n                class_id: classItem.classId,\r\n                class_nm: classItem.classNm,\r\n                degree1: classItem.degree1,\r\n                degree2: classItem.degree2,\r\n                degree3: classItem.degree3,\r\n            });\r\n        });\r\n    });\r\n\r\n    try {\r\n        const result = await getRbcDegreeApi();\r\n        if(!result.data){\r\n            await createRbcDegreeApi(rbcDegreeList);\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"uimdLogin\" }\nconst _hoisted_2 = { class: \"loginContent\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginTitle\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n  /*#__PURE__*/_createTextVNode(\"IMD\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginP mt2\" }, \"Unique Idea Medical Device\", -1)\nconst _hoisted_5 = { class: \"mt3 loginDiv\" }\nconst _hoisted_6 = { class: \"loginUl\" }\n\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport {getUserApi, getUserIpApi, login, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass(String(result.data?.user.id));\r\n      await firstSaveNormalRange(String(result.data?.user.id));\r\n      await firstCreateRbcDegreeData(String(result.data?.user.id));\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getUserIp(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getUserIp = async (userId: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount(userId, String(result.data), 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount(userId, result.data, 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n  const user = {\r\n    userId: userId,\r\n    password: '',\r\n    name: '',\r\n    employeeNo: '',\r\n    userType: '',\r\n    subscriptionDate: '',\r\n    state: '',\r\n    pcIp: pcIp,\r\n    viewerCheck: viewerCheck,\r\n  }\r\n\r\n  try {\r\n    const result = await putUserDataApi(user);\r\n    if (result) {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _hoisted_4,\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"ul\", _hoisted_6, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\"\n              }, null, 512), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\"\n              }, null, 512), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"loginBtn\" }, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: loginUser\n            }, \"Login\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt2'>Unique Idea Medical Device</p>\r\n      <div class=\"mt3 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\">\r\n          </li>\r\n        </ul>\r\n<!-- 자동 로그인시 Fullscreen이 안되는 문제가 발생하여 보류 -->\r\n<!--        <div class=\"mt1 loginFooter\">-->\r\n<!--          <input type=\"checkbox\" id=\"checked\" v-model=\"isAutoLoginEnabled\">-->\r\n<!--          <label class=\"loginLabel\" for=\"checked\">Save Login Profile</label>-->\r\n<!--        </div>-->\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <Alert\r\n    v-if=\"showAlert\"\r\n    :is-visible=\"showAlert\"\r\n    :type=\"alertType\"\r\n    :message=\"alertMessage\"\r\n    @hide=\"hideAlert\"\r\n    @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport {getUserApi, getUserIpApi, login, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass(String(result.data?.user.id));\r\n      await firstSaveNormalRange(String(result.data?.user.id));\r\n      await firstCreateRbcDegreeData(String(result.data?.user.id));\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getUserIp(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getUserIp = async (userId: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount(userId, String(result.data), 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount(userId, result.data, 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n  const user = {\r\n    userId: userId,\r\n    password: '',\r\n    name: '',\r\n    employeeNo: '',\r\n    userType: '',\r\n    subscriptionDate: '',\r\n    state: '',\r\n    pcIp: pcIp,\r\n    viewerCheck: viewerCheck,\r\n  }\r\n\r\n  try {\r\n    const result = await putUserDataApi(user);\r\n    if (result) {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.backUp.backUpDate, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTable\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Analysis Type\", -1)\nconst _hoisted_3 = { colspan: \"2\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  rowspan: \"4\"\n}\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = { key: 1 }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)\nconst _hoisted_14 = [\"value\"]\nconst _hoisted_15 = { key: 2 }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Plt Position Margin\", -1)\nconst _hoisted_17 = [\"value\"]\nconst _hoisted_18 = { key: 3 }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC Diff\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_21 = [\"value\"]\nconst _hoisted_22 = { key: 4 }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", { rowspan: \"2\" }, \"PBS Analysis Values\", -1)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)\nconst _hoisted_25 = [\"value\"]\nconst _hoisted_26 = { key: 0 }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Stitch Count\", -1)\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { key: 5 }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BF Analysis Values\", -1)\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_32 = [\"value\"]\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"th\", null, \"IA Root Path\", -1)\nconst _hoisted_34 = { colspan: \"2\" }\nconst _hoisted_35 = [\"value\"]\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"th\", null, \"NS/NB Integration\", -1)\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Alarm Timer (sec)\", -1)\nconst _hoisted_38 = { key: 6 }\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Keep WBC Page\", -1)\nconst _hoisted_40 = { class: \"backupDiv\" }\nconst _hoisted_41 = { class: \"backupDivChild\" }\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"mb1\" }, \"Backup and Restore\", -1)\nconst _hoisted_43 = { class: \"settingDatePickers\" }\nconst _hoisted_44 = [\"value\"]\n\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst pbAnalysisType = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbAnalysisType2 = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfAnalysisType = ref('100');\r\nconst pbiaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${pbiaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n  if(res){\r\n    console.log(res)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        pbAnalysisType.value = data.cellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbAnalysisType2.value = data.pbAnalysisType2;\r\n        stitchCount.value = data.stitchCount;\r\n        bfAnalysisType.value = data.bfAnalysisType;\r\n        pbiaRootPath.value = data.pbiaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    cellAnalyzingCount: pbAnalysisType.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbAnalysisType2: pbAnalysisType2.value,\r\n    stitchCount: stitchCount.value,\r\n    bfAnalysisType: bfAnalysisType.value,\r\n    pbiaRootPath: pbiaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      console.log(result)\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"table\", _hoisted_1, [\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_2,\n            _createElementVNode(\"td\", _hoisted_3, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_4))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, testTypeCd.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'pb')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, \"WBC Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            (projectType.value === 'classInfo')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"BM Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            _hoisted_7,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((pbAnalysisType).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_8))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, pbAnalysisType.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [\n                _hoisted_10,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((wbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(WbcPositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_11))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, wbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [\n                _hoisted_13,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((rbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_14))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, rbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_15, [\n                _hoisted_16,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((pltPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_17))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pltPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_18, [\n                _hoisted_19,\n                _hoisted_20,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((pbAnalysisType).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_21))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbAnalysisType.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_22, [\n                _hoisted_23,\n                _hoisted_24,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((pbAnalysisType2).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_25))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbAnalysisType2.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'classInfo')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_26))\n              : _createCommentVNode(\"\", true),\n            _hoisted_27,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((stitchCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_28))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, stitchCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_29, [\n                _hoisted_30,\n                _hoisted_31,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((bfAnalysisType).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_32))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, bfAnalysisType.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_33,\n            _createElementVNode(\"td\", _hoisted_34, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((pbiaRootPath).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_35))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, pbiaRootPath.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_36,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleNsNbIntegration\n              }, null, 8, [\"icon\"])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_37,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleAlarm\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((alarmCount).value = $event)),\n                class: \"alarmInput\"\n              }, null, 512), [\n                [_vModelText, alarmCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_38, [\n                _hoisted_39,\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleKeepPage\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_40, [\n        _createElementVNode(\"div\", _hoisted_41, [\n          _hoisted_42,\n          _createElementVNode(\"div\", _hoisted_43, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((backupRootPath).value = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type,\n                  value: type\n                }, _toDisplayString(type), 9, _hoisted_44))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, backupRootPath.value]\n            ]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupStartDate.value,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((backupStartDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupEndDate.value,\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((backupEndDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createElementVNode(\"button\", {\n              class: \"backupBtn\",\n              onClick: createBackup\n            }, \"backup\")\n          ])\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[14] || (_cache[14] = ($event: any) => (cellImgSet()))\n      }, \"Save Cell Image Analyzed\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <table class=\"settingTable\">\r\n      <tbody>\r\n      <tr>\r\n        <th>Analysis Type</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='testTypeCd'>\r\n            <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--Common analysis values-->\r\n      <tr>\r\n        <th rowspan=\"4\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n        <th v-if=\"projectType === 'classInfo'\">BM Diff Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n\r\n          <select v-model='pbAnalysisType'>\r\n            <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Wbc Position Margin</th>\r\n        <td>\r\n          <select v-model='wbcPositionMargin'>\r\n            <option v-for=\"type in WbcPositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Rbc Position Margin</th>\r\n        <td>\r\n          <select v-model='rbcPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Plt Position Margin</th>\r\n        <td>\r\n          <select v-model='pltPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--WBC diff analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>WBC Diff</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='pbAnalysisType'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      PBS analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th rowspan=\"2\">PBS Analysis Values</th>\r\n        <th>\r\n          Cell Analyzing Count\r\n        </th>\r\n        <td>\r\n          <select v-model='pbAnalysisType2'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th v-if=\"projectType === 'classInfo'\"></th>\r\n        <th>Stitch Count</th>\r\n        <td>\r\n          <select v-model='stitchCount'>\r\n            <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      BF analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>BF Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='bfAnalysisType'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>IA Root Path</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='pbiaRootPath'>\r\n            <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>NS/NB Integration</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleNsNbIntegration\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Alarm Timer (sec)</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleAlarm\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" v-model='alarmCount' class=\"alarmInput\">\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Keep WBC Page</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleKeepPage\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div class=\"backupDiv\">\r\n      <div class=\"backupDivChild\">\r\n        <h5 class=\"mb1\">Backup and Restore</h5>\r\n        <div class=\"settingDatePickers\">\r\n          <select v-model='backupRootPath'>\r\n            <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n          <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n          <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n          <button class=\"backupBtn\" @click=\"createBackup\">backup</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button class=\"saveBtn\" type=\"button\" @click='cellImgSet()'>Save Cell Image Analyzed</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst pbAnalysisType = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbAnalysisType2 = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfAnalysisType = ref('100');\r\nconst pbiaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${pbiaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n  if(res){\r\n    console.log(res)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        pbAnalysisType.value = data.cellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbAnalysisType2.value = data.pbAnalysisType2;\r\n        stitchCount.value = data.stitchCount;\r\n        bfAnalysisType.value = data.bfAnalysisType;\r\n        pbiaRootPath.value = data.pbiaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    cellAnalyzingCount: pbAnalysisType.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbAnalysisType2: pbAnalysisType2.value,\r\n    stitchCount: stitchCount.value,\r\n    bfAnalysisType: bfAnalysisType.value,\r\n    pbiaRootPath: pbiaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      console.log(result)\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { id: \"collapse-4\" }\nconst _hoisted_2 = { class: \"rbcDegreeCategoryNm\" }\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = { class: \"degreeInput mb1\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\n\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        category_id: category.categoryId,\r\n        category_nm: category.categoryNm,\r\n        class_id: classItem.classId,\r\n        class_nm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    console.log(!result.data)\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data?.categories);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.category_id;\r\n    const classId = item.class_id;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.category_nm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.class_nm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.class_nm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"mt2 rbcClassListArr\",\n            key: 'rbc' + index\n          }, [\n            _createElementVNode(\"div\", _hoisted_2, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                _createElementVNode(\"div\", null, _toDisplayString(classItem.classNm), 1),\n                _createElementVNode(\"div\", _hoisted_3, \" [ \" + _toDisplayString(`${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}`) + \" ] \", 1),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                    }, null, 8, _hoisted_5), [\n                      [_vModelText, classItem.degree1]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                    }, null, 8, _hoisted_6), [\n                      [_vModelText, classItem.degree2]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                    }, null, 8, _hoisted_7), [\n                      [_vModelText, classItem.degree3]\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", { onClick: onResetDegree }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div id=\"collapse-4\">\r\n      <!--      {{ rbcClassListArr }}-->\r\n      <div class=\"mt2 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n        <div class=\"rbcDegreeCategoryNm\">\r\n          {{ category?.categoryNm }}\r\n        </div>\r\n\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <div>\r\n            {{ classItem.classNm }}\r\n          </div>\r\n          <div class=\"mb1\">\r\n            [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]\r\n          </div>\r\n          <div>\r\n            <div class='degreeInput mb1'>\r\n              <input type=\"number\" v-model=\"classItem.degree1\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree2\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree3\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button @click=\"onResetDegree\">Reset</button>\r\n      <button type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        category_id: category.categoryId,\r\n        category_nm: category.categoryNm,\r\n        class_id: classItem.classId,\r\n        class_nm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    console.log(!result.data)\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data?.categories);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.category_id;\r\n    const classId = item.class_id;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.category_nm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.class_nm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.class_nm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCurrentInstance} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\n\r\n// appHeader page\r\nexport const sendSettingInfoWebSocket = (isOilReset: string, oilCount: string, userId: string, isNsNbIntegration: string) => {\r\n    const settings = tcpReq().embedStatus.settings;\r\n    settings.reqUserId = userId;\r\n\r\n    Object.assign(settings, {\r\n        oilCount,\r\n        isOilReset,\r\n        // uiVersion: 'uimd-pb-comm_v3',\r\n        isNsNbIntegration: isNsNbIntegration,\r\n    });\r\n    sendMessage(settings);\r\n}\r\n\r\nexport const sendOilPrimeWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.oilPrime);\r\n}\r\n\r\n\r\n// 셋팅 page -> 디바이스 컨트롤 page\r\nexport const onGripperOpenWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.gripperOpen.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.gripperOpen);\r\n}\r\n\r\nexport const onCameraResetWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.cameraReset.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.cameraReset);\r\n}\r\n\r\n\r\nconst sendMessage = (payload: object) => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: payload\r\n    });\r\n    // store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Gripper Open\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Camera Reset\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", { class: \"mt2\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Charge Remaining Count\"),\n  /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"defaultBtn\"\n  }, \"Scan\")\n], -1)\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_1,\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            type: \"button\",\n            class: \"defaultBtn\"\n          }, \"OK\")\n        ]),\n        _createElementVNode(\"li\", { class: \"mt2\" }, [\n          _hoisted_2,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onCameraReset\n          }, \"OK\")\n        ]),\n        _hoisted_3\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb1\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" type=\"button\" class=\"defaultBtn\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onCameraReset\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\">Scan</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\n\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', className: '' },\r\n  { customNum: 91, abbreviation: '', className: '' },\r\n  { customNum: 92, abbreviation: '', className: '' },\r\n  { customNum: 93, abbreviation: '', className: '' },\r\n  { customNum: 94, abbreviation: '', className: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item!.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.className) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_3), [\n                [_vModelText, item.className]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item!.customNum }}</span>\r\n        <span><input v-model=\"item.abbreviation\" type=\"text\" maxlength=\"3\" placeholder=\"abbreviation\"/></span>\r\n        <span><input v-model=\"item.className\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', className: '' },\r\n  { customNum: 91, abbreviation: '', className: '' },\r\n  { customNum: 92, abbreviation: '', className: '' },\r\n  { customNum: 93, abbreviation: '', className: '' },\r\n  { customNum: 94, abbreviation: '', className: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createWbcHotKeysApi, updateWbcHotKeysApi, getWbcWbcHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.title), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.title }}</span>\r\n        <span>{{ item.name }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createWbcHotKeysApi, updateWbcHotKeysApi, getWbcWbcHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.title), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.title }}</span>\r\n        <span>{{ item.name }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"normalItems\" }\nconst _hoisted_2 = { class: \"mt1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"div\", null, _toDisplayString(item.title) + \" - \" + _toDisplayString(item.name), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_3), [\n                  [_vModelText, item.min]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, item.max]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\">\r\n        <div>\r\n          {{ item.title }} - {{ item.name }}\r\n        </div>\r\n        <div class=\"mt1\">\r\n          <span><input v-model=\"item.min\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span><input v-model=\"item.max\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)\nconst _hoisted_3 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_4 = { class: \"nth1ChildOrder\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderText = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_4, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1)\n          ])\n        ], 40, _hoisted_3))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.name }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {onMounted, ref} from \"vue\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderText = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\"}\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC min\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC max\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"count\")\n  ])\n], -1)\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_5), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_7))\n                  }), 128))\n                ], 8, _hoisted_6), [\n                  [_vModelSelect, wbcRunning.wbcCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto;\">\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n        class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n      }, \"Cell Image Analyzed\", 2),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n            class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n          }, \"RBC Degree\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n      }, \"Device Controls\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n      }, \"WBC Running Count\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n      _createElementVNode(\"button\", {\n        onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n            class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n          }, \"BF Hot Keys\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n      }, \"Normal Range\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n      <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n      <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n      <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n      </button>\r\n      <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n      </button>\r\n      <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n      <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n      <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt2\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"No.\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User Type\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Latest Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\n\nimport { onMounted, reactive, ref } from \"vue\";\r\nimport { getAllUsersApi, getUserApi } from \"@/common/api/service/user/userApi\";\r\nimport { UserResponse, User  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    } else {\r\n      console.log('No data received from the API');\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n    console.log('result - get all users')\r\n\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n      } else {\r\n        allUsers.value = result.data.users || []\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n        class: \"searchSelect\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: option.value,\n            value: option.value\n          }, _toDisplayString(option.text), 9, _hoisted_3))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, userSearchOption.value]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n        class: \"searchInputBox\"\n      }, null, 512), [\n        [_vModelText, inputText.value]\n      ]),\n      _createVNode(_component_font_awesome_icon, {\n        icon: ['fas', 'search'],\n        class: \"searchBtn\",\n        onClick: onSearch\n      })\n    ]),\n    _createElementVNode(\"table\", _hoisted_4, [\n      _hoisted_5,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n          return (_openBlock(), _createElementBlock(\"tr\", {\n            key: user.id\n          }, [\n            _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.state), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt2\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n          <th>State</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n          <td>{{ user.state }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, reactive, ref } from \"vue\";\r\nimport { getAllUsersApi, getUserApi } from \"@/common/api/service/user/userApi\";\r\nimport { UserResponse, User  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    } else {\r\n      console.log('No data received from the API');\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n    console.log('result - get all users')\r\n\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n      } else {\r\n        allUsers.value = result.data.users || []\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.value);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.value);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.value\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.text), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.value\">\r\n      <div>{{ item.text }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.value\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.value);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.value);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb4\" }, \" [ WBC ] \", -1)\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { class: \"alignDiv\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \" [ RBC ] \", -1)\nconst _hoisted_7 = { class: \"mb1\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = { class: \"alignDiv\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \" [ Min Count ] \", -1)\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Giant Platelet\", -1)\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Platelet Aggregation\", -1)\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.value\n        }, [\n          _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.text), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.code) = $event)\n          }, null, 8, _hoisted_4), [\n            [_vModelText, item.code]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _hoisted_6,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_7, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.classNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.code) = $event)\n          }, null, 8, _hoisted_8), [\n            [_vModelText, item.code]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _hoisted_10,\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGpCount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minGpCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((minCountArr.value[0].minPaCount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minPaCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_15, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb4\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.value\">\r\n      <p class=\"mb1\">{{ item.text }}</p>\r\n      <input type=\"text\" v-model=\"item.code\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt2 mb4\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.classNm\">\r\n      <p class=\"mb1\">{{ item.categoryNm }} - {{ item.classNm }}</p>\r\n      <input type=\"text\" v-model=\"item.code\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb2\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGpCount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPaCount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { cbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    console.log(cbcCodeArr.value);\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = cbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.cd\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.testNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.testCd) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.testCd]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <label v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p class=\"mb1\">{{ item.testNm }}</p>\r\n      <input type=\"text\" v-model=\"item.testCd\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { cbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    console.log(cbcCodeArr.value);\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = cbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \"LIS Hot Key\", -1)\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Lis File Path\", -1)\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Cbc File Path\", -1)\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[0] || (_cache[0] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_4,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_5)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_6,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_7)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb2\">LIS Hot Key</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n               @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Lis File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Cbc File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"tab-content\" }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n        class: _normalizeClass({ 'active': _unref(selectedTab) === 'ImagePrint' })\n      }, \"Image Print\", 2),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'LisCode' })\n            }, \"Lis Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'CbcCode' })\n            }, \"CBC Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'filePathSet' })\n            }, \"Lis(CBC) Hot Key & File Path\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': selectedTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': selectedTab === 'LisCode' }\">Lis Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': selectedTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': selectedTab === 'filePathSet' }\">Lis(CBC) Hot Key & File Path</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=23f4e997\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\n\nimport { ref, onMounted } from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersion.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n          _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n          _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersion\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\n\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", _hoisted_2, [\n      (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n        return _createElementVNode(\"li\", {\n          key: tab,\n          class: _normalizeClass({ activeTab: currentTab.value === tab }),\n          onClick: ($event: any) => (changeTab(tab))\n        }, _toDisplayString(tab), 11, _hoisted_3)\n      }), 64))\n    ]),\n    (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.layer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.layer-content {\r\n  text-align: left;\r\n  background: #414141;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.layer-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  border-bottom: 1px solid #dedede;\r\n  padding-bottom: 15px;\r\n  color: #fff;\r\n}\r\n\r\n.layer-body {\r\n  color: #fff;\r\n}\r\n</style>\r\n","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./modal.vue?vue&type=style&index=0&id=5bdfef29&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5bdfef29\"]])\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {RuningInfo, RuningInfoApiRequest, RunningInfoRes} from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nimport * as http from \"http\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { style: {\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\"} }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"Analysis Report from UIMD PB system\")\n], -1)\nconst _hoisted_3 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_4 = { style: {\"width\":\"100%\"} }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n], -1)\nconst _hoisted_6 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)\nconst _hoisted_8 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_9 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)\nconst _hoisted_11 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_12 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)\nconst _hoisted_14 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_15 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)\nconst _hoisted_17 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_18 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)\nconst _hoisted_20 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_21 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)\nconst _hoisted_23 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_24 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)\nconst _hoisted_26 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_27 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)\nconst _hoisted_29 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_30 = { style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_31 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)\nconst _hoisted_33 = { style: {\"width\":\"100%\"} }\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\")\n  ])\n], -1)\nconst _hoisted_36 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_37 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_38 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_39 = { key: 0 }\nconst _hoisted_40 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Others\", -1)\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Platelets\", -1)\nconst _hoisted_43 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_44 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Malaria\", -1)\nconst _hoisted_47 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_48 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_51 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_52 = { style: {\"margin-top\":\"20px\"} }\nconst _hoisted_53 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"WBC classification result\", -1)\nconst _hoisted_54 = { style: {\"width\":\"100%\"} }\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_56 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_57 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_58 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_59 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total count\", -1)\nconst _hoisted_61 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_62 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1)\nconst _hoisted_63 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_64 = {\n  colspan: \"1\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_65 = { key: 0 }\nconst _hoisted_66 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_67 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_68 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_69 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\"}\n}\nconst _hoisted_70 = { style: {\"font-weight\":\"bold\"} }\nconst _hoisted_71 = { style: {\"position\":\"relative\"} }\nconst _hoisted_72 = [\"src\", \"width\", \"height\"]\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'print',\n  props: ['selectItems', 'printOnOff', 'selectItemWbc'],\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst pbiaRootPath = commonDataGet.value.pbiaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter(item => {\r\n    return (\r\n        (item.id !== '12' && item.id !== '13' && item.id !== '14' && item.id !== '15' && item.id !== '16') &&\r\n        item.count > 0\r\n    );\r\n  });\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data\r\n            .filter((item) => item.checked)\r\n            .map((item) => item.value);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item) =>\r\n            imagePrintAndWbcArr.value.includes(item.id)\r\n        );\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n      onClick: closePrint\n    }, \"Close\"),\n    _createElementVNode(\"div\", {\n      ref_key: \"printContent\",\n      ref: printContent,\n      style: {\"margin-top\":\"20px\"}\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"table\", _hoisted_4, [\n          _hoisted_5,\n          _createElementVNode(\"tbody\", null, [\n            _createElementVNode(\"tr\", _hoisted_6, [\n              _hoisted_7,\n              _createElementVNode(\"td\", _hoisted_8, _toDisplayString(__props.selectItems?.slotId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_9, [\n              _hoisted_10,\n              _createElementVNode(\"td\", _hoisted_11, _toDisplayString(_unref(formatDateString)(__props.selectItems?.orderDttm)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_12, [\n              _hoisted_13,\n              _createElementVNode(\"td\", _hoisted_14, _toDisplayString(__props.selectItems?.submitUserId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_15, [\n              _hoisted_16,\n              _createElementVNode(\"td\", _hoisted_17, _toDisplayString(__props.selectItems?.submitOfDate), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_18, [\n              _hoisted_19,\n              _createElementVNode(\"td\", _hoisted_20, _toDisplayString(_unref(getTestTypeText)(__props.selectItems?.testType)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_21, [\n              _hoisted_22,\n              _createElementVNode(\"td\", _hoisted_23, _toDisplayString(__props.selectItems?.patientName), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_24, [\n              _hoisted_25,\n              _createElementVNode(\"td\", _hoisted_26, _toDisplayString(__props.selectItems?.birthDay), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_27, [\n              _hoisted_28,\n              _createElementVNode(\"td\", _hoisted_29, _toDisplayString(__props.selectItems?.gender === '01' ? 'Male' : 'Female'), 1)\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_30, [\n          (['01', '04'].includes(__props.selectItems?.testType))\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                _hoisted_32,\n                _createElementVNode(\"table\", _hoisted_33, [\n                  _hoisted_34,\n                  _hoisted_35,\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([__props.selectItems?.rbcInfo], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(\"tr\", {\n                            key: innerIndex,\n                            style: {\"padding-bottom\":\"5px\"}\n                          }, [\n                            _createElementVNode(\"td\", _hoisted_36, _toDisplayString(category.categoryNm), 1),\n                            _createElementVNode(\"td\", _hoisted_37, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                              }), 128))\n                            ]),\n                            _createElementVNode(\"td\", _hoisted_38, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                  (classInfo.classId !== '01' || category.categoryId === '05')\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _toDisplayString(classInfo?.degree), 1))\n                                    : _createCommentVNode(\"\", true)\n                                ], 64))\n                              }), 128))\n                            ])\n                          ]))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", _hoisted_40, [\n                      _hoisted_41,\n                      _hoisted_42,\n                      _createElementVNode(\"th\", _hoisted_43, _toDisplayString(__props.selectItems?.rbcInfo.pltCount) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_44, [\n                      _hoisted_45,\n                      _hoisted_46,\n                      _createElementVNode(\"th\", _hoisted_47, _toDisplayString(__props.selectItems?.rbcInfo?.malariaCount) + \" / \" + _toDisplayString(__props.selectItems.maxRbcCount) + \" RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_48, [\n                      _hoisted_49,\n                      _hoisted_50,\n                      _createElementVNode(\"th\", _hoisted_51, _toDisplayString(__props.selectItems.rbcMemo), 1)\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_52, [\n            _hoisted_53,\n            _createElementVNode(\"table\", _hoisted_54, [\n              _hoisted_55,\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_56, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_57, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_58, _toDisplayString(item?.percent), 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_59, [\n                  _hoisted_60,\n                  _createElementVNode(\"td\", _hoisted_61, _toDisplayString(__props.selectItems?.wbcInfo?.totalCount), 1),\n                  _hoisted_62\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_63, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_64, [\n                      _createTextVNode(_toDisplayString(item?.count) + \" \", 1),\n                      (item.id === '12' || item.id === '13')\n                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_65, \" / \" + _toDisplayString(__props.selectItems?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                        : _createCommentVNode(\"\", true)\n                    ])\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_66, [\n                  _hoisted_67,\n                  _createElementVNode(\"td\", _hoisted_68, _toDisplayString(__props.selectItems?.memo), 1)\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_69, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id\n                }, [\n                  _createElementVNode(\"div\", _hoisted_70, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"10px\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_71, [\n                          _createElementVNode(\"img\", {\n                            src: getImageUrl(image.fileName, item.id, item.title),\n                            width: image.width ? image.width : '150px',\n                            height: image.height ? image.height : '150px',\n                            style: _normalizeStyle({ filter: image.filter }),\n                            class: \"cellImg\",\n                            ref_for: true,\n                            ref: \"cellRef\"\n                          }, null, 12, _hoisted_72),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ])\n    ], 512)\n  ]))\n}\n}\n\n})","<template>\r\n  <div style=\"width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px;\">\r\n    <button style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\" @click=\"closePrint\">Close</button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD PB system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ getTestTypeText(selectItems?.testType) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n        <div style=\"margin-top: 20px; border-top: 2px dotted #696969\">\r\n          <!-- RBC Classification -->\r\n          <div v-if=\"['01', '04'].includes(selectItems?.testType)\" style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th style=\"text-align: left;\">Category</th>\r\n                <th style=\"text-align: left;\">Class</th>\r\n                <th style=\"text-align: left;\">Degree</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <template v-for=\"(classList, outerIndex) in [selectItems?.rbcInfo]\" :key=\"outerIndex\">\r\n                <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                  <tr style=\"padding-bottom: 5px;\">\r\n                    <td style=\"text-align: left; padding: 5px 0;\">{{ category.categoryNm }}</td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div>{{ classInfo?.classNm }}</div>\r\n                      </template>\r\n                    </td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">{{ classInfo?.degree }}</div>\r\n                      </template>\r\n                    </td>\r\n                  </tr>\r\n                </template>\r\n              </template>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Others</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Platelets</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo.pltCount }} PLT / 1000 RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Malaria</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo?.malariaCount }} / {{ selectItems.maxRbcCount }} RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems.rbcMemo }}</th>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <!-- WBC Classification -->\r\n          <div style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">WBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <tbody>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }}</td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total count</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n              </tr>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td colspan=\"1\" style=\"text-align: left; padding: 5px 0;\">\r\n                  {{ item?.count }}\r\n                  <span v-if=\"item.id === '12' || item.id === '13'\"> / {{ selectItems?.wbcInfo?.maxWbcCount }} WBC</span>\r\n                </td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <td colspan=\"2\" style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.memo }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Print List -->\r\n            <ul class=\"print\" style=\"list-style: none; padding-left: 0; margin-top: 20px;\">\r\n              <li v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n                <div style=\"font-weight: bold;\">{{ item?.title }} ({{ item?.count }})</div>\r\n                <ul :class=\"'wbcImgWrap ' + item?.title\" style=\"list-style: none; padding-left: 0; margin-top: 10px;\">\r\n                  <li v-for=\"(image) in item.images\" :key=\"image.fileName\" style=\"display: inline-block; margin-right: 10px;\">\r\n                    <div style=\"position: relative;\">\r\n                      <img :src=\"getImageUrl(image.fileName, item.id, item.title)\" :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\" :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                      <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst props = defineProps(['selectItems', 'printOnOff', 'selectItemWbc']);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst pbiaRootPath = commonDataGet.value.pbiaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter(item => {\r\n    return (\r\n        (item.id !== '12' && item.id !== '13' && item.id !== '14' && item.id !== '15' && item.id !== '16') &&\r\n        item.count > 0\r\n    );\r\n  });\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data\r\n            .filter((item) => item.checked)\r\n            .map((item) => item.value);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item) =>\r\n            imagePrintAndWbcArr.value.includes(item.id)\r\n        );\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","<template>\r\n  <table class='defaultTable mt2 dbDataTable'>\r\n    <thead>\r\n    <tr>\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(S)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n    <colgroup>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n    </colgroup>\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr :class=\"{ selectedTr: selectedItemId === item.id, submittedTr: item.submitState === 'Submit', rock: item.lock_status && item.pcIp !== myIp, checkFirst: item.submitState === 'checkFirst' }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n      >\r\n        <td> {{ idx + 1 }}</td>\r\n        <td>\r\n          <input type=\"checkbox\" v-model=\"item.checked\" @change=\"handleCheckboxChange(item)\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon v-if=\"item?.submitState === 'checkFirst' || item?.submitState === ''\"\r\n                             :icon=\"['fas', 'pen-to-square']\"\r\n                             @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 10px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\"> NO Data</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 60) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"deleteRow\">Delete</li>\r\n      <li>export XLSX</li>\r\n    </ul>\r\n  </div>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li>\r\n            <span>PB/BF</span>\r\n            <input type=\"text\" v-model=\"itemObj.testType\"/>\r\n          </li>\r\n          <li>\r\n            <span>Tray Slot</span>\r\n            <input type=\"text\" readonly v-model=\"itemObj.traySlot\"/>\r\n          </li>\r\n          <li>\r\n            <span>BARCODE ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT NAME</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li>\r\n            <span>Analyzed date</span>\r\n            <input type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly/>\r\n          </li>\r\n          <li>\r\n            <span>Signed state</span>\r\n            <input type=\"text\" v-model=\"itemObj.submitState\" readonly/>\r\n          </li>\r\n          <li>\r\n            <span>Barcode Image</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button @click=\"dbDataEditSet\">Ok</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport moment from \"moment\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\n\r\n\r\nconst props = defineProps(['dbData']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  projectType.value = window.PROJECT_TYPE;\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n});\r\nwatchEffect(async () => {\r\n  if (props.dbData.length > 0) {\r\n    await nextTick();\r\n    // 첫 번째 행을 클릭\r\n    const dbBaseTrClickId = sessionStorage.getItem('dbBaseTrClickId') || 0;\r\n    const filteredItems = props.dbData.filter(item => item.id === Number(dbBaseTrClickId));\r\n    selectItem(filteredItems[0]);\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.5,\r\n    });\r\n    if (loadMoreRef.value) {\r\n      observer.observe(loadMoreRef.value);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n};\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = (item, event) => {\r\n  if (props.dbData.filter(item => item.checked).length === 0) {\r\n    showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item.hasOwnProperty('checked')) { // 체크드 하는 부분이 없으면 넣어줘야 갱신 가능\r\n    item.checked = false;\r\n  }\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = (item) => {\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  sessionStorage.setItem('dbBaseTrClickId', item.id);\r\n\r\n  // 선택된 행이 화면에 보이도록 스크롤 조정\r\n  const selectedRow = document.querySelector(`[data-row-id=\"${item.id}\"]`);\r\n  if (selectedRow) {\r\n    selectedRow.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n  }\r\n};\r\nconst getUserIp = async (item) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    const req = `oldPcIp=${result.data}&newEntityId=${item.id}&newPcIp=${result.data}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status) {\r\n    return;\r\n  }\r\n\r\n  let wbcInfoData = [];\r\n  if (Object.keys(item?.wbcInfo).length === 0) {\r\n    wbcInfoData = projectType.value !== 'bm' ? basicWbcArr : basicBmClassList;\r\n    item.wbcInfo = projectType.value !== 'bm' ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]};\r\n  } else {\r\n    wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n  }\r\n\r\n  const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(item?.rbcInfo));\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedArray));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(item));\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: item.wbcInfoAfter});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getUserIp(item);\r\n  await router.push('/databaseDetail');\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data?.categories\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]]\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['','Ready','checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType)\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async () => {\r\n  try {\r\n    const selectedItems = props.dbData.filter(item => item.checked);\r\n    if (selectedItems.length === 0) {\r\n      showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n      return;\r\n    }\r\n\r\n    const idsToDelete = selectedItems.map(item => item.id);\r\n    const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n    const rootArr = selectedItems.map(item => `${path}/${item.slotId}`);\r\n    const req = {\r\n      ids: idsToDelete,\r\n      img_drive_root_path: rootArr\r\n    }\r\n    const response = await deleteRunningApi(req);\r\n\r\n    if (response.success) {\r\n      showSuccessAlert('Items deleted successfully');\r\n      emits('refresh'); // 데이터 다시 불러오기\r\n      resetContextMenu();\r\n    } else {\r\n      console.error('Failed to delete items');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <ul class=\"orderListUi\">\r\n        <li>Order ID <span>{{ selectedItem?.slotId }}</span>  </li>\r\n        <li>LIS status <span>No data sent or received from LIS</span>  </li>\r\n        <li>Type of order <span>No data sent or received from LIS</span>\r\n          <span v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">WBC + RBC</span>\r\n          <span v-else>{{ selectedItem?.testType }}</span>\r\n        </li> \r\n        <li>NS, NB Integration <span>{{ selectedItem?.isNsNbIntegration }}</span>  </li>\r\n        <li>Patient ID <span>{{ selectedItem?.patientId }}</span>  </li>\r\n        <li>Patient Name <span>{{ selectedItem?.patientNm }}</span>  </li>\r\n        <li>\r\n          <img :src=\"pilePath\" style=\"width: 235px\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <h3 class=\"mt2 mb1 hh3title\">Result Information</h3>\r\n      <ul>\r\n        <li>Analyzed Date <span>{{ formatDateString(selectedItem?.analyzedDttm) }}</span></li>\r\n        <li>Signed State <span>{{ selectedItem?.submitState }}</span></li>\r\n        <li>Signed of Date <span>{{ selectedItem?.submitOfDate }}</span></li>\r\n        <li>Signed User ID <span>{{ selectedItem?.submitUserId }}</span></li>\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">\r\n          <div v-if=\"showClassificationResults(selectedItem?.classificationResult)\">\r\n            <div v-for=\"result in selectedItem.classificationResult\" :key=\"result.title\">\r\n              <p>{{ result.title }}</p>\r\n              <p>{{ result.count }}</p>\r\n              <p>{{ result.percent }}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\nimport {ref, defineProps, onMounted, watchEffect, watch, nextTick} from 'vue';\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst props = defineProps(['selectedItem']);\r\nconst pbiaRootPath = ref('');\r\nconst pilePath = ref('');\r\n\r\n\r\nonMounted(() => {\r\n  // pbiaRootPath가 존재하면 getImageUrl 함수 호출\r\n  pbiaRootPath.value = sessionStorage.getItem('pbiaRootPath');\r\n  if (pbiaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n});\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  if (pbiaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !['12_NR', '13_GP', '14_PA', '15_AR', '16_MA', '17_SM'].includes(result.dirName)\r\n  );\r\n\r\n};\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nfunction getImageUrl(imageName){\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : pbiaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + barcodeImgDir.barcodeDirName + '/'}&imageName=${imageName}`;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-505659c6\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"WBC Images\", -1))\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbWbcImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_5 = { key: 1 }\n\nimport { onMounted, ref, watch } from 'vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst pbiaRootPath = sessionStorage.getItem('pbiaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : pbiaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbWbcImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, onMounted, ref, watch } from 'vue';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst pbiaRootPath = sessionStorage.getItem('pbiaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : pbiaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-height: 348px;\r\n  overflow: auto;\r\n}\r\n\r\n.image-container img {\r\n  max-width: 100px;\r\n  max-height: 100px;\r\n  margin: 5px;\r\n}\r\n</style>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./listWbcImg.vue?vue&type=style&index=0&id=505659c6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-505659c6\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"BM Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbBmImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : pbiaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbBmImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : pbiaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleH3\" }\nconst _hoisted_2 = { class: \"listBoxTable\" }\nconst _hoisted_3 = { class: \"filterListDiv\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\nconst _hoisted_7 = [\n  _hoisted_4,\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"settingDatePickers\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_10 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"NR count\", -1)\nconst _hoisted_12 = { class: \"wbcTotal\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Total\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", null, \"DESC\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", null, \"ASC\", -1)\nconst _hoisted_17 = [\n  _hoisted_14,\n  _hoisted_15,\n  _hoisted_16\n]\nconst _hoisted_18 = {\n  key: 1,\n  class: \"wbcInfoFilter\"\n}\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Info Filter\", -1)\nconst _hoisted_20 = { class: \"wbcInfoFilter\" }\nconst _hoisted_21 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_22 = [\"for\"]\nconst _hoisted_23 = { class: \"lastTestType\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Test Type\", -1)\nconst _hoisted_25 = [\"checked\"]\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"span\", null, \"ALL\", -1)\nconst _hoisted_27 = [\"checked\"]\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Diff\", -1)\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"span\", null, \"PBS\", -1)\nconst _hoisted_31 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  // console.log(startDate.value);\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_1, [\n        _createTextVNode(\" Classification List \"),\n        _createElementVNode(\"button\", { onClick: classListToggleEvent }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'list-check'] })\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _hoisted_7, 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n              class: \"searchInputBox\"\n            }, null, 512), [\n              [_vModelText, searchText.value]\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\")\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                      _hoisted_11,\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _hoisted_13,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _hoisted_17, 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                      _hoisted_19,\n                      _createElementVNode(\"ul\", _hoisted_20, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                          return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              id: 'checkbox_' + idx,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                              onChange: updateFilter\n                            }, null, 40, _hoisted_21), [\n                              [_vModelCheckbox, item.checked]\n                            ]),\n                            _createElementVNode(\"label\", {\n                              for: 'checkbox_' + idx\n                            }, _toDisplayString(item.title), 9, _hoisted_22)\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_25),\n                      _hoisted_26\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"01\",\n                        onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                        checked: testType.value === '01'\n                      }, null, 40, _hoisted_27),\n                      _hoisted_28\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"02\",\n                        onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                        checked: testType.value === '04'\n                      }, null, 40, _hoisted_29),\n                      _hoisted_30\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createVNode(ListTable, {\n          dbData: dbGetData.value,\n          onLoadMoreData: loadMoreData,\n          onInitData: initDbData,\n          onSelectItem: selectItem,\n          onRefresh: refresh\n        }, null, 8, [\"dbData\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_31, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click=\"classListToggleEvent\">\r\n        <font-awesome-icon :icon=\"['fas', 'list-check']\"/>\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <input type=\"text\" v-model='searchText' class=\"searchInputBox\"/>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n          <button class=\"searchClass\" @click=\"search\">Search</button>\r\n          <!-- <button class=\"searchClass\" @click=\"refresh\">Refresh</button> -->\r\n        </div>\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\" v-if=\"!bmClassIsBoolen\">\r\n            <span>WBC Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label><input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/><span>ALL</span></label>\r\n              <label><input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                <span>Diff</span></label>\r\n              <label><input type=\"checkbox\" value=\"02\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                <span>PBS</span></label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ListTable :dbData=\"dbGetData\" @loadMoreData=\"loadMoreData\" @initData=\"initDbData\" @selectItem=\"selectItem\" @refresh=\"refresh\"/>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  // console.log(startDate.value);\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">OK</button>\r\n    <button class=\"alertButton\" @click=\"hideConfirm\">CLOSE</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst hideConfirm = () => {\r\n    emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n    emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vShow as _vShow, vModelCheckbox as _vModelCheckbox, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f07e55b4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt2 mb2\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1))\nconst _hoisted_3 = { class: \"leftWbcInfo\" }\nconst _hoisted_4 = { style: {\"position\":\"relative\"} }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_6 = { class: \"categoryNm\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_8 = { class: \"classNmRbc\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = [\"value\", \"onChange\"]\nconst _hoisted_11 = { class: \"degree analysis\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_13 = { key: 0 }\nconst _hoisted_14 = { key: 1 }\nconst _hoisted_15 = { key: 0 }\nconst _hoisted_16 = { key: 1 }\nconst _hoisted_17 = { class: \"categories\" }\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_19 = { class: \"classNmRbc\" }\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1))\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1))\nconst _hoisted_22 = { class: \"degree analysis\" }\nconst _hoisted_23 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"beforeAfterBtn\"\n}\n\nimport {ref, watch, onMounted, computed} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'selectItems','type', 'allCheckClear'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = __props;\r\nconst rbcInfoChangeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst clonedRbcInfoStore = computed(() => store.state.commonModule.clonedRbcInfo);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\n\r\nonMounted(() => {\r\n  if(router.currentRoute.value.path === '/report'){\r\n    rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n    console.log(props.selectItems.rbcInfoAfter)\r\n  }\r\n\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo?.maxRbcCount;\r\n  except.value = router.currentRoute.value.path === '/report';\r\n});\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\n\r\nconst beforeChange = () => {\r\n  isBefore.value = true;\r\n  emits('isBeforeUpdate', true);\r\n  rbcInfoChangeVal.value = props.rbcInfo.rbcInfo.rbcClass ? props.rbcInfo.rbcInfo.rbcClass : props.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  if(props.rbcInfo.rbcInfoAfter){\r\n    rbcInfoChangeVal.value = props.rbcInfo.rbcInfoAfter;\r\n\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (isBefore.value) {\r\n    return;\r\n  }\r\n\r\n  const rbcInfoAfter = rbcInfoChangeVal.value.map((rbc: any) => {\r\n    return rbc?.classInfo.map((item: any) => {\r\n      if (item.classNm === classInfo.classNm && category.categoryNm === rbc?.categoryNm) {\r\n        if (isNormal) {\r\n          item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n        } else {\r\n          item.degree = String(degreeIndex);\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n\r\n  const updatedSelectItems: any = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n      return {\r\n        ...rbcItem,\r\n        classInfo: rbcInfoAfter[index]\r\n      };\r\n    })\r\n  };\r\n\r\n  const rbcAfter = props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n    return {\r\n      ...rbcItem,\r\n      classInfo: rbcInfoAfter[index]\r\n    };\r\n  })\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcAfter,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], false);\r\n\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _hoisted_2,\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", _hoisted_4, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'comment-dots'],\n              onClick: memoOpen\n            }),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                  _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"li\", {\n            onClick: commitConfirmed,\n            class: _normalizeClass({\r\n    'submitted': __props.selectItems.submitState === 'Submit',\r\n  })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoChangeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_6, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, \"Category\"))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n              ]),\n              _createElementVNode(\"ul\", _hoisted_8, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1),\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkedClassIndices).value = $event)),\n                        onChange: ($event: any) => (updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId))\n                      }, null, 40, _hoisted_10), [\n                        [_vShow, !except.value],\n                        [_vModelCheckbox, checkedClassIndices.value]\n                      ])\n                    ], 512), [\n                      [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                    ])\n                  ]))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_11, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_12, \"Degree\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo.classId !== '01' || category.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                            return _createVNode(_component_font_awesome_icon, {\n                              icon: ['fas', 'circle'],\n                              key: degreeIndex,\n                              onClick: ($event: any) => (onClickDegree(category, classInfo, degreeIndex-1, false)),\n                              class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                            }, null, 8, [\"onClick\", \"class\"])\n                          }), 64))\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_14, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(category, classInfo, '0', true)),\n                                  icon: ['fas', 'circle']\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(category, classInfo, '1', true) ),\n                                  icon: ['fas', 'circle'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                        ]))\n                  ], 64))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_17, [\n          _hoisted_18,\n          _createElementVNode(\"ul\", _hoisted_19, [\n            _createElementVNode(\"li\", null, [\n              _hoisted_20,\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-1\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[3] || (_cache[3] = ($event: any) => (updateClassInfoArr('Giant Platelet', $event.target.checked, '04', '01')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _hoisted_21,\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-2\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[5] || (_cache[5] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_22, [\n            _createElementVNode(\"li\", _hoisted_23, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n            _createElementVNode(\"li\", _hoisted_24, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n          ])\n        ])\n      ]),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n            _createElementVNode(\"button\", {\n              onClick: beforeChange,\n              class: _normalizeClass({isBeforeClicked:isBefore.value})\n            }, \"Before\", 2),\n            _createElementVNode(\"button\", {\n              onClick: afterChange,\n              class: _normalizeClass({isBeforeClicked:!isBefore.value})\n            }, \"After\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"mt2 mb2\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo\">\r\n        <li style=\"position: relative\">\r\n          <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button @click=\"memoChange\">ok</button>\r\n            <button @click=\"memoCancel\">cancel</button>\r\n          </div>\r\n        </li>\r\n        <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems.submitState === 'Submit',\r\n  }\">\r\n          <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoChangeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n            <li>{{ getCategoryName(category) }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li>\r\n                <span>{{ classInfo?.classNm }}</span>\r\n                <div v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n                  <input type=\"checkbox\" :value=\"`${outerIndex}-${innerIndex}-${classIndex}`\"\r\n                         v-show=\"!except\"\r\n                         v-model=\"checkedClassIndices\"\r\n                         @change=\"updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId)\">\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'circle']\"\r\n                    v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                    @click=\"onClickDegree(category, classInfo, degreeIndex-1, false)\"\r\n                    :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                />\r\n              </li>\r\n              <li v-else>\r\n                <div v-if=\"classInfo.degree === '0'\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(category, classInfo, '0', true)\"\r\n                      :icon=\"['fas', 'circle']\"\r\n                  />\r\n                </div>\r\n                <div v-else>\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(category, classInfo, '1', true) \"\r\n                      :icon=\"['fas', 'circle']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>\r\n            <span>Platelets</span>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     value=\"9-9-1\"\r\n                     v-show=\"!except\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Giant Platelet', $event.target.checked, '04', '01')\">\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span>Malaria</span>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     v-show=\"!except\"\r\n                     value=\"9-9-2\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\">\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">\r\n      <button @click=\"beforeChange\" :class={isBeforeClicked:isBefore}>Before</button>\r\n      <button @click=\"afterChange\" :class={isBeforeClicked:!isBefore}>After</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = defineProps(['rbcInfo', 'selectItems','type', 'allCheckClear']);\r\nconst rbcInfoChangeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst clonedRbcInfoStore = computed(() => store.state.commonModule.clonedRbcInfo);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\n\r\nonMounted(() => {\r\n  if(router.currentRoute.value.path === '/report'){\r\n    rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n    console.log(props.selectItems.rbcInfoAfter)\r\n  }\r\n\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo?.maxRbcCount;\r\n  except.value = router.currentRoute.value.path === '/report';\r\n});\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\n\r\nconst beforeChange = () => {\r\n  isBefore.value = true;\r\n  emits('isBeforeUpdate', true);\r\n  rbcInfoChangeVal.value = props.rbcInfo.rbcInfo.rbcClass ? props.rbcInfo.rbcInfo.rbcClass : props.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  if(props.rbcInfo.rbcInfoAfter){\r\n    rbcInfoChangeVal.value = props.rbcInfo.rbcInfoAfter;\r\n\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (isBefore.value) {\r\n    return;\r\n  }\r\n\r\n  const rbcInfoAfter = rbcInfoChangeVal.value.map((rbc: any) => {\r\n    return rbc?.classInfo.map((item: any) => {\r\n      if (item.classNm === classInfo.classNm && category.categoryNm === rbc?.categoryNm) {\r\n        if (isNormal) {\r\n          item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n        } else {\r\n          item.degree = String(degreeIndex);\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n\r\n  const updatedSelectItems: any = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n      return {\r\n        ...rbcItem,\r\n        classInfo: rbcInfoAfter[index]\r\n      };\r\n    })\r\n  };\r\n\r\n  const rbcAfter = props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n    return {\r\n      ...rbcItem,\r\n      classInfo: rbcInfoAfter[index]\r\n    };\r\n  })\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcAfter,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], false);\r\n\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.table-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.rbc-head,\r\n.rbc-container {\r\n  flex: 1;\r\n  padding-right: 20px;\r\n  text-align: left;\r\n}\r\n\r\n</style>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcClass.vue?vue&type=style&index=0&id=f07e55b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f07e55b4\"]])\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-malaria\",\n  style: {\"text-align\":\"left\"}\n}, \"No Malaria\", -1)\nconst _hoisted_4 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\nconst _hoisted_7 = [\n  _hoisted_6\n]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst pbiaRootPath = sessionStorage.getItem('pbiaRootPath') || dirName.pbiaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (imageExist.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"div\", {\n            onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n            onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'malaria-' + index,\n                src: malaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                alt: \"malaria-image\",\n                onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('malaria', malaria, index))\n              }, null, 42, _hoisted_2))\n            }), 128))\n          ], 32)\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_3,\n          _createElementVNode(\"div\", {\n            onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'noMalaria-' + index,\n                src: noMalaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                alt: \"noMalaria-image\",\n                onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index))\n              }, null, 42, _hoisted_4))\n            }), 128))\n          ], 32)\n        ])\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <div @drop=\"onDrop('malaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <div class=\"no-malaria\" style=\"text-align:left\">No Malaria</div>\r\n      <div @drop=\"onDrop('noMalaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst pbiaRootPath = sessionStorage.getItem('pbiaRootPath') || dirName.pbiaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request);\r\n};\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock, withModifiers as _withModifiers, vShow as _vShow, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-789ef51e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1))\nconst _hoisted_2 = { class: \"rbc-container\" }\nconst _hoisted_3 = { class: \"btn-container\" }\nconst _hoisted_4 = { class: \"btn-imgsetbox\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"imgSet\"\n}\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Brightness\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"RGB\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Grid\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Ruler\", -1))\nconst _hoisted_10 = { class: \"ruler-box\" }\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Zoom\", -1))\nconst _hoisted_13 = { class: \"tiling-viewer-box\" }\nconst _hoisted_14 = { key: 2 }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Tile does not exist.\", -1))\nconst _hoisted_16 = [\n  _hoisted_15\n]\nconst _hoisted_17 = { class: \"categoryNm\" }\nconst _hoisted_18 = { class: \"classNmRbc\" }\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_22 = { class: \"classNmRbc\" }\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1))\nconst _hoisted_24 = [\n  _hoisted_23\n]\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1))\nconst _hoisted_26 = [\n  _hoisted_25\n]\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.posX) === moveRbcClassItem.posX + 20 && Number(el.posY) === moveRbcClassItem.posY + 20);\r\n        if (foundElementIndex !== -1) {\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX + 20,\r\n          posY: moveRbcClassItem.posY + 20\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(rbcInfoPathAfter.value);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const jsonString = JSON.stringify(jsonData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const response = await fetch(`http://localhost:3002/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  if (response.data === 'not file' || props.isBefore) {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    rbcInfoPathAfter.value = response?.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response?.data;\r\n  }\r\n\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          rectPath.rect(classItem.posX - 20, classItem.posY - 20, 40, 40);\r\n          drawPath.value.push({\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItem.posX - 20,\r\n            posY: classItem.posY - 20,\r\n          })\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = 40; // 아이템의 너비\r\n            const height = 40; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = '40px';\r\n                element.style.backgroundColor = color;\r\n                element.style.height = '40px';\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              }else{\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find(classItem => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = '40px';\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = '40px';\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if(item.classNm === \"Normal\"){\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = '40px';\r\n            element.style.backgroundColor = color;\r\n            element.style.height = '40px';\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"button\", {\n            class: \"img-btn\",\n            onClick: imgSetOpen\n          }, \"Img Setting\"),\n          (imgSet.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                  _hoisted_6,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"80\",\n                    max: \"150\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                    onInput: changeImgBrightness\n                  }, null, 544), [\n                    [_vModelText, imgBrightness.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"resetBtn\",\n                    onClick: rgbReset\n                  }, \"RGB Reset\")\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n                  _hoisted_8,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickGrid\n                  }, null, 8, [\"icon\"])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n                  _hoisted_9,\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                      return (_openBlock(), _createElementBlock(\"button\", {\n                        class: _normalizeClass([\"tab-ruler-btn\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                        onClick: ($event: any) => (onClickRuler(ruler)),\n                        key: ruler.id\n                      }, _toDisplayString(ruler.text), 11, _hoisted_11))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n                  _hoisted_12,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickZoom\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_13, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer\",\n                style: {\"width\":\"100%\"},\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _hoisted_16))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([__props.selectItems.rbcInfo], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_17, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_18, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                      ], 8, _hoisted_19))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_20, [\n                _hoisted_21,\n                _createElementVNode(\"ul\", _hoisted_22, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('04', '01', 'Giant Platelet')))\n                  }, _hoisted_24),\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                  }, _hoisted_26)\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div></div>\r\n  <div class=\"rbc-container\">\r\n    <div class=\"btn-container\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox'>\r\n        <button class=\"img-btn\" @click=\"imgSetOpen\">Img Setting</button>\r\n        <div class=\"imgSet\" v-if=\"imgSet\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"150\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[0]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[1]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[2]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n            <span>Ruler</span>\r\n            <div class=\"ruler-box\">\r\n              <button\r\n                  class=\"tab-ruler-btn\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer-box\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\"\r\n           ref=\"tilingViewerLayer\"\r\n           id=\"tiling-viewer\" style=\"width: 100%;\"\r\n           @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [selectItems.rbcInfo]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Giant Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n          <li @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n            <span>Malaria</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.posX) === moveRbcClassItem.posX + 20 && Number(el.posY) === moveRbcClassItem.posY + 20);\r\n        if (foundElementIndex !== -1) {\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX + 20,\r\n          posY: moveRbcClassItem.posY + 20\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(rbcInfoPathAfter.value);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const jsonString = JSON.stringify(jsonData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const response = await fetch(`http://localhost:3002/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  if (response.data === 'not file' || props.isBefore) {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    rbcInfoPathAfter.value = response?.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response?.data;\r\n  }\r\n\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          rectPath.rect(classItem.posX - 20, classItem.posY - 20, 40, 40);\r\n          drawPath.value.push({\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItem.posX - 20,\r\n            posY: classItem.posY - 20,\r\n          })\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = 40; // 아이템의 너비\r\n            const height = 40; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = '40px';\r\n                element.style.backgroundColor = color;\r\n                element.style.height = '40px';\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              }else{\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find(classItem => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = '40px';\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = '40px';\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if(item.classNm === \"Normal\"){\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = '40px';\r\n            element.style.backgroundColor = color;\r\n            element.style.height = '40px';\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.tab-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.ruler-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.tab-ruler-btn {\r\n  padding: 5px 10px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.active, .tab-ruler-btn.active {\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.inactive, .tab-ruler-btn.inactive {\r\n  color: darkgray;\r\n  background-color: #393939;\r\n}\r\n\r\n\r\n.btn-imgsetbox {\r\n  position: relative;\r\n}\r\n\r\n.imgSet {\r\n  position: absolute;\r\n  top: 40px;\r\n  left: -150px;\r\n  width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.imgSet div {\r\n  padding: 10px;\r\n}\r\n\r\n.img-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\nspan {\r\n  margin: 0 10px 0 10px;\r\n}\r\n\r\n.tiling-viewer-box {\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  position: relative; /* 수정 */\r\n}\r\n\r\n#tiling-viewer {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 80vh;\r\n}\r\n\r\n.rbc-container {\r\n  height: 85vh;\r\n}\r\n\r\n.btn-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n</style>","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcImageList.vue?vue&type=style&index=0&id=789ef51e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-789ef51e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"REPORT\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"LIS-CBC\", -1)\nconst _hoisted_7 = { class: \"wbcMenuBottom\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getUserIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err')\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      console.log(res.data);\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (selectItems.value?.testType !== '01' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_4, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                ]),\n                _hoisted_5\n              ], 2)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _hoisted_6\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_8),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_9)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (selectItems?.testType !== '01' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext']);\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getUserIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err')\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      console.log(res.data);\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"titleCbc\" }, \"CBC + DIFF\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_4 = { class: \"cbcTable\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_6 = { class: \"cbcTable\" }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_9 = { class: \"cbcTable\" }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceBarCode = computed(() => store.state.commonModule.deviceBarcode);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({testNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      console.log(readFileTxtRes.data.message)\r\n    }\r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  testNm: cbcCode.testCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('return code : ' + res.returnCode)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceBarCode.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceBarCode.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  testNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        console.log(msg)\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  testNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcCodeList.value = data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (siteCd.value ==='0002')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem?.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (siteCd.value ==='0007')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"table\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.testNm), 1),\n                _createElementVNode(\"td\", null, [\n                  _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                  (cbcItem.cham !=='')\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                    : _createCommentVNode(\"\", true),\n                  _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"table\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.testNm), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <h1 class=\"titleCbc\">CBC + DIFF</h1>\r\n    <div v-if=\"siteCd ==='0002'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem?.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"siteCd ==='0007'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.testNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.testNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceBarCode = computed(() => store.state.commonModule.deviceBarcode);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({testNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      console.log(readFileTxtRes.data.message)\r\n    }\r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  testNm: cbcCode.testCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('return code : ' + res.returnCode)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceBarCode.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceBarCode.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  testNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        console.log(msg)\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  testNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcCodeList.value = data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcContent\" }\nconst _hoisted_2 = { class: \"topClintInfo\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)) + \" Smear\", 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcClass, {\n          onIsBeforeUpdate: isBeforeUpdate,\n          onClassInfoArrUpdate: classInfoArrUpdate,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          allCheckClear: allCheckClear.value\n        }, null, 8, [\"rbcInfo\", \"selectItems\", \"allCheckClear\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcImageList, {\n          onUnChecked: unChecked,\n          isBefore: isBefore.value,\n          classInfoArr: classInfoArr.value,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\"\n        }, null, 8, [\"isBefore\", \"classInfoArr\", \"rbcInfo\", \"selectItems\"])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>{{ getTestTypeText(selectItems?.testType) }} Smear</li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcClass @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable' :allCheckClear=\"allCheckClear\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList @unChecked=\"unChecked\" :isBefore=\"isBefore\" :classInfoArr=\"classInfoArr\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const business_id = 'li'\r\n// 병원 코드\r\nexport const instcd = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const eqmtcd = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\nexport const spcParams = {\r\n    submit_id: 'TRLII00124',\r\n    business_id: 'li',\r\n    instcd: '012', // 병원 코드\r\n    bcno: 'H59'\r\n}\r\n\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"mt2 mb2\" }\nconst _hoisted_3 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_4 = { class: \"leftWbcInfo\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"wbcClassScroll\" }\nconst _hoisted_8 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"nth1Child classAttribute\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Class\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Count\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, \"%\", -1)\nconst _hoisted_13 = [\n  _hoisted_10,\n  _hoisted_11,\n  _hoisted_12\n]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"categories classTotal\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = { key: 0 }\nconst _hoisted_20 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_21 = [\"onClick\"]\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"li\", null, \" -\", -1)\nconst _hoisted_23 = { key: 1 }\nconst _hoisted_24 = { class: \"categoryNm\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_26 = { class: \"classNm\" }\nconst _hoisted_27 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_28 = { key: 0 }\nconst _hoisted_29 = { class: \"degree\" }\nconst _hoisted_30 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\nconst _hoisted_32 = {\n  key: 2,\n  class: \"beforeAfterBtn\"\n}\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceBarCode = computed(() => store.state.commonModule.deviceBarcode);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  store.dispatch('commonModule/setCommonInfo', {classInfoSort: wbcInfoChangeVal.value});\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.testcd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.testCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.testCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.testCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.testCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.testCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          testCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.testCd !== null && wbcItem.testCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.testCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceBarCode.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceBarCode.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      lisFilePathSetArr.value = data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n\r\n\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfoChangeVal.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderText = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report')\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: barcodeImg.value\n        }, null, 8, _hoisted_1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h3\", _hoisted_3, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_4, [\n        _createElementVNode(\"li\", _hoisted_5, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'comment-dots'],\n            onClick: memoOpen\n          }),\n          (memoModal.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _withDirectives(_createElementVNode(\"textarea\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((wbcMemo).value = $event))\n                }, null, 512), [\n                  [_vModelText, wbcMemo.value]\n                ]),\n                _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass({\r\n    'submitted': __props.selectItems.submitState === 'Submit',\r\n  })\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n        ], 2),\n        _createElementVNode(\"li\", { onClick: lisModalOpen }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n        ]),\n        _createElementVNode(\"li\", null, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (idx === 0)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_9, _hoisted_13))\n            : _createCommentVNode(\"\", true),\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 1,\n                class: \"nth1Child\",\n                onClick: ($event: any) => (goClass(item.id))\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.percent || '-'), 1)\n              ], 8, _hoisted_14))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_8))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb2\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                      _hoisted_22\n                    ], 8, _hoisted_21))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_20))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonRbcClassList.value, (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\"\n              }, [\n                _createElementVNode(\"ul\", _hoisted_24, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_25, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_26, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27, \".\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, [\n                    _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \" / \" + _toDisplayString(selectItemsSessionStorageData.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", _hoisted_29, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_30))\n                    : _createCommentVNode(\"\", true),\n                  _hoisted_31\n                ])\n              ], 512)), [\n                [_vShow, __props.selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n            _createElementVNode(\"button\", {\n              onClick: beforeChang,\n              class: _normalizeClass({isBeforeClicked:isBefore.value})\n            }, \"Before\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (afterChang(clonedWbcInfoStore.value))),\n              class: _normalizeClass({isBeforeClicked:!isBefore.value})\n            }, \"After\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img v-if=\"type !== 'report'\"\r\n       :src=\"barcodeImg\"/>\r\n  <div class=\"mt2 mb2\">\r\n    <h3 class=\"wbcClassInfoLeft\">\r\n      {{ wbcClassTileChange() }}\r\n    </h3>\r\n    <ul class=\"leftWbcInfo\">\r\n      <li style=\"position: relative\">\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button @click=\"memoChange\">ok</button>\r\n          <button @click=\"memoCancel\">cancel</button>\r\n        </div>\r\n      </li>\r\n      <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems.submitState === 'Submit',\r\n  }\">\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n      </li>\r\n      <li @click=\"lisModalOpen\">\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n      </li>\r\n      <li>\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\"/>\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul class=\"nth1Child classAttribute\" v-if=\"idx === 0\">\r\n        <li>Class</li>\r\n        <li>Count</li>\r\n        <li>%</li>\r\n      </ul>\r\n      <ul class=\"nth1Child\" v-if=\"shouldRenderCategory(item.title)\" @click=\"goClass(item.id)\">\r\n        <li>{{ item?.name }}</li>\r\n        <li>{{ item?.count }}</li>\r\n        <li> {{ item?.percent || '-' }}</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"categories classTotal\">\r\n      <ul class=\"categoryNm\">\r\n        <li>\r\n          Total\r\n        </li>\r\n      </ul>\r\n      <ul class=\"classNm\">\r\n        <li>\r\n          {{ totalCount || 0 }}\r\n        </li>\r\n      </ul>\r\n      <ul class=\"degree\">\r\n        <li>\r\n          100.00\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb2\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li>{{ item?.count }}</li>\r\n          <li> -</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in nonRbcClassList\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n          <ul class=\"categoryNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n            <li>{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul class=\"classNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">.</li>\r\n            <li>\r\n              {{ nWbcItem?.count }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ selectItemsSessionStorageData?.wbcInfo?.maxWbcCount }} WBC</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li>-</li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">\r\n      <button @click=\"beforeChang\" :class={isBeforeClicked:isBefore}>Before</button>\r\n      <button @click=\"afterChang(clonedWbcInfoStore)\" :class={isBeforeClicked:!isBefore}>After</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceBarCode = computed(() => store.state.commonModule.deviceBarcode);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  store.dispatch('commonModule/setCommonInfo', {classInfoSort: wbcInfoChangeVal.value});\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.testcd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.testCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.testCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.testCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.testCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.testCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          testCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.testCd !== null && wbcItem.testCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.testCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceBarCode.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceBarCode.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      lisFilePathSetArr.value = data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n\r\n\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfoChangeVal.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderText = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"reportDiv\" }\nconst _hoisted_2 = { class: \"wbcDiv\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"rbcDiv\"\n}\nconst _hoisted_4 = { class: \"reportDetail\" }\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"[Hospital]\", -1)\nconst _hoisted_7 = { class: \"reportDivTop\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_10 = { class: \"reportTable\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Slot ID\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered date\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed by ID\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed date\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient ID\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered Classification\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Birth\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gender\", -1)\nconst _hoisted_20 = { class: \"reportDivBottom\" }\nconst _hoisted_21 = { class: \"wbcLeft\" }\nconst _hoisted_22 = { class: \"reportH3 mb1 pl0\" }\nconst _hoisted_23 = { class: \"tableClass\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"%\")\n  ])\n], -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"td\", null, \"total\", -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"td\", null, \"100.00\", -1)\nconst _hoisted_28 = {\n  key: 0,\n  class: \"reportH3 mb1 pl0\"\n}\nconst _hoisted_29 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_31 = { key: 0 }\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"td\", null, \"-\", -1)\nconst _hoisted_33 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"reportH3 mb1 pl0\" }, \"RBC classification result\", -1)\nconst _hoisted_35 = { class: \"categoryNm\" }\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_37 = { class: \"classNm\" }\nconst _hoisted_38 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_39 = { class: \"degree\" }\nconst _hoisted_40 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_41 = { key: 0 }\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n    }, [\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode(WbcClass, {\n            wbcInfo: wbcInfo.value,\n            selectItems: selectItems.value,\n            type: \"report\"\n          }, null, 8, [\"wbcInfo\", \"selectItems\"])\n        ]),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              _createVNode(RbcClass, {\n                rbcInfo: rbcInfo.value,\n                selectItems: selectItems.value,\n                type: \"report\"\n              }, null, 8, [\"rbcInfo\", \"selectItems\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _hoisted_6,\n            _createTextVNode(),\n            _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'print'],\n              onClick: printStart,\n              class: \"printStart\"\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD PB system\"))\n              : _createCommentVNode(\"\", true),\n            (projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_9, \"Analysis Report from UIMD BM system\"))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"table\", _hoisted_10, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_11,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_12,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_13,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_14,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_16,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_17,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_18,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_19,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"h3\", _hoisted_22, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n              _createElementVNode(\"table\", _hoisted_23, [\n                _hoisted_24,\n                _hoisted_25,\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcArr.value, (item) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: item.id,\n                      class: \"wbcClassDbDiv\"\n                    }, [\n                      (shouldRenderCategory(item.title))\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.percent || '-'), 1)\n                          ], 64))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", null, [\n                    _hoisted_26,\n                    _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                    _hoisted_27\n                  ])\n                ])\n              ]),\n              (!selectItems.value?.wbcInfo?.nonRbcClassList)\n                ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_28, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              (!projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"table\", _hoisted_29, [\n                    _hoisted_30,\n                    _createElementVNode(\"tbody\", null, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectItems.value?.wbcInfo?.nonRbcClassList, (nWbcItem, outerIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                          _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                          _createElementVNode(\"td\", null, [\n                            _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                            (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _hoisted_32\n                        ], 512)), [\n                          [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                        ])\n                      }), 128))\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                  _hoisted_34,\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfo.value], (classList, outerIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: innerIndex,\n                          class: \"categories\"\n                        }, [\n                          _createElementVNode(\"ul\", _hoisted_35, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_36, \"Category\"))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"li\", null, _toDisplayString(category?.categoryNm), 1)\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_37, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_38, \"Class\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                            }), 128))\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_39, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_40, \"Degree\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                (classInfo.classId !== '01' || category.categoryId === '05')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_41, _toDisplayString(classInfo?.degree), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128))\n                          ])\n                        ]))\n                      }), 128))\n                    ], 64))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ])\n    ], 2),\n    (printOnOff.value)\n      ? (_openBlock(), _createBlock(Print, {\n          key: 0,\n          selectItems: selectItems.value,\n          ref_key: \"printContent\",\n          ref: printContent,\n          printOnOff: printOnOff.value,\n          selectItemWbc: _unref(selectItemWbc),\n          onPrintClose: printClose\n        }, null, 8, [\"selectItems\", \"printOnOff\", \"selectItemWbc\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\">\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div class=\"reportDiv\">\r\n      <div class=\"wbcDiv\">\r\n        <WbcClass :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"rbcDiv\" v-if=\"!projectBm\">\r\n        <RbcClass :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"reportDetail\">\r\n        <div class=\"reportTitle\">\r\n          <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n          <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n        </div>\r\n        <div class=\"reportDivTop\">\r\n          <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n          <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n          <table class=\"reportTable\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Slot ID</th>\r\n              <td>{{ selectItems?.slotId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered date</th>\r\n              <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed by ID</th>\r\n              <td>{{ selectItems?.submitUserId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed date</th>\r\n              <td>{{ selectItems?.submitOfDate }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Patient ID</th>\r\n              <td>{{ selectItems?.patientId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered Classification</th>\r\n              <td>{{ getTestTypeText(selectItems?.testType) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{{ selectItems?.patientName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Birth</th>\r\n              <td>{{ selectItems?.birthDay }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Gender</th>\r\n              <td>{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"reportDivBottom\">\r\n          <div class=\"wbcLeft\">\r\n            <h3 class=\"reportH3 mb1 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n            <table class=\"tableClass\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th>Class</th>\r\n                <th>Count</th>\r\n                <th>%</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item) in wbcArr\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                <template v-if=\"shouldRenderCategory(item.title)\">\r\n                  <td>{{ item?.name }}</td>\r\n                  <td>{{ item?.count }}</td>\r\n                  <td> {{ item?.percent || '-' }}</td>\r\n                </template>\r\n              </tr>\r\n              <tr>\r\n                <td>total</td>\r\n                <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                <td>100.00</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList\" class=\"reportH3 mb1 pl0\">non-WBC</h3>\r\n            <table class=\"tableClass\" v-if=\"!projectBm\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <tbody>\r\n              <template v-for=\"(nWbcItem, outerIndex) in selectItems?.wbcInfo?.nonRbcClassList\" :key=\"outerIndex\">\r\n                <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                  <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                  <td>\r\n                    {{ nWbcItem?.count }}\r\n                    <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                        selectItems?.wbcInfo?.maxWbcCount\r\n                      }} WBC</span>\r\n                  </td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </template>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div class=\"rbcRight\" v-if=\"!projectBm\">\r\n            <h3 class=\"reportH3 mb1 pl0\">RBC classification result</h3>\r\n            <template v-for=\"(classList, outerIndex) in [rbcInfo]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <div class=\"categories\">\r\n                  <ul class=\"categoryNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n                    <li>{{ category?.categoryNm }}</li>\r\n                  </ul>\r\n                  <ul class=\"classNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>{{ classInfo?.classNm }}</li>\r\n                    </template>\r\n                  </ul>\r\n                  <ul class=\"degree\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                        {{ classInfo?.degree }}\r\n                      </li>\r\n                    </template>\r\n                  </ul>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"selectItems\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"topClintInfo\" }\nconst _hoisted_4 = { class: \"sizeContainer\" }\nconst _hoisted_5 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_6 = { class: \"imgSet\" }\nconst _hoisted_7 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"onDrop\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"cellImgBox\"\n}\nconst _hoisted_11 = { class: \"mt1\" }\nconst _hoisted_12 = [\"onInput\", \"checked\"]\nconst _hoisted_13 = [\"onDrop\"]\nconst _hoisted_14 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_15 = { style: {\"position\":\"relative\"} }\nconst _hoisted_16 = { class: \"titleImg\" }\nconst _hoisted_17 = { class: \"fileTitle\" }\nconst _hoisted_18 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"select\", null, [\n  /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n], -1)\nconst _hoisted_21 = { class: \"mt1\" }\nconst _hoisted_22 = [\"checked\"]\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"select\", null, [\n    /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n  ]),\n  /*#__PURE__*/_createElementVNode(\"div\")\n], -1)\nconst _hoisted_24 = [\"onClick\"]\nconst _hoisted_25 = { class: \"wbcModal\" }\nconst _hoisted_26 = { class: \"wbc-modal-content\" }\nconst _hoisted_27 = { class: \"wbcModalImageContent\" }\nconst _hoisted_28 = [\"src\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost, moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst pbiaRootPath = ref<any>(store.state.commonModule.pbiaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.pbiaRootPath;\r\n  pbiaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  // console.log('ssss')\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {className, abbreviation, customNum} = item;\r\n      const filePath = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: className,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcWbcHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.pbiaRootPath;\r\n  pbiaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${pbiaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => item.title === targetItem.title);\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images) {\r\n        if (item.images.length > 0) {\r\n          item.images.forEach((itemImg: any) => {\r\n            itemImg.title = item.title;\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        // console.log(wbcInfo.value[itemIndex])\r\n        // console.log(classInfoitem)\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.title === selectedImage.title);\r\n      const sourceFolder = type ? `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n\r\n      const sourceFolder = type ? `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.title === seItem.title);\r\n      const sourceFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === seItem.title);\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === seItem.title);\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse\n    }, null, 8, [\"isNext\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(ClassInfo, {\n          wbcInfo: wbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          onNextPage: nextPage,\n          onScrollEvent: scrollToElement,\n          onIsBefore: isBeforeDataSet\n        }, null, 8, [\"wbcInfo\", \"selectItems\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", {\n          class: \"imgMenuSetDiv\",\n          onMouseleave: hideSizeControl\n        }, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _createTextVNode(\" Cell Marking \")\n          ]),\n          _createElementVNode(\"button\", { onClick: excelDownload }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'file-csv'] }),\n            _createTextVNode(\" Excel \")\n          ]),\n          _createElementVNode(\"button\", { onMouseover: showSizeControl }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _createTextVNode(\" Size \")\n          ], 32),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createTextVNode(\" Size \" + _toDisplayString(imageSize.value) + \" \", 1),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'undo'],\n                onClick: imgSizeReset\n              }),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"80\",\n                max: \"300\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ])\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _createTextVNode(\" IMG Setting \")\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _createTextVNode(\" Brightness \" + _toDisplayString(imgBrightness.value) + \" \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"600\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb2\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _createTextVNode(\" RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ] \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: _cache[4] || (_cache[4] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: _cache[6] || (_cache[6] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: _cache[8] || (_cache[8] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          false\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: classCompare\n              }, \"Class Compare\"))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _createTextVNode(\" Rollback \")\n          ])\n        ], 32),\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"ul\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                key: item.id,\n                onClick: ($event: any) => (scrollToElement(item.id))\n              }, [\n                _createElementVNode(\"div\", {\n                  class: \"circle\",\n                  onDragover: _cache[9] || (_cache[9] = _withModifiers(($event: any) => (onDragOverCircle()), [\"prevent\"])),\n                  onDrop: ($event: any) => (onDropCircle(item))\n                }, [\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n                ], 40, _hoisted_9)\n              ], 8, _hoisted_8)), [\n                [_vShow, siteCd.value !== '0006' && item?.title !== 'SM']\n              ])\n            }), 128))\n          ]),\n          (!classCompareShow.value)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_10, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: item.id,\n                    ref_for: true,\n                    ref: setRef(item.id)\n                  }, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_11, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: ($event: any) => (allCheckChange($event,item.title)),\n                          checked: selectedTitle.value === item.title\n                        }, null, 40, _hoisted_12),\n                        _createTextVNode(\" \" + _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ]),\n                    _withDirectives(_createElementVNode(\"ul\", {\n                      class: _normalizeClass('wbcImgWrap ' + item?.title),\n                      onDragover: _cache[10] || (_cache[10] = _withModifiers(($event: any) => (onDragOver()), [\"prevent\"])),\n                      onDrop: ($event: any) => (onDrop(itemIndex))\n                    }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                          key: image.fileName,\n                          class: _normalizeClass({\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }),\n                          onClick: ($event: any) => (selectImage(itemIndex, imageIndex, item)),\n                          onDblclick: ($event: any) => (openModal(image, item)),\n                          onContextmenu: ($event: any) => (handleRightClick($event, image, item))\n                        }, [\n                          _createElementVNode(\"div\", _hoisted_15, [\n                            _withDirectives(_createElementVNode(\"div\", _hoisted_16, [\n                              _createElementVNode(\"div\", _hoisted_17, [\n                                _createTextVNode(_toDisplayString(replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                              ])\n                            ], 512), [\n                              [_vShow, replaceFileNamePrefix(image.fileName) !== item?.title]\n                            ]),\n                            _withDirectives(_createElementVNode(\"img\", {\n                              src: getImageUrl(image.fileName, item.id, item.title, ''),\n                              width: image.width ? image.width : '150px',\n                              height: image.height ? image.height : '150px',\n                              style: _normalizeStyle({ filter: image.filter }),\n                              onDragstart: ($event: any) => (onDragStart(itemIndex, imageIndex)),\n                              draggable: \"true\",\n                              class: \"cellImg\",\n                              ref_for: true,\n                              ref_key: \"cellRef\",\n                              ref: cellRef,\n                              onError: ($event: any) => (hideImage(item.id, image.fileName, item.title))\n                            }, null, 44, _hoisted_18), [\n                              [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                            ]),\n                            _createElementVNode(\"div\", {\n                              class: \"center-point\",\n                              style: _normalizeStyle(image.coordinates)\n                            }, null, 4)\n                          ])\n                        ], 42, _hoisted_14)), [\n                          [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                        ])\n                      }), 128))\n                    ], 42, _hoisted_13), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ])\n                  ]))\n                }), 128))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                _createElementVNode(\"div\", null, [\n                  _hoisted_20,\n                  _createElementVNode(\"div\", null, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_21, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: _cache[11] || (_cache[11] = ($event: any) => (allCheckChange($event,wbcInfo.value[0].title))),\n                          checked: selectedTitle.value === wbcInfo.value[0].title\n                        }, null, 40, _hoisted_22),\n                        _createTextVNode(\" \" + _toDisplayString(wbcInfo.value[0]?.title) + \" (\" + _toDisplayString(wbcInfo.value[0]?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, wbcInfo.value[0]?.count !== '0' && wbcInfo.value[0]?.count !== 0]\n                    ])\n                  ])\n                ]),\n                _hoisted_23\n              ]))\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(item.name), 9, _hoisted_24))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", _hoisted_25, [\n          _createElementVNode(\"div\", _hoisted_26, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_27, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\"\n              }, null, 12, _hoisted_28)\n            ]),\n            _createElementVNode(\"div\", { class: \"buttons\" }, [\n              _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n              _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n            ])\n          ])\n        ], 512), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>\r\n          {{ projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}\r\n        </li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\" @isBefore=\"isBeforeDataSet\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\" @mouseleave=\"hideSizeControl\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <button @click=\"excelDownload\">\r\n          <font-awesome-icon :icon=\"['fas', 'file-csv']\"/>\r\n          Excel\r\n        </button>\r\n        <!--size-->\r\n        <button @mouseover=\"showSizeControl\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            Size {{ imageSize }}\r\n            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"300\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <!--            <button class=\"resetBtn mb2\" @click=\"imgSizeReset\">Size Reset</button>-->\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness {{ imgBrightness }}\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"600\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb2\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button v-if=\"false\" @click=\"classCompare\">Class Compare</button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <ul class=\"wbcInfoDbUl\">\r\n          <template v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n            <li @click=\"scrollToElement(item.id)\" v-show=\"siteCd !== '0006' && item?.title !== 'SM'\">\r\n              <div class=\"circle\" @dragover.prevent=\"onDragOverCircle()\" @drop=\"onDropCircle(item)\">\r\n                <p>{{ item?.title }}</p>\r\n                <p>{{ item?.count }}</p>\r\n              </div>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n        <ul class=\"cellImgBox\" v-if=\"!classCompareShow\">\r\n          <li v-for=\"(item, itemIndex) in wbcInfo\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n            <div v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <p class=\"mt1\">\r\n                <input type=\"checkbox\" @input=\"allCheckChange($event,item.title)\"\r\n                       :checked=\"selectedTitle === item.title\">\r\n                {{ item?.title }}\r\n                ({{ item?.count }})</p>\r\n            </div>\r\n            <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver()\" @drop=\"onDrop(itemIndex)\"\r\n                v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <template v-for=\"(image, imageIndex) in item.images\" :key=\"image.fileName\">\r\n                <li\r\n                    :class=\"{\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }\"\r\n                    @click=\"selectImage(itemIndex, imageIndex, item)\"\r\n                    @dblclick=\"openModal(image, item)\"\r\n                    v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    @contextmenu=\"handleRightClick($event, image, item)\"\r\n                >\r\n                  <div style=\"position: relative;\">\r\n                    <div class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                      <div class=\"fileTitle\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                        <font-awesome-icon\r\n                            :icon=\"['fas', 'arrow-right']\"/>\r\n                        {{ image.title }}\r\n                      </div>\r\n                    </div>\r\n                    <img :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                         :width=\"image.width ? image.width : '150px'\"\r\n                         :height=\"image.height ? image.height : '150px'\"\r\n                         :style=\"{ filter: image.filter }\"\r\n                         @dragstart=\"onDragStart(itemIndex, imageIndex)\"\r\n                         draggable=\"true\"\r\n                         class=\"cellImg\"\r\n                         ref=\"cellRef\"\r\n                         @error=\"hideImage(item.id, image.fileName, item.title)\"\r\n                         v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    />\r\n                    <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <div v-else>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div>\r\n              <div v-show=\"wbcInfo[0]?.count !== '0' && wbcInfo[0]?.count !== 0\">\r\n                <p class=\"mt1\">\r\n                  <input type=\"checkbox\" @input=\"allCheckChange($event,wbcInfo[0].title)\"\r\n                         :checked=\"selectedTitle === wbcInfo[0].title\">\r\n                  {{ wbcInfo[0]?.title }}\r\n                  ({{ wbcInfo[0]?.count }})</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n        <div class=\"wbc-modal-content\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <button @click=\"zoomIn\">+</button>\r\n            <button @click=\"zoomOut\">-</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost, moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst pbiaRootPath = ref<any>(store.state.commonModule.pbiaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.pbiaRootPath;\r\n  pbiaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  // console.log('ssss')\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => item.title === a.title);\r\n    const nameB = basicWbcArr.findIndex((item: any) => item.title === b.title);\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {className, abbreviation, customNum} = item;\r\n      const filePath = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: className,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcWbcHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.pbiaRootPath;\r\n  pbiaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${pbiaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => item.title === targetItem.title);\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images) {\r\n        if (item.images.length > 0) {\r\n          item.images.forEach((itemImg: any) => {\r\n            itemImg.title = item.title;\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderText) - Number(b.orderText));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        // console.log(wbcInfo.value[itemIndex])\r\n        // console.log(classInfoitem)\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.title === selectedImage.title);\r\n      const sourceFolder = type ? `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n\r\n      const sourceFolder = type ? `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.title === seItem.title);\r\n      const sourceFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === seItem.title);\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === seItem.title);\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${pbiaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${pbiaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3f91249e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1))\nconst _hoisted_2 = { class: \"leftImgList\" }\nconst _hoisted_3 = { class: \"\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Partical Image\", -1))\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Zone\", -1))\nconst _hoisted_8 = [\"src\", \"onDblclick\"]\nconst _hoisted_9 = { class: \"\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal stitch\", -1))\nconst _hoisted_11 = [\"src\", \"onDblclick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Megakaryocyte\", -1))\nconst _hoisted_13 = [\"src\", \"onDblclick\"]\n\nimport {nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (buttonOfen.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"closeViewer\",\n          onClick: closeViewer\n        }, \"x\"))\n      : _createCommentVNode(\"\", true),\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'particle'),\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'particle')))\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _hoisted_7,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'idealZone'),\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealZone')))\n            }, null, 40, _hoisted_8)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"div\", null, [\n          _hoisted_10,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'idealStitch'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealStitch')))\n              }, null, 40, _hoisted_11)\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_12,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'mega'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'mega')))\n              }, null, 40, _hoisted_13)\n            ]))\n          }), 128))\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"closeViewer\" @click=\"closeViewer\" v-if=\"buttonOfen\">x</div>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <ul class=\"\">\r\n      <p>Partical Image</p>\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'particle')\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(getImageUrls(image, 'particle'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <p>Ideal Zone</p>\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" style=\"width:100px\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'idealZone')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealZone'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <div>\r\n        <p>Ideal stitch</p>\r\n        <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'idealStitch')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealStitch'))\">\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <p>Megakaryocyte</p>\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'mega')\" @dblclick=\"openInViewer(getImageUrls(image, 'mega'))\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv#viewerSmall {\r\n  position: fixed;\r\n  top: 0;\r\n  height: 100%!important;\r\n}\r\n.closeViewer {\r\n  position: absolute;\r\n  font-size: 3.9rem;\r\n  z-index: 999;\r\n  right: 25px;\r\n  top: 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./leftImgList.vue?vue&type=style&index=0&id=3f91249e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3f91249e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport {onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      console.log(imageHeight)\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('pbiaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  // console.log()\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"img\", {\n      src: hideImage.value,\n      ref_key: \"hideImageRef\",\n      ref: hideImageRef,\n      style: {\"display\":\"none\"},\n      onLoad: _cache[0] || (_cache[0] = ($event: any) => (onImageLoad(true)))\n    }, null, 40, _hoisted_1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        ref_key: \"tilingViewerLayer\",\n        ref: tilingViewerLayer,\n        id: \"tiling-viewer\"\n      }, null, 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" ></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {defineProps, onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst pbiaRootPath = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('pbiaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      console.log(imageHeight)\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('pbiaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  // console.log()\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-71d7a081\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          _createVNode(TilingViewer, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(LeftImgList, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.resize-overlay {\r\n  position: absolute;\r\n  border: 2px solid red;\r\n}\r\n\r\n.resize-handle {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: black;\r\n}\r\n\r\n.top-left {\r\n  top: -5px;\r\n  left: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n.top-right {\r\n  top: -5px;\r\n  right: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-left {\r\n  bottom: -5px;\r\n  left: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-right {\r\n  bottom: -5px;\r\n  right: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=71d7a081&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71d7a081\"]])\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport DatabaseWbc from '@/views/datebase/commponent/detail/wbc/listDetailWbc.vue';\r\nimport Report from  '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    // 페이지 이동 전에 setInterval 정리\r\n    // clearIntervalIfExists();\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n// 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const currentUser = store.state.userModule;\r\n\r\n    if ((to.name !== 'login' && to.name !== 'join') && (!getStoredUser.userId && !currentUser.userId)) {\r\n        // 로그인이 필요한 페이지에 접근하려고 할 때 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    } else {\r\n        // 그 외의 경우에는 계속 진행\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"borderLine\" }, [\n  /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    class: \"headerLogo\"\n  })\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1)\nconst _hoisted_6 = { class: \"small-icon-menu\" }\nconst _hoisted_7 = { class: \"lastMenu\" }\nconst _hoisted_8 = { class: \"lastLiM\" }\nconst _hoisted_9 = { class: \"iconHeaderMenu\" }\nconst _hoisted_10 = { class: \"alarm\" }\nconst _hoisted_11 = [\"title\"]\nconst _hoisted_12 = [\"title\"]\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\nconst _hoisted_14 = { class: \"immersionOilContainer\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Immersion Oil count Reset\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)\nconst _hoisted_17 = { class: \"smallTitle\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)\nconst _hoisted_19 = {\n  class: \"border ml-5\",\n  style: {\"width\":\"80px\"}\n}\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Prime Immersion Oil\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Prime oil to remove air from the oil hose\", -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)\n\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n// const viewerCheckData = 'main';\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {pbiaRootPath: String(data?.pbiaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _hoisted_2,\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_3\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheckData.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _hoisted_4\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_8, [\n                      _createElementVNode(\"div\", {\n                        class: \"userBox\",\n                        onClick: logOutBoxOn\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: logout\n                      }, \" LOG OUT \")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", _hoisted_10, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking': isAlarm.value })\n                      }, null, 8, [\"class\"])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open']\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount\",\n                      onClick: openLayer,\n                      title: 'oilCount: ' + (oilCountData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'droplet'] })\n                    ], 8, _hoisted_11),\n                    _createElementVNode(\"li\", {\n                      class: \"storage\",\n                      title: 'storage: ' + (storagePercentData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'database'] })\n                    ], 8, _hoisted_12)\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (visible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_13\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _hoisted_15,\n              _hoisted_16,\n              _createElementVNode(\"div\", _hoisted_17, [\n                _hoisted_18,\n                _createElementVNode(\"div\", _hoisted_19, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"RESET\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"mt2\" }, [\n              _hoisted_20,\n              _hoisted_21,\n              _createElementVNode(\"div\", null, [\n                _hoisted_22,\n                _createElementVNode(\"button\", {\n                  onClick: onPrime,\n                  class: \"alertButton\"\n                }, \"PRIME\")\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav> \r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"@/assets/celli.png\" class=\"headerLogo\"/>\r\n        </div>\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/\" v-if=\"viewerCheckData === 'main'\"\r\n                     :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/dataBase\" :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div class=\"userBox\" @click='logOutBoxOn'>\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/> {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <div class='logOutBox' @click='logout'>\r\n                  LOG OUT\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n          <ul>\r\n            <li class=\"alarm\">\r\n              <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking': isAlarm }\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n              <font-awesome-icon v-else :icon=\"['fas', 'door-open']\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n            </li>\r\n            <li class=\"oliCount\" @click=\"openLayer\" :title=\"'oilCount: ' + (oilCountData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'droplet']\"/>\r\n            </li>\r\n            <li class=\"storage\" :title=\"'storage: ' + (storagePercentData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'database']\" />  \r\n            </li>\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle\">Immersion Oil count Reset</h5>\r\n        <span class=\"colorGray\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"smallTitle\">\r\n          <span>Estimated number of slides left</span>\r\n          <div class=\"border ml-5\" style=\"width: 80px;\">{{ oilCount }}</div>\r\n        </div>\r\n\r\n        <div>\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">RESET</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt2'>\r\n        <h5 class=\"modalTitle\">Prime Immersion Oil</h5>\r\n        <span class=\"colorGray\">Prime oil to remove air from the oil hose</span>\r\n        <div>\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button @click='onPrime' class=\"alertButton\">PRIME</button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n// const viewerCheckData = 'main';\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {pbiaRootPath: String(data?.pbiaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    pbiaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceBarcode: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setPbiaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceBarcode: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        pbiaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceBarcode: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsAlarm(state: CommonState, value: boolean): void {\r\n            state.isAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setPbiaRootPath(state: CommonState, value: string): void {\r\n            state.pbiaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceBarcode(state: CommonState, value: string): void {\r\n            state.deviceBarcode = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isAlarm')) {\r\n                commit('setIsAlarm', payload.isAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('pbiaRootPath')) {\r\n                commit('setPbiaRootPath', payload.pbiaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceBarcode')) {\r\n                commit('setDeviceBarcode', payload.deviceBarcode);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {rbcClassificationModule} from '@/store/modules/analysis/rbcClassification';\r\nimport {wbcClassificationModule} from '@/store/modules/analysis/wbcclassification';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport { embeddedStatusModule } from '@/store/modules/embeddedStatusModule';\r\nimport { orderListModule } from '@/store/modules/analysis/orderListModule';\r\nimport { runningInfoModule } from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\n// import createPersistedState from 'vuex-persistedstate';\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        // rbcClassificationModule,\r\n        // wbcClassificationModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import store from '@/store/index';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any) => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceBarcode: data.deviceBarcode\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n    }else {\r\n        alert(data?.resultMsg);\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'class': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            console.log(`SET [NE] Abnormal : ${wbcItem.title}`);\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.class.push(`[NE] : [${percent.toFixed(2)}]%`);\r\n                        } else {\r\n                            console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                // console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${wbcItem.count}]Count`);\r\n                            } else {\r\n                                // console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n\r\n                            if (percent < range.min || percent > range.max) {\r\n                                console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${percent.toFixed(2)}]%`);\r\n                            } else {\r\n                                console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getUserIp(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getUserIp = async (ip: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.MAIN_API\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceBarCode: parseDataWarp.deviceBarcode\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          console.log('?D')\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {pbiaRootPath: String(data?.pbiaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value\n      }, null, 8, [\"parsedData\", \"isClass\", \"startStatus\", \"pb100aCassette\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.pbiaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getUserIp(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getUserIp = async (ip: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.MAIN_API\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceBarCode: parseDataWarp.deviceBarcode\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          console.log('?D')\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('pbiaRootPath', data?.pbiaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {pbiaRootPath: String(data?.pbiaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=14612de7&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n// 소켓 인스턴스를 보유할 앱 컨텍스트의 속성을 생성합니다.\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n    }\r\n}\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, { transports: ['websocket'], withCredentials: true });\r\n\r\n        app.config.globalProperties.$socket = socket;\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\n\r\n/// <reference path=\"../types/webapi.d.ts\" />\r\n\r\n\r\nlibrary.add(fas);\r\nconst app = createApp(App);\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\napp.mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7773); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","commonCodeList","grpCd","grpNm","cd","cdNm","testType","value","text","bmTestType","getCommonCode","foundCode","find","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","pbiaRootPath","slotId","barcodeDirName","baseUrl","window","APP_API_BASE_URL","_hoisted_1","_createElementVNode","class","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_toDisplayString","wbcCount","__exports__","analysisOptions","wbcCountOptions","bmCountOptions","stitchCountOptions","slideCard","input","slotNo","slotState","output","slideCard100a","messages","Logout","GET_POSITION_LIST","GET_LOGIN_HISTORY","SET_USER","IS_REGIST_USER","UPDATE_LOGIN_DTTM","UPDATE_USER_AVAILABLE","GET_WBC_CLASS_LIST","GET_WBC_CLASS_LIST_ALL","GET_WBC_TOTAL_COUNT","UPDATE_WBC_COUNT","GET_WBC_COUNT","GET_TEST_TYPE","GET_MODIFIED_TEST_TYPE","GET_STITCH_COUNT","GET_RBC_COUNT","GET_RBC_COUNT_HIST","GET_RBC_COUNT_SKMC","UPDATE_DEGREE","INIT_WBC_COUNT","INIT_RBC_DEGREE","GET_WBC_INFO","SET_WBC_IMAGE_HIST","GET_WBC_IMAGE_HIST","INIT_WBC_IMAGE_HIST","INSERT_WBC_CLASSIFICATION","SET_WBC_CUSTOM_LIST","UPDATE_HOT_KEYS","UPDATE_BF_HOT_KEYS","UPDATE_ORDER","UPDATE_ORDER_BF","UPDATE_IMAGE_HIST","SET_CURRENT_WBC_RESULTS","GET_CURRENT_WBC_RESULTS","SET_BEFORE_WBC_RESULTS","GET_BEFORE_WBC_RESULTS","GET_WBC_MODIFY_LIST","GET_WBC_MODIFY_LIST_ALL","GET_BF_MODIFY_LIST","GET_RBC_CLASS_LIST","GET_MALARIA_COUNT","UPDATE_MALARIA_COUNT","SET_CURRENT_RBC_RESULTS","GET_CURRENT_RBC_RESULTS","SET_CLASSIFICATION","GET_CLASSIFICATION_ITEM","SET_CLASSIFICATION_ITEM","UPDATE_RBC_CLASSIFICATION","UPDATE_RBC_CLASSIFICATION_SKMC","INSERT_WBC_SUCCESS","SELECT_RBC_DEGREE","UPDATE_RBC_DEGREE","SET_TEST_LIST","GET_TEST_LIST","GET_TEST_RESULT","GET_RBC_FIELDS","GET_WBC_FIELDS","GET_RBC_ITEMS","GET_WBC_ITEMS","INIT_OIL_COUNT","UPDATE_RESULT","UPDATE_RUNNING_STATE","GET_ORDER_LIST","SET_ORDER_LIST","UPDATE_ORDER_LIST","INIT_ORDER_LIST","GET_TEST_RESULT_ALL","GET_SEARCH_OPTIONS","UPDATE_SEARCH_OPTIONS","SET_TEST_HISTORY","GET_TEST_HISTORY_LIST","ALL_TEST_HISTORY_LIST","SEARCH_TEST_HISTORY_LIST","UPDATE_TEST_HISTORY","GET_TEST_HISTORY","DELETE_TEST_HISTORY","UPDATE_SIGNED_STATE","UPDATE_TEST_HISTORY_WBC_INFO","GET_RBC_COMMENT","GET_WBC_COMMENT","GET_RUNNING_INTERVAL_ID","SET_RUNNING_INTERVAL_ID","UPDATE_TIMER","GET_TIMER","SET_TIMER","SET_WORKING_INTERVAL_ID","GET_WORKING_INTERVAL_ID","GET_RUNNING_STATE","SET_SLIDE_TIMER","UPDATE_SLIDE_TIMER","GET_SLIDE_TIME_COUNT","SET_USER_STOP","GET_USER_STOP","SET_WBC_CELL_POSITION","GET_WBC_CELL_POSITION","GET_TEST_HISTORY_PREV","GET_TEST_HISTORY_NEXT","SET_IS_RECOVERY_RUN","GET_IS_RECOVERY_RUN","SET_WORK_LIST","GET_WORK_LIST","INIT_WORK_LIST","DELETE_WORK_LIST","UPDATE_WORK_LIST","UPDATE_WORK_LIST_BM","UPDATE_SIGNED_WORK_LIST","UPDATE_RBC_COMMENT","UPDATE_WBC_COMMENT","UPDATE_BM_COMMENT","UPDATE_SELECT_ORDER_ID","GET_SELECT_ORDER_ID","ADD_WORK_LIST","GET_TEST_BARCODES","ADD_DSP_LIST","GET_DSP_LIST","SET_LIS_HOT_KEY","UPDATE_NEW_TEST_SET","UPDATE_EXEC_TEST_TYPE","INITIALIZE_MOUNT_CNT","UPDATE_MOUNT_CNT","GET_CURRENT_USER","GET_SETTINGS","UPDATE_RUNNING_PATH","UPDATE_RESULT_PATH_WBC","UPDATE_RESULT_PATH_RBC","UPDATE_BARCODE_PATH","GET_SYSTEM_TIME_ID","SET_SYSTEM_TIME_ID","GET_USER","UPDATE_REMEMBER_STATE","SET_CURRENT_USER","UPDATE_ROOT_PATH","GET_FILE_FILTER","GET_USER_LIST","UPDATE_ANALYSIS_TYPE","UPDATE_TEST_TYPE","UPDATE_RUNNING_MODE","UPDATE_USER","DELETE_USER","UPDATE_MARKER_STATE","GET_MARKER_STATE","SET_PAUSE_STATE","GET_PAUSE_STATE","GET_BF_WHOLE_SLIDE_PATH","GET_BF_WBC_CLASS_LIST","GET_SIZE_SLIDE_VALUE","UPDATE_LIS_CODE","SELECT_LIS_CODE","SELECT_LIS_CODE_RBC","UPDATE_CBC_CODE","SELECT_CBC_CODE","UPDATE_LIS_CONN_PATH","SELECT_LIS_CONN_PATH","GET_BACKUP_LIST","RESTORE_BACKUP_DATA","DELETE_BACKUP_DATA","RESET_RBC_DEGREE","GET_DEFAULT_RBC_DEGREE","UPDATE_CHECKED_CELL","SET_LOCK_SLIDE","SET_HOST_IP","GET_HOST_IP","GET_NORMAL_RANGE","UPDATE_NORMAL_RANGE","GET_LOCK_STATE","GET_KUMC_CBC_PATH","SET_WBC_NORMAL_RANGE","GET_WBC_NORMAL_RANGE","GET_SKMC_RESULT_CD","SET_SKMC_RESULT_CD","REMOVE_SKMC_RESULT_CD","GET_SKMC_REMARK","SET_SKMC_REMARK","REMOVE_SKMC_REMARK","SET_SKMC_FAVORITE","GET_SKMC_FAVORITE","GET_SKMC_LIS_RESULTS","SET_SKMC_LIS_RESULTS","SET_ALARM_COUNT","SET_SORT_TYPE","GET_SORT_TYPE","SET_CUSTOM_CLASS","GET_CUSTOM_CLASS","SET_SYS_INFO","GET_SYS_INFO","SET_BACKEND_DATA","GET_BACKEND_DATA","SELECT_CBC_CODE_INHA","SELECT_LIS_CODE_INHA","SELECT_LIS_CODE_RBC_INHA","SELECT_LIS_CONN_PATH_INHA","GET_RBC_COUNT_INHA","SELECT_WBC_RUNNING_COUNT","GET_BRIGHTNESS_SLIDE_VALUE","GET_RED_VALUE","GET_GREEN_VALUE","GET_BLUE_VALUE","GET_RGB_VALUE","SET_SIZE_SLIDE_VALUE","SET_BRIGHTNESS_SLIDE_VALUE","SET_RED_VALUE","SET_GREEN_VALUE","SET_BLUE_VALUE","SET_RGB_VALUE","SET_ROLLBACK_LIST","GET_ROLLBACK_LIST","GET_IMAGE_ROLLBACK_LIST","SET_CLONED_WBC_INFO","GET_RBC_BRIGHTNESS_SLIDE_VALUE","GET_RBC_RED_VALUE","GET_RBC_GREEN_VALUE","GET_RBC_BLUE_VALUE","SET_RBC_BRIGHTNESS_SLIDE_VALUE","SET_RBC_RED_VALUE","SET_RBC_GREEN_VALUE","SET_RBC_BLUE_VALUE","SET_CLONED_RBC_INFO","UPDATE_OIL_COUNT","SET_RESULT_LIST","CLEAR_RESULT_LIST","GET_RESULT_LIST","SET_WBC_REPORT_PRINT","GET_WBC_REPORT_PRINT","SET_RBC_REPORT_PRINT","GET_RBC_REPORT_PRINT","SET_RBC_SIZE","GET_RBC_SIZE","SET_RBC_CHROMIA","GET_RBC_CHROMIA","SET_RBC_SHAPE","GET_RBC_SHAPE","PUSH_RBC_SHAPE","POP_RBC_SHAPE","SET_RBC_PLATELET","GET_RBC_PLATELET","PUSH_RBC_PLATELET","POP_RBC_PLATELET","SET_RBC_INCLUSION","GET_RBC_INCLUSION","POP_RBC_INCLUSION","PUSH_RBC_INCLUSION","SET_IS_SHOW_MODAL_BARCODE","GET_IS_SHOW_MODAL_BARCODE","SET_IS_NS_NB_INTEGRATION","GET_IS_NS_NB_INTEGRATION","SET_IS_ALARM","GET_IS_ALARM","SET_IS_CBC_SHOW","GET_IS_CBC_SHOW","SET_SITE_CD","GET_SITE_CD","SET_DEVICE_BARCODE","GET_DEVICE_BARCODE","SELECT_BF_HOT_KEY","SELECT_WBC_HOT_KEY","SELECT_WBC_CUSTOM_CLASS","SELECT_EMP_NO","INSERT_WBC_MODIFY_HIST","GET_WBC_MODIFY_HIST","UPDATE_WBC_HIST_LIST","GET_WBC_HIST_LIST","GET_COMMON_CODE_LIST","GET_COMMON_CODE","GET_CODE_LIST_USER_POSITION","GET_CODE_LIST_USER_AUTHORIZATION","GET_CODE_LIST_USER_CASSETE_STATE","GET_CODE_LIST_PROCESSING_STATE","GET_CODE_LIST_ANALYSIS_TYPE","GET_CODE_LIST_CELL_COUNT","GET_CODE_LIST_GENERAL_STAIN","GET_CODE_LIST_SPECIAL_STAIN","GET_CODE_LIST_IMMUNO_STAIN","GET_CODE_LIST_SAMPLING_STAIN","GET_CODE_LIST_GENDER","GET_CODE_LIST_TEST_TYPE","GET_CODE_SIGNED_STATE","GET_CODE_LOG_TYPE","GET_CODE_SLOT_STATE","EVENT_TYPE_USER","EVENT_TYPE_SYSTEM","SET_EVENT_LOG","GET_EVENT_LOG","REMOVE_EVENT_LOG","REMEMBER_PWD_KEY","REMEMBER_PWD_IV","RECEIVE_DATA_BROADCAST_CHAN","GET_PB_CLASSIFICATIONS","GET_CLASSIFICATION_IMAGES","GET_MARKER_POSITION","GET_PB_HOT_KEYS","UPDATE_CLASSIFICATION","PB_IA_MOVE_IMAGE","SET_WBC_IMAGE_LIST","GET_PB_WBC_IMAGES","SET_SELECTED_ITEM","GET_SELECTED_ITEM","IA_SET_CUSTOM_CLASS","IA_GET_CUSTOM_CLASS","IDS_MSG_SUCCESS","IDS_MSG_FAILED","IDS_MSG_OIL_REMAIN_COUNTER","IDS_MSG_POWEROFF","IDS_MSG_INITALIZE","IDS_MSG_SIGNING_COMPLETE","IDS_MSG_DELETE_THE_SELECTED_ITEMS","IDS_MSG_ACCOUNT_CHANGED","IDS_MSG_DELETE_ACCOUNT","IDS_MSG_LOGOUT","IDS_MSG_DUPLICATE_KEY","IDS_MSG_HOTKEY_IN_ENGLISH","IDS_ERROR_CHECK_ID","IDS_ERROR_CHECK_PASSWORD","IDS_ERROR_NOT_MATCHED_PASSWORD","IDS_ERROR_SIGINUP","IDS_ERROR_SIGINUP_ALREADY_ID","IDS_ERROR_LOGIN_ERROR","IDS_ERROR_LOGIN_ID","IDS_ERROR_ALREADY_RUNNING","IDS_ERROR_STOP_PROCESS","IDS_ERROR_INIT_ERROR","IDS_ERROR_CHECK_REQUIRED_FIELDS","IDS_ERROR_CHECK_SLOT_NO","IDS_ERROR_FAVORITE_MAX_REGIST","IDS_ERROR_FAVORITE_MAX_REGIST2","IDS_ERROR_ENTER_YOUR_ORDER_DETAILS","IDS_ERROR_SELECT_A_TARGET_ITEM","IDS_ERROR_PLEASE_SELECT_AN_IMAGE","IDS_ERROR_ALREADY_ADDED","IDS_ERROR_ADD_A_WORKLIST","IDS_ERROR_NO_TEST_RESULTS","IDS_ERROR_FILE_CLISSIFICATION","IDS_ERROR_ENTER_CLASS_INFO","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","IDS_DOWNLOAD_COMPLETE","IDS_SELECT_SLIDE","IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED","IDS_RECOVER_GRIPPER_CONDITION","IDS_PLEASE_ENTER_END_DATE","IDS_PLEASE_ENTER_START_DATE","IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS","IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE","IDS_RESTART_SYSTEM","IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER","IDS_BARCODE_REGISTRATION_SUCCESSFUL","IDS_THIS_IS_A_DUPLICATION_ABBREVIATION","IDS_THIS_CARD_HAS_ALREADY_BEEN_USED","IDS_MSG_UPLOAD_LIS","IDS_MSG_SUBMIT_SLIDE","IDS_MSG_CONFIRM_SLIDE","IDS_PLEASE_SELECT_A_CLASS","IDS_PLEASE_SELECT_A_BACKUP_DATE","IDS_PLEASE_SELECT_A_BACKUP_PATH","IDS_PLEASE_SELECT_A_BACKUP_FILE","IDS_NO_DATA_FOUND","IDS_MSG_DATA_BACKUP","IDS_MSG_DATA_RESTORE","IDS_MSG_SIZE_CHROMIA_LINKED_LIS","UPDATE_SUCCESSFULLY","TCP_DiSCONNECTED","alreadyInitialized","getDateTimeStr","now","moment","formattedTime","format","formatDateString","dateString","momentObj","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","useHttpClient","apiBaseUrl","httpGet","url","parameters","type","httpGetAct","endpoint","options","headers","axios","defaults","withCredentials","slush","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","auth","refresh","requiresToken","processInfo","list","rbcclassification","wbcclassification","user","register","login","userCheck","userIp","getUsers","userDataPut","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","pageUpDown","updatePcIpState","clearPcIpState","folder","folders","classOrder","images","move","moveClassImage","jsonReader","jsonCreate","pdf","filesystem","readGet","createDirectory","fileCreate","fileTxtRead","H7Read","H7Message","Hl7Create","device","getDeviceInfo","backUp","backUpDate","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","forEach","unsubscribe","filter","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","PositionMarginList","WbcPositionMarginList","cbcList","testCd","testNm","isSelected","rbcClassList","categoryId","categoryNm","classInfo","classId","classNm","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","title","name","count","percent","key","order","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","lisCodeRbcOption","minRunCount","minGpCount","minPaCount","wbcRunningCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","barcodeImgDir","dirName","howellJollyDirName","malariaDirName","noMalariaDirName","rbcClassDirName","rbcImageDirName","wbcClassDirName","bfDirName","bfHighDirName","bfClassDirName","userModuleDataGet","userModule","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","newUserId","oldUserId","initDataExecut","nextTick","initData","loginSetData","dispatch","newRunInfo","newVals","newIsRunningState","newBfSelectFiles","newEmbeddedStatusJobCmd","newExecuteState","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","emitSocketData","toggleStartStop","action","showSuccessAlert","confirm","rbcPositionMargin","sessionStorage","getItem","assign","console","log","InfoData","startEmbedded","message","sendInit","newObj","runInfoObj","result","cellAnalyzingCount","pbAnalysisType2","bfAnalysisType","_component_font_awesome_icon","_resolveComponent","_Fragment","_withDirectives","$event","disabled","_renderList","_vModelSelect","_createVNode","icon","_normalizeClass","onClick","_unref","style","_createBlock","Alert","onHide","_createCommentVNode","width","height","runningInfoModule","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","Number","percentage","setInterval","item","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","cx","cy","r","stroke","fill","colspan","dspOrderList","pb100aCassette","startStatus","existingItemIndex","findIndex","slot","basicWbcArr","basicBmClassList","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","storeEm","dspWbcClassList","dspBfClassList","nonWbcClassList","totalCount","emits","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","allCountsAreZero","flat","nonRbcWbcInfoArray","includes","updateCounts","iCasStatArr","lastIndexOf","nonRbcClassList","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","formattedPercent","getCategoryName","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","category_id","class_id","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","imageUrls","folderPath","match","fileName","imageUrl","unshift","accumulatedRunningPath","runningPath","pathItem","isDuplicate","image","existingImage","_Transition","mode","default","_withCtx","alt","_","iCasExist","oCasExist","casExistChangeText","val","pbVersion","PB_VERSION","rbcUpdate","classInfoUpdate","Execute","ProcessInfo","orderList","_vShow","isClass","workingView","WorkingView100A","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","getAllUsersApi","putUserDataApi","getUserIpApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","router","createAccount","currentDate","Date","subscriptionDate","pcIp","_vModelText","saveHttpType","orderHttpType","normalItems","rbcClassListArr","reactive","defaultCellImgData","testTypeCd","pbAnalysisType","isAlarm","alarmCount","keepPage","backupPath","backupStartDate","backupEndDate","firstCellImgSet","cellImgData","cellImgSet","toISOString","split","firstSaveOrderClass","userName","orderText","firstSaveNormalRange","normalRangeItems","firstCreateRbcDegreeData","combindDegree","rbcDegreeList","classItem","category_nm","class_nm","error","defaultDegree","defaultItem","isAutoLoginEnabled","isAutoLogginable","getStoredUser","localStorage","loginUser","goJoinPage","getUserIp","viewerCheck","updateAccount","document","documentElement","requestFullscreen","resFlag","placeholder","rowspan","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","analysisVal","backupRootPath","local","toDate","drive","backupDrive","cellimgId","createBackup","backupDto","startDate","add","endDate","sourceFolderPath","res","driveGet","saveData","backUpData","savePlace","backupPlace","dataKey","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","Datepicker","modelValue","onResetDegree","createRbcDegreeData","showErrorAlert","processData","categories","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","from","values","instance","onGripperOpenWebSocket","sendMessage","onCameraResetWebSocket","appContext","config","globalProperties","$socket","onGripperOpen","onCameraReset","wbcCustomParm","customNum","abbreviation","className","wbcCustomItems","getWbcCustomClasses","saveWbcCustomClass","updateResult","classArr","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","bfHotKeysItems","getBfHotKeyClasses","saveBfCustomClass","getNormalRange","saveNormalRange","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","top","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","runCountResult","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","activeTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","currentUserId","getAllUsers","storedUser","allUsers","replace","userSearchOption","userSearchOptions","inputText","filterUsers","users","searchText","searchOption","searchQuery","toLowerCase","searchField","onSearch","filteredUsers","latestDate","imagePrintAndWbcArr","selectedItems","getImagePrintData","saveImagePrint","imagePrintItems","_vModelCheckbox","lisCodeWbcArr","lisCodeRbcArr","minCountArr","saveLisCode","rbcResult","minCountResult","lisCodeItems","updateRbcResult","updateMinCountResult","minCountItems","wbcResult","wbcData","rbcData","minCountData","cbcCodeArr","saveCbcCode","cbcCodeItems","filePathSetArr","getFilePathSetData","saveFilePathSet","filePathSetItems","updateHotKey","updateFilePath","updateCbcFilePath","onInput","selectedTab","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","script","render","projectVersion","AI_VERSION","WEB_FRONTEND_VERSION","WEB_BACKEND_VERSION","tabs","currentTab","changeTab","tab","components","LognAccount","AnalysisDatabase","Report","QualityCheck","Version","storedTab","currentTabComponent","visible","closeLayer","createRunningApi","updateRunningApi","getRunningApi","queryString","entries","encodeURIComponent","join","deleteRunningApi","detailRunningApi","pageUpDownRunnIngApi","updatePcIpStateApi","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","printContent","selectItemWbc","printPage","filteredWbcInfo","selectItems","img_drive_root_path","content","compressedContent","pako","innerHTML","level","fetch","method","body","ok","blob","URL","createObjectURL","open","revokeObjectURL","closePrint","ref_key","submitUserId","submitOfDate","birthDay","gender","rbcMemo","memo","_normalizeStyle","coordinates","loadMoreRef","selectedItemId","itemObj","myIp","contextMenu","x","y","rightClickItem","printOnOff","selectAllCheckbox","addEventListener","handleOutsideClick","onUnmounted","removeEventListener","watchEffect","dbData","dbBaseTrClickId","filteredItems","selectItem","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","contextMenuElement","querySelector","contains","rowRightClick","wbcInfoData","sortedArray","clientX","handleCheckboxChange","hasOwnProperty","entry","isIntersecting","intersectionRatio","selectedRow","scrollIntoView","behavior","block","then","catch","lock_status","clonedWbcInfo","wbcInfoAfter","clonedRbcInfo","onModalOpen","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","openLayer","submitState","deleteRow","idsToDelete","rootArr","ids","submitStateChangeText","pilePath","selectedItem","newSelectedItem","showClassificationResults","classificationResult","_withScopeId","n","_pushScopeId","_popScopeId","allImages","hiddenImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","reduce","acc","hideImage","imageSet","onError","dbGetData","today","thirtyDaysAgo","setDate","searchType","page","titleItem","titleItemArr","nrCount","wbcCountOrder","classListToggle","bmClassIsBoolen","on","initDbData","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","numberOfCalls","i","getDbData","saveLastSearchParams","storedSearchParams","pageNum","requestData","pageSize","startDay","endDay","dateA","dateB","diff","diffInMs","getTime","diffInDays","loadMoreData","onChange","for","ListTable","onLoadMoreData","onInitData","onSelectItem","onRefresh","ListInfo","ListWbcImg","ListBmImg","hideConfirm","okConfirm","checkedClassIndices","rbcInfoChangeVal","memoModal","showConfirm","confirmType","confirmMessage","isBefore","classInfoArr","useRouter","except","currentRoute","rbcInfoAfter","newItem","afterChange","allCheckClear","beforeChange","updateClassInfoArr","isChecked","some","onClickDegree","isNormal","updatedSelectItems","rbcItem","rbcAfter","updatedItem","resRunningItem","memoOpen","memoCancel","memoChange","alertShow","scrollTo","commitConfirmed","handleOkConfirm","onCommit","localTime","isBeforeClicked","Confirm","onOkConfirm","rulers","moveImgPost","moveClassImagePost","malariaList","noMalariaList","selectedClickImages","indexBeforePressingShift","draggedImages","imageExist","getImageList","folderName","json","err","handleBodyClick","closest","handleClickImage","section","imgName","clickedImage","shiftKey","startIdx","endIdx","ctrlKey","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","malaria","noMalaria","readJsonFile","readFileTxt","readH7File","readH7Message","createH17","viewer","imgSet","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","activeRuler","showSelect","rulerPos","prevPosX","prevPosY","posX","posY","left","rulerSize","rulerWidth","viewBoxWH","tilingViewerLayer","tileExist","rbcInfoPathAfter","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","initElement","closeSelectBox","removeRbcMarker","removeDiv","moveRbcClassEvent","moveRbcClassItem","argument","foundElementIndex","el","rbcInfoPathAfterJsonCreate","drawRbcMarker","existingOverlays","getElementsByClassName","overlaysArray","overlay","removeOverlay","jsonString","jsonData","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","filePath","responseData","selectBox","rbcMarker","rbcClassRightClick","currentTarget","HTMLElement","fullPath","getElementById","newHtml","insertAdjacentHTML","ctx","getContext","canvas","clearRect","beginPath","colors","info","lineWidth","strokeStyle","rectPath","Path2D","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","element","moveHandler","magCanvas","removeChild","drawer","createElement","magCtx","magWidth","magHeight","zoomLevel","position","border","borderRadius","zIndex","appendChild","drawImage","visibility","addOverlay","location","addHandler","originalEvent","itemPos","color","setAttribute","backgroundColor","opacity","parseFloat","overlayRect","viewport","imageToViewportRectangle","clickPos","pointFromPixel","canvasPos","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","Image","xmlns","Url","Format","Overlap","TileSize","Size","Height","Width","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","maxNumberOfLines","numberOfLines","round","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","container","gridLines","querySelectorAll","line","remove","onClickRuler","ruler","drawRuler","divtilingViewer","rulerOverlay","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","zoomRatio","viewportToImageZoom","titleElement","textAlign","fontSize","minWidth","startX","endX","startY","endY","centerX","centerY","halfWidth","onClickZoom","Malaria","onContextmenu","selectItemsData","resData","route","useRoute","orderClass","cbcLayer","isButtonDisabled","timeoutId","pageMoveDeleteStop","ipAddress","isNext","moveWbc","getRunningInfoDetail","ip","deleteConnectionStatus","upDownBlockAccess","pageGo","sortWbcInfo","newSortArr","nameA","nameB","pageUpDownRunnIng","step","clearTimeout","processNextDbIndex","direction","setTimeout","handleDataResponse","dbId","resClassInfo","wbcArr","sortedWbcInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","cbcWorkList","cbcPatientNo","cbcPatientNm","cbcSex","cbcAge","inhaTestCode","cbcFilePathSetArr","deviceBarCode","deviceBarcode","cbcCodeList","selectItemsVal","getCbcPathData","getCbcCodeList","initCbcData","realUrl","params","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","readFileTxtRes","cbcData","cbcDataArray","excludedTitles","trim","machine","episode","returnCode","regNo","sex","age","testCode","testCodeList","codes","codeArray","obj","msg","segments","cbcSegment","CBC_CD","getField","updateRunningApiPost","originalDb","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","isBeforeUpdate","refreshClass","classInfoArrUpdate","unChecked","ClassInfoMenu","onRefreshClass","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","RbcImageList","onUnChecked","eqmtcd","CbcWbcTestCdList_0002","spcParams","fileSysPost","createFile","selectItemsSessionStorageData","clonedWbcInfoStore","barcodeImg","wbcMemo","titleArr","toggleLock","okMessageType","lisFilePathSetArr","afterChang","getLisWbcRbcData","getLisPathData","lisModalOpen","goClass","wbcClassTileChange","classInfoSort","updateOriginalDb","toggleLockEvent","uploadLis","codeList","fiveDiffWorkList","wbcDiffCountItem","testcd","wbcItem","wbcTemp","fiveDiffItem","nsPercentItem","ancResult","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","resultFlag","ResultFlag","resultflag","_text","error2","lisLastStep","seq","IA_CD","lisFileUrlCreate","godae","inhaDataSend","otherDataSend","fileCreateRes","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","sendLisMessage","filepath","resultStr","tmpList","tmpStr","rbcTmp","MIN_COUNT","specialCodes","rbcItemElement","replacements","rbcTmp2","kumcMergePercent","kumcBandPercent","segItem","bandItem","parms","filename","resultMsg","userid","errorCode","errorMessage","succ","fail","userNm","getUsernm","usernm","getStringValue","noAlert","beforeChang","totalCountSet","sortedWbcInfoAfter","titleInArray","sortArr","wbcArrs","WbcClass","Print","onPrintClose","selectedTitle","moveImgIsBool","draggedItemIndex","draggedImageIndex","isShiftKeyPressed","firstClickedImageIndex","isCtrlKeyPressed","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","imageSize","selectSizeTitle","refsArray","allCheck","cellRef","cellMarkerIcon","isBeforeChild","modalOpen","selectedImageSrc","modalImageWidth","modalImageHeight","selectItemIamgeArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","classCompareShow","handleKeyDown","handleKeyUp","handleClickOutside","imgSetLocalStorage","storedBrightness","storedRgb","imageSizeCopy","isBeforeDataSet","nextPage","isNextFalse","handleRightClick","openContextMenu","getNewImageUrl","matchingImage","fileNameMa","idMa","titleMa","showSizeControl","hideSizeControl","moveSelectedImages","itemIdx","addToRollbackHistory","draggedItem","matchingItemIndex","infoItem","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","projectTypeReturn","wbcPush","wbcinfo","foundObject","isBorderChanged","prefix","modifiedPrefix","replaceFileNamePrefix","openModal","closeModal","zoomIn","newWidth","newHeight","zoomOut","excelDownload","drawCellMarker","imgResize","jsonImageDat","imageElement","foundItem","FILE_NM","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","POSX2","POSX1","rectHeight","POSY2","POSY1","display","allCheckChange","allCheckInsert","idxKey","setRef","itemId","scrollToElement","targetElement","imgSizeReset","brightnessReset","reset","selectedSizeTitle","changeImageSize","currentWidth","currentHeight","onDragOverCircle","onDropCircle","toUpperCase","moveSelectedImagesToTargetItem","targetIndex","selectedImages","sourceItemIndex","sourceItem","imageIndex","correspondingItem","afterItem","itemImg","dataItem","oArr","onDragOver","itemIndex","selectImage","classInfoitem","imageIndexInSelected","img","imageFileName","targetItemIndex","originalOnDrop","selectedImagesToMove","keyMove","wbcInfosArr","sourceFolders","destinationFolders","classInfoBagic","matchingItem","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","Set","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","highImg","findAfterArr","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","onIsNextFalse","ClassInfo","onNextPage","onScrollEvent","onIsBefore","onMouseleave","onMouseover","onDblclick","paImages","idealZoneImages","idealStitchImages","megaImages","strArray","buttonOfen","viewerSmall","getImgUrl","getImageUrls","getImageUrlsSmallImg","resp","openInViewer","destroy","navigator","showZoomControl","showHomeControl","showFullScreenControl","showRotationControl","showFullPageControl","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","closeViewer","viewerElement","hideImageRef","newImgHeight","newImgWidth","onImageLoad","imgElement","complete","naturalHeight","naturalWidth","bool","transform","onLoad","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","to","next","currentUser","_imports_0","appHeaderLeftHidden","logOutBox","viewerCheckData","isDoorOpen","storagePercent","eqStatCdData","oilCountData","storagePercentData","maxOilCount","statusBarWrapper","statusBar","noRouterPush","currentTime","isAralrmInterver","formattedDate","updateDateTime","toLocaleDateString","toLocaleTimeString","clear","fullscreenElement","exitFullscreen","timerId","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","logOutBoxOn","logout","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","_component_router_link","Modal","onAfterOpen","header","namespaced","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","storageSize","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","embeddedNumber","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","chatRunningData","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setPbiaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceBarcode","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setCbcLayer","setInhaTestCode","setCommonInfo","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","errorLevel","processingCode","cassetId","existingSlot","existing","setTimeInfo","createStore","modules","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","alert","runningInfoStore","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","indexOf","range","createDeviceInfoApi","getDeviceInfoApi","countingInterStartval","countingInterRunval","viewerCheckApp","parsedDataProps","deleteData","siteCdDvBarCode","reqArrPaste","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","onBeforeMount","MAIN_API","leave","startSysPostWebSocket","runInfoPostWebSocket","textDecoder","TextDecoder","stringData","decode","parseDataWarp","deviceInfoObj","saveDeviceInfo","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","traySlot","tactTime","bf_lowPowerPath","bminfo","saveRunningInfo","deviceInfo","deviceData","deviceItem","last","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","socketPlugin","install","app","socket","io","transports","library","fas","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}