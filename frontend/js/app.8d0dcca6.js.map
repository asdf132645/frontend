{"version":3,"file":"js/app.8d0dcca6.js","mappings":"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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constFile/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constFile/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constFile/analysis.ts","webpack://uimdCell/./src/common/defines/constFile/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constFile/settings.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?7f70","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?ea5c","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/lib/commonfunction/settingFunctions.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/common/lib/sendWebSocket/common.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/common/defines/constFile/classArr.ts","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/defines/constFile/rbc.ts","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constFile/lis.ts","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/storeSetData/common.ts","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 2475,\n\t\"./uz-latn.js\": 2475,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]","export const testType = [\r\n    {value: '01', text: 'Diff'},\r\n    {value: '04', text: 'Premium'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];","import { commonCodeList } from '@/common/defines/constFile/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constFile/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, iaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const baseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    return `${baseUrl}/images/getImageRealTime?folder=${iaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}`;\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"P\"),\n  /*#__PURE__*/_createTextVNode(\"rocessing \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"I\"),\n  /*#__PURE__*/_createTextVNode(\"nformation \")\n], -1)\nconst _hoisted_2 = { class: \"processInfoUl\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)\nconst _hoisted_6 = { class: \"proVal\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\nconst _hoisted_13 = { class: \"proSpan\" }\nconst _hoisted_14 = { class: \"proVal\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)\nconst _hoisted_16 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"ul\", _hoisted_2, [\n      _createElementVNode(\"li\", null, [\n        _hoisted_3,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_5,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_7,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_9,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_13, _toDisplayString(siteCd.value === '0019' ? 'Order Date' : 'Analyzed Date'), 1),\n        _createElementVNode(\"span\", _hoisted_14, _toDisplayString(siteCd.value === '0019' ? processInfoItem.value?.analyzedDttm   : processInfoItem.value?.orderDate), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_15,\n        _createElementVNode(\"span\", _hoisted_16, _toDisplayString(prevOilCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">P</span>rocessing <span class=\"greenColor\">I</span>nformation </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <span class=\"proSpan\">\r\n          {{ siteCd === '0019' ? 'Order Date' : 'Analyzed Date' }}\r\n        </span>\r\n        <span class=\"proVal\">\r\n          {{ siteCd === '0019' ? processInfoItem?.analyzedDttm   : processInfoItem?.orderDate }}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const analysisOptions = [\r\n    {value: '01', text: 'WBC Diff (Standard)'},\r\n    {value: '04', text: 'PBS (Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'},\r\n    // {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const wbcCountOptions = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const bmCountOptions = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const stitchCountOptions = [{value: '1', text: '1 stitch'},\r\n    {value: '2', text: '2 stitch'},\r\n    {value: '3', text: '3 stitch'},\r\n    {value: '4', text: '4 stitch'},\r\n    {value: '5', text: '5 stitch'}];\r\n\r\nexport const slideCard = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ]\r\n};\r\n\r\nexport const slideCard100a = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ]\r\n};\r\n","interface Messages {\r\n    [key: string]: string;\r\n}\r\nexport  const messages: Messages = {\r\n    Logout: 'Would you like to log out?',\r\n\r\n    // login page\r\n    GET_POSITION_LIST: 'getPositionList',\r\n    GET_LOGIN_HISTORY: 'getLoginHistory',\r\n    SET_USER: 'setUser',\r\n    IS_REGIST_USER: 'isRegistUser',\r\n    UPDATE_LOGIN_DTTM: 'updateLoginDttm',\r\n    UPDATE_USER_AVAILABLE: 'updateUserAvailable',\r\n\r\n    // WBC classification\r\n    GET_WBC_CLASS_LIST: 'getWbcClassList',\r\n    GET_WBC_CLASS_LIST_ALL: 'getWbcClassListAll',\r\n    GET_WBC_TOTAL_COUNT: 'getWbcTotalCount',\r\n    UPDATE_WBC_COUNT: 'updateWbcCount',\r\n    GET_WBC_COUNT: 'getWbcCount',\r\n    GET_TEST_TYPE: 'getTestType',\r\n    // 인하대 test type 명칭 변경\r\n    GET_MODIFIED_TEST_TYPE: 'getModifiedTestType',\r\n    GET_STITCH_COUNT: 'getStitchCount',\r\n    GET_RBC_COUNT: 'getRbcCount',\r\n    GET_RBC_COUNT_HIST: 'getRbcCountHist',\r\n    GET_RBC_COUNT_SKMC: 'getRbcCountSkmc',\r\n    UPDATE_DEGREE: 'updateDegree',\r\n    INIT_WBC_COUNT: 'initWbcCount',\r\n    INIT_RBC_DEGREE: 'initRbcDegree',\r\n    GET_WBC_INFO: 'getWbcInfo',\r\n    SET_WBC_IMAGE_HIST: 'setWbcImageHist',\r\n    GET_WBC_IMAGE_HIST: 'getWbcImageHist',\r\n    INIT_WBC_IMAGE_HIST: 'initWbcImageHist',\r\n    INSERT_WBC_CLASSIFICATION: 'insertWbcClassification',\r\n    SET_WBC_CUSTOM_LIST: 'setWbcClassList',\r\n    UPDATE_HOT_KEYS: 'updateHotKeys',\r\n    UPDATE_BF_HOT_KEYS: 'updateBfHotKeys',\r\n    UPDATE_ORDER: 'updateOrder',\r\n    UPDATE_ORDER_BF: 'updateOrderBf',\r\n    UPDATE_IMAGE_HIST: 'updateImageHist',\r\n    SET_CURRENT_WBC_RESULTS: 'setCurrentWbcResults',\r\n    GET_CURRENT_WBC_RESULTS: 'getCurrentWbcResults',\r\n    SET_BEFORE_WBC_RESULTS: 'setBeforeWbcResults',\r\n    GET_BEFORE_WBC_RESULTS: 'getBeforeWbcResults',\r\n\r\n    // 집계\r\n    GET_WBC_MODIFY_LIST: 'getWbcModifyList',\r\n    GET_WBC_MODIFY_LIST_ALL: 'getWbcModifyListAll',\r\n    GET_BF_MODIFY_LIST: 'getBfModifyList',\r\n\r\n    // RBC classification\r\n    GET_RBC_CLASS_LIST: 'getRbcClassList',\r\n    GET_MALARIA_COUNT: 'getMalariaCount',\r\n    UPDATE_MALARIA_COUNT: 'updateMalariaCount',\r\n    SET_CURRENT_RBC_RESULTS: 'setCurrentRbcResults',\r\n    GET_CURRENT_RBC_RESULTS: 'getCurrentRbcResults',\r\n\r\n    SET_CLASSIFICATION: 'setClassification',\r\n    GET_CLASSIFICATION_ITEM: 'getClassificationItem',\r\n    SET_CLASSIFICATION_ITEM: 'setClassificationItem',\r\n\r\n    UPDATE_RBC_CLASSIFICATION: 'updateRbcClassificatin',\r\n    UPDATE_RBC_CLASSIFICATION_SKMC: 'updateRbcClassificatinSkmc',\r\n    INSERT_WBC_SUCCESS: 'insertWbcSuccess',\r\n    SELECT_RBC_DEGREE: 'selectRbcDegree',\r\n    UPDATE_RBC_DEGREE: 'updateRbcDegree',\r\n\r\n    // Test page\r\n    SET_TEST_LIST: 'setTestList',\r\n    GET_TEST_LIST: 'getTestList',\r\n    GET_TEST_RESULT: 'getTestResult',\r\n    GET_RBC_FIELDS: 'getRbcFields',\r\n    GET_WBC_FIELDS: 'getWbcFields',\r\n    GET_RBC_ITEMS: 'getRbcItems',\r\n    GET_WBC_ITEMS: 'getWbcItems',\r\n    INIT_OIL_COUNT: 'initOilCount',\r\n    UPDATE_RESULT: 'updateResult',\r\n    UPDATE_RUNNING_STATE: 'updateRunningState',\r\n    GET_ORDER_LIST: 'getOrderList',\r\n    SET_ORDER_LIST: 'setOrderList',\r\n    UPDATE_ORDER_LIST: 'updateOrderList',\r\n    INIT_ORDER_LIST: 'initOrderList',\r\n    GET_TEST_RESULT_ALL: 'getTestResultAll',\r\n    GET_SEARCH_OPTIONS: 'getSearchOptions',\r\n    UPDATE_SEARCH_OPTIONS: 'updateSearchOption',\r\n    SET_TEST_HISTORY: 'setTestHistory',\r\n    GET_TEST_HISTORY_LIST: 'getTestHistoryList',\r\n    ALL_TEST_HISTORY_LIST: 'allTestHistoryList',\r\n    SEARCH_TEST_HISTORY_LIST: 'searchTestHistoryList',\r\n    UPDATE_TEST_HISTORY: 'updateTestHistory',\r\n    GET_TEST_HISTORY: 'getTestHistory',\r\n    DELETE_TEST_HISTORY: 'deleteTestHistory',\r\n    UPDATE_SIGNED_STATE: 'updatesubmitState',\r\n    UPDATE_TEST_HISTORY_WBC_INFO: 'updateTestHistoryWbcInfo',\r\n    GET_RBC_COMMENT: 'getRbcComment',\r\n    GET_WBC_COMMENT: 'getWbcComment',\r\n    GET_RUNNING_INTERVAL_ID: 'getRunningIntervalId',\r\n    SET_RUNNING_INTERVAL_ID: 'setRuningIntervalId',\r\n    UPDATE_TIMER: 'updateWorkingTimer',\r\n    GET_TIMER: 'getWorkingTimer',\r\n    SET_TIMER: 'setWorkingTimer',\r\n    SET_WORKING_INTERVAL_ID: 'setWorkingIntervalId',\r\n    GET_WORKING_INTERVAL_ID: 'getWorkingIntervalId',\r\n    GET_RUNNING_STATE: 'getRunningState',\r\n    SET_SLIDE_TIMER: 'setSlideTimer',\r\n    UPDATE_SLIDE_TIMER: 'updateSlideTimer',\r\n    GET_SLIDE_TIME_COUNT: 'getSlideTimeCount',\r\n    SET_USER_STOP: 'setUserStop',\r\n    GET_USER_STOP: 'getUserStop',\r\n    SET_WBC_CELL_POSITION: 'setWbcCellPosition',\r\n    GET_WBC_CELL_POSITION: 'getWbcCellPosition',\r\n    GET_TEST_HISTORY_PREV: 'getTestHistoryPrev',\r\n    GET_TEST_HISTORY_NEXT: 'getTestHistoryNext',\r\n    SET_IS_RECOVERY_RUN: 'setIsRecoveryRun',\r\n    GET_IS_RECOVERY_RUN: 'getIsRecoveryRun',\r\n\r\n    // Work List\r\n    SET_WORK_LIST: 'setWorkList',\r\n    GET_WORK_LIST: 'getWorkList',\r\n    INIT_WORK_LIST: 'initWorkList',\r\n    DELETE_WORK_LIST: 'deleteWorkList',\r\n    UPDATE_WORK_LIST: 'updateWorkList',\r\n    UPDATE_WORK_LIST_BM: 'updateWorkListBm',\r\n    UPDATE_SIGNED_WORK_LIST: 'updateSignedWorkList',\r\n    UPDATE_RBC_COMMENT: 'updateRbcComment',\r\n    UPDATE_WBC_COMMENT: 'updateWbcComment',\r\n    UPDATE_BM_COMMENT: 'updateBmComment',\r\n    UPDATE_SELECT_ORDER_ID: 'updateSelectOrderId',\r\n    GET_SELECT_ORDER_ID: 'getSelectOrderId',\r\n    ADD_WORK_LIST: 'addWorkList',\r\n    GET_TEST_BARCODES: 'getTestBarcodes',\r\n    ADD_DSP_LIST: 'addDspList',\r\n    GET_DSP_LIST: 'getDspList',\r\n\r\n    // Common\r\n    // lis 단축키 추가\r\n    SET_LIS_HOT_KEY: 'setLisHotKey',\r\n    UPDATE_NEW_TEST_SET: 'updateNewTestSet',\r\n    UPDATE_EXEC_TEST_TYPE: 'updateExecTestType',\r\n    INITIALIZE_MOUNT_CNT: 'initializeMountCnt',\r\n    UPDATE_MOUNT_CNT: 'updateMountCnt',\r\n    GET_CURRENT_USER: 'getCurrentUser',\r\n    GET_SETTINGS: 'getSettings',\r\n    UPDATE_RUNNING_PATH: 'updateRunningPath',\r\n    UPDATE_RESULT_PATH_WBC: 'updateResultPathWbc',\r\n    UPDATE_RESULT_PATH_RBC: 'updateResultPathRbc',\r\n    UPDATE_BARCODE_PATH: 'updateBarcodePath',\r\n    GET_SYSTEM_TIME_ID: 'getSystemTimeId',\r\n    SET_SYSTEM_TIME_ID: 'setSystemTimeId',\r\n    GET_USER: 'getUser',\r\n    UPDATE_REMEMBER_STATE: 'updateRememberState',\r\n    SET_CURRENT_USER: 'setCurrentUser',\r\n    UPDATE_ROOT_PATH: 'updateRootPath',\r\n    GET_FILE_FILTER: 'getFileFilter',\r\n    GET_USER_LIST: 'getUserList',\r\n    UPDATE_ANALYSIS_TYPE: 'updateAnalysisType',\r\n    UPDATE_TEST_TYPE: 'updateTestType',\r\n    UPDATE_RUNNING_MODE: 'updateRunningMode',\r\n    UPDATE_USER: 'updateUser',\r\n    DELETE_USER: 'deleteUser',\r\n    UPDATE_MARKER_STATE: 'updateMarkerState',\r\n    GET_MARKER_STATE: 'getMarkerState',\r\n    SET_PAUSE_STATE: 'setPauseState',\r\n    GET_PAUSE_STATE: 'getPauseState',\r\n    GET_BF_WHOLE_SLIDE_PATH: 'getBfWholeSlidePath',\r\n    GET_BF_WBC_CLASS_LIST: 'getBfWbcClassList',\r\n    GET_SIZE_SLIDE_VALUE: 'getSizeSlideValue',\r\n    UPDATE_LIS_CODE: 'updateLisCode',\r\n    SELECT_LIS_CODE: 'selectLisCode',\r\n    SELECT_LIS_CODE_RBC: 'selectLisCodeRbc',\r\n    UPDATE_CBC_CODE: 'updateCbcCode',\r\n    SELECT_CBC_CODE: 'selectCbcCode',\r\n    UPDATE_LIS_CONN_PATH: 'updateLisConnPath',\r\n    SELECT_LIS_CONN_PATH: 'selectLisConnPath',\r\n    GET_BACKUP_LIST: 'getBackupList',\r\n    RESTORE_BACKUP_DATA: 'restoreBackupData',\r\n    DELETE_BACKUP_DATA: 'deleteBackupData',\r\n    RESET_RBC_DEGREE: 'resetRbcDegree',\r\n    GET_DEFAULT_RBC_DEGREE: 'getDefaultRbcDegree',\r\n    UPDATE_CHECKED_CELL: 'updateCheckedCell',\r\n    SET_LOCK_SLIDE: 'setLockSlide',\r\n    SET_HOST_IP: 'setHostIp',\r\n    GET_HOST_IP: 'getHostIp',\r\n    GET_NORMAL_RANGE: 'getNormalRange',\r\n    UPDATE_NORMAL_RANGE: 'updateNormalRange',\r\n    GET_LOCK_STATE: 'getLockState',\r\n    GET_KUMC_CBC_PATH: 'getKumcCbcPath',\r\n    SET_WBC_NORMAL_RANGE: 'setWbcNormalRange',\r\n    GET_WBC_NORMAL_RANGE: 'getWbcNormalRange',\r\n    GET_SKMC_RESULT_CD: 'getSkmcResultCd',\r\n    SET_SKMC_RESULT_CD: 'setSkmcResultCd',\r\n    REMOVE_SKMC_RESULT_CD: 'removeSkmcResultCd',\r\n    GET_SKMC_REMARK: 'getSkmcRemark',\r\n    SET_SKMC_REMARK: 'setSkmcRemark',\r\n    REMOVE_SKMC_REMARK: 'removeSkmcRemark',\r\n    SET_SKMC_FAVORITE: 'setSkmcFavorite',\r\n    GET_SKMC_FAVORITE: 'getSkmcFavorite',\r\n    GET_SKMC_LIS_RESULTS: 'getSkmcLisResults',\r\n    SET_SKMC_LIS_RESULTS: 'setSkmcLisResults',\r\n    SET_ALARM_COUNT: 'setAlarmCount',\r\n    SET_SORT_TYPE: 'setSortType',\r\n    GET_SORT_TYPE: 'getSortType',\r\n    SET_CUSTOM_CLASS: 'setCustomClass',\r\n    GET_CUSTOM_CLASS: 'getCustomClass',\r\n    SET_SYS_INFO: 'setSysInfo',\r\n    GET_SYS_INFO: 'getSysInfo',\r\n    SET_BACKEND_DATA: 'setBackendData',\r\n    GET_BACKEND_DATA: 'getBackendData',\r\n\r\n    // 인하대 임시\r\n    SELECT_CBC_CODE_INHA: 'selectCbcCodeInha',\r\n    SELECT_LIS_CODE_INHA: 'selectLisCodeInha',\r\n    SELECT_LIS_CODE_RBC_INHA: 'selectLisCodeRbcInha',\r\n    SELECT_LIS_CONN_PATH_INHA: 'selectLisConnPathInha',\r\n    GET_RBC_COUNT_INHA: 'getRbcCountInha',\r\n    SELECT_WBC_RUNNING_COUNT: 'selectWbcRunningCount',\r\n\r\n    // wbc\r\n    GET_BRIGHTNESS_SLIDE_VALUE: 'getBrightnessSlideValue',\r\n    GET_RED_VALUE: 'getRedValue',\r\n    GET_GREEN_VALUE: 'getGreenValue',\r\n    GET_BLUE_VALUE: 'getBlueValue',\r\n    GET_RGB_VALUE: 'getRgbValue',\r\n    SET_SIZE_SLIDE_VALUE: 'setSizeSlideValue',\r\n    SET_BRIGHTNESS_SLIDE_VALUE: 'setBrightnessSlideValue',\r\n    SET_RED_VALUE: 'setRedValue',\r\n    SET_GREEN_VALUE: 'setGreenValue',\r\n    SET_BLUE_VALUE: 'setBlueValue',\r\n    SET_RGB_VALUE: 'setRgbValue',\r\n    SET_ROLLBACK_LIST: 'setRollbackList',\r\n    GET_ROLLBACK_LIST: 'getRollbackList',\r\n    GET_IMAGE_ROLLBACK_LIST: 'getImageRollbackList',\r\n    SET_CLONED_WBC_INFO: 'setClonedWbcInfo',\r\n\r\n    // rbc\r\n    GET_RBC_BRIGHTNESS_SLIDE_VALUE: 'getRbcBrightnessSlideValue',\r\n    GET_RBC_RED_VALUE: 'getRbcRedValue',\r\n    GET_RBC_GREEN_VALUE: 'getRbcGreenValue',\r\n    GET_RBC_BLUE_VALUE: 'getRbcBlueValue',\r\n    SET_RBC_BRIGHTNESS_SLIDE_VALUE: 'setRbcBrightnessSlideValue',\r\n    SET_RBC_RED_VALUE: 'setRbcRedValue',\r\n    SET_RBC_GREEN_VALUE: 'setRbcGreenValue',\r\n    SET_RBC_BLUE_VALUE: 'setRbcBlueValue',\r\n    SET_CLONED_RBC_INFO: 'setClonedRbcInfo',\r\n\r\n    UPDATE_OIL_COUNT: 'updateOilCount',\r\n    SET_RESULT_LIST: 'setResultList',\r\n    CLEAR_RESULT_LIST: 'clearResultList',\r\n    GET_RESULT_LIST: 'getResultList',\r\n    SET_WBC_REPORT_PRINT: 'setWbcReportPrint',\r\n    GET_WBC_REPORT_PRINT: 'getWbcReportPrint',\r\n    SET_RBC_REPORT_PRINT: 'setRbcReportPrint',\r\n    GET_RBC_REPORT_PRINT: 'getRbcReportPrint',\r\n    SET_RBC_SIZE: 'setRbcSize',\r\n    GET_RBC_SIZE: 'getRbcSize',\r\n    SET_RBC_CHROMIA: 'setRbcChromia',\r\n    GET_RBC_CHROMIA: 'getRbcChromia',\r\n    SET_RBC_SHAPE: 'setRbcShape',\r\n    GET_RBC_SHAPE: 'getRbcShape',\r\n    PUSH_RBC_SHAPE: 'pushRbcShape',\r\n    POP_RBC_SHAPE: 'popRbcShape',\r\n    SET_RBC_PLATELET: 'setRbcPlatelet',\r\n    GET_RBC_PLATELET: 'getRbcPlatelet',\r\n    PUSH_RBC_PLATELET: 'pushRbcPlatelet',\r\n    POP_RBC_PLATELET: 'popRbcPlatelet',\r\n    SET_RBC_INCLUSION: 'setRbcInclusion',\r\n    GET_RBC_INCLUSION: 'getRbcInclusion',\r\n    POP_RBC_INCLUSION: 'popRbcInclusion',\r\n    PUSH_RBC_INCLUSION: 'pushRbcInclusion',\r\n    SET_IS_SHOW_MODAL_BARCODE: 'setIsShowModalBarcode',\r\n    GET_IS_SHOW_MODAL_BARCODE: 'getIsShowModalBarcode',\r\n    SET_IS_NS_NB_INTEGRATION: 'setIsNsNbIntegration',\r\n    GET_IS_NS_NB_INTEGRATION: 'getIsNsNbIntegration',\r\n    SET_IS_ALARM: 'setIsAlarm',\r\n    GET_IS_ALARM: 'getIsAlarm',\r\n    SET_IS_CBC_SHOW: 'setIsCbcShow',\r\n    GET_IS_CBC_SHOW: 'getIsCbcShow',\r\n    SET_SITE_CD: 'setSiteCd',\r\n    GET_SITE_CD: 'getSiteCd',\r\n    SET_DEVICE_SERIALNUM: 'setDeviceSerialNm',\r\n    GET_DEVICE_SERIALNUM: 'getDeviceSerialNm',\r\n\r\n    SELECT_BF_HOT_KEY: 'selectBfHotKey',\r\n    SELECT_WBC_HOT_KEY: 'selectWbcHotKey',\r\n    SELECT_WBC_CUSTOM_CLASS: 'selectWbcCustomClass',\r\n    SELECT_EMP_NO: 'selectEmpNo',\r\n\r\n    // log history\r\n    INSERT_WBC_MODIFY_HIST: 'insetWbcModifyHist',\r\n    GET_WBC_MODIFY_HIST: 'getWbcModifyHist',\r\n    UPDATE_WBC_HIST_LIST: 'updateWbcHistList',\r\n    GET_WBC_HIST_LIST: 'getWbcHistList',\r\n\r\n    // Code group\r\n    GET_COMMON_CODE_LIST: 'getCommonCodeList',\r\n    GET_COMMON_CODE: 'getCommonCode',\r\n\r\n    GET_CODE_LIST_USER_POSITION: '00',\r\n    GET_CODE_LIST_USER_AUTHORIZATION: '01',\r\n    GET_CODE_LIST_USER_CASSETE_STATE: '02',\r\n    GET_CODE_LIST_PROCESSING_STATE: '03',\r\n    GET_CODE_LIST_ANALYSIS_TYPE: '04',\r\n    GET_CODE_LIST_CELL_COUNT: '05',\r\n    GET_CODE_LIST_GENERAL_STAIN: '06',\r\n    GET_CODE_LIST_SPECIAL_STAIN: '07',\r\n    GET_CODE_LIST_IMMUNO_STAIN: '08',\r\n    GET_CODE_LIST_SAMPLING_STAIN: '09',\r\n    GET_CODE_LIST_GENDER: '10',\r\n    GET_CODE_LIST_TEST_TYPE: '11',\r\n    GET_CODE_SIGNED_STATE: '12',\r\n    GET_CODE_LOG_TYPE: '13',\r\n    GET_CODE_SLOT_STATE: '14',\r\n\r\n    // log code\r\n    EVENT_TYPE_USER: '00',\r\n    EVENT_TYPE_SYSTEM: '01',\r\n\r\n    // System log\r\n    SET_EVENT_LOG: 'setEventLog',\r\n    GET_EVENT_LOG: 'getEventLog',\r\n    REMOVE_EVENT_LOG: 'removeEventLog',\r\n\r\n    // Storage\r\n    REMEMBER_PWD_KEY: 'uimdia190$^!00000000000000000000',\r\n    REMEMBER_PWD_IV: '0000000000000000',\r\n\r\n    // Workers\r\n    RECEIVE_DATA_BROADCAST_CHAN: 'RECEIVE_DATA_BROADCAST_CHAN',\r\n\r\n    // PB APIS [\r\n    GET_PB_CLASSIFICATIONS: 'getPbClassifications',\r\n    GET_CLASSIFICATION_IMAGES: 'getClassificationImages',\r\n    GET_MARKER_POSITION: 'getMarkerPosition',\r\n    GET_PB_HOT_KEYS: 'getPbHotKeys',\r\n    UPDATE_CLASSIFICATION: 'updateClassification',\r\n    PB_IA_MOVE_IMAGE: 'PbIaMoveImage',\r\n    SET_WBC_IMAGE_LIST: 'setWbcImageList',\r\n    GET_PB_WBC_IMAGES: 'getPbWbcImages',\r\n    SET_SELECTED_ITEM: 'setSelectedItem',\r\n    GET_SELECTED_ITEM: 'getSelectedItem',\r\n    IA_SET_CUSTOM_CLASS: 'iaSetCustomClass',\r\n    IA_GET_CUSTOM_CLASS: 'iaGetCustomClass',\r\n    // PB APIS ]\r\n\r\n\r\n    // Message\r\n    IDS_MSG_SUCCESS: 'Success',\r\n    IDS_MSG_FAILED: 'Failed',\r\n    IDS_MSG_OIL_REMAIN_COUNTER: 'Reset Immersion oil counter after final test or changing the Oil',\r\n    IDS_MSG_POWEROFF: 'Shutdown the system.',\r\n    IDS_MSG_INITALIZE: 'Please execute after initialization.',\r\n    IDS_MSG_SIGNING_COMPLETE: 'Signing is complete.',\r\n    IDS_MSG_DELETE_THE_SELECTED_ITEMS: 'Delete the selected items?',\r\n    IDS_MSG_ACCOUNT_CHANGED: 'Account conversion is complete.',\r\n    IDS_MSG_DELETE_ACCOUNT: 'Are you sure you want to delete your account?',\r\n    IDS_MSG_LOGOUT: 'Are you sure you want to logout now?',\r\n    IDS_MSG_DUPLICATE_KEY: 'The %s key is a duplicate key.',\r\n    IDS_MSG_HOTKEY_IN_ENGLISH: 'Please recheck the key',\r\n\r\n    IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD: 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP: 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID: 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR: 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID: 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING: 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS: 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR: 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS: 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO: 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST: 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2: 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS: 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM: 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE: 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED: 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST: 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS: 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION: 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO: 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID: 'Please confirm your user ID.',\r\n\r\n    IDS_DOWNLOAD_COMPLETE: 'Download Complete',\r\n    IDS_SELECT_SLIDE: 'Please select a slide.',\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED: 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION: 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE: 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE: 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS: 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE: 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM: 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER: 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL: 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION: 'This is a duplicate abbreviation.',\r\n    IDS_THIS_CARD_HAS_ALREADY_BEEN_USED: 'This card has already been used.',\r\n    IDS_MSG_UPLOAD_LIS: 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE: 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE: 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS: 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE: 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH: 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE: 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND: 'No data found.',\r\n    IDS_MSG_DATA_BACKUP: 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE: 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS: 'Size and Chromia categories are linked with LIS data.',\r\n\r\n    UPDATE_SUCCESSFULLY : 'Update Successfully',\r\n    TCP_DiSCONNECTED: 'The TCP connection was disconnected.',\r\n    alreadyInitialized: 'It has already been initialized.',\r\n};","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n\r\n    const formattedTime = now.format('YYYYMMDDHHmmssSSS');\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            }\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport { Endpoint, GenericObject } from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: boolean;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: boolean;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        // console.log(type !== undefined)\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        if (contentType === 'blob'){\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain'){\r\n            options.headers=  {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if(formData){\r\n            options.headers =  {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, { ...options, data: payload });\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","\r\nexport const apiConstants = {\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification:{\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user:{\r\n        register:{\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login:{\r\n            endpoint:'user/login',\r\n            requiresToken: false,\r\n        },\r\n        userCheck:{\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        userIp:{\r\n            endpoint: 'ip',\r\n            requiresToken: false,\r\n        },\r\n        getUsers:{\r\n            endpoint:'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint:'user/update',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings:{\r\n        cellImgAnalyzedPost:{\r\n            cellImgAdd:{\r\n                endpoint:'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet:{\r\n                endpoint:'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut:{\r\n                endpoint:'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree:{\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree:{\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass:{\r\n            create: {\r\n                endpoint: 'wbcCustomClass/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcCustomClass/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'normalRange/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCodeRbc/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'cbcCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'filePathSet/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'minCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete:{\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail:{\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown:{\r\n                endpoint:'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState:{\r\n                endpoint:'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState:{\r\n                endpoint:'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get:{\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get:{\r\n                endpoint:'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'classOrders/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n    },\r\n    images:{\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf:{\r\n        post:{\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem:{\r\n        post:{\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGet:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate:{\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message:{\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create:{\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    backUp:{\r\n        backUpDate:{\r\n            endpoint: 'backup/post',\r\n            requiresToken: false,\r\n        }\r\n    }\r\n\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lis code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// minCount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};","// EventBus.ts\r\n\r\ntype EventHandler = (...args: any[]) => void;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 발행하는 메서드\r\n     public publish(eventName: string, ...args: any[]): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            handlers.forEach(handler => handler(...args));\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1 alertMessage\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const testTypeList = [\r\n    {value: '01', text: 'PB standard'},\r\n    {value: '04', text: 'PB premium'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n    {value: '06', text: 'BM squash'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const WbcPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PltPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', classCd: '', classNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', classNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', classNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', classNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', classNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', classNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', classNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', classNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', classNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', classNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', classNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', classNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', classNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', classNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', classNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', classNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', classNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', classNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', classNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', classNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', classNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', classNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', classNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', classNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', classNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', classNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', classNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', classNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', classNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', classNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', classNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', classNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', classNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', classNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', classNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', classNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', classNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', classNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', classNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [\r\n{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    },\r\n    {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    },\r\n    {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    },\r\n    {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    },\r\n    {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    },\r\n    {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    },\r\n    {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    },\r\n    {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    },\r\n    {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    },\r\n    {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 19\r\n    },\r\n    {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    },\r\n    {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    },\r\n    {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    },\r\n    {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    },]\r\nexport const bmHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\nexport const bfHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '02', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 2\r\n}, {\r\n    id: '03', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 3\r\n}, {\r\n    id: '04', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 4\r\n}, {\r\n    id: '05', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 5\r\n}, {\r\n    id: '06', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 6\r\n}, {\r\n    id: '07', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 7\r\n}, {\r\n    id: '08', abbreviation: 'NR', fullNm: 'NRBC', key: '', orderIdx: 8\r\n}, {\r\n    id: '09', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 9\r\n}, {\r\n    id: '10', abbreviation: 'MC', fullNm: 'Malignant cell', key: '', orderIdx: 10\r\n}, {\r\n    id: '11', abbreviation: 'MT', fullNm: 'Mesothelial cell', key: '', orderIdx: 11\r\n}]\r\n\r\nexport const normalRange = [\r\n{\r\n    abbreviation: 'NE',\r\n    fullNm: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'ME',\r\n    fullNm: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MY',\r\n    fullNm: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PR',\r\n    fullNm: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LY',\r\n    fullNm: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MO',\r\n    fullNm: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'EO',\r\n    fullNm: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BA',\r\n    fullNm: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BL',\r\n    fullNm: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PC',\r\n    fullNm: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'NR',\r\n    fullNm: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'GP',\r\n    fullNm: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'PA',\r\n    fullNm: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'AR',\r\n    fullNm: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'MA',\r\n    fullNm: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n{\r\n    abbreviation: 'LR',\r\n    fullNm: 'Reactive lymphocyte',\r\n    classId: '61',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LA',\r\n    fullNm: 'Abnormal lymphocyte',\r\n    classId: '62',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n},\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { classNm: 'Neutrophil', value: '01', checked: false },\r\n    { classNm: 'Neutrophil-Segmented', value: '71', checked: false },\r\n    { classNm: 'Neutrophil-Band', value: '72', checked: false },\r\n    { classNm: 'Metamyelocyte', value: '02', checked: false },\r\n    { classNm: 'Myelocyte', value: '03', checked: false },\r\n    { classNm: 'Promyelocyte', value: '04', checked: false },\r\n    { classNm: 'Lymphocyte', value: '05', checked: false },\r\n    { classNm: 'Reactive lymphocyte', value: '61', checked: false },\r\n    { classNm: 'Abnormal lymphocyte', value: '62', checked: false },\r\n    { classNm: 'Monocyte', value: '07', checked: false },\r\n    { classNm: 'Eosinophil', value: '08', checked: false },\r\n    { classNm: 'Basophil', value: '09', checked: false},\r\n    { classNm: 'Blast', value: '10', checked: false},\r\n    { classNm: 'Plasma cell', value: '11', checked: false},\r\n    { classNm: 'nRBC', value: '12', checked: false},\r\n    { classNm: 'Giant platelet', value: '13', checked: false},\r\n    { classNm: 'Platelet aggregation', value: '14', checked: false},\r\n    { classNm: 'Malaria', value: '16', checked: false},\r\n    { classNm: 'Artifact(Smudge)', value: '15', checked: false},\r\n    { classNm: 'rbcPrintModel', value: '99999', checked: false},\r\n]\r\nexport const imagePrintAndBm = [\r\n    { classNm: 'Neutrophil', value: '01', checked: false },\r\n    { classNm: 'Neutrophil-Segmented', value: '71', checked: false },\r\n    { classNm: 'Neutrophil-Band', value: '72', checked: false },\r\n    { classNm: 'Metamyelocyte', value: '02', checked: false },\r\n    { classNm: 'Myelocyte', value: '03', checked: false },\r\n    { classNm: 'Promyelocyte', value: '04', checked: false },\r\n    { classNm: 'Lymphocyte', value: '05', checked: false },\r\n    { classNm: 'Abnormal lymphocyte', value: '06', checked: false },\r\n    { classNm: 'Monocyte', value: '07', checked: false },\r\n    { classNm: 'Eosinophil', value: '08', checked: false },\r\n    { classNm: 'Basophil', value: '09', checked: false },\r\n    { classNm: 'Blast', value: '10', checked: false },\r\n    { classNm: 'Plasma cell', value: '11', checked: false },\r\n    { classNm: 'Orthochromic Normoblast', value: '12', checked: false },\r\n    { classNm: 'Polychromic Normoblast', value: '13', checked: false },\r\n    { classNm: 'Basophilic Normoblast', value: '14', checked: false },\r\n    { classNm: 'Proerythroblast', value: '15', checked: false },\r\n    { classNm: 'Histiocyte', value: '16', checked: false },\r\n    { classNm: 'Others', value: '17', checked: false }\r\n];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { classNm: 'Neutrophil', value: '01', code: '' },\r\n    { classNm: 'Neutrophil-Segmented', value: '71', code: '' },\r\n    { classNm: 'Neutrophil-Band', value: '72', code: '' },\r\n    { classNm: 'Metamyelocyte', value: '02', code: '' },\r\n    { classNm: 'Myelocyte', value: '03', code: '' },\r\n    { classNm: 'Promyelocyte', value: '04', code: '' },\r\n    { classNm: 'Lymphocyte', value: '05', code: '' },\r\n    { classNm: 'Reactive lymphocyte', value: '61', code: '' },\r\n    { classNm: 'Abnormal lymphocyte', value: '62', code: '' },\r\n    { classNm: 'Monocyte', value: '07', code: '' },\r\n    { classNm: 'Eosinophil', value: '08', code: '' },\r\n    { classNm: 'Basophil', value: '09', code: '' },\r\n    { classNm: 'Blast', value: '10', code: '' },\r\n    { classNm: 'Plasma cell', value: '11', code: '' },\r\n    { classNm: 'nRBC', value: '12', code: '' },\r\n    { classNm: 'Giant platelet', value: '13', code: '' },\r\n    { classNm: 'Platelet aggregation', value: '14', code: '' },\r\n    { classNm: 'Malaria', value: '16', code: '' },\r\n    { classNm: 'Artifact(Smudge)', value: '15', code: '' },\r\n    { classNm: 'rbcPrintModel', value: '99999', code: '' },\r\n];\r\n\r\nexport const lisCodeRbcOption = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', classNm: 'Macrocyte', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', classNm: 'Microcyte', code: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', classNm: 'Anisocytosis', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', classNm: 'Hyperchromic', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', classNm: 'Hypochromic', code: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', classNm: 'Polychromia', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', classNm: 'Normal', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', classNm: 'Poikilocytosis', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', classNm: 'Target Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', classNm: 'Burr Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', classNm: 'Acanthocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', classNm: 'Ovalocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', classNm: 'Schistocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', classNm: 'Sickle Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', classNm: 'Stomatocyte', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', classNm: 'Tear Drop Cell', code: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', classNm: 'Spherocyte', code: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', classNm: 'Howell-Jolly Body', code: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', classNm: 'Basophilic Stippling', code: '0' }\r\n];\r\n\r\nexport const minRunCount = [\r\n    { minGPCount:0, minPACount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [\r\n{\r\n    min: 0,\r\n    max: 700,\r\n    wbcCount: 50\r\n}, {\r\n    min: 701,\r\n    max: 1000,\r\n    wbcCount: 100\r\n}, {\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcCount: 150\r\n}, {\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const barcodeImgDir = {\r\n    barcodeDirName: '00_Barcode_Image'\r\n}\r\n\r\nexport const dirName = {\r\n    howellJollyDirName: '19_Howell_jolly',\r\n    malariaDirName: '43_InclusionBody_Malaria',\r\n    noMalariaDirName: '44_InclusionBody_NoMalaria',\r\n    rbcClassDirName: '03_RBC_Classification',\r\n    rbcImageDirName: '02_RBC_Image',\r\n    barcodeDirName: '00_Barcode_Image',\r\n    wbcClassDirName: '01_WBC_Classification',\r\n    bfDirName: '02_LowPower_Image',\r\n    bfHighDirName: '03_HighPower_Image',\r\n    bfClassDirName: '05_BF_Classification',\r\n    iaRootPath: 'D:/ia_proc',\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"startStopP\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"startStopP\"\n}\nconst _hoisted_7 = { class: \"stopDiv\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = [\"disabled\"]\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \" INITIALIZING \", -1)\n\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n  // console.log(newIsRecoveryRun)\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.cellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.cellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsAnalysisType;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfAnalysisType;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 8, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\",\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountOptions), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_11))\n          }), 128))\n        ], 8, _hoisted_10), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y'}]),\n          onClick: sendInit\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'rotate-right'],\n            style: {\"font-size\":\"0.9rem\"},\n            class: _normalizeClass({ 'disabled': isInit.value !== 'N' })\n          }, null, 8, [\"class\"]),\n          _hoisted_12\n        ], 2)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n            @click=\"isInit === 'Y' && toggleStartStop('start')\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else>\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' @click=\"toggleStartStop('stop')\"/>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in stitchCountOptions\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y'}\">\r\n        <font-awesome-icon :icon=\"['fas', 'rotate-right']\" style=\"font-size: 0.9rem;\"\r\n                           :class=\"{ 'disabled': isInit !== 'N' }\"\r\n        />\r\n        <span> INITIALIZING </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n  // console.log(newIsRecoveryRun)\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.cellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.cellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsAnalysisType;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfAnalysisType;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"INPUT\", -1)\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"OUTPUT\", -1)\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_10\n      ]),\n      _createElementVNode(\"ul\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.output, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_12\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">INPUT</p>\r\n      </ul>\r\n      <!-- output -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.output\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p class=\"mt1\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"O\"),\n  /*#__PURE__*/_createTextVNode(\"rder \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"L\"),\n  /*#__PURE__*/_createTextVNode(\"ist\")\n], -1)\nconst _hoisted_3 = { class: \"orderListTable\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Barcode ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [\n  /*#__PURE__*/_createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\n\nimport {computed, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"table\", _hoisted_3, [\n      _hoisted_4,\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.analyzedDttm ? _unref(formatDateString)(slot?.analyzedDttm) : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(getCommonCode)('14', slot?.state)), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_6, _hoisted_8))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">O</span>rder <span class=\"greenColor\">L</span>ist</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n      <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n        <td>{{ slot?.barcodeId }}</td>\r\n        <td>{{ slot?.patientName }}</td>\r\n        <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n        <td>{{\r\n            slot?.analyzedDttm ? formatDateString(slot?.analyzedDttm) : formatDateString(slot?.orderDate)\r\n          }}\r\n        </td>\r\n        <!--        {{ slot?.state }}-->\r\n        <td>{{ getCommonCode('14', slot?.state) }}</td>\r\n      </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const basicWbcArr = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', key: '', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', key: '', orderIdx: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"BM\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"WBC\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_6 = { class: \"analysisWbc\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_8 = { class: \"categoryNm\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = { class: \"classNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_13 = { class: \"degree\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = {\n  key: 0,\n  class: \"categories mt1\"\n}\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_22 = { class: \"classNm\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_24 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_25 = { class: \"degree\" }\nconst _hoisted_26 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_27 = { class: \"mt1\" }\nconst _hoisted_28 = { class: \"categoryNm\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_30 = { class: \"classNm\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_32 = { key: 0 }\nconst _hoisted_33 = { class: \"degree\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\n\nimport {computed, ref, onMounted, watch, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {WbcInfo, basicWbcArr, basicBmClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _hoisted_2,\n            _createTextVNode(),\n            _hoisted_3,\n            _createTextVNode(\"lassification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _hoisted_4,\n            _createTextVNode(),\n            _hoisted_5,\n            _createTextVNode(\"lassification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createElementVNode(\"ul\", _hoisted_8, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_10, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_12, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_13, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                    _createElementVNode(\"ul\", _hoisted_20, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_22, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_24, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_25, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_26, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_27, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_28, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_29, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_30, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_33, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34))\n                : _createCommentVNode(\"\", true),\n              _hoisted_35\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\"><span class=\"greenColor\">BM</span> <span class=\"greenColor\">C</span>lassification\r\n      </template>\r\n      <template v-else><span class=\"greenColor\">WBC</span> <span class=\"greenColor\">C</span>lassification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li>\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li>\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt1\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <!--      nonrbc-->\r\n      <div class='mt1'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n              <li>{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {WbcInfo, basicWbcArr, basicBmClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassList] : [basicWbcArr];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n  /*#__PURE__*/_createTextVNode(\" Slide Image \")\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"col\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n], -1)\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"RBC\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\"),\n  /*#__PURE__*/_createTextVNode(\"lassification \")\n], -1)\nconst _hoisted_10 = { class: \"categoryNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { class: \"classNmRbc\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Platelets\"),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Malaria\")\n], -1)\nconst _hoisted_23 = { class: \"degree analysis\" }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = { style: {\"font-size\":\"0.7rem\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(rbcInfo)\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_4)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_12, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_14, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ]))\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_20, [\n        _hoisted_21,\n        _hoisted_22,\n        _createElementVNode(\"ul\", _hoisted_23, [\n          _createElementVNode(\"li\", _hoisted_24, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n          _createElementVNode(\"li\", _hoisted_25, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">RBC</span> <span class=\"greenColor\">C</span>lassification\r\n      </h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li>{{ classInfo?.classNm }}</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                  />\r\n                </li>\r\n                <li v-else>\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>Platelets</li>\r\n          <li>Malaria</li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // console.log(rbcInfo)\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=457dacf0&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e5e792d0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch} from 'vue';\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps} from 'vue';\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData']);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.slider {\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-height: 135px;\r\n}\r\n.slider img {\r\n  width: 12%;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./foundingCells.vue?vue&type=style&index=0&id=e5e792d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e5e792d0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent pb100a\" }\nconst _hoisted_10 = { class: \"mt1\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView100A',\n  props: [ 'parsedData','pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    console.log('afterChange')\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 1),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _createElementVNode(\"p\", _hoisted_10, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent pb100a'>\r\n        <p>INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData','pb100aCassette']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  // console.log(timeDataGet.value);\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    console.log('afterChange')\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-de316cce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref, watch} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData','isClass', 'startStatus', 'pb100aCassette'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      (pbVersion.value !== '100a')\n        ? (_openBlock(), _createBlock(workingView, {\n            key: 0,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : (_openBlock(), _createBlock(WorkingView100A, {\n            key: 1,\n            parsedData: props.parsedData,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\", \"pb100aCassette\"])),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 2,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData\n        }, null, 8, [\"parsedData\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute />\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <workingView :parsedData=\"props.parsedData\" class=\"contentRightChild\" v-if=\"pbVersion !== '100a'\"/>\r\n    <WorkingView100A :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\" class=\"contentRightChild\" v-else/>\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\nconst emits = defineEmits();\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData','isClass', 'startStatus', 'pb100aCassette']);\r\nconst pbVersion = ref<any>('');\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped src=\"@/assets/css/layout.css\">\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"@/assets/css/layout.css?vue&type=style&index=0&id=de316cce&lang=css&scoped=true&external\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-de316cce\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {CellImgAnalyzedRequest, CellImgAnalyzedResponse} from \"@/common/api/service/setting/dto/cellImgAnalyzedDto\";\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, '', true);\r\n};\r\n\r\nexport const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.user.userIp, '');\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \"CREATE ACCOUNT\", -1)\nconst _hoisted_3 = { class: \"joinWrapper\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\nconst _hoisted_12 = [\n  _hoisted_10,\n  _hoisted_11\n]\n\nimport {ref} from \"vue\";\r\nimport {createUser, getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const result = await getUserIpApi();\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n    state: '',\r\n    pcIp: result.data,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", null, [\n            _hoisted_4,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_5,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_6,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_7,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_8,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_9,\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event))\n            }, _hoisted_12, 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt2 mb4 \">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul class=\"joinWrapper\">\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\">\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser, getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const result = await getUserIpApi();\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n    state: '',\r\n    pcIp: result.data,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    putOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    updateNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi, putRbcDegreeApi, getRbcDegreeApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport process from \"process\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {defaultRbcDegree, normalRange, rbcClassList} from \"@/common/defines/constFile/settings\";\r\n\r\nconst saveHttpType = ref('');\r\nconst cellimgId = ref('');\r\nconst orderHttpType = ref('');\r\nconst normalItems = ref<any>(normalRange);\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    pbAnalysisType: projectType ? '500':'100',\r\n    wbcPositionMargin: '0',\r\n    rbcPositionMargin: '0',\r\n    pltPositionMargin: '0',\r\n    pbsAnalysisType: '100',\r\n    stitchCount: '1',\r\n    bfAnalysisType: '100',\r\n    iaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\nexport const firstCellImgSet = async () => {\r\n    let cellImgData;\r\n\r\n    const result = await getCellImgApi();\r\n    if (result && result.data) {\r\n        cellImgData = result.data;\r\n    }\r\n\r\n    if (!cellImgData) {\r\n        saveHttpType.value = 'post';\r\n    } else {\r\n        saveHttpType.value = 'put';\r\n    }\r\n\r\n    const cellImgSet = {\r\n        analysisType: defaultCellImgData.testTypeCd,\r\n        cellAnalyzingCount: defaultCellImgData.pbAnalysisType,\r\n        wbcPositionMargin: defaultCellImgData.wbcPositionMargin,\r\n        rbcPositionMargin: defaultCellImgData.rbcPositionMargin,\r\n        pltPositionMargin: defaultCellImgData.pltPositionMargin,\r\n        pbsAnalysisType: defaultCellImgData.pbsAnalysisType,\r\n        stitchCount: defaultCellImgData.stitchCount,\r\n        bfAnalysisType: defaultCellImgData.bfAnalysisType,\r\n        iaRootPath: defaultCellImgData.iaRootPath,\r\n        isNsNbIntegration: defaultCellImgData.isNsNbIntegration,\r\n        isAlarm: defaultCellImgData.isAlarm,\r\n        alarmCount: defaultCellImgData.alarmCount,\r\n        keepPage: defaultCellImgData.keepPage,\r\n        backupPath: defaultCellImgData.backupPath,\r\n        backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n        backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n    };\r\n    if (saveHttpType.value === 'post') {\r\n        try {\r\n            const result = await createCellImgApi(cellImgSet);\r\n            if (result) {\r\n                sessionStorage.setItem('isNsNbIntegration', defaultCellImgData?.isNsNbIntegration ? 'Y' : 'N');\r\n                sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.wbcPositionMargin));\r\n                sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.rbcPositionMargin));\r\n                sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.pltPositionMargin));\r\n                sessionStorage.setItem('iaRootPath', String(defaultCellImgData?.iaRootPath));\r\n                sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const firstSaveOrderClass = async (userId: any) => {\r\n    const orderList: any = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    for (const index in orderList) {\r\n        orderList[index].userName = userId;\r\n        orderList[index].orderIdx = index;\r\n    }\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n        if (result?.data.length === 0) {\r\n            orderHttpType.value = 'post';\r\n        }else{\r\n            orderHttpType.value = 'put';\r\n        }\r\n    }\r\n    try {\r\n        if (orderHttpType.value === 'post') {\r\n            await createOrderClassApi(orderList);\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const firstSaveNormalRange = async (userId: any) => {\r\n    try {\r\n        const result = await getNormalRangeApi();\r\n        if (result) {\r\n            if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n                await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n            }\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport const firstCreateRbcDegreeData = async (userId: any) => {\r\n    await combindDegree();\r\n    const rbcDegreeList: any = [];\r\n\r\n    rbcClassListArr.value.forEach((category: any) => {\r\n        category.classInfo.forEach((classItem: any) => {\r\n            rbcDegreeList.push({\r\n                categoryId: category.categoryId,\r\n                categoryNm: category.categoryNm,\r\n                classId: classItem.classId,\r\n                classNm: classItem.classNm,\r\n                degree1: classItem.degree1,\r\n                degree2: classItem.degree2,\r\n                degree3: classItem.degree3,\r\n            });\r\n        });\r\n    });\r\n\r\n    try {\r\n        const result = await getRbcDegreeApi();\r\n        if(!result.data){\r\n            await createRbcDegreeApi(rbcDegreeList);\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"uimdLogin\" }\nconst _hoisted_2 = { class: \"loginContent\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginTitle\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n  /*#__PURE__*/_createTextVNode(\"IMD\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginP mt2\" }, \"Unique Idea Medical Device\", -1)\nconst _hoisted_5 = { class: \"mt3 loginDiv\" }\nconst _hoisted_6 = { class: \"loginUl\" }\n\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport {getUserIpApi, login, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass(String(result.data?.user.id));\r\n      await firstSaveNormalRange(String(result.data?.user.id));\r\n      await firstCreateRbcDegreeData(String(result.data?.user.id));\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getUserIp(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getUserIp = async (userId: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount(userId, String(result.data), 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount(userId, result.data, 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n  const user = {\r\n    userId: userId,\r\n    password: '',\r\n    name: '',\r\n    employeeNo: '',\r\n    userType: '',\r\n    subscriptionDate: '',\r\n    state: '',\r\n    pcIp: pcIp\r\n  }\r\n\r\n  try {\r\n    const result = await putUserDataApi(user);\r\n    if (result) {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _hoisted_4,\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"ul\", _hoisted_6, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\"\n              }, null, 512), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\"\n              }, null, 512), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"loginBtn\" }, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: loginUser\n            }, \"Login\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt2'>Unique Idea Medical Device</p>\r\n      <div class=\"mt3 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\">\r\n          </li>\r\n        </ul>\r\n<!-- 자동 로그인시 Fullscreen이 안되는 문제가 발생하여 보류 -->\r\n<!--        <div class=\"mt1 loginFooter\">-->\r\n<!--          <input type=\"checkbox\" id=\"checked\" v-model=\"isAutoLoginEnabled\">-->\r\n<!--          <label class=\"loginLabel\" for=\"checked\">Save Login Profile</label>-->\r\n<!--        </div>-->\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <Alert\r\n    v-if=\"showAlert\"\r\n    :is-visible=\"showAlert\"\r\n    :type=\"alertType\"\r\n    :message=\"alertMessage\"\r\n    @hide=\"hideAlert\"\r\n    @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport {getUserIpApi, login, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass(String(result.data?.user.id));\r\n      await firstSaveNormalRange(String(result.data?.user.id));\r\n      await firstCreateRbcDegreeData(String(result.data?.user.id));\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getUserIp(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getUserIp = async (userId: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount(userId, String(result.data), 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount(userId, result.data, 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n  const user = {\r\n    userId: userId,\r\n    password: '',\r\n    name: '',\r\n    employeeNo: '',\r\n    userType: '',\r\n    subscriptionDate: '',\r\n    state: '',\r\n    pcIp: pcIp\r\n  }\r\n\r\n  try {\r\n    const result = await putUserDataApi(user);\r\n    if (result) {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.backUp.backUpDate, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTable\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Analysis Type\", -1)\nconst _hoisted_3 = { colspan: \"2\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  rowspan: \"4\"\n}\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = { key: 1 }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)\nconst _hoisted_14 = [\"value\"]\nconst _hoisted_15 = { key: 2 }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Plt Position Margin\", -1)\nconst _hoisted_17 = [\"value\"]\nconst _hoisted_18 = { key: 3 }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC Diff\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_21 = [\"value\"]\nconst _hoisted_22 = { key: 4 }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", { rowspan: \"2\" }, \"PBS Analysis Values\", -1)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)\nconst _hoisted_25 = [\"value\"]\nconst _hoisted_26 = { key: 0 }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Stitch Count\", -1)\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { key: 5 }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BF Analysis Values\", -1)\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_32 = [\"value\"]\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"th\", null, \"IA Root Path\", -1)\nconst _hoisted_34 = { colspan: \"2\" }\nconst _hoisted_35 = [\"value\"]\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"th\", null, \"NS/NB Integration\", -1)\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Alarm Timer (sec)\", -1)\nconst _hoisted_38 = { key: 6 }\nconst _hoisted_39 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Keep WBC Page\", -1)\nconst _hoisted_40 = { class: \"backupDiv\" }\nconst _hoisted_41 = { class: \"backupDivChild\" }\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"mb1\" }, \"Backup and Restore\", -1)\nconst _hoisted_43 = { class: \"settingDatePickers\" }\nconst _hoisted_44 = [\"value\"]\n\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst pbAnalysisType = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsAnalysisType = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfAnalysisType = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n  if(res){\r\n    console.log(res)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        pbAnalysisType.value = data.cellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbsAnalysisType.value = data.pbsAnalysisType;\r\n        stitchCount.value = data.stitchCount;\r\n        bfAnalysisType.value = data.bfAnalysisType;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    cellAnalyzingCount: pbAnalysisType.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbsAnalysisType: pbsAnalysisType.value,\r\n    stitchCount: stitchCount.value,\r\n    bfAnalysisType: bfAnalysisType.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      console.log(result)\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"table\", _hoisted_1, [\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_2,\n            _createElementVNode(\"td\", _hoisted_3, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_4))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, testTypeCd.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'pb')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, \"WBC Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            (projectType.value === 'classInfo')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"BM Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            _hoisted_7,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((pbAnalysisType).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_8))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, pbAnalysisType.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [\n                _hoisted_10,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((wbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(WbcPositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_11))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, wbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [\n                _hoisted_13,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((rbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_14))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, rbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_15, [\n                _hoisted_16,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((pltPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_17))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pltPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_18, [\n                _hoisted_19,\n                _hoisted_20,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((pbAnalysisType).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_21))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbAnalysisType.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_22, [\n                _hoisted_23,\n                _hoisted_24,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((pbsAnalysisType).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_25))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbsAnalysisType.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'classInfo')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_26))\n              : _createCommentVNode(\"\", true),\n            _hoisted_27,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((stitchCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_28))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, stitchCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_29, [\n                _hoisted_30,\n                _hoisted_31,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((bfAnalysisType).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_32))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, bfAnalysisType.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_33,\n            _createElementVNode(\"td\", _hoisted_34, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((iaRootPath).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_35))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, iaRootPath.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_36,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleNsNbIntegration\n              }, null, 8, [\"icon\"])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_37,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleAlarm\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((alarmCount).value = $event)),\n                class: \"alarmInput\"\n              }, null, 512), [\n                [_vModelText, alarmCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_38, [\n                _hoisted_39,\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleKeepPage\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_40, [\n        _createElementVNode(\"div\", _hoisted_41, [\n          _hoisted_42,\n          _createElementVNode(\"div\", _hoisted_43, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((backupRootPath).value = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type,\n                  value: type\n                }, _toDisplayString(type), 9, _hoisted_44))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, backupRootPath.value]\n            ]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupStartDate.value,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((backupStartDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupEndDate.value,\n              \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((backupEndDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createElementVNode(\"button\", {\n              class: \"backupBtn\",\n              onClick: createBackup\n            }, \"backup\")\n          ])\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[14] || (_cache[14] = ($event: any) => (cellImgSet()))\n      }, \"Save Cell Image Analyzed\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <table class=\"settingTable\">\r\n      <tbody>\r\n      <tr>\r\n        <th>Analysis Type</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='testTypeCd'>\r\n            <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--Common analysis values-->\r\n      <tr>\r\n        <th rowspan=\"4\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n        <th v-if=\"projectType === 'classInfo'\">BM Diff Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n\r\n          <select v-model='pbAnalysisType'>\r\n            <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Wbc Position Margin</th>\r\n        <td>\r\n          <select v-model='wbcPositionMargin'>\r\n            <option v-for=\"type in WbcPositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Rbc Position Margin</th>\r\n        <td>\r\n          <select v-model='rbcPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Plt Position Margin</th>\r\n        <td>\r\n          <select v-model='pltPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--WBC diff analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>WBC Diff</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='pbAnalysisType'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      PBS analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th rowspan=\"2\">PBS Analysis Values</th>\r\n        <th>\r\n          Cell Analyzing Count\r\n        </th>\r\n        <td>\r\n          <select v-model='pbsAnalysisType'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th v-if=\"projectType === 'classInfo'\"></th>\r\n        <th>Stitch Count</th>\r\n        <td>\r\n          <select v-model='stitchCount'>\r\n            <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      BF analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>BF Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='bfAnalysisType'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>IA Root Path</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='iaRootPath'>\r\n            <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>NS/NB Integration</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleNsNbIntegration\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Alarm Timer (sec)</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleAlarm\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" v-model='alarmCount' class=\"alarmInput\">\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Keep WBC Page</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleKeepPage\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div class=\"backupDiv\">\r\n      <div class=\"backupDivChild\">\r\n        <h5 class=\"mb1\">Backup and Restore</h5>\r\n        <div class=\"settingDatePickers\">\r\n          <select v-model='backupRootPath'>\r\n            <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n          <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n          <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n          <button class=\"backupBtn\" @click=\"createBackup\">backup</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button class=\"saveBtn\" type=\"button\" @click='cellImgSet()'>Save Cell Image Analyzed</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst pbAnalysisType = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsAnalysisType = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfAnalysisType = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n  if(res){\r\n    console.log(res)\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        pbAnalysisType.value = data.cellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbsAnalysisType.value = data.pbsAnalysisType;\r\n        stitchCount.value = data.stitchCount;\r\n        bfAnalysisType.value = data.bfAnalysisType;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    cellAnalyzingCount: pbAnalysisType.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbsAnalysisType: pbsAnalysisType.value,\r\n    stitchCount: stitchCount.value,\r\n    bfAnalysisType: bfAnalysisType.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      console.log(result)\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { id: \"collapse-4\" }\nconst _hoisted_2 = { class: \"rbcDegreeCategoryNm\" }\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = { class: \"degreeInput mb1\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\n\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    console.log(!result.data)\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"mt2 rbcClassListArr\",\n            key: 'rbc' + index\n          }, [\n            _createElementVNode(\"div\", _hoisted_2, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                _createElementVNode(\"div\", null, _toDisplayString(classItem.classNm), 1),\n                _createElementVNode(\"div\", _hoisted_3, \" [ \" + _toDisplayString(`${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}`) + \" ] \", 1),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                    }, null, 8, _hoisted_5), [\n                      [_vModelText, classItem.degree1]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                    }, null, 8, _hoisted_6), [\n                      [_vModelText, classItem.degree2]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                    }, null, 8, _hoisted_7), [\n                      [_vModelText, classItem.degree3]\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", { onClick: onResetDegree }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div id=\"collapse-4\">\r\n      <!--      {{ rbcClassListArr }}-->\r\n      <div class=\"mt2 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n        <div class=\"rbcDegreeCategoryNm\">\r\n          {{ category?.categoryNm }}\r\n        </div>\r\n\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <div>\r\n            {{ classItem.classNm }}\r\n          </div>\r\n          <div class=\"mb1\">\r\n            [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]\r\n          </div>\r\n          <div>\r\n            <div class='degreeInput mb1'>\r\n              <input type=\"number\" v-model=\"classItem.degree1\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree2\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree3\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button @click=\"onResetDegree\">Reset</button>\r\n      <button type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    console.log(!result.data)\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCurrentInstance} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\n\r\n// appHeader page\r\nexport const sendSettingInfoWebSocket = (isOilReset: string, oilCount: string, userId: string, isNsNbIntegration: string) => {\r\n    const settings = tcpReq().embedStatus.settings;\r\n    settings.reqUserId = userId;\r\n\r\n    Object.assign(settings, {\r\n        oilCount,\r\n        isOilReset,\r\n        // uiVersion: 'uimd-pb-comm_v3',\r\n        isNsNbIntegration: isNsNbIntegration,\r\n    });\r\n    sendMessage(settings);\r\n}\r\n\r\nexport const sendOilPrimeWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.oilPrime);\r\n}\r\n\r\n\r\n// 셋팅 page -> 디바이스 컨트롤 page\r\nexport const onGripperOpenWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.gripperOpen.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.gripperOpen);\r\n}\r\n\r\nexport const onCameraResetWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.cameraReset.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.cameraReset);\r\n}\r\n\r\n\r\nconst sendMessage = (payload: object) => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: payload\r\n    });\r\n    // store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Gripper Open\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Camera Reset\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", { class: \"mt2\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Charge Remaining Count\"),\n  /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"defaultBtn\"\n  }, \"Scan\")\n], -1)\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_1,\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            type: \"button\",\n            class: \"defaultBtn\"\n          }, \"OK\")\n        ]),\n        _createElementVNode(\"li\", { class: \"mt2\" }, [\n          _hoisted_2,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onCameraReset\n          }, \"OK\")\n        ]),\n        _hoisted_3\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb1\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" type=\"button\" class=\"defaultBtn\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onCameraReset\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\">Scan</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\n\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', className: '' },\r\n  { customNum: 91, abbreviation: '', className: '' },\r\n  { customNum: 92, abbreviation: '', className: '' },\r\n  { customNum: 93, abbreviation: '', className: '' },\r\n  { customNum: 94, abbreviation: '', className: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item!.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.className) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_3), [\n                [_vModelText, item.className]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item!.customNum }}</span>\r\n        <span><input v-model=\"item.abbreviation\" type=\"text\" maxlength=\"3\" placeholder=\"abbreviation\"/></span>\r\n        <span><input v-model=\"item.className\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', className: '' },\r\n  { customNum: 91, abbreviation: '', className: '' },\r\n  { customNum: 92, abbreviation: '', className: '' },\r\n  { customNum: 93, abbreviation: '', className: '' },\r\n  { customNum: 94, abbreviation: '', className: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"normalItems\" }\nconst _hoisted_2 = { class: \"mt1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"div\", null, _toDisplayString(item.abbreviation) + \" - \" + _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_3), [\n                  [_vModelText, item.min]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, item.max]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\">\r\n        <div>\r\n          {{ item.abbreviation }} - {{ item.fullNm }}\r\n        </div>\r\n        <div class=\"mt1\">\r\n          <span><input v-model=\"item.min\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span><input v-model=\"item.max\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)\nconst _hoisted_3 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_4 = { class: \"nth1ChildOrder\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_4, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.fullNm), 1)\n          ])\n        ], 40, _hoisted_3))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.fullNm }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {onMounted, ref} from \"vue\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\"}\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC min\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC max\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"count\")\n  ])\n], -1)\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_5), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_7))\n                  }), 128))\n                ], 8, _hoisted_6), [\n                  [_vModelSelect, wbcRunning.wbcCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto;\">\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n        class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n      }, \"Cell Image Analyzed\", 2),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n            class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n          }, \"RBC Degree\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n      }, \"Device Controls\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n      }, \"WBC Running Count\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n      _createElementVNode(\"button\", {\n        onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n            class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n          }, \"BF Hot Keys\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n      }, \"Normal Range\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n      <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n      <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n      <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n      </button>\r\n      <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n      </button>\r\n      <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n      <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n      <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt2\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"No.\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User Type\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Latest Date\")\n  ])\n], -1)\n\nimport { onMounted, ref } from \"vue\";\r\nimport { getAllUsersApi  } from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    } else {\r\n      console.log('No data received from the API');\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n    console.log('result - get all users')\r\n\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n      } else {\r\n        allUsers.value = result.data.users || []\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n        class: \"searchSelect\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: option.value,\n            value: option.value\n          }, _toDisplayString(option.text), 9, _hoisted_3))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, userSearchOption.value]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n        class: \"searchInputBox\"\n      }, null, 512), [\n        [_vModelText, inputText.value]\n      ]),\n      _createVNode(_component_font_awesome_icon, {\n        icon: ['fas', 'search'],\n        class: \"searchBtn\",\n        onClick: onSearch\n      })\n    ]),\n    _createElementVNode(\"table\", _hoisted_4, [\n      _hoisted_5,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n          return (_openBlock(), _createElementBlock(\"tr\", {\n            key: user.id\n          }, [\n            _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt2\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, ref } from \"vue\";\r\nimport { getAllUsersApi  } from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    } else {\r\n      console.log('No data received from the API');\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n    console.log('result - get all users')\r\n\r\n    if (result) {\r\n      if (!result?.data) {\r\n        console.log(null)\r\n      } else {\r\n        allUsers.value = result.data.users || []\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.value);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.value);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.value\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.classNm), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.value,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.value\">\r\n      <div>{{ item.classNm }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.value\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.value);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.value);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb4\" }, \" [ WBC ] \", -1)\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { class: \"alignDiv\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \" [ RBC ] \", -1)\nconst _hoisted_7 = { class: \"mb1\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = { class: \"alignDiv\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \" [ Min Count ] \", -1)\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Giant Platelet\", -1)\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Platelet Aggregation\", -1)\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.value\n        }, [\n          _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.classNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.code) = $event)\n          }, null, 8, _hoisted_4), [\n            [_vModelText, item.code]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _hoisted_6,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_7, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.classNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.code) = $event)\n          }, null, 8, _hoisted_8), [\n            [_vModelText, item.code]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _hoisted_10,\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGPCount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minGPCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((minCountArr.value[0].minPACount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minPACount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_15, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb4\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.value\">\r\n      <p class=\"mb1\">{{ item.classNm }}</p>\r\n      <input type=\"text\" v-model=\"item.code\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt2 mb4\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.classNm\">\r\n      <p class=\"mb1\">{{ item.categoryNm }} - {{ item.classNm }}</p>\r\n      <input type=\"text\" v-model=\"item.code\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb2\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGPCount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPACount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { cbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    console.log(cbcCodeArr.value);\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = cbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.cd\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.classNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.classCd) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.classCd]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <label v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p class=\"mb1\">{{ item.classNm }}</p>\r\n      <input type=\"text\" v-model=\"item.classCd\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { cbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    console.log(cbcCodeArr.value);\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = cbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \"LIS Hot Key\", -1)\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Lis File Path\", -1)\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Cbc File Path\", -1)\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[0] || (_cache[0] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_4,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_5)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_6,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_7)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb2\">LIS Hot Key</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n               @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Lis File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Cbc File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"tab-content\" }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n        class: _normalizeClass({ 'active': _unref(selectedTab) === 'ImagePrint' })\n      }, \"Image Print\", 2),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'LisCode' })\n            }, \"Lis Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'CbcCode' })\n            }, \"CBC Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'filePathSet' })\n            }, \"Lis(CBC) Hot Key & File Path\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': selectedTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': selectedTab === 'LisCode' }\">Lis Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': selectedTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': selectedTab === 'filePathSet' }\">Lis(CBC) Hot Key & File Path</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=23f4e997\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\n\nimport { ref, onMounted } from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersion.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n          _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n          _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersion\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\n\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", _hoisted_2, [\n      (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n        return _createElementVNode(\"li\", {\n          key: tab,\n          class: _normalizeClass({ activeTab: currentTab.value === tab }),\n          onClick: ($event: any) => (changeTab(tab))\n        }, _toDisplayString(tab), 11, _hoisted_3)\n      }), 64))\n    ]),\n    (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.layer {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.layer-content {\r\n  text-align: left;\r\n  background: #414141;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n.layer-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  font-size: 1.2rem;\r\n  font-weight: 600;\r\n  border-bottom: 1px solid #dedede;\r\n  padding-bottom: 15px;\r\n  color: #fff;\r\n}\r\n\r\n.layer-body {\r\n  color: #fff;\r\n}\r\n</style>\r\n","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./modal.vue?vue&type=style&index=0&id=5bdfef29&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5bdfef29\"]])\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {RuningInfo, RuningInfoApiRequest, RunningInfoRes} from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nimport * as http from \"http\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { style: {\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\"} }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"Analysis Report from UIMD PB system\")\n], -1)\nconst _hoisted_3 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_4 = { style: {\"width\":\"100%\"} }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n], -1)\nconst _hoisted_6 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)\nconst _hoisted_8 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_9 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)\nconst _hoisted_11 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_12 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)\nconst _hoisted_14 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_15 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)\nconst _hoisted_17 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_18 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)\nconst _hoisted_20 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_21 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)\nconst _hoisted_23 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_24 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)\nconst _hoisted_26 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_27 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)\nconst _hoisted_29 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_30 = { style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_31 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)\nconst _hoisted_33 = { style: {\"width\":\"100%\"} }\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\")\n  ])\n], -1)\nconst _hoisted_36 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_37 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_38 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_39 = { key: 0 }\nconst _hoisted_40 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Others\", -1)\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Platelets\", -1)\nconst _hoisted_43 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_44 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Malaria\", -1)\nconst _hoisted_47 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_48 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_50 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_51 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_52 = { style: {\"margin-top\":\"20px\"} }\nconst _hoisted_53 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"WBC classification result\", -1)\nconst _hoisted_54 = { style: {\"width\":\"100%\"} }\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_56 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_57 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_58 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_59 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total count\", -1)\nconst _hoisted_61 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_62 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1)\nconst _hoisted_63 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_64 = {\n  colspan: \"1\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_65 = { key: 0 }\nconst _hoisted_66 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_67 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_68 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_69 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\"}\n}\nconst _hoisted_70 = { style: {\"font-weight\":\"bold\"} }\nconst _hoisted_71 = { style: {\"position\":\"relative\"} }\nconst _hoisted_72 = [\"src\", \"width\", \"height\"]\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'print',\n  props: ['selectItems', 'printOnOff', 'selectItemWbc'],\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst iaRootPath = commonDataGet.value.iaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter(item => {\r\n    return (\r\n        (item.id !== '12' && item.id !== '13' && item.id !== '14' && item.id !== '15' && item.id !== '16') &&\r\n        item.count > 0\r\n    );\r\n  });\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data\r\n            .filter((item) => item.checked)\r\n            .map((item) => item.value);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item) =>\r\n            imagePrintAndWbcArr.value.includes(item.id)\r\n        );\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n      onClick: closePrint\n    }, \"Close\"),\n    _createElementVNode(\"div\", {\n      ref_key: \"printContent\",\n      ref: printContent,\n      style: {\"margin-top\":\"20px\"}\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"table\", _hoisted_4, [\n          _hoisted_5,\n          _createElementVNode(\"tbody\", null, [\n            _createElementVNode(\"tr\", _hoisted_6, [\n              _hoisted_7,\n              _createElementVNode(\"td\", _hoisted_8, _toDisplayString(__props.selectItems?.slotId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_9, [\n              _hoisted_10,\n              _createElementVNode(\"td\", _hoisted_11, _toDisplayString(_unref(formatDateString)(__props.selectItems?.orderDttm)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_12, [\n              _hoisted_13,\n              _createElementVNode(\"td\", _hoisted_14, _toDisplayString(__props.selectItems?.submitUserId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_15, [\n              _hoisted_16,\n              _createElementVNode(\"td\", _hoisted_17, _toDisplayString(__props.selectItems?.submitOfDate), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_18, [\n              _hoisted_19,\n              _createElementVNode(\"td\", _hoisted_20, _toDisplayString(_unref(getTestTypeText)(__props.selectItems?.testType)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_21, [\n              _hoisted_22,\n              _createElementVNode(\"td\", _hoisted_23, _toDisplayString(__props.selectItems?.patientName), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_24, [\n              _hoisted_25,\n              _createElementVNode(\"td\", _hoisted_26, _toDisplayString(__props.selectItems?.birthDay), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_27, [\n              _hoisted_28,\n              _createElementVNode(\"td\", _hoisted_29, _toDisplayString(__props.selectItems?.gender === '01' ? 'Male' : 'Female'), 1)\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_30, [\n          (['01', '04'].includes(__props.selectItems?.testType))\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                _hoisted_32,\n                _createElementVNode(\"table\", _hoisted_33, [\n                  _hoisted_34,\n                  _hoisted_35,\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([__props.selectItems?.rbcInfo], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(\"tr\", {\n                            key: innerIndex,\n                            style: {\"padding-bottom\":\"5px\"}\n                          }, [\n                            _createElementVNode(\"td\", _hoisted_36, _toDisplayString(category.categoryNm), 1),\n                            _createElementVNode(\"td\", _hoisted_37, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                              }), 128))\n                            ]),\n                            _createElementVNode(\"td\", _hoisted_38, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                  (classInfo.classId !== '01' || category.categoryId === '05')\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _toDisplayString(classInfo?.degree), 1))\n                                    : _createCommentVNode(\"\", true)\n                                ], 64))\n                              }), 128))\n                            ])\n                          ]))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", _hoisted_40, [\n                      _hoisted_41,\n                      _hoisted_42,\n                      _createElementVNode(\"th\", _hoisted_43, _toDisplayString(__props.selectItems?.rbcInfo.pltCount) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_44, [\n                      _hoisted_45,\n                      _hoisted_46,\n                      _createElementVNode(\"th\", _hoisted_47, _toDisplayString(__props.selectItems?.rbcInfo?.malariaCount) + \" / \" + _toDisplayString(__props.selectItems.maxRbcCount) + \" RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_48, [\n                      _hoisted_49,\n                      _hoisted_50,\n                      _createElementVNode(\"th\", _hoisted_51, _toDisplayString(__props.selectItems.rbcMemo), 1)\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_52, [\n            _hoisted_53,\n            _createElementVNode(\"table\", _hoisted_54, [\n              _hoisted_55,\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_56, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_57, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_58, _toDisplayString(item?.percent), 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_59, [\n                  _hoisted_60,\n                  _createElementVNode(\"td\", _hoisted_61, _toDisplayString(__props.selectItems?.wbcInfo?.totalCount), 1),\n                  _hoisted_62\n                ]),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_63, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_64, [\n                      _createTextVNode(_toDisplayString(item?.count) + \" \", 1),\n                      (item.id === '12' || item.id === '13')\n                        ? (_openBlock(), _createElementBlock(\"span\", _hoisted_65, \" / \" + _toDisplayString(__props.selectItems?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                        : _createCommentVNode(\"\", true)\n                    ])\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_66, [\n                  _hoisted_67,\n                  _createElementVNode(\"td\", _hoisted_68, _toDisplayString(__props.selectItems?.memo), 1)\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_69, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id\n                }, [\n                  _createElementVNode(\"div\", _hoisted_70, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"10px\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_71, [\n                          _createElementVNode(\"img\", {\n                            src: getImageUrl(image.fileName, item.id, item.title),\n                            width: image.width ? image.width : '150px',\n                            height: image.height ? image.height : '150px',\n                            style: _normalizeStyle({ filter: image.filter }),\n                            class: \"cellImg\",\n                            ref_for: true,\n                            ref: \"cellRef\"\n                          }, null, 12, _hoisted_72),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ])\n    ], 512)\n  ]))\n}\n}\n\n})","<template>\r\n  <div style=\"width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px;\">\r\n    <button style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\" @click=\"closePrint\">Close</button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD PB system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ getTestTypeText(selectItems?.testType) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n        <div style=\"margin-top: 20px; border-top: 2px dotted #696969\">\r\n          <!-- RBC Classification -->\r\n          <div v-if=\"['01', '04'].includes(selectItems?.testType)\" style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th style=\"text-align: left;\">Category</th>\r\n                <th style=\"text-align: left;\">Class</th>\r\n                <th style=\"text-align: left;\">Degree</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <template v-for=\"(classList, outerIndex) in [selectItems?.rbcInfo]\" :key=\"outerIndex\">\r\n                <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                  <tr style=\"padding-bottom: 5px;\">\r\n                    <td style=\"text-align: left; padding: 5px 0;\">{{ category.categoryNm }}</td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div>{{ classInfo?.classNm }}</div>\r\n                      </template>\r\n                    </td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">{{ classInfo?.degree }}</div>\r\n                      </template>\r\n                    </td>\r\n                  </tr>\r\n                </template>\r\n              </template>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Others</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Platelets</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo.pltCount }} PLT / 1000 RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Malaria</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo?.malariaCount }} / {{ selectItems.maxRbcCount }} RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems.rbcMemo }}</th>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <!-- WBC Classification -->\r\n          <div style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">WBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <tbody>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }}</td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total count</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n              </tr>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td colspan=\"1\" style=\"text-align: left; padding: 5px 0;\">\r\n                  {{ item?.count }}\r\n                  <span v-if=\"item.id === '12' || item.id === '13'\"> / {{ selectItems?.wbcInfo?.maxWbcCount }} WBC</span>\r\n                </td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <td colspan=\"2\" style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.memo }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Print List -->\r\n            <ul class=\"print\" style=\"list-style: none; padding-left: 0; margin-top: 20px;\">\r\n              <li v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n                <div style=\"font-weight: bold;\">{{ item?.title }} ({{ item?.count }})</div>\r\n                <ul :class=\"'wbcImgWrap ' + item?.title\" style=\"list-style: none; padding-left: 0; margin-top: 10px;\">\r\n                  <li v-for=\"(image) in item.images\" :key=\"image.fileName\" style=\"display: inline-block; margin-right: 10px;\">\r\n                    <div style=\"position: relative;\">\r\n                      <img :src=\"getImageUrl(image.fileName, item.id, item.title)\" :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\" :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                      <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst props = defineProps(['selectItems', 'printOnOff', 'selectItemWbc']);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst iaRootPath = commonDataGet.value.iaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter(item => {\r\n    return (\r\n        (item.id !== '12' && item.id !== '13' && item.id !== '14' && item.id !== '15' && item.id !== '16') &&\r\n        item.count > 0\r\n    );\r\n  });\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data\r\n            .filter((item) => item.checked)\r\n            .map((item) => item.value);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item) =>\r\n            imagePrintAndWbcArr.value.includes(item.id)\r\n        );\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","<template>\r\n  <table class='defaultTable mt2 dbDataTable'>\r\n    <thead>\r\n    <tr>\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(S)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n    <colgroup>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n    </colgroup>\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr :class=\"{ selectedTr: selectedItemId === item.id, submittedTr: item.submitState === 'Submit', rock: item.lock_status && item.pcIp !== myIp, checkFirst: item.submitState === 'checkFirst' }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n      >\r\n        <td> {{ idx + 1 }}</td>\r\n        <td>\r\n          <input type=\"checkbox\" v-model=\"item.checked\" @change=\"handleCheckboxChange(item)\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon v-if=\"item?.submitState === 'checkFirst' || item?.submitState === ''\"\r\n                             :icon=\"['fas', 'pen-to-square']\"\r\n                             @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 10px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\"> NO Data</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 60) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"deleteRow\">Delete</li>\r\n      <li>export XLSX</li>\r\n    </ul>\r\n  </div>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li>\r\n            <span>PB/BF</span>\r\n            <input type=\"text\" v-model=\"itemObj.testType\"/>\r\n          </li>\r\n          <li>\r\n            <span>Tray Slot</span>\r\n            <input type=\"text\" readonly v-model=\"itemObj.traySlot\"/>\r\n          </li>\r\n          <li>\r\n            <span>BARCODE ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT NAME</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li>\r\n            <span>Analyzed date</span>\r\n            <input type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly/>\r\n          </li>\r\n          <li>\r\n            <span>Signed state</span>\r\n            <input type=\"text\" v-model=\"itemObj.submitState\" readonly/>\r\n          </li>\r\n          <li>\r\n            <span>Barcode Image</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button @click=\"dbDataEditSet\">Ok</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport moment from \"moment\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\n\r\n\r\nconst props = defineProps(['dbData']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  projectType.value = window.PROJECT_TYPE;\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n});\r\nwatchEffect(async () => {\r\n  if (props.dbData.length > 0) {\r\n    await nextTick();\r\n    // 첫 번째 행을 클릭\r\n    const dbBaseTrClickId = sessionStorage.getItem('dbBaseTrClickId') || 0;\r\n    const filteredItems = props.dbData.filter(item => item.id === Number(dbBaseTrClickId));\r\n    selectItem(filteredItems[0]);\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.5,\r\n    });\r\n    if (loadMoreRef.value) {\r\n      observer.observe(loadMoreRef.value);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n};\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = (item, event) => {\r\n  if (props.dbData.filter(item => item.checked).length === 0) {\r\n    showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item.hasOwnProperty('checked')) { // 체크드 하는 부분이 없으면 넣어줘야 갱신 가능\r\n    item.checked = false;\r\n  }\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = (item) => {\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  sessionStorage.setItem('dbBaseTrClickId', item.id);\r\n\r\n  // 선택된 행이 화면에 보이도록 스크롤 조정\r\n  const selectedRow = document.querySelector(`[data-row-id=\"${item.id}\"]`);\r\n  if (selectedRow) {\r\n    selectedRow.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n  }\r\n};\r\nconst getUserIp = async (item) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    const req = `oldPcIp=${result.data}&newEntityId=${item.id}&newPcIp=${result.data}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status) {\r\n    return;\r\n  }\r\n\r\n  let wbcInfoData = [];\r\n  if (Object.keys(item?.wbcInfo).length === 0) {\r\n    wbcInfoData = projectType.value !== 'bm' ? basicWbcArr : basicBmClassList;\r\n    item.wbcInfo = projectType.value !== 'bm' ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]};\r\n  } else {\r\n    wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n  }\r\n\r\n  const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(item?.rbcInfo));\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedArray));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(item));\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: item.wbcInfoAfter});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getUserIp(item);\r\n  await router.push('/databaseDetail');\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]]\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['','Ready','checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType)\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async () => {\r\n  try {\r\n    const selectedItems = props.dbData.filter(item => item.checked);\r\n    if (selectedItems.length === 0) {\r\n      showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n      return;\r\n    }\r\n\r\n    const idsToDelete = selectedItems.map(item => item.id);\r\n    const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n    const rootArr = selectedItems.map(item => `${path}/${item.slotId}`);\r\n    const req = {\r\n      ids: idsToDelete,\r\n      img_drive_root_path: rootArr\r\n    }\r\n    const response = await deleteRunningApi(req);\r\n\r\n    if (response.success) {\r\n      showSuccessAlert('Items deleted successfully');\r\n      emits('refresh'); // 데이터 다시 불러오기\r\n      resetContextMenu();\r\n    } else {\r\n      console.error('Failed to delete items');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <ul class=\"orderListUi\">\r\n        <li>Order ID <span>{{ selectedItem?.slotId }}</span>  </li>\r\n        <li>LIS status <span>No data sent or received from LIS</span>  </li>\r\n        <li>Type of order <span>No data sent or received from LIS</span>\r\n          <span v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">WBC + RBC</span>\r\n          <span v-else>{{ selectedItem?.testType }}</span>\r\n        </li> \r\n        <li>NS, NB Integration <span>{{ selectedItem?.isNsNbIntegration }}</span>  </li>\r\n        <li>Patient ID <span>{{ selectedItem?.patientId }}</span>  </li>\r\n        <li>Patient Name <span>{{ selectedItem?.patientNm }}</span>  </li>\r\n        <li>\r\n          <img :src=\"pilePath\" style=\"width: 235px\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <h3 class=\"mt2 mb1 hh3title\">Result Information</h3>\r\n      <ul>\r\n        <li>Analyzed Date <span>{{ formatDateString(selectedItem?.analyzedDttm) }}</span></li>\r\n        <li>Signed State <span>{{ selectedItem?.submitState }}</span></li>\r\n        <li>Signed of Date <span>{{ selectedItem?.submitOfDate }}</span></li>\r\n        <li>Signed User ID <span>{{ selectedItem?.submitUserId }}</span></li>\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">\r\n          <div v-if=\"showClassificationResults(selectedItem?.classificationResult)\">\r\n            <div v-for=\"result in selectedItem.classificationResult\" :key=\"result.title\">\r\n              <p>{{ result.title }}</p>\r\n              <p>{{ result.count }}</p>\r\n              <p>{{ result.percent }}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\nimport {ref, defineProps, onMounted, watchEffect, watch, nextTick} from 'vue';\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst props = defineProps(['selectedItem']);\r\nconst iaRootPath = ref('');\r\nconst pilePath = ref('');\r\n\r\n\r\nonMounted(() => {\r\n  // iaRootPath가 존재하면 getImageUrl 함수 호출\r\n  iaRootPath.value = sessionStorage.getItem('iaRootPath');\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n});\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !['12_NR', '13_GP', '14_PA', '15_AR', '16_MA', '17_SM'].includes(result.dirName)\r\n  );\r\n\r\n};\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nfunction getImageUrl(imageName){\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + barcodeImgDir.barcodeDirName + '/'}&imageName=${imageName}`;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e8f47d4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"WBC Images\", -1))\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbWbcImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_5 = { key: 1 }\n\nimport { onMounted, ref, watch } from 'vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbWbcImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, onMounted, ref, watch } from 'vue';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-height: 348px;\r\n  overflow: auto;\r\n}\r\n\r\n.image-container img {\r\n  max-width: 100px;\r\n  max-height: 100px;\r\n  margin: 5px;\r\n}\r\n</style>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./listWbcImg.vue?vue&type=style&index=0&id=4e8f47d4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e8f47d4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"BM Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbBmImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbBmImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleH3\" }\nconst _hoisted_2 = { class: \"listBoxTable\" }\nconst _hoisted_3 = { class: \"filterListDiv\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\nconst _hoisted_7 = [\n  _hoisted_4,\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"settingDatePickers\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_10 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"NR count\", -1)\nconst _hoisted_12 = { class: \"wbcTotal\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Total\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", null, \"DESC\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", null, \"ASC\", -1)\nconst _hoisted_17 = [\n  _hoisted_14,\n  _hoisted_15,\n  _hoisted_16\n]\nconst _hoisted_18 = {\n  key: 1,\n  class: \"wbcInfoFilter\"\n}\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Info Filter\", -1)\nconst _hoisted_20 = { class: \"wbcInfoFilter\" }\nconst _hoisted_21 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_22 = [\"for\"]\nconst _hoisted_23 = { class: \"lastTestType\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Test Type\", -1)\nconst _hoisted_25 = [\"checked\"]\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"span\", null, \"ALL\", -1)\nconst _hoisted_27 = [\"checked\"]\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Diff\", -1)\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"span\", null, \"PBS\", -1)\nconst _hoisted_31 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  // console.log(startDate.value);\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_1, [\n        _createTextVNode(\" Classification List \"),\n        _createElementVNode(\"button\", { onClick: classListToggleEvent }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'list-check'] })\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _hoisted_7, 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n              class: \"searchInputBox\"\n            }, null, 512), [\n              [_vModelText, searchText.value]\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\")\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                      _hoisted_11,\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _hoisted_13,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _hoisted_17, 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                      _hoisted_19,\n                      _createElementVNode(\"ul\", _hoisted_20, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                          return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              id: 'checkbox_' + idx,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                              onChange: updateFilter\n                            }, null, 40, _hoisted_21), [\n                              [_vModelCheckbox, item.checked]\n                            ]),\n                            _createElementVNode(\"label\", {\n                              for: 'checkbox_' + idx\n                            }, _toDisplayString(item.title), 9, _hoisted_22)\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_25),\n                      _hoisted_26\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"01\",\n                        onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                        checked: testType.value === '01'\n                      }, null, 40, _hoisted_27),\n                      _hoisted_28\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"02\",\n                        onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                        checked: testType.value === '04'\n                      }, null, 40, _hoisted_29),\n                      _hoisted_30\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createVNode(ListTable, {\n          dbData: dbGetData.value,\n          onLoadMoreData: loadMoreData,\n          onInitData: initDbData,\n          onSelectItem: selectItem,\n          onRefresh: refresh\n        }, null, 8, [\"dbData\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_31, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click=\"classListToggleEvent\">\r\n        <font-awesome-icon :icon=\"['fas', 'list-check']\"/>\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <input type=\"text\" v-model='searchText' class=\"searchInputBox\"/>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n          <button class=\"searchClass\" @click=\"search\">Search</button>\r\n          <!-- <button class=\"searchClass\" @click=\"refresh\">Refresh</button> -->\r\n        </div>\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\" v-if=\"!bmClassIsBoolen\">\r\n            <span>WBC Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label><input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/><span>ALL</span></label>\r\n              <label><input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                <span>Diff</span></label>\r\n              <label><input type=\"checkbox\" value=\"02\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                <span>PBS</span></label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ListTable :dbData=\"dbGetData\" @loadMoreData=\"loadMoreData\" @initData=\"initDbData\" @selectItem=\"selectItem\" @refresh=\"refresh\"/>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  // console.log(startDate.value);\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">OK</button>\r\n    <button class=\"alertButton\" @click=\"hideConfirm\">CLOSE</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst hideConfirm = () => {\r\n    emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n    emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vShow as _vShow, vModelCheckbox as _vModelCheckbox, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-f07e55b4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt2 mb2\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1))\nconst _hoisted_3 = { class: \"leftWbcInfo\" }\nconst _hoisted_4 = { style: {\"position\":\"relative\"} }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_6 = { class: \"categoryNm\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_8 = { class: \"classNmRbc\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = [\"value\", \"onChange\"]\nconst _hoisted_11 = { class: \"degree analysis\" }\nconst _hoisted_12 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_13 = { key: 0 }\nconst _hoisted_14 = { key: 1 }\nconst _hoisted_15 = { key: 0 }\nconst _hoisted_16 = { key: 1 }\nconst _hoisted_17 = { class: \"categories\" }\nconst _hoisted_18 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_19 = { class: \"classNmRbc\" }\nconst _hoisted_20 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1))\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1))\nconst _hoisted_22 = { class: \"degree analysis\" }\nconst _hoisted_23 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"beforeAfterBtn\"\n}\n\nimport {ref, watch, onMounted, computed} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'selectItems','type', 'allCheckClear'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = __props;\r\nconst rbcInfoChangeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst clonedRbcInfoStore = computed(() => store.state.commonModule.clonedRbcInfo);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\n\r\nonMounted(() => {\r\n  if(router.currentRoute.value.path === '/report'){\r\n    rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n    console.log(props.selectItems.rbcInfoAfter)\r\n  }\r\n\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo?.maxRbcCount;\r\n  except.value = router.currentRoute.value.path === '/report';\r\n});\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\n\r\nconst beforeChange = () => {\r\n  isBefore.value = true;\r\n  emits('isBeforeUpdate', true);\r\n  rbcInfoChangeVal.value = props.rbcInfo.rbcInfo.rbcClass ? props.rbcInfo.rbcInfo.rbcClass : props.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  if(props.rbcInfo.rbcInfoAfter){\r\n    rbcInfoChangeVal.value = props.rbcInfo.rbcInfoAfter;\r\n\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (isBefore.value) {\r\n    return;\r\n  }\r\n\r\n  const rbcInfoAfter = rbcInfoChangeVal.value.map((rbc: any) => {\r\n    return rbc?.classInfo.map((item: any) => {\r\n      if (item.classNm === classInfo.classNm && category.categoryNm === rbc?.categoryNm) {\r\n        if (isNormal) {\r\n          item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n        } else {\r\n          item.degree = String(degreeIndex);\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n\r\n  const updatedSelectItems: any = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n      return {\r\n        ...rbcItem,\r\n        classInfo: rbcInfoAfter[index]\r\n      };\r\n    })\r\n  };\r\n\r\n  const rbcAfter = props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n    return {\r\n      ...rbcItem,\r\n      classInfo: rbcInfoAfter[index]\r\n    };\r\n  })\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcAfter,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], false);\r\n\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _hoisted_2,\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", _hoisted_4, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'comment-dots'],\n              onClick: memoOpen\n            }),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                  _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"li\", {\n            onClick: commitConfirmed,\n            class: _normalizeClass({\r\n    'submitted': __props.selectItems.submitState === 'Submit',\r\n  })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoChangeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_6, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, \"Category\"))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n              ]),\n              _createElementVNode(\"ul\", _hoisted_8, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1),\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkedClassIndices).value = $event)),\n                        onChange: ($event: any) => (updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId))\n                      }, null, 40, _hoisted_10), [\n                        [_vShow, !except.value],\n                        [_vModelCheckbox, checkedClassIndices.value]\n                      ])\n                    ], 512), [\n                      [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                    ])\n                  ]))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_11, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_12, \"Degree\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo.classId !== '01' || category.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                            return _createVNode(_component_font_awesome_icon, {\n                              icon: ['fas', 'circle'],\n                              key: degreeIndex,\n                              onClick: ($event: any) => (onClickDegree(category, classInfo, degreeIndex-1, false)),\n                              class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                            }, null, 8, [\"onClick\", \"class\"])\n                          }), 64))\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_14, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(category, classInfo, '0', true)),\n                                  icon: ['fas', 'circle']\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(category, classInfo, '1', true) ),\n                                  icon: ['fas', 'circle'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                        ]))\n                  ], 64))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_17, [\n          _hoisted_18,\n          _createElementVNode(\"ul\", _hoisted_19, [\n            _createElementVNode(\"li\", null, [\n              _hoisted_20,\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-1\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[3] || (_cache[3] = ($event: any) => (updateClassInfoArr('Giant Platelet', $event.target.checked, '04', '01')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _hoisted_21,\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-2\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[5] || (_cache[5] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_22, [\n            _createElementVNode(\"li\", _hoisted_23, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n            _createElementVNode(\"li\", _hoisted_24, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n          ])\n        ])\n      ]),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n            _createElementVNode(\"button\", {\n              onClick: beforeChange,\n              class: _normalizeClass({isBeforeClicked:isBefore.value})\n            }, \"Before\", 2),\n            _createElementVNode(\"button\", {\n              onClick: afterChange,\n              class: _normalizeClass({isBeforeClicked:!isBefore.value})\n            }, \"After\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"mt2 mb2\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo\">\r\n        <li style=\"position: relative\">\r\n          <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button @click=\"memoChange\">ok</button>\r\n            <button @click=\"memoCancel\">cancel</button>\r\n          </div>\r\n        </li>\r\n        <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems.submitState === 'Submit',\r\n  }\">\r\n          <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoChangeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n            <li>{{ getCategoryName(category) }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li>\r\n                <span>{{ classInfo?.classNm }}</span>\r\n                <div v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n                  <input type=\"checkbox\" :value=\"`${outerIndex}-${innerIndex}-${classIndex}`\"\r\n                         v-show=\"!except\"\r\n                         v-model=\"checkedClassIndices\"\r\n                         @change=\"updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId)\">\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                <font-awesome-icon\r\n                    :icon=\"['fas', 'circle']\"\r\n                    v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                    @click=\"onClickDegree(category, classInfo, degreeIndex-1, false)\"\r\n                    :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                />\r\n              </li>\r\n              <li v-else>\r\n                <div v-if=\"classInfo.degree === '0'\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(category, classInfo, '0', true)\"\r\n                      :icon=\"['fas', 'circle']\"\r\n                  />\r\n                </div>\r\n                <div v-else>\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(category, classInfo, '1', true) \"\r\n                      :icon=\"['fas', 'circle']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>\r\n            <span>Platelets</span>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     value=\"9-9-1\"\r\n                     v-show=\"!except\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Giant Platelet', $event.target.checked, '04', '01')\">\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <span>Malaria</span>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     v-show=\"!except\"\r\n                     value=\"9-9-2\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\">\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">\r\n      <button @click=\"beforeChange\" :class={isBeforeClicked:isBefore}>Before</button>\r\n      <button @click=\"afterChange\" :class={isBeforeClicked:!isBefore}>After</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = defineProps(['rbcInfo', 'selectItems','type', 'allCheckClear']);\r\nconst rbcInfoChangeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst clonedRbcInfoStore = computed(() => store.state.commonModule.clonedRbcInfo);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\n\r\nonMounted(() => {\r\n  if(router.currentRoute.value.path === '/report'){\r\n    rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n    console.log(props.selectItems.rbcInfoAfter)\r\n  }\r\n\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo?.maxRbcCount;\r\n  except.value = router.currentRoute.value.path === '/report';\r\n});\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  rbcInfoChangeVal.value = props.selectItems.rbcInfoAfter;\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\n\r\nconst beforeChange = () => {\r\n  isBefore.value = true;\r\n  emits('isBeforeUpdate', true);\r\n  rbcInfoChangeVal.value = props.rbcInfo.rbcInfo.rbcClass ? props.rbcInfo.rbcInfo.rbcClass : props.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  if(props.rbcInfo.rbcInfoAfter){\r\n    rbcInfoChangeVal.value = props.rbcInfo.rbcInfoAfter;\r\n\r\n  }\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (isBefore.value) {\r\n    return;\r\n  }\r\n\r\n  const rbcInfoAfter = rbcInfoChangeVal.value.map((rbc: any) => {\r\n    return rbc?.classInfo.map((item: any) => {\r\n      if (item.classNm === classInfo.classNm && category.categoryNm === rbc?.categoryNm) {\r\n        if (isNormal) {\r\n          item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n        } else {\r\n          item.degree = String(degreeIndex);\r\n        }\r\n      }\r\n      return item;\r\n    });\r\n  });\r\n\r\n  const updatedSelectItems: any = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n      return {\r\n        ...rbcItem,\r\n        classInfo: rbcInfoAfter[index]\r\n      };\r\n    })\r\n  };\r\n\r\n  const rbcAfter = props.selectItems.rbcInfoAfter.map((rbcItem: any, index: any) => {\r\n    return {\r\n      ...rbcItem,\r\n      classInfo: rbcInfoAfter[index]\r\n    };\r\n  })\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcAfter,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], false);\r\n\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem([updatedRuningInfo], true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.table-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.rbc-head,\r\n.rbc-container {\r\n  flex: 1;\r\n  padding-right: 20px;\r\n  text-align: left;\r\n}\r\n\r\n</style>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcClass.vue?vue&type=style&index=0&id=f07e55b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-f07e55b4\"]])\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-malaria\",\n  style: {\"text-align\":\"left\"}\n}, \"No Malaria\", -1)\nconst _hoisted_4 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\nconst _hoisted_7 = [\n  _hoisted_6\n]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (imageExist.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"div\", {\n            onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n            onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'malaria-' + index,\n                src: malaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                alt: \"malaria-image\",\n                onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('malaria', malaria, index))\n              }, null, 42, _hoisted_2))\n            }), 128))\n          ], 32)\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_3,\n          _createElementVNode(\"div\", {\n            onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'noMalaria-' + index,\n                src: noMalaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                alt: \"noMalaria-image\",\n                onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index))\n              }, null, 42, _hoisted_4))\n            }), 128))\n          ], 32)\n        ])\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <div @drop=\"onDrop('malaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <div class=\"no-malaria\" style=\"text-align:left\">No Malaria</div>\r\n      <div @drop=\"onDrop('noMalaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request);\r\n};\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock, withModifiers as _withModifiers, vShow as _vShow, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-75a0ffe3\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1))\nconst _hoisted_2 = { class: \"rbc-container\" }\nconst _hoisted_3 = { class: \"btn-container\" }\nconst _hoisted_4 = { class: \"btn-imgsetbox\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"imgSet\"\n}\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Brightness\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"RGB\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Grid\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Ruler\", -1))\nconst _hoisted_10 = { class: \"ruler-box\" }\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Zoom\", -1))\nconst _hoisted_13 = { class: \"tiling-viewer-box\" }\nconst _hoisted_14 = { key: 2 }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Tile does not exist.\", -1))\nconst _hoisted_16 = [\n  _hoisted_15\n]\nconst _hoisted_17 = { class: \"categoryNm\" }\nconst _hoisted_18 = { class: \"classNmRbc\" }\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_22 = { class: \"classNmRbc\" }\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1))\nconst _hoisted_24 = [\n  _hoisted_23\n]\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1))\nconst _hoisted_26 = [\n  _hoisted_25\n]\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.posX) === moveRbcClassItem.posX + 20 && Number(el.posY) === moveRbcClassItem.posY + 20);\r\n        if (foundElementIndex !== -1) {\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX + 20,\r\n          posY: moveRbcClassItem.posY + 20\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(rbcInfoPathAfter.value);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const jsonString = JSON.stringify(jsonData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const response = await fetch(`http://localhost:3002/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  if (response.data === 'not file' || props.isBefore) {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    rbcInfoPathAfter.value = response?.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response?.data;\r\n  }\r\n\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          rectPath.rect(classItem.posX - 20, classItem.posY - 20, 40, 40);\r\n          drawPath.value.push({\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItem.posX - 20,\r\n            posY: classItem.posY - 20,\r\n          })\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = 40; // 아이템의 너비\r\n            const height = 40; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = '40px';\r\n                element.style.backgroundColor = color;\r\n                element.style.height = '40px';\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              }else{\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find(classItem => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = '40px';\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = '40px';\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if(item.classNm === \"Normal\"){\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = '40px';\r\n            element.style.backgroundColor = color;\r\n            element.style.height = '40px';\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"button\", {\n            class: \"img-btn\",\n            onClick: imgSetOpen\n          }, \"Img Setting\"),\n          (imgSet.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                  _hoisted_6,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"80\",\n                    max: \"150\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                    onInput: changeImgBrightness\n                  }, null, 544), [\n                    [_vModelText, imgBrightness.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"resetBtn\",\n                    onClick: rgbReset\n                  }, \"RGB Reset\")\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n                  _hoisted_8,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickGrid\n                  }, null, 8, [\"icon\"])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n                  _hoisted_9,\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                      return (_openBlock(), _createElementBlock(\"button\", {\n                        class: _normalizeClass([\"tab-ruler-btn\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                        onClick: ($event: any) => (onClickRuler(ruler)),\n                        key: ruler.id\n                      }, _toDisplayString(ruler.text), 11, _hoisted_11))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n                  _hoisted_12,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickZoom\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_13, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer\",\n                style: {\"width\":\"100%\"},\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _hoisted_16))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([__props.selectItems.rbcInfo], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_17, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_18, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                      ], 8, _hoisted_19))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_20, [\n                _hoisted_21,\n                _createElementVNode(\"ul\", _hoisted_22, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('04', '01', 'Giant Platelet')))\n                  }, _hoisted_24),\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                  }, _hoisted_26)\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div></div>\r\n  <div class=\"rbc-container\">\r\n    <div class=\"btn-container\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox'>\r\n        <button class=\"img-btn\" @click=\"imgSetOpen\">Img Setting</button>\r\n        <div class=\"imgSet\" v-if=\"imgSet\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"150\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[0]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[1]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[2]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n            <span>Ruler</span>\r\n            <div class=\"ruler-box\">\r\n              <button\r\n                  class=\"tab-ruler-btn\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer-box\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\"\r\n           ref=\"tilingViewerLayer\"\r\n           id=\"tiling-viewer\" style=\"width: 100%;\"\r\n           @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [selectItems.rbcInfo]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Giant Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n          <li @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n            <span>Malaria</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.posX) === moveRbcClassItem.posX + 20 && Number(el.posY) === moveRbcClassItem.posY + 20);\r\n        if (foundElementIndex !== -1) {\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX + 20,\r\n          posY: moveRbcClassItem.posY + 20\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(rbcInfoPathAfter.value);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const jsonString = JSON.stringify(jsonData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const response = await fetch(`http://localhost:3002/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n    console.log(responseData);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  if (response.data === 'not file' || props.isBefore) {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    rbcInfoPathAfter.value = response?.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response?.data;\r\n  }\r\n\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          rectPath.rect(classItem.posX - 20, classItem.posY - 20, 40, 40);\r\n          drawPath.value.push({\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItem.posX - 20,\r\n            posY: classItem.posY - 20,\r\n          })\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = 40; // 아이템의 너비\r\n            const height = 40; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = '40px';\r\n                element.style.backgroundColor = color;\r\n                element.style.height = '40px';\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              }else{\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find(classItem => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = '40px';\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = '40px';\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if(item.classNm === \"Normal\"){\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = '40px';\r\n            element.style.backgroundColor = color;\r\n            element.style.height = '40px';\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, 40, 40); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.tab-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.ruler-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.tab-ruler-btn {\r\n  padding: 5px 10px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.active, .tab-ruler-btn.active {\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.inactive, .tab-ruler-btn.inactive {\r\n  color: darkgray;\r\n  background-color: #393939;\r\n}\r\n\r\n\r\n.btn-imgsetbox {\r\n  position: relative;\r\n}\r\n\r\n.imgSet {\r\n  position: absolute;\r\n  top: 40px;\r\n  left: -150px;\r\n  width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.imgSet div {\r\n  padding: 10px;\r\n}\r\n\r\n.img-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\nspan {\r\n  margin: 0 10px 0 10px;\r\n}\r\n\r\n.tiling-viewer-box {\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  position: relative; /* 수정 */\r\n}\r\n\r\n#tiling-viewer {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 80vh;\r\n}\r\n\r\n.rbc-container {\r\n  height: 85vh;\r\n}\r\n\r\n.btn-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n</style>","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcImageList.vue?vue&type=style&index=0&id=75a0ffe3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-75a0ffe3\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"REPORT\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"LIS-CBC\", -1)\nconst _hoisted_7 = { class: \"wbcMenuBottom\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getUserIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err')\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n      console.log(resData.value);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      console.log(res.data);\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (selectItems.value?.testType !== '01' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_4, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                ]),\n                _hoisted_5\n              ], 2)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _hoisted_6\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_8),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_9)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (selectItems?.testType !== '01' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext']);\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getUserIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err')\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err')\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n      console.log(resData.value);\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      console.log(res.data);\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"titleCbc\" }, \"CBC + DIFF\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_4 = { class: \"cbcTable\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_6 = { class: \"cbcTable\" }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_9 = { class: \"cbcTable\" }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      console.log(readFileTxtRes.data.message)\r\n    }\r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  classNm: cbcCode.classCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('return code : ' + res.returnCode)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceSerialNm.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        console.log(msg)\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcCodeList.value = data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (siteCd.value ==='0002')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem?.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (siteCd.value ==='0007')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"table\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, [\n                  _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                  (cbcItem.cham !=='')\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                    : _createCommentVNode(\"\", true),\n                  _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"table\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <h1 class=\"titleCbc\">CBC + DIFF</h1>\r\n    <div v-if=\"siteCd ==='0002'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem?.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"siteCd ==='0007'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      console.log(readFileTxtRes.data.message)\r\n    }\r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  classNm: cbcCode.classCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } else {\r\n          console.log('return code : ' + res.returnCode)\r\n        }\r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceSerialNm.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        console.log(msg)\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcCodeList.value = data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcContent\" }\nconst _hoisted_2 = { class: \"topClintInfo\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)) + \" Smear\", 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcClass, {\n          onIsBeforeUpdate: isBeforeUpdate,\n          onClassInfoArrUpdate: classInfoArrUpdate,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          allCheckClear: allCheckClear.value\n        }, null, 8, [\"rbcInfo\", \"selectItems\", \"allCheckClear\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcImageList, {\n          onUnChecked: unChecked,\n          isBefore: isBefore.value,\n          classInfoArr: classInfoArr.value,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\"\n        }, null, 8, [\"isBefore\", \"classInfoArr\", \"rbcInfo\", \"selectItems\"])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>{{ getTestTypeText(selectItems?.testType) }} Smear</li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcClass @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable' :allCheckClear=\"allCheckClear\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList @unChecked=\"unChecked\" :isBefore=\"isBefore\" :classInfoArr=\"classInfoArr\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const business_id = 'li'\r\n// 병원 코드\r\nexport const instcd = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const eqmtcd = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\nexport const spcParams = {\r\n    submit_id: 'TRLII00124',\r\n    business_id: 'li',\r\n    instcd: '012', // 병원 코드\r\n    bcno: 'H59'\r\n}\r\n\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"mt2 mb2\" }\nconst _hoisted_3 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_4 = { class: \"leftWbcInfo\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"wbcClassScroll\" }\nconst _hoisted_8 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"nth1Child classAttribute\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Class\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Count\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, \"%\", -1)\nconst _hoisted_13 = [\n  _hoisted_10,\n  _hoisted_11,\n  _hoisted_12\n]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"categories classTotal\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = { key: 0 }\nconst _hoisted_20 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_21 = [\"onClick\"]\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"li\", null, \" -\", -1)\nconst _hoisted_23 = { key: 1 }\nconst _hoisted_24 = { class: \"categoryNm\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_26 = { class: \"classNm\" }\nconst _hoisted_27 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_28 = { key: 0 }\nconst _hoisted_29 = { class: \"degree\" }\nconst _hoisted_30 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\nconst _hoisted_32 = {\n  key: 2,\n  class: \"beforeAfterBtn\"\n}\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  store.dispatch('commonModule/setCommonInfo', {classInfoSort: wbcInfoChangeVal.value});\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      lisFilePathSetArr.value = data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfoChangeVal.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report')\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: barcodeImg.value\n        }, null, 8, _hoisted_1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h3\", _hoisted_3, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_4, [\n        _createElementVNode(\"li\", _hoisted_5, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'comment-dots'],\n            onClick: memoOpen\n          }),\n          (memoModal.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _withDirectives(_createElementVNode(\"textarea\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((wbcMemo).value = $event))\n                }, null, 512), [\n                  [_vModelText, wbcMemo.value]\n                ]),\n                _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass({\r\n    'submitted': __props.selectItems.submitState === 'Submit',\r\n  })\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n        ], 2),\n        _createElementVNode(\"li\", { onClick: lisModalOpen }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n        ]),\n        _createElementVNode(\"li\", null, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (idx === 0)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_9, _hoisted_13))\n            : _createCommentVNode(\"\", true),\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 1,\n                class: \"nth1Child\",\n                onClick: ($event: any) => (goClass(item.id))\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.percent || '-'), 1)\n              ], 8, _hoisted_14))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_8))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb2\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                      _hoisted_22\n                    ], 8, _hoisted_21))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_20))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonRbcClassList.value, (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\"\n              }, [\n                _createElementVNode(\"ul\", _hoisted_24, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_25, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_26, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27, \".\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, [\n                    _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \" / \" + _toDisplayString(selectItemsSessionStorageData.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", _hoisted_29, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_30))\n                    : _createCommentVNode(\"\", true),\n                  _hoisted_31\n                ])\n              ], 512)), [\n                [_vShow, __props.selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n            _createElementVNode(\"button\", {\n              onClick: beforeChang,\n              class: _normalizeClass({isBeforeClicked:isBefore.value})\n            }, \"Before\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (afterChang(clonedWbcInfoStore.value))),\n              class: _normalizeClass({isBeforeClicked:!isBefore.value})\n            }, \"After\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img v-if=\"type !== 'report'\"\r\n       :src=\"barcodeImg\"/>\r\n  <div class=\"mt2 mb2\">\r\n    <h3 class=\"wbcClassInfoLeft\">\r\n      {{ wbcClassTileChange() }}\r\n    </h3>\r\n    <ul class=\"leftWbcInfo\">\r\n      <li style=\"position: relative\">\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button @click=\"memoChange\">ok</button>\r\n          <button @click=\"memoCancel\">cancel</button>\r\n        </div>\r\n      </li>\r\n      <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems.submitState === 'Submit',\r\n  }\">\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n      </li>\r\n      <li @click=\"lisModalOpen\">\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n      </li>\r\n      <li>\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\"/>\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul class=\"nth1Child classAttribute\" v-if=\"idx === 0\">\r\n        <li>Class</li>\r\n        <li>Count</li>\r\n        <li>%</li>\r\n      </ul>\r\n      <ul class=\"nth1Child\" v-if=\"shouldRenderCategory(item.title)\" @click=\"goClass(item.id)\">\r\n        <li>{{ item?.name }}</li>\r\n        <li>{{ item?.count }}</li>\r\n        <li> {{ item?.percent || '-' }}</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"categories classTotal\">\r\n      <ul class=\"categoryNm\">\r\n        <li>\r\n          Total\r\n        </li>\r\n      </ul>\r\n      <ul class=\"classNm\">\r\n        <li>\r\n          {{ totalCount || 0 }}\r\n        </li>\r\n      </ul>\r\n      <ul class=\"degree\">\r\n        <li>\r\n          100.00\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb2\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li>{{ item?.count }}</li>\r\n          <li> -</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in nonRbcClassList\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n          <ul class=\"categoryNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n            <li>{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul class=\"classNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">.</li>\r\n            <li>\r\n              {{ nWbcItem?.count }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ selectItemsSessionStorageData?.wbcInfo?.maxWbcCount }} WBC</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li>-</li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">\r\n      <button @click=\"beforeChang\" :class={isBeforeClicked:isBefore}>Before</button>\r\n      <button @click=\"afterChang(clonedWbcInfoStore)\" :class={isBeforeClicked:!isBefore}>After</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  store.dispatch('commonModule/setCommonInfo', {classInfoSort: wbcInfoChangeVal.value});\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      lisFilePathSetArr.value = data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfoChangeVal.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"reportDiv\" }\nconst _hoisted_2 = { class: \"wbcDiv\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"rbcDiv\"\n}\nconst _hoisted_4 = { class: \"reportDetail\" }\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"[Hospital]\", -1)\nconst _hoisted_7 = { class: \"reportDivTop\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_10 = { class: \"reportTable\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Slot ID\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered date\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed by ID\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed date\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient ID\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered Classification\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Birth\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gender\", -1)\nconst _hoisted_20 = { class: \"reportDivBottom\" }\nconst _hoisted_21 = { class: \"wbcLeft\" }\nconst _hoisted_22 = { class: \"reportH3 mb1 pl0\" }\nconst _hoisted_23 = { class: \"tableClass\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"%\")\n  ])\n], -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"td\", null, \"total\", -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"td\", null, \"100.00\", -1)\nconst _hoisted_28 = {\n  key: 0,\n  class: \"reportH3 mb1 pl0\"\n}\nconst _hoisted_29 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_31 = { key: 0 }\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"td\", null, \"-\", -1)\nconst _hoisted_33 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"reportH3 mb1 pl0\" }, \"RBC classification result\", -1)\nconst _hoisted_35 = { class: \"categoryNm\" }\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_37 = { class: \"classNm\" }\nconst _hoisted_38 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_39 = { class: \"degree\" }\nconst _hoisted_40 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_41 = { key: 0 }\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n    }, [\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode(WbcClass, {\n            wbcInfo: wbcInfo.value,\n            selectItems: selectItems.value,\n            type: \"report\"\n          }, null, 8, [\"wbcInfo\", \"selectItems\"])\n        ]),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              _createVNode(RbcClass, {\n                rbcInfo: rbcInfo.value,\n                selectItems: selectItems.value,\n                type: \"report\"\n              }, null, 8, [\"rbcInfo\", \"selectItems\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _hoisted_6,\n            _createTextVNode(),\n            _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'print'],\n              onClick: printStart,\n              class: \"printStart\"\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD PB system\"))\n              : _createCommentVNode(\"\", true),\n            (projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_9, \"Analysis Report from UIMD BM system\"))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"table\", _hoisted_10, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_11,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_12,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_13,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_14,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_16,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_17,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_18,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_19,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"h3\", _hoisted_22, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n              _createElementVNode(\"table\", _hoisted_23, [\n                _hoisted_24,\n                _hoisted_25,\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcArr.value, (item) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: item.id,\n                      class: \"wbcClassDbDiv\"\n                    }, [\n                      (shouldRenderCategory(item.title))\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.percent || '-'), 1)\n                          ], 64))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", null, [\n                    _hoisted_26,\n                    _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                    _hoisted_27\n                  ])\n                ])\n              ]),\n              (!selectItems.value?.wbcInfo?.nonRbcClassList)\n                ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_28, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              (!projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"table\", _hoisted_29, [\n                    _hoisted_30,\n                    _createElementVNode(\"tbody\", null, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectItems.value?.wbcInfo?.nonRbcClassList, (nWbcItem, outerIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                          _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                          _createElementVNode(\"td\", null, [\n                            _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                            (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _hoisted_32\n                        ], 512)), [\n                          [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                        ])\n                      }), 128))\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                  _hoisted_34,\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfo.value], (classList, outerIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: innerIndex,\n                          class: \"categories\"\n                        }, [\n                          _createElementVNode(\"ul\", _hoisted_35, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_36, \"Category\"))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"li\", null, _toDisplayString(category?.categoryNm), 1)\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_37, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_38, \"Class\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                            }), 128))\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_39, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_40, \"Degree\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                (classInfo.classId !== '01' || category.categoryId === '05')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_41, _toDisplayString(classInfo?.degree), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128))\n                          ])\n                        ]))\n                      }), 128))\n                    ], 64))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ])\n    ], 2),\n    (printOnOff.value)\n      ? (_openBlock(), _createBlock(Print, {\n          key: 0,\n          selectItems: selectItems.value,\n          ref_key: \"printContent\",\n          ref: printContent,\n          printOnOff: printOnOff.value,\n          selectItemWbc: _unref(selectItemWbc),\n          onPrintClose: printClose\n        }, null, 8, [\"selectItems\", \"printOnOff\", \"selectItemWbc\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\">\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div class=\"reportDiv\">\r\n      <div class=\"wbcDiv\">\r\n        <WbcClass :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"rbcDiv\" v-if=\"!projectBm\">\r\n        <RbcClass :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"reportDetail\">\r\n        <div class=\"reportTitle\">\r\n          <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n          <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n        </div>\r\n        <div class=\"reportDivTop\">\r\n          <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n          <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n          <table class=\"reportTable\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Slot ID</th>\r\n              <td>{{ selectItems?.slotId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered date</th>\r\n              <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed by ID</th>\r\n              <td>{{ selectItems?.submitUserId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed date</th>\r\n              <td>{{ selectItems?.submitOfDate }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Patient ID</th>\r\n              <td>{{ selectItems?.patientId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered Classification</th>\r\n              <td>{{ getTestTypeText(selectItems?.testType) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{{ selectItems?.patientName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Birth</th>\r\n              <td>{{ selectItems?.birthDay }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Gender</th>\r\n              <td>{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"reportDivBottom\">\r\n          <div class=\"wbcLeft\">\r\n            <h3 class=\"reportH3 mb1 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n            <table class=\"tableClass\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th>Class</th>\r\n                <th>Count</th>\r\n                <th>%</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item) in wbcArr\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                <template v-if=\"shouldRenderCategory(item.title)\">\r\n                  <td>{{ item?.name }}</td>\r\n                  <td>{{ item?.count }}</td>\r\n                  <td> {{ item?.percent || '-' }}</td>\r\n                </template>\r\n              </tr>\r\n              <tr>\r\n                <td>total</td>\r\n                <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                <td>100.00</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList\" class=\"reportH3 mb1 pl0\">non-WBC</h3>\r\n            <table class=\"tableClass\" v-if=\"!projectBm\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <tbody>\r\n              <template v-for=\"(nWbcItem, outerIndex) in selectItems?.wbcInfo?.nonRbcClassList\" :key=\"outerIndex\">\r\n                <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                  <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                  <td>\r\n                    {{ nWbcItem?.count }}\r\n                    <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                        selectItems?.wbcInfo?.maxWbcCount\r\n                      }} WBC</span>\r\n                  </td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </template>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div class=\"rbcRight\" v-if=\"!projectBm\">\r\n            <h3 class=\"reportH3 mb1 pl0\">RBC classification result</h3>\r\n            <template v-for=\"(classList, outerIndex) in [rbcInfo]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <div class=\"categories\">\r\n                  <ul class=\"categoryNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n                    <li>{{ category?.categoryNm }}</li>\r\n                  </ul>\r\n                  <ul class=\"classNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>{{ classInfo?.classNm }}</li>\r\n                    </template>\r\n                  </ul>\r\n                  <ul class=\"degree\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                        {{ classInfo?.degree }}\r\n                      </li>\r\n                    </template>\r\n                  </ul>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"selectItems\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"topClintInfo\" }\nconst _hoisted_4 = { class: \"sizeContainer\" }\nconst _hoisted_5 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_6 = { class: \"imgSet\" }\nconst _hoisted_7 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"onDrop\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"cellImgBox\"\n}\nconst _hoisted_11 = { class: \"mt1\" }\nconst _hoisted_12 = [\"onInput\", \"checked\"]\nconst _hoisted_13 = [\"onDrop\"]\nconst _hoisted_14 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_15 = { style: {\"position\":\"relative\"} }\nconst _hoisted_16 = { class: \"titleImg\" }\nconst _hoisted_17 = { class: \"fileTitle\" }\nconst _hoisted_18 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"select\", null, [\n  /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n], -1)\nconst _hoisted_21 = { class: \"mt1\" }\nconst _hoisted_22 = [\"checked\"]\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"select\", null, [\n    /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n  ]),\n  /*#__PURE__*/_createElementVNode(\"div\")\n], -1)\nconst _hoisted_24 = [\"onClick\"]\nconst _hoisted_25 = { class: \"wbcModal\" }\nconst _hoisted_26 = { class: \"wbc-modal-content\" }\nconst _hoisted_27 = { class: \"wbcModalImageContent\" }\nconst _hoisted_28 = [\"src\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost, moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  // console.log('ssss')\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {className, abbreviation, customNum} = item;\r\n      const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: className,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n        console.log(data)\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => item.title === targetItem.abbreviation);\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images) {\r\n        if (item.images.length > 0) {\r\n          item.images.forEach((itemImg: any) => {\r\n            itemImg.title = item.title;\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        // console.log(wbcInfo.value[itemIndex])\r\n        // console.log(classInfoitem)\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation ===  (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title ===  (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse\n    }, null, 8, [\"isNext\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(ClassInfo, {\n          wbcInfo: wbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          onNextPage: nextPage,\n          onScrollEvent: scrollToElement,\n          onIsBefore: isBeforeDataSet\n        }, null, 8, [\"wbcInfo\", \"selectItems\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", {\n          class: \"imgMenuSetDiv\",\n          onMouseleave: hideSizeControl\n        }, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _createTextVNode(\" Cell Marking \")\n          ]),\n          _createElementVNode(\"button\", { onClick: excelDownload }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'file-csv'] }),\n            _createTextVNode(\" Excel \")\n          ]),\n          _createElementVNode(\"button\", { onMouseover: showSizeControl }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _createTextVNode(\" Size \")\n          ], 32),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createTextVNode(\" Size \" + _toDisplayString(imageSize.value) + \" \", 1),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'undo'],\n                onClick: imgSizeReset\n              }),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"80\",\n                max: \"300\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ])\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _createTextVNode(\" IMG Setting \")\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _createTextVNode(\" Brightness \" + _toDisplayString(imgBrightness.value) + \" \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"600\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb2\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _createTextVNode(\" RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ] \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: _cache[4] || (_cache[4] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: _cache[6] || (_cache[6] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: _cache[8] || (_cache[8] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          false\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: classCompare\n              }, \"Class Compare\"))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _createTextVNode(\" Rollback \")\n          ])\n        ], 32),\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"ul\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                key: item.id,\n                onClick: ($event: any) => (scrollToElement(item.id))\n              }, [\n                _createElementVNode(\"div\", {\n                  class: \"circle\",\n                  onDragover: _cache[9] || (_cache[9] = _withModifiers(($event: any) => (onDragOverCircle()), [\"prevent\"])),\n                  onDrop: ($event: any) => (onDropCircle(item))\n                }, [\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n                ], 40, _hoisted_9)\n              ], 8, _hoisted_8)), [\n                [_vShow, siteCd.value !== '0006' && item?.title !== 'SM']\n              ])\n            }), 128))\n          ]),\n          (!classCompareShow.value)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_10, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: item.id,\n                    ref_for: true,\n                    ref: setRef(item.id)\n                  }, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_11, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: ($event: any) => (allCheckChange($event,item.title)),\n                          checked: selectedTitle.value === item.title\n                        }, null, 40, _hoisted_12),\n                        _createTextVNode(\" \" + _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ]),\n                    _withDirectives(_createElementVNode(\"ul\", {\n                      class: _normalizeClass('wbcImgWrap ' + item?.title),\n                      onDragover: _cache[10] || (_cache[10] = _withModifiers(($event: any) => (onDragOver()), [\"prevent\"])),\n                      onDrop: ($event: any) => (onDrop(itemIndex))\n                    }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                          key: image.fileName,\n                          class: _normalizeClass({\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }),\n                          onClick: ($event: any) => (selectImage(itemIndex, imageIndex, item)),\n                          onDblclick: ($event: any) => (openModal(image, item)),\n                          onContextmenu: ($event: any) => (handleRightClick($event, image, item))\n                        }, [\n                          _createElementVNode(\"div\", _hoisted_15, [\n                            _withDirectives(_createElementVNode(\"div\", _hoisted_16, [\n                              _createElementVNode(\"div\", _hoisted_17, [\n                                _createTextVNode(_toDisplayString(replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                              ])\n                            ], 512), [\n                              [_vShow, replaceFileNamePrefix(image.fileName) !== item?.title]\n                            ]),\n                            _withDirectives(_createElementVNode(\"img\", {\n                              src: getImageUrl(image.fileName, item.id, item.title, ''),\n                              width: image.width ? image.width : '150px',\n                              height: image.height ? image.height : '150px',\n                              style: _normalizeStyle({ filter: image.filter }),\n                              onDragstart: ($event: any) => (onDragStart(itemIndex, imageIndex)),\n                              draggable: \"true\",\n                              class: \"cellImg\",\n                              ref_for: true,\n                              ref_key: \"cellRef\",\n                              ref: cellRef,\n                              onError: ($event: any) => (hideImage(item.id, image.fileName, item.title))\n                            }, null, 44, _hoisted_18), [\n                              [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                            ]),\n                            _createElementVNode(\"div\", {\n                              class: \"center-point\",\n                              style: _normalizeStyle(image.coordinates)\n                            }, null, 4)\n                          ])\n                        ], 42, _hoisted_14)), [\n                          [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                        ])\n                      }), 128))\n                    ], 42, _hoisted_13), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ])\n                  ]))\n                }), 128))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                _createElementVNode(\"div\", null, [\n                  _hoisted_20,\n                  _createElementVNode(\"div\", null, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_21, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: _cache[11] || (_cache[11] = ($event: any) => (allCheckChange($event,wbcInfo.value[0].title))),\n                          checked: selectedTitle.value === wbcInfo.value[0].title\n                        }, null, 40, _hoisted_22),\n                        _createTextVNode(\" \" + _toDisplayString(wbcInfo.value[0]?.title) + \" (\" + _toDisplayString(wbcInfo.value[0]?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, wbcInfo.value[0]?.count !== '0' && wbcInfo.value[0]?.count !== 0]\n                    ])\n                  ])\n                ]),\n                _hoisted_23\n              ]))\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(item.name), 9, _hoisted_24))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", _hoisted_25, [\n          _createElementVNode(\"div\", _hoisted_26, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_27, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\"\n              }, null, 12, _hoisted_28)\n            ]),\n            _createElementVNode(\"div\", { class: \"buttons\" }, [\n              _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n              _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n            ])\n          ])\n        ], 512), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>\r\n          {{ projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}\r\n        </li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\" @isBefore=\"isBeforeDataSet\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\" @mouseleave=\"hideSizeControl\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <button @click=\"excelDownload\">\r\n          <font-awesome-icon :icon=\"['fas', 'file-csv']\"/>\r\n          Excel\r\n        </button>\r\n        <!--size-->\r\n        <button @mouseover=\"showSizeControl\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            Size {{ imageSize }}\r\n            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"300\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <!--            <button class=\"resetBtn mb2\" @click=\"imgSizeReset\">Size Reset</button>-->\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness {{ imgBrightness }}\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"600\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb2\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button v-if=\"false\" @click=\"classCompare\">Class Compare</button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <ul class=\"wbcInfoDbUl\">\r\n          <template v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n            <li @click=\"scrollToElement(item.id)\" v-show=\"siteCd !== '0006' && item?.title !== 'SM'\">\r\n              <div class=\"circle\" @dragover.prevent=\"onDragOverCircle()\" @drop=\"onDropCircle(item)\">\r\n                <p>{{ item?.title }}</p>\r\n                <p>{{ item?.count }}</p>\r\n              </div>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n        <ul class=\"cellImgBox\" v-if=\"!classCompareShow\">\r\n          <li v-for=\"(item, itemIndex) in wbcInfo\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n            <div v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <p class=\"mt1\">\r\n                <input type=\"checkbox\" @input=\"allCheckChange($event,item.title)\"\r\n                       :checked=\"selectedTitle === item.title\">\r\n                {{ item?.title }}\r\n                ({{ item?.count }})</p>\r\n            </div>\r\n            <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver()\" @drop=\"onDrop(itemIndex)\"\r\n                v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <template v-for=\"(image, imageIndex) in item.images\" :key=\"image.fileName\">\r\n                <li\r\n                    :class=\"{\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }\"\r\n                    @click=\"selectImage(itemIndex, imageIndex, item)\"\r\n                    @dblclick=\"openModal(image, item)\"\r\n                    v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    @contextmenu=\"handleRightClick($event, image, item)\"\r\n                >\r\n                  <div style=\"position: relative;\">\r\n                    <div class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                      <div class=\"fileTitle\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                        <font-awesome-icon\r\n                            :icon=\"['fas', 'arrow-right']\"/>\r\n                        {{ image.title }}\r\n                      </div>\r\n                    </div>\r\n                    <img :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                         :width=\"image.width ? image.width : '150px'\"\r\n                         :height=\"image.height ? image.height : '150px'\"\r\n                         :style=\"{ filter: image.filter }\"\r\n                         @dragstart=\"onDragStart(itemIndex, imageIndex)\"\r\n                         draggable=\"true\"\r\n                         class=\"cellImg\"\r\n                         ref=\"cellRef\"\r\n                         @error=\"hideImage(item.id, image.fileName, item.title)\"\r\n                         v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    />\r\n                    <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <div v-else>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div>\r\n              <div v-show=\"wbcInfo[0]?.count !== '0' && wbcInfo[0]?.count !== 0\">\r\n                <p class=\"mt1\">\r\n                  <input type=\"checkbox\" @input=\"allCheckChange($event,wbcInfo[0].title)\"\r\n                         :checked=\"selectedTitle === wbcInfo[0].title\">\r\n                  {{ wbcInfo[0]?.title }}\r\n                  ({{ wbcInfo[0]?.count }})</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n        <div class=\"wbc-modal-content\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <button @click=\"zoomIn\">+</button>\r\n            <button @click=\"zoomOut\">-</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost, moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  // console.log('ssss')\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {className, abbreviation, customNum} = item;\r\n      const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: className,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        wbcHotKeysItems.value = data;\r\n        console.log(data)\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => item.title === targetItem.abbreviation);\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === selectedImage.title);\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images) {\r\n        if (item.images.length > 0) {\r\n          item.images.forEach((itemImg: any) => {\r\n            itemImg.title = item.title;\r\n          })\r\n        }\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        // console.log(wbcInfo.value[itemIndex])\r\n        // console.log(classInfoitem)\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation ===  (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title ===  (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4505cb42\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1))\nconst _hoisted_2 = { class: \"leftImgList\" }\nconst _hoisted_3 = { class: \"\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Partical Image\", -1))\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Zone\", -1))\nconst _hoisted_8 = [\"src\", \"onDblclick\"]\nconst _hoisted_9 = { class: \"\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal stitch\", -1))\nconst _hoisted_11 = [\"src\", \"onDblclick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Megakaryocyte\", -1))\nconst _hoisted_13 = [\"src\", \"onDblclick\"]\n\nimport {nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (buttonOfen.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"closeViewer\",\n          onClick: closeViewer\n        }, \"x\"))\n      : _createCommentVNode(\"\", true),\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'particle'),\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'particle')))\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _hoisted_7,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'idealZone'),\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealZone')))\n            }, null, 40, _hoisted_8)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"div\", null, [\n          _hoisted_10,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'idealStitch'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealStitch')))\n              }, null, 40, _hoisted_11)\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_12,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'mega'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'mega')))\n              }, null, 40, _hoisted_13)\n            ]))\n          }), 128))\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"closeViewer\" @click=\"closeViewer\" v-if=\"buttonOfen\">x</div>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <ul class=\"\">\r\n      <p>Partical Image</p>\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'particle')\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(getImageUrls(image, 'particle'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <p>Ideal Zone</p>\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" style=\"width:100px\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'idealZone')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealZone'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <div>\r\n        <p>Ideal stitch</p>\r\n        <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'idealStitch')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealStitch'))\">\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <p>Megakaryocyte</p>\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'mega')\" @dblclick=\"openInViewer(getImageUrls(image, 'mega'))\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv#viewerSmall {\r\n  position: fixed;\r\n  top: 0;\r\n  height: 100%!important;\r\n}\r\n.closeViewer {\r\n  position: absolute;\r\n  font-size: 3.9rem;\r\n  z-index: 999;\r\n  right: 25px;\r\n  top: 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./leftImgList.vue?vue&type=style&index=0&id=4505cb42&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4505cb42\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport {onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      console.log(imageHeight)\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  // console.log()\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"img\", {\n      src: hideImage.value,\n      ref_key: \"hideImageRef\",\n      ref: hideImageRef,\n      style: {\"display\":\"none\"},\n      onLoad: _cache[0] || (_cache[0] = ($event: any) => (onImageLoad(true)))\n    }, null, 40, _hoisted_1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        ref_key: \"tilingViewerLayer\",\n        ref: tilingViewerLayer,\n        id: \"tiling-viewer\"\n      }, null, 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" ></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {defineProps, onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      console.log(imageHeight)\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  // console.log()\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-71d7a081\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          _createVNode(TilingViewer, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(LeftImgList, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.resize-overlay {\r\n  position: absolute;\r\n  border: 2px solid red;\r\n}\r\n\r\n.resize-handle {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: black;\r\n}\r\n\r\n.top-left {\r\n  top: -5px;\r\n  left: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n.top-right {\r\n  top: -5px;\r\n  right: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-left {\r\n  bottom: -5px;\r\n  left: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-right {\r\n  bottom: -5px;\r\n  right: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=71d7a081&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71d7a081\"]])\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport DatabaseWbc from '@/views/datebase/commponent/detail/wbc/listDetailWbc.vue';\r\nimport Report from  '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    // 페이지 이동 전에 setInterval 정리\r\n    // clearIntervalIfExists();\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n// 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const currentUser = store.state.userModule;\r\n\r\n    if ((to.name !== 'login' && to.name !== 'join') && (!getStoredUser.userId && !currentUser.userId)) {\r\n        // 로그인이 필요한 페이지에 접근하려고 할 때 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    } else {\r\n        // 그 외의 경우에는 계속 진행\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"borderLine\" }, [\n  /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    class: \"headerLogo\"\n  })\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1)\nconst _hoisted_6 = { class: \"small-icon-menu\" }\nconst _hoisted_7 = { class: \"lastMenu\" }\nconst _hoisted_8 = { class: \"lastLiM\" }\nconst _hoisted_9 = { class: \"iconHeaderMenu\" }\nconst _hoisted_10 = { class: \"alarm\" }\nconst _hoisted_11 = [\"title\"]\nconst _hoisted_12 = [\"title\"]\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\nconst _hoisted_14 = { class: \"immersionOilContainer\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Immersion Oil count Reset\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)\nconst _hoisted_17 = { class: \"smallTitle\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)\nconst _hoisted_19 = {\n  class: \"border ml-5\",\n  style: {\"width\":\"80px\"}\n}\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Prime Immersion Oil\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Prime oil to remove air from the oil hose\", -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)\n\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _hoisted_2,\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_3\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheckData.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _hoisted_4\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_8, [\n                      _createElementVNode(\"div\", {\n                        class: \"userBox\",\n                        onClick: logOutBoxOn\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: logout\n                      }, \" LOG OUT \")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", _hoisted_10, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking': isAlarm.value })\n                      }, null, 8, [\"class\"])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open']\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount\",\n                      onClick: openLayer,\n                      title: 'oilCount: ' + (oilCountData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'droplet'] })\n                    ], 8, _hoisted_11),\n                    _createElementVNode(\"li\", {\n                      class: \"storage\",\n                      title: 'storage: ' + (storagePercentData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'database'] })\n                    ], 8, _hoisted_12)\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (visible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_13\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _hoisted_15,\n              _hoisted_16,\n              _createElementVNode(\"div\", _hoisted_17, [\n                _hoisted_18,\n                _createElementVNode(\"div\", _hoisted_19, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"RESET\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"mt2\" }, [\n              _hoisted_20,\n              _hoisted_21,\n              _createElementVNode(\"div\", null, [\n                _hoisted_22,\n                _createElementVNode(\"button\", {\n                  onClick: onPrime,\n                  class: \"alertButton\"\n                }, \"PRIME\")\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav> \r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"@/assets/celli.png\" class=\"headerLogo\"/>\r\n        </div>\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/\" v-if=\"viewerCheckData === 'main'\"\r\n                     :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/dataBase\" :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div class=\"userBox\" @click='logOutBoxOn'>\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/> {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <div class='logOutBox' @click='logout'>\r\n                  LOG OUT\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n          <ul>\r\n            <li class=\"alarm\">\r\n              <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking': isAlarm }\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n              <font-awesome-icon v-else :icon=\"['fas', 'door-open']\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n            </li>\r\n            <li class=\"oliCount\" @click=\"openLayer\" :title=\"'oilCount: ' + (oilCountData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'droplet']\"/>\r\n            </li>\r\n            <li class=\"storage\" :title=\"'storage: ' + (storagePercentData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'database']\" />  \r\n            </li>\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle\">Immersion Oil count Reset</h5>\r\n        <span class=\"colorGray\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"smallTitle\">\r\n          <span>Estimated number of slides left</span>\r\n          <div class=\"border ml-5\" style=\"width: 80px;\">{{ oilCount }}</div>\r\n        </div>\r\n\r\n        <div>\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">RESET</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt2'>\r\n        <h5 class=\"modalTitle\">Prime Immersion Oil</h5>\r\n        <span class=\"colorGray\">Prime oil to remove air from the oil hose</span>\r\n        <div>\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button @click='onPrime' class=\"alertButton\">PRIME</button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    iaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceSerialNm: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setIaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceSerialNm: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        iaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceSerialNm: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsAlarm(state: CommonState, value: boolean): void {\r\n            state.isAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setIaRootPath(state: CommonState, value: string): void {\r\n            state.iaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceSerialNm(state: CommonState, value: string): void {\r\n            state.deviceSerialNm = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isAlarm')) {\r\n                commit('setIsAlarm', payload.isAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('iaRootPath')) {\r\n                commit('setIaRootPath', payload.iaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceSerialNm')) {\r\n                commit('setDeviceSerialNm', payload.deviceSerialNm);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {rbcClassificationModule} from '@/store/modules/analysis/rbcClassification';\r\nimport {wbcClassificationModule} from '@/store/modules/analysis/wbcclassification';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport { embeddedStatusModule } from '@/store/modules/embeddedStatusModule';\r\nimport { orderListModule } from '@/store/modules/analysis/orderListModule';\r\nimport { runningInfoModule } from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\n// import createPersistedState from 'vuex-persistedstate';\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        // rbcClassificationModule,\r\n        // wbcClassificationModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import store from '@/store/index';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any) => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceSerialNm: data.deviceSerialNm\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n    }else {\r\n        alert(data?.resultMsg);\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'class': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            console.log(`SET [NE] Abnormal : ${wbcItem.title}`);\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.class.push(`[NE] : [${percent.toFixed(2)}]%`);\r\n                        } else {\r\n                            console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                // console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${wbcItem.count}]Count`);\r\n                            } else {\r\n                                // console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n\r\n                            if (percent < range.min || percent > range.max) {\r\n                                console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${percent.toFixed(2)}]%`);\r\n                            } else {\r\n                                console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst iaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getUserIp(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getUserIp = async (ip: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          console.log('?D')\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    iaRootDir: iaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value\n      }, null, 8, [\"parsedData\", \"isClass\", \"startStatus\", \"pb100aCassette\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {getUserIpApi} from \"@/common/api/service/user/userApi\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst iaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getUserIp(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getUserIp = async (ip: string) => {\r\n  try {\r\n    const result = await getUserIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          console.log('?D')\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    iaRootDir: iaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=febb7262&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n// 소켓 인스턴스를 보유할 앱 컨텍스트의 속성을 생성합니다.\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n    }\r\n}\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, { transports: ['websocket'], withCredentials: true });\r\n\r\n        app.config.globalProperties.$socket = socket;\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/layoutExtraWide.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\n\r\n/// <reference path=\"../types/webapi.d.ts\" />\r\n\r\n\r\nlibrary.add(fas);\r\nconst app = createApp(App);\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\napp.mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8856); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","commonCodeList","grpCd","grpNm","cd","cdNm","testType","value","text","bmTestType","getCommonCode","foundCode","find","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","iaRootPath","slotId","barcodeDirName","baseUrl","window","APP_API_BASE_URL","_hoisted_1","_createElementVNode","class","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_toDisplayString","wbcCount","__exports__","analysisOptions","wbcCountOptions","bmCountOptions","stitchCountOptions","slideCard","input","slotNo","slotState","output","slideCard100a","messages","Logout","GET_POSITION_LIST","GET_LOGIN_HISTORY","SET_USER","IS_REGIST_USER","UPDATE_LOGIN_DTTM","UPDATE_USER_AVAILABLE","GET_WBC_CLASS_LIST","GET_WBC_CLASS_LIST_ALL","GET_WBC_TOTAL_COUNT","UPDATE_WBC_COUNT","GET_WBC_COUNT","GET_TEST_TYPE","GET_MODIFIED_TEST_TYPE","GET_STITCH_COUNT","GET_RBC_COUNT","GET_RBC_COUNT_HIST","GET_RBC_COUNT_SKMC","UPDATE_DEGREE","INIT_WBC_COUNT","INIT_RBC_DEGREE","GET_WBC_INFO","SET_WBC_IMAGE_HIST","GET_WBC_IMAGE_HIST","INIT_WBC_IMAGE_HIST","INSERT_WBC_CLASSIFICATION","SET_WBC_CUSTOM_LIST","UPDATE_HOT_KEYS","UPDATE_BF_HOT_KEYS","UPDATE_ORDER","UPDATE_ORDER_BF","UPDATE_IMAGE_HIST","SET_CURRENT_WBC_RESULTS","GET_CURRENT_WBC_RESULTS","SET_BEFORE_WBC_RESULTS","GET_BEFORE_WBC_RESULTS","GET_WBC_MODIFY_LIST","GET_WBC_MODIFY_LIST_ALL","GET_BF_MODIFY_LIST","GET_RBC_CLASS_LIST","GET_MALARIA_COUNT","UPDATE_MALARIA_COUNT","SET_CURRENT_RBC_RESULTS","GET_CURRENT_RBC_RESULTS","SET_CLASSIFICATION","GET_CLASSIFICATION_ITEM","SET_CLASSIFICATION_ITEM","UPDATE_RBC_CLASSIFICATION","UPDATE_RBC_CLASSIFICATION_SKMC","INSERT_WBC_SUCCESS","SELECT_RBC_DEGREE","UPDATE_RBC_DEGREE","SET_TEST_LIST","GET_TEST_LIST","GET_TEST_RESULT","GET_RBC_FIELDS","GET_WBC_FIELDS","GET_RBC_ITEMS","GET_WBC_ITEMS","INIT_OIL_COUNT","UPDATE_RESULT","UPDATE_RUNNING_STATE","GET_ORDER_LIST","SET_ORDER_LIST","UPDATE_ORDER_LIST","INIT_ORDER_LIST","GET_TEST_RESULT_ALL","GET_SEARCH_OPTIONS","UPDATE_SEARCH_OPTIONS","SET_TEST_HISTORY","GET_TEST_HISTORY_LIST","ALL_TEST_HISTORY_LIST","SEARCH_TEST_HISTORY_LIST","UPDATE_TEST_HISTORY","GET_TEST_HISTORY","DELETE_TEST_HISTORY","UPDATE_SIGNED_STATE","UPDATE_TEST_HISTORY_WBC_INFO","GET_RBC_COMMENT","GET_WBC_COMMENT","GET_RUNNING_INTERVAL_ID","SET_RUNNING_INTERVAL_ID","UPDATE_TIMER","GET_TIMER","SET_TIMER","SET_WORKING_INTERVAL_ID","GET_WORKING_INTERVAL_ID","GET_RUNNING_STATE","SET_SLIDE_TIMER","UPDATE_SLIDE_TIMER","GET_SLIDE_TIME_COUNT","SET_USER_STOP","GET_USER_STOP","SET_WBC_CELL_POSITION","GET_WBC_CELL_POSITION","GET_TEST_HISTORY_PREV","GET_TEST_HISTORY_NEXT","SET_IS_RECOVERY_RUN","GET_IS_RECOVERY_RUN","SET_WORK_LIST","GET_WORK_LIST","INIT_WORK_LIST","DELETE_WORK_LIST","UPDATE_WORK_LIST","UPDATE_WORK_LIST_BM","UPDATE_SIGNED_WORK_LIST","UPDATE_RBC_COMMENT","UPDATE_WBC_COMMENT","UPDATE_BM_COMMENT","UPDATE_SELECT_ORDER_ID","GET_SELECT_ORDER_ID","ADD_WORK_LIST","GET_TEST_BARCODES","ADD_DSP_LIST","GET_DSP_LIST","SET_LIS_HOT_KEY","UPDATE_NEW_TEST_SET","UPDATE_EXEC_TEST_TYPE","INITIALIZE_MOUNT_CNT","UPDATE_MOUNT_CNT","GET_CURRENT_USER","GET_SETTINGS","UPDATE_RUNNING_PATH","UPDATE_RESULT_PATH_WBC","UPDATE_RESULT_PATH_RBC","UPDATE_BARCODE_PATH","GET_SYSTEM_TIME_ID","SET_SYSTEM_TIME_ID","GET_USER","UPDATE_REMEMBER_STATE","SET_CURRENT_USER","UPDATE_ROOT_PATH","GET_FILE_FILTER","GET_USER_LIST","UPDATE_ANALYSIS_TYPE","UPDATE_TEST_TYPE","UPDATE_RUNNING_MODE","UPDATE_USER","DELETE_USER","UPDATE_MARKER_STATE","GET_MARKER_STATE","SET_PAUSE_STATE","GET_PAUSE_STATE","GET_BF_WHOLE_SLIDE_PATH","GET_BF_WBC_CLASS_LIST","GET_SIZE_SLIDE_VALUE","UPDATE_LIS_CODE","SELECT_LIS_CODE","SELECT_LIS_CODE_RBC","UPDATE_CBC_CODE","SELECT_CBC_CODE","UPDATE_LIS_CONN_PATH","SELECT_LIS_CONN_PATH","GET_BACKUP_LIST","RESTORE_BACKUP_DATA","DELETE_BACKUP_DATA","RESET_RBC_DEGREE","GET_DEFAULT_RBC_DEGREE","UPDATE_CHECKED_CELL","SET_LOCK_SLIDE","SET_HOST_IP","GET_HOST_IP","GET_NORMAL_RANGE","UPDATE_NORMAL_RANGE","GET_LOCK_STATE","GET_KUMC_CBC_PATH","SET_WBC_NORMAL_RANGE","GET_WBC_NORMAL_RANGE","GET_SKMC_RESULT_CD","SET_SKMC_RESULT_CD","REMOVE_SKMC_RESULT_CD","GET_SKMC_REMARK","SET_SKMC_REMARK","REMOVE_SKMC_REMARK","SET_SKMC_FAVORITE","GET_SKMC_FAVORITE","GET_SKMC_LIS_RESULTS","SET_SKMC_LIS_RESULTS","SET_ALARM_COUNT","SET_SORT_TYPE","GET_SORT_TYPE","SET_CUSTOM_CLASS","GET_CUSTOM_CLASS","SET_SYS_INFO","GET_SYS_INFO","SET_BACKEND_DATA","GET_BACKEND_DATA","SELECT_CBC_CODE_INHA","SELECT_LIS_CODE_INHA","SELECT_LIS_CODE_RBC_INHA","SELECT_LIS_CONN_PATH_INHA","GET_RBC_COUNT_INHA","SELECT_WBC_RUNNING_COUNT","GET_BRIGHTNESS_SLIDE_VALUE","GET_RED_VALUE","GET_GREEN_VALUE","GET_BLUE_VALUE","GET_RGB_VALUE","SET_SIZE_SLIDE_VALUE","SET_BRIGHTNESS_SLIDE_VALUE","SET_RED_VALUE","SET_GREEN_VALUE","SET_BLUE_VALUE","SET_RGB_VALUE","SET_ROLLBACK_LIST","GET_ROLLBACK_LIST","GET_IMAGE_ROLLBACK_LIST","SET_CLONED_WBC_INFO","GET_RBC_BRIGHTNESS_SLIDE_VALUE","GET_RBC_RED_VALUE","GET_RBC_GREEN_VALUE","GET_RBC_BLUE_VALUE","SET_RBC_BRIGHTNESS_SLIDE_VALUE","SET_RBC_RED_VALUE","SET_RBC_GREEN_VALUE","SET_RBC_BLUE_VALUE","SET_CLONED_RBC_INFO","UPDATE_OIL_COUNT","SET_RESULT_LIST","CLEAR_RESULT_LIST","GET_RESULT_LIST","SET_WBC_REPORT_PRINT","GET_WBC_REPORT_PRINT","SET_RBC_REPORT_PRINT","GET_RBC_REPORT_PRINT","SET_RBC_SIZE","GET_RBC_SIZE","SET_RBC_CHROMIA","GET_RBC_CHROMIA","SET_RBC_SHAPE","GET_RBC_SHAPE","PUSH_RBC_SHAPE","POP_RBC_SHAPE","SET_RBC_PLATELET","GET_RBC_PLATELET","PUSH_RBC_PLATELET","POP_RBC_PLATELET","SET_RBC_INCLUSION","GET_RBC_INCLUSION","POP_RBC_INCLUSION","PUSH_RBC_INCLUSION","SET_IS_SHOW_MODAL_BARCODE","GET_IS_SHOW_MODAL_BARCODE","SET_IS_NS_NB_INTEGRATION","GET_IS_NS_NB_INTEGRATION","SET_IS_ALARM","GET_IS_ALARM","SET_IS_CBC_SHOW","GET_IS_CBC_SHOW","SET_SITE_CD","GET_SITE_CD","SET_DEVICE_SERIALNUM","GET_DEVICE_SERIALNUM","SELECT_BF_HOT_KEY","SELECT_WBC_HOT_KEY","SELECT_WBC_CUSTOM_CLASS","SELECT_EMP_NO","INSERT_WBC_MODIFY_HIST","GET_WBC_MODIFY_HIST","UPDATE_WBC_HIST_LIST","GET_WBC_HIST_LIST","GET_COMMON_CODE_LIST","GET_COMMON_CODE","GET_CODE_LIST_USER_POSITION","GET_CODE_LIST_USER_AUTHORIZATION","GET_CODE_LIST_USER_CASSETE_STATE","GET_CODE_LIST_PROCESSING_STATE","GET_CODE_LIST_ANALYSIS_TYPE","GET_CODE_LIST_CELL_COUNT","GET_CODE_LIST_GENERAL_STAIN","GET_CODE_LIST_SPECIAL_STAIN","GET_CODE_LIST_IMMUNO_STAIN","GET_CODE_LIST_SAMPLING_STAIN","GET_CODE_LIST_GENDER","GET_CODE_LIST_TEST_TYPE","GET_CODE_SIGNED_STATE","GET_CODE_LOG_TYPE","GET_CODE_SLOT_STATE","EVENT_TYPE_USER","EVENT_TYPE_SYSTEM","SET_EVENT_LOG","GET_EVENT_LOG","REMOVE_EVENT_LOG","REMEMBER_PWD_KEY","REMEMBER_PWD_IV","RECEIVE_DATA_BROADCAST_CHAN","GET_PB_CLASSIFICATIONS","GET_CLASSIFICATION_IMAGES","GET_MARKER_POSITION","GET_PB_HOT_KEYS","UPDATE_CLASSIFICATION","PB_IA_MOVE_IMAGE","SET_WBC_IMAGE_LIST","GET_PB_WBC_IMAGES","SET_SELECTED_ITEM","GET_SELECTED_ITEM","IA_SET_CUSTOM_CLASS","IA_GET_CUSTOM_CLASS","IDS_MSG_SUCCESS","IDS_MSG_FAILED","IDS_MSG_OIL_REMAIN_COUNTER","IDS_MSG_POWEROFF","IDS_MSG_INITALIZE","IDS_MSG_SIGNING_COMPLETE","IDS_MSG_DELETE_THE_SELECTED_ITEMS","IDS_MSG_ACCOUNT_CHANGED","IDS_MSG_DELETE_ACCOUNT","IDS_MSG_LOGOUT","IDS_MSG_DUPLICATE_KEY","IDS_MSG_HOTKEY_IN_ENGLISH","IDS_ERROR_CHECK_ID","IDS_ERROR_CHECK_PASSWORD","IDS_ERROR_NOT_MATCHED_PASSWORD","IDS_ERROR_SIGINUP","IDS_ERROR_SIGINUP_ALREADY_ID","IDS_ERROR_LOGIN_ERROR","IDS_ERROR_LOGIN_ID","IDS_ERROR_ALREADY_RUNNING","IDS_ERROR_STOP_PROCESS","IDS_ERROR_INIT_ERROR","IDS_ERROR_CHECK_REQUIRED_FIELDS","IDS_ERROR_CHECK_SLOT_NO","IDS_ERROR_FAVORITE_MAX_REGIST","IDS_ERROR_FAVORITE_MAX_REGIST2","IDS_ERROR_ENTER_YOUR_ORDER_DETAILS","IDS_ERROR_SELECT_A_TARGET_ITEM","IDS_ERROR_PLEASE_SELECT_AN_IMAGE","IDS_ERROR_ALREADY_ADDED","IDS_ERROR_ADD_A_WORKLIST","IDS_ERROR_NO_TEST_RESULTS","IDS_ERROR_FILE_CLISSIFICATION","IDS_ERROR_ENTER_CLASS_INFO","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","IDS_DOWNLOAD_COMPLETE","IDS_SELECT_SLIDE","IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED","IDS_RECOVER_GRIPPER_CONDITION","IDS_PLEASE_ENTER_END_DATE","IDS_PLEASE_ENTER_START_DATE","IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS","IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE","IDS_RESTART_SYSTEM","IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER","IDS_BARCODE_REGISTRATION_SUCCESSFUL","IDS_THIS_IS_A_DUPLICATION_ABBREVIATION","IDS_THIS_CARD_HAS_ALREADY_BEEN_USED","IDS_MSG_UPLOAD_LIS","IDS_MSG_SUBMIT_SLIDE","IDS_MSG_CONFIRM_SLIDE","IDS_PLEASE_SELECT_A_CLASS","IDS_PLEASE_SELECT_A_BACKUP_DATE","IDS_PLEASE_SELECT_A_BACKUP_PATH","IDS_PLEASE_SELECT_A_BACKUP_FILE","IDS_NO_DATA_FOUND","IDS_MSG_DATA_BACKUP","IDS_MSG_DATA_RESTORE","IDS_MSG_SIZE_CHROMIA_LINKED_LIS","UPDATE_SUCCESSFULLY","TCP_DiSCONNECTED","alreadyInitialized","getDateTimeStr","now","moment","formattedTime","format","formatDateString","dateString","momentObj","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","useHttpClient","apiBaseUrl","httpGet","url","parameters","type","httpGetAct","endpoint","options","headers","axios","defaults","withCredentials","slush","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","auth","refresh","requiresToken","processInfo","list","rbcclassification","wbcclassification","user","register","login","userCheck","userIp","getUsers","userDataPut","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","pageUpDown","updatePcIpState","clearPcIpState","folder","folders","classOrder","images","move","moveClassImage","jsonReader","jsonCreate","pdf","filesystem","readGet","createDirectory","fileCreate","fileTxtRead","H7Read","H7Message","Hl7Create","device","getDeviceInfo","backUp","backUpDate","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","forEach","unsubscribe","filter","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","PositionMarginList","WbcPositionMarginList","cbcList","classCd","classNm","isSelected","rbcClassList","categoryId","categoryNm","classInfo","classId","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","abbreviation","fullNm","key","orderIdx","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","lisCodeRbcOption","minRunCount","minGPCount","minPACount","wbcRunningCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","barcodeImgDir","dirName","howellJollyDirName","malariaDirName","noMalariaDirName","rbcClassDirName","rbcImageDirName","wbcClassDirName","bfDirName","bfHighDirName","bfClassDirName","userModuleDataGet","userModule","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","newUserId","oldUserId","initDataExecut","nextTick","initData","loginSetData","dispatch","newRunInfo","newVals","newIsRunningState","newBfSelectFiles","newEmbeddedStatusJobCmd","newExecuteState","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","emitSocketData","toggleStartStop","action","showSuccessAlert","confirm","rbcPositionMargin","sessionStorage","getItem","assign","console","log","InfoData","startEmbedded","message","sendInit","newObj","runInfoObj","result","cellAnalyzingCount","pbsAnalysisType","bfAnalysisType","_component_font_awesome_icon","_resolveComponent","_Fragment","_withDirectives","$event","disabled","_renderList","_vModelSelect","_createVNode","icon","_normalizeClass","onClick","_unref","style","_createBlock","Alert","onHide","_createCommentVNode","width","height","runningInfoModule","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","Number","percentage","setInterval","item","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","cx","cy","r","stroke","fill","colspan","dspOrderList","pb100aCassette","startStatus","existingItemIndex","findIndex","slot","basicWbcArr","basicBmClassList","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","storeEm","dspWbcClassList","dspBfClassList","nonWbcClassList","totalCount","emits","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","count","allCountsAreZero","flat","nonRbcWbcInfoArray","includes","title","updateCounts","iCasStatArr","lastIndexOf","nonRbcClassList","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","percent","formattedPercent","getCategoryName","name","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","imageUrls","folderPath","match","fileName","imageUrl","unshift","accumulatedRunningPath","runningPath","pathItem","isDuplicate","image","existingImage","_Transition","mode","default","_withCtx","alt","_","iCasExist","oCasExist","casExistChangeText","val","pbVersion","PB_VERSION","rbcUpdate","classInfoUpdate","Execute","ProcessInfo","orderList","_vShow","isClass","workingView","WorkingView100A","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","getAllUsersApi","putUserDataApi","getUserIpApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","router","createAccount","currentDate","Date","subscriptionDate","pcIp","_vModelText","saveHttpType","orderHttpType","normalItems","rbcClassListArr","reactive","defaultCellImgData","testTypeCd","pbAnalysisType","isAlarm","alarmCount","keepPage","backupPath","backupStartDate","backupEndDate","firstCellImgSet","cellImgData","cellImgSet","toISOString","split","firstSaveOrderClass","userName","firstSaveNormalRange","normalRangeItems","firstCreateRbcDegreeData","combindDegree","rbcDegreeList","classItem","error","defaultDegree","defaultItem","isAutoLoginEnabled","isAutoLogginable","getStoredUser","localStorage","loginUser","goJoinPage","getUserIp","viewerCheck","updateAccount","document","documentElement","requestFullscreen","resFlag","placeholder","rowspan","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","analysisVal","backupRootPath","local","toDate","drive","backupDrive","cellimgId","createBackup","backupDto","startDate","add","endDate","sourceFolderPath","res","driveGet","saveData","backUpData","savePlace","backupPlace","dataKey","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","Datepicker","modelValue","onResetDegree","createRbcDegreeData","showErrorAlert","processData","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","from","values","instance","onGripperOpenWebSocket","sendMessage","onCameraResetWebSocket","appContext","config","globalProperties","$socket","onGripperOpen","onCameraReset","wbcCustomParm","customNum","className","wbcCustomItems","getWbcCustomClasses","saveWbcCustomClass","updateResult","classArr","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","bfHotKeysItems","getBfHotKeyClasses","saveBfCustomClass","getNormalRange","saveNormalRange","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","top","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","runCountResult","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","activeTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","currentUserId","getAllUsers","storedUser","allUsers","replace","userSearchOption","userSearchOptions","inputText","filterUsers","users","searchText","searchOption","searchQuery","toLowerCase","searchField","onSearch","filteredUsers","latestDate","imagePrintAndWbcArr","selectedItems","getImagePrintData","saveImagePrint","imagePrintItems","_vModelCheckbox","lisCodeWbcArr","lisCodeRbcArr","minCountArr","saveLisCode","rbcResult","minCountResult","lisCodeItems","updateRbcResult","updateMinCountResult","minCountItems","wbcResult","wbcData","rbcData","minCountData","cbcCodeArr","saveCbcCode","cbcCodeItems","filePathSetArr","getFilePathSetData","saveFilePathSet","filePathSetItems","updateHotKey","updateFilePath","updateCbcFilePath","onInput","selectedTab","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","script","render","projectVersion","AI_VERSION","WEB_FRONTEND_VERSION","WEB_BACKEND_VERSION","tabs","currentTab","changeTab","tab","components","LognAccount","AnalysisDatabase","Report","QualityCheck","Version","storedTab","currentTabComponent","visible","closeLayer","createRunningApi","updateRunningApi","getRunningApi","queryString","entries","encodeURIComponent","join","deleteRunningApi","detailRunningApi","pageUpDownRunnIngApi","updatePcIpStateApi","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","printContent","selectItemWbc","printPage","filteredWbcInfo","selectItems","img_drive_root_path","content","compressedContent","pako","innerHTML","level","fetch","method","body","ok","blob","URL","createObjectURL","open","revokeObjectURL","closePrint","ref_key","submitUserId","submitOfDate","birthDay","gender","rbcMemo","memo","_normalizeStyle","coordinates","order","loadMoreRef","selectedItemId","itemObj","myIp","contextMenu","x","y","rightClickItem","printOnOff","selectAllCheckbox","addEventListener","handleOutsideClick","onUnmounted","removeEventListener","watchEffect","dbData","dbBaseTrClickId","filteredItems","selectItem","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","contextMenuElement","querySelector","contains","rowRightClick","wbcInfoData","sortedArray","clientX","handleCheckboxChange","hasOwnProperty","entry","isIntersecting","intersectionRatio","selectedRow","scrollIntoView","behavior","block","then","catch","lock_status","clonedWbcInfo","wbcInfoAfter","clonedRbcInfo","onModalOpen","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","openLayer","submitState","deleteRow","idsToDelete","rootArr","ids","submitStateChangeText","pilePath","selectedItem","newSelectedItem","showClassificationResults","classificationResult","_withScopeId","n","_pushScopeId","_popScopeId","allImages","hiddenImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","reduce","acc","hideImage","imageSet","onError","rootPath","dbGetData","today","thirtyDaysAgo","setDate","searchType","page","titleItem","titleItemArr","nrCount","wbcCountOrder","classListToggle","bmClassIsBoolen","on","initDbData","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","numberOfCalls","i","getDbData","saveLastSearchParams","storedSearchParams","pageNum","requestData","pageSize","startDay","endDay","dateA","dateB","diff","diffInMs","getTime","diffInDays","loadMoreData","onChange","for","ListTable","onLoadMoreData","onInitData","onSelectItem","onRefresh","ListInfo","ListWbcImg","ListBmImg","hideConfirm","okConfirm","checkedClassIndices","rbcInfoChangeVal","memoModal","showConfirm","confirmType","confirmMessage","isBefore","classInfoArr","useRouter","except","currentRoute","rbcInfoAfter","newItem","afterChange","allCheckClear","beforeChange","updateClassInfoArr","isChecked","some","onClickDegree","isNormal","updatedSelectItems","rbcItem","rbcAfter","updatedItem","resRunningItem","memoOpen","memoCancel","memoChange","alertShow","scrollTo","commitConfirmed","handleOkConfirm","onCommit","localTime","isBeforeClicked","Confirm","onOkConfirm","rulers","moveImgPost","moveClassImagePost","malariaList","noMalariaList","selectedClickImages","indexBeforePressingShift","draggedImages","imageExist","getImageList","folderName","json","err","handleBodyClick","closest","handleClickImage","section","imgName","clickedImage","shiftKey","startIdx","endIdx","ctrlKey","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","malaria","noMalaria","readJsonFile","readFileTxt","readH7File","readH7Message","createH17","viewer","imgSet","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","activeRuler","showSelect","rulerPos","prevPosX","prevPosY","posX","posY","left","rulerSize","rulerWidth","viewBoxWH","tilingViewerLayer","tileExist","rbcInfoPathAfter","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","initElement","closeSelectBox","removeRbcMarker","removeDiv","moveRbcClassEvent","moveRbcClassItem","argument","foundElementIndex","el","rbcInfoPathAfterJsonCreate","drawRbcMarker","existingOverlays","getElementsByClassName","overlaysArray","overlay","removeOverlay","jsonString","jsonData","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","filePath","responseData","selectBox","rbcMarker","rbcClassRightClick","currentTarget","HTMLElement","fullPath","getElementById","newHtml","insertAdjacentHTML","ctx","getContext","canvas","clearRect","beginPath","colors","info","lineWidth","strokeStyle","rectPath","Path2D","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","element","moveHandler","magCanvas","removeChild","drawer","createElement","magCtx","magWidth","magHeight","zoomLevel","position","border","borderRadius","zIndex","appendChild","drawImage","visibility","addOverlay","location","addHandler","originalEvent","itemPos","color","setAttribute","backgroundColor","opacity","parseFloat","overlayRect","viewport","imageToViewportRectangle","clickPos","pointFromPixel","canvasPos","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","Image","xmlns","Url","Format","Overlap","TileSize","Size","Height","Width","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","maxNumberOfLines","numberOfLines","round","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","container","gridLines","querySelectorAll","line","remove","onClickRuler","ruler","drawRuler","divtilingViewer","rulerOverlay","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","zoomRatio","viewportToImageZoom","titleElement","textAlign","fontSize","minWidth","startX","endX","startY","endY","centerX","centerY","halfWidth","onClickZoom","Malaria","onContextmenu","selectItemsData","resData","route","useRoute","orderClass","cbcLayer","isButtonDisabled","timeoutId","pageMoveDeleteStop","ipAddress","isNext","moveWbc","getRunningInfoDetail","ip","deleteConnectionStatus","upDownBlockAccess","pageGo","sortWbcInfo","newSortArr","nameA","nameB","pageUpDownRunnIng","step","clearTimeout","processNextDbIndex","direction","setTimeout","handleDataResponse","dbId","resClassInfo","wbcArr","sortedWbcInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","cbcWorkList","cbcPatientNo","cbcPatientNm","cbcSex","cbcAge","inhaTestCode","cbcFilePathSetArr","deviceSerialNm","cbcCodeList","selectItemsVal","getCbcPathData","getCbcCodeList","initCbcData","realUrl","params","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","readFileTxtRes","cbcData","cbcDataArray","excludedTitles","trim","machine","episode","returnCode","regNo","sex","age","testCode","testCodeList","codes","codeArray","obj","deviceBarcode","msg","segments","cbcSegment","CBC_CD","getField","updateRunningApiPost","originalDb","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","isBeforeUpdate","refreshClass","classInfoArrUpdate","unChecked","ClassInfoMenu","onRefreshClass","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","RbcImageList","onUnChecked","eqmtcd","CbcWbcTestCdList_0002","spcParams","fileSysPost","createFile","selectItemsSessionStorageData","clonedWbcInfoStore","barcodeImg","wbcMemo","titleArr","toggleLock","okMessageType","lisFilePathSetArr","afterChang","getLisWbcRbcData","getLisPathData","lisModalOpen","goClass","wbcClassTileChange","classInfoSort","updateOriginalDb","toggleLockEvent","uploadLis","codeList","fiveDiffWorkList","wbcDiffCountItem","wbcItem","wbcTemp","fiveDiffItem","nsPercentItem","ancResult","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","resultFlag","ResultFlag","resultflag","_text","error2","lisLastStep","seq","IA_CD","lisFileUrlCreate","godae","inhaDataSend","otherDataSend","fileCreateRes","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","sendLisMessage","filepath","resultStr","tmpList","tmpStr","rbcTmp","MIN_COUNT","specialCodes","rbcItemElement","replacements","rbcTmp2","kumcMergePercent","kumcBandPercent","segItem","bandItem","parms","filename","resultMsg","userid","errorCode","errorMessage","succ","fail","userNm","getUsernm","usernm","getStringValue","noAlert","beforeChang","totalCountSet","sortedWbcInfoAfter","titleInArray","sortArr","wbcArrs","WbcClass","Print","onPrintClose","selectedTitle","moveImgIsBool","draggedItemIndex","draggedImageIndex","isShiftKeyPressed","firstClickedImageIndex","isCtrlKeyPressed","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","imageSize","selectSizeTitle","refsArray","allCheck","cellRef","cellMarkerIcon","isBeforeChild","modalOpen","selectedImageSrc","modalImageWidth","modalImageHeight","selectItemIamgeArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","classCompareShow","handleKeyDown","handleKeyUp","handleClickOutside","imgSetLocalStorage","storedBrightness","storedRgb","imageSizeCopy","isBeforeDataSet","nextPage","isNextFalse","handleRightClick","openContextMenu","getNewImageUrl","matchingImage","fileNameMa","idMa","titleMa","showSizeControl","hideSizeControl","moveSelectedImages","itemIdx","addToRollbackHistory","draggedItem","matchingItemIndex","infoItem","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","projectTypeReturn","wbcPush","wbcinfo","foundObject","isBorderChanged","prefix","modifiedPrefix","replaceFileNamePrefix","openModal","closeModal","zoomIn","newWidth","newHeight","zoomOut","excelDownload","drawCellMarker","imgResize","jsonImageDat","imageElement","foundItem","FILE_NM","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","POSX2","POSX1","rectHeight","POSY2","POSY1","display","allCheckChange","allCheckInsert","idxKey","setRef","itemId","scrollToElement","targetElement","imgSizeReset","brightnessReset","reset","selectedSizeTitle","changeImageSize","currentWidth","currentHeight","onDragOverCircle","onDropCircle","toUpperCase","moveSelectedImagesToTargetItem","targetIndex","selectedImages","sourceItemIndex","sourceItem","imageIndex","correspondingItem","afterItem","itemImg","dataItem","oArr","onDragOver","itemIndex","selectImage","classInfoitem","imageIndexInSelected","img","imageFileName","targetItemIndex","originalOnDrop","selectedImagesToMove","keyMove","wbcInfosArr","sourceFolders","destinationFolders","classInfoBagic","matchingItem","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","Set","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","highImg","findAfterArr","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","onIsNextFalse","ClassInfo","onNextPage","onScrollEvent","onIsBefore","onMouseleave","onMouseover","onDblclick","paImages","idealZoneImages","idealStitchImages","megaImages","strArray","buttonOfen","viewerSmall","getImgUrl","getImageUrls","getImageUrlsSmallImg","resp","openInViewer","destroy","navigator","showZoomControl","showHomeControl","showFullScreenControl","showRotationControl","showFullPageControl","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","closeViewer","viewerElement","hideImageRef","newImgHeight","newImgWidth","onImageLoad","imgElement","complete","naturalHeight","naturalWidth","bool","transform","onLoad","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","to","next","currentUser","_imports_0","appHeaderLeftHidden","logOutBox","viewerCheckData","isDoorOpen","storagePercent","eqStatCdData","oilCountData","storagePercentData","maxOilCount","statusBarWrapper","statusBar","noRouterPush","currentTime","isAralrmInterver","formattedDate","updateDateTime","toLocaleDateString","toLocaleTimeString","clear","fullscreenElement","exitFullscreen","timerId","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","logOutBoxOn","logout","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","_component_router_link","Modal","onAfterOpen","header","namespaced","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","storageSize","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","embeddedNumber","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","chatRunningData","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setIaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceSerialNm","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setCbcLayer","setInhaTestCode","setCommonInfo","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","errorLevel","processingCode","cassetId","existingSlot","existing","setTimeInfo","createStore","modules","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","alert","runningInfoStore","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","indexOf","range","createDeviceInfoApi","getDeviceInfoApi","countingInterStartval","countingInterRunval","iaRootDir","viewerCheckApp","parsedDataProps","deleteData","siteCdDvBarCode","reqArrPaste","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","onBeforeMount","leave","startSysPostWebSocket","runInfoPostWebSocket","textDecoder","TextDecoder","stringData","decode","parseDataWarp","deviceInfoObj","saveDeviceInfo","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","traySlot","tactTime","bf_lowPowerPath","bminfo","saveRunningInfo","deviceInfo","deviceData","deviceItem","last","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","socketPlugin","install","app","socket","io","transports","library","fas","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}