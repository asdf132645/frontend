{"version":3,"file":"js/app.50efcd1b.js","mappings":"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AAS,KACTC,QAAS,aACTC,OAAQ,OAYZ,CACIL,WAAY,KACZC,WAAY,iBACZC,UAAW,CAAC,CACRC,QAAS,KACTC,QAAS,oBACTC,OAAQ,KACT,CACCF,QAAS,KACTC,QAAS,uBACTC,OAAQ,QAGpBC,aAAc,EACdC,kBAAmB,MAGVC,GAAmB,CAChC,CACIR,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,KACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,KACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,KACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS,MACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,IACTC,QAAS,IACTC,QAAS,KACV,CACCX,WAAY,KACZG,QAAS,KACTM,QAAS,MACTC,QAAS,IACTC,QAAS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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constFile/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constFile/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constFile/analysis.ts","webpack://uimdCell/./src/common/defines/constFile/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constFile/settings.ts","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?7f70","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?ea5c","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/lib/commonfunction/settingFunctions.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/common/siteCd/siteCd.ts","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?2b55","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/common/lib/utils/scrollBlock.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/common/api/service/excel/excelApi.ts","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/defines/constFile/rbc.ts","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constFile/lis.ts","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?5895","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?18ab","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/components/commonUi/LoadingOverlay.vue","webpack://uimdCell/./src/components/commonUi/LoadingOverlay.vue?18f9","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/common/api/service/browserExit/browserExitApi.ts","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/storeSetData/common.ts","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/common/defines/constFile/classArr.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/icons/customIcons.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 2475,\n\t\"./uz-latn.js\": 2475,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]","export const testType = [\r\n    {value: '01', text: 'Diff'},\r\n    {value: '04', text: 'Premium'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];","import { commonCodeList } from '@/common/defines/constFile/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constFile/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, iaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const baseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n    return `${baseUrl}/images/getImageRealTime?folder=${iaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}`;\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"P\"),\n  /*#__PURE__*/_createTextVNode(\"rocessing \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"I\"),\n  /*#__PURE__*/_createTextVNode(\"nformation \")\n], -1)\nconst _hoisted_2 = { class: \"processInfoUl\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)\nconst _hoisted_6 = { class: \"proVal\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\nconst _hoisted_13 = { class: \"proSpan\" }\nconst _hoisted_14 = { class: \"proVal\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)\nconst _hoisted_16 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"ul\", _hoisted_2, [\n      _createElementVNode(\"li\", null, [\n        _hoisted_3,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_5,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_7,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_9,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_13, _toDisplayString(siteCd.value === '0019' ? 'Order Date' : 'Analyzed Date'), 1),\n        _createElementVNode(\"span\", _hoisted_14, _toDisplayString(siteCd.value === '0019' ? processInfoItem.value?.analyzedDttm   : processInfoItem.value?.orderDate), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_15,\n        _createElementVNode(\"span\", _hoisted_16, _toDisplayString(prevOilCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">P</span>rocessing <span class=\"greenColor\">I</span>nformation </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <span class=\"proSpan\">\r\n          {{ siteCd === '0019' ? 'Order Date' : 'Analyzed Date' }}\r\n        </span>\r\n        <span class=\"proVal\">\r\n          {{ siteCd === '0019' ? processInfoItem?.analyzedDttm   : processInfoItem?.orderDate }}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const analysisOptions = [\r\n    {value: '01', text: 'WBC Diff (Standard)'},\r\n    {value: '04', text: 'PBS (Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'},\r\n    // {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const wbcCountOptions = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const bmCountOptions = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const stitchCountOptions = [{value: '1', text: '1 stitch'},\r\n    {value: '2', text: '2 stitch'},\r\n    {value: '3', text: '3 stitch'},\r\n    {value: '4', text: '4 stitch'},\r\n    {value: '5', text: '5 stitch'}];\r\n\r\nexport const slideCard = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ]\r\n};\r\n\r\nexport const slideCard100a = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ]\r\n};\r\n","interface Messages {\r\n    [key: string]: string;\r\n}\r\nexport  const messages: Messages = {\r\n    Logout: 'Would you like to log out?',\r\n\r\n    // login page\r\n    GET_POSITION_LIST: 'getPositionList',\r\n    GET_LOGIN_HISTORY: 'getLoginHistory',\r\n    SET_USER: 'setUser',\r\n    IS_REGIST_USER: 'isRegistUser',\r\n    UPDATE_LOGIN_DTTM: 'updateLoginDttm',\r\n    UPDATE_USER_AVAILABLE: 'updateUserAvailable',\r\n\r\n    // WBC classification\r\n    GET_WBC_CLASS_LIST: 'getWbcClassList',\r\n    GET_WBC_CLASS_LIST_ALL: 'getWbcClassListAll',\r\n    GET_WBC_TOTAL_COUNT: 'getWbcTotalCount',\r\n    UPDATE_WBC_COUNT: 'updateWbcCount',\r\n    GET_WBC_COUNT: 'getWbcCount',\r\n    GET_TEST_TYPE: 'getTestType',\r\n    // 인하대 test type 명칭 변경\r\n    GET_MODIFIED_TEST_TYPE: 'getModifiedTestType',\r\n    GET_STITCH_COUNT: 'getStitchCount',\r\n    GET_RBC_COUNT: 'getRbcCount',\r\n    GET_RBC_COUNT_HIST: 'getRbcCountHist',\r\n    GET_RBC_COUNT_SKMC: 'getRbcCountSkmc',\r\n    UPDATE_DEGREE: 'updateDegree',\r\n    INIT_WBC_COUNT: 'initWbcCount',\r\n    INIT_RBC_DEGREE: 'initRbcDegree',\r\n    GET_WBC_INFO: 'getWbcInfo',\r\n    SET_WBC_IMAGE_HIST: 'setWbcImageHist',\r\n    GET_WBC_IMAGE_HIST: 'getWbcImageHist',\r\n    INIT_WBC_IMAGE_HIST: 'initWbcImageHist',\r\n    INSERT_WBC_CLASSIFICATION: 'insertWbcClassification',\r\n    SET_WBC_CUSTOM_LIST: 'setWbcClassList',\r\n    UPDATE_HOT_KEYS: 'updateHotKeys',\r\n    UPDATE_BF_HOT_KEYS: 'updateBfHotKeys',\r\n    UPDATE_ORDER: 'updateOrder',\r\n    UPDATE_ORDER_BF: 'updateOrderBf',\r\n    UPDATE_IMAGE_HIST: 'updateImageHist',\r\n    SET_CURRENT_WBC_RESULTS: 'setCurrentWbcResults',\r\n    GET_CURRENT_WBC_RESULTS: 'getCurrentWbcResults',\r\n    SET_BEFORE_WBC_RESULTS: 'setBeforeWbcResults',\r\n    GET_BEFORE_WBC_RESULTS: 'getBeforeWbcResults',\r\n\r\n    // 집계\r\n    GET_WBC_MODIFY_LIST: 'getWbcModifyList',\r\n    GET_WBC_MODIFY_LIST_ALL: 'getWbcModifyListAll',\r\n    GET_BF_MODIFY_LIST: 'getBfModifyList',\r\n\r\n    // RBC classification\r\n    GET_RBC_CLASS_LIST: 'getRbcClassList',\r\n    GET_MALARIA_COUNT: 'getMalariaCount',\r\n    UPDATE_MALARIA_COUNT: 'updateMalariaCount',\r\n    SET_CURRENT_RBC_RESULTS: 'setCurrentRbcResults',\r\n    GET_CURRENT_RBC_RESULTS: 'getCurrentRbcResults',\r\n\r\n    SET_CLASSIFICATION: 'setClassification',\r\n    GET_CLASSIFICATION_ITEM: 'getClassificationItem',\r\n    SET_CLASSIFICATION_ITEM: 'setClassificationItem',\r\n\r\n    UPDATE_RBC_CLASSIFICATION: 'updateRbcClassificatin',\r\n    UPDATE_RBC_CLASSIFICATION_SKMC: 'updateRbcClassificatinSkmc',\r\n    INSERT_WBC_SUCCESS: 'insertWbcSuccess',\r\n    SELECT_RBC_DEGREE: 'selectRbcDegree',\r\n    UPDATE_RBC_DEGREE: 'updateRbcDegree',\r\n\r\n    // Test page\r\n    SET_TEST_LIST: 'setTestList',\r\n    GET_TEST_LIST: 'getTestList',\r\n    GET_TEST_RESULT: 'getTestResult',\r\n    GET_RBC_FIELDS: 'getRbcFields',\r\n    GET_WBC_FIELDS: 'getWbcFields',\r\n    GET_RBC_ITEMS: 'getRbcItems',\r\n    GET_WBC_ITEMS: 'getWbcItems',\r\n    INIT_OIL_COUNT: 'initOilCount',\r\n    UPDATE_RESULT: 'updateResult',\r\n    UPDATE_RUNNING_STATE: 'updateRunningState',\r\n    GET_ORDER_LIST: 'getOrderList',\r\n    SET_ORDER_LIST: 'setOrderList',\r\n    UPDATE_ORDER_LIST: 'updateOrderList',\r\n    INIT_ORDER_LIST: 'initOrderList',\r\n    GET_TEST_RESULT_ALL: 'getTestResultAll',\r\n    GET_SEARCH_OPTIONS: 'getSearchOptions',\r\n    UPDATE_SEARCH_OPTIONS: 'updateSearchOption',\r\n    SET_TEST_HISTORY: 'setTestHistory',\r\n    GET_TEST_HISTORY_LIST: 'getTestHistoryList',\r\n    ALL_TEST_HISTORY_LIST: 'allTestHistoryList',\r\n    SEARCH_TEST_HISTORY_LIST: 'searchTestHistoryList',\r\n    UPDATE_TEST_HISTORY: 'updateTestHistory',\r\n    GET_TEST_HISTORY: 'getTestHistory',\r\n    DELETE_TEST_HISTORY: 'deleteTestHistory',\r\n    UPDATE_SIGNED_STATE: 'updatesubmitState',\r\n    UPDATE_TEST_HISTORY_WBC_INFO: 'updateTestHistoryWbcInfo',\r\n    GET_RBC_COMMENT: 'getRbcComment',\r\n    GET_WBC_COMMENT: 'getWbcComment',\r\n    GET_RUNNING_INTERVAL_ID: 'getRunningIntervalId',\r\n    SET_RUNNING_INTERVAL_ID: 'setRuningIntervalId',\r\n    UPDATE_TIMER: 'updateWorkingTimer',\r\n    GET_TIMER: 'getWorkingTimer',\r\n    SET_TIMER: 'setWorkingTimer',\r\n    SET_WORKING_INTERVAL_ID: 'setWorkingIntervalId',\r\n    GET_WORKING_INTERVAL_ID: 'getWorkingIntervalId',\r\n    GET_RUNNING_STATE: 'getRunningState',\r\n    SET_SLIDE_TIMER: 'setSlideTimer',\r\n    UPDATE_SLIDE_TIMER: 'updateSlideTimer',\r\n    GET_SLIDE_TIME_COUNT: 'getSlideTimeCount',\r\n    SET_USER_STOP: 'setUserStop',\r\n    GET_USER_STOP: 'getUserStop',\r\n    SET_WBC_CELL_POSITION: 'setWbcCellPosition',\r\n    GET_WBC_CELL_POSITION: 'getWbcCellPosition',\r\n    GET_TEST_HISTORY_PREV: 'getTestHistoryPrev',\r\n    GET_TEST_HISTORY_NEXT: 'getTestHistoryNext',\r\n    SET_IS_RECOVERY_RUN: 'setIsRecoveryRun',\r\n    GET_IS_RECOVERY_RUN: 'getIsRecoveryRun',\r\n\r\n    // Work List\r\n    SET_WORK_LIST: 'setWorkList',\r\n    GET_WORK_LIST: 'getWorkList',\r\n    INIT_WORK_LIST: 'initWorkList',\r\n    DELETE_WORK_LIST: 'deleteWorkList',\r\n    UPDATE_WORK_LIST: 'updateWorkList',\r\n    UPDATE_WORK_LIST_BM: 'updateWorkListBm',\r\n    UPDATE_SIGNED_WORK_LIST: 'updateSignedWorkList',\r\n    UPDATE_RBC_COMMENT: 'updateRbcComment',\r\n    UPDATE_WBC_COMMENT: 'updateWbcComment',\r\n    UPDATE_BM_COMMENT: 'updateBmComment',\r\n    UPDATE_SELECT_ORDER_ID: 'updateSelectOrderId',\r\n    GET_SELECT_ORDER_ID: 'getSelectOrderId',\r\n    ADD_WORK_LIST: 'addWorkList',\r\n    GET_TEST_BARCODES: 'getTestBarcodes',\r\n    ADD_DSP_LIST: 'addDspList',\r\n    GET_DSP_LIST: 'getDspList',\r\n\r\n    // Common\r\n    // lis 단축키 추가\r\n    SET_LIS_HOT_KEY: 'setLisHotKey',\r\n    UPDATE_NEW_TEST_SET: 'updateNewTestSet',\r\n    UPDATE_EXEC_TEST_TYPE: 'updateExecTestType',\r\n    INITIALIZE_MOUNT_CNT: 'initializeMountCnt',\r\n    UPDATE_MOUNT_CNT: 'updateMountCnt',\r\n    GET_CURRENT_USER: 'getCurrentUser',\r\n    GET_SETTINGS: 'getSettings',\r\n    UPDATE_RUNNING_PATH: 'updateRunningPath',\r\n    UPDATE_RESULT_PATH_WBC: 'updateResultPathWbc',\r\n    UPDATE_RESULT_PATH_RBC: 'updateResultPathRbc',\r\n    UPDATE_BARCODE_PATH: 'updateBarcodePath',\r\n    GET_SYSTEM_TIME_ID: 'getSystemTimeId',\r\n    SET_SYSTEM_TIME_ID: 'setSystemTimeId',\r\n    GET_USER: 'getUser',\r\n    UPDATE_REMEMBER_STATE: 'updateRememberState',\r\n    SET_CURRENT_USER: 'setCurrentUser',\r\n    UPDATE_ROOT_PATH: 'updateRootPath',\r\n    GET_FILE_FILTER: 'getFileFilter',\r\n    GET_USER_LIST: 'getUserList',\r\n    UPDATE_ANALYSIS_TYPE: 'updateAnalysisType',\r\n    UPDATE_TEST_TYPE: 'updateTestType',\r\n    UPDATE_RUNNING_MODE: 'updateRunningMode',\r\n    UPDATE_USER: 'updateUser',\r\n    DELETE_USER: 'deleteUser',\r\n    UPDATE_MARKER_STATE: 'updateMarkerState',\r\n    GET_MARKER_STATE: 'getMarkerState',\r\n    SET_PAUSE_STATE: 'setPauseState',\r\n    GET_PAUSE_STATE: 'getPauseState',\r\n    GET_BF_WHOLE_SLIDE_PATH: 'getBfWholeSlidePath',\r\n    GET_BF_WBC_CLASS_LIST: 'getBfWbcClassList',\r\n    GET_SIZE_SLIDE_VALUE: 'getSizeSlideValue',\r\n    UPDATE_LIS_CODE: 'updateLisCode',\r\n    SELECT_LIS_CODE: 'selectLisCode',\r\n    SELECT_LIS_CODE_RBC: 'selectLisCodeRbc',\r\n    UPDATE_CBC_CODE: 'updateCbcCode',\r\n    SELECT_CBC_CODE: 'selectCbcCode',\r\n    UPDATE_LIS_CONN_PATH: 'updateLisConnPath',\r\n    SELECT_LIS_CONN_PATH: 'selectLisConnPath',\r\n    GET_BACKUP_LIST: 'getBackupList',\r\n    RESTORE_BACKUP_DATA: 'restoreBackupData',\r\n    DELETE_BACKUP_DATA: 'deleteBackupData',\r\n    RESET_RBC_DEGREE: 'resetRbcDegree',\r\n    GET_DEFAULT_RBC_DEGREE: 'getDefaultRbcDegree',\r\n    UPDATE_CHECKED_CELL: 'updateCheckedCell',\r\n    SET_LOCK_SLIDE: 'setLockSlide',\r\n    SET_HOST_IP: 'setHostIp',\r\n    GET_HOST_IP: 'getHostIp',\r\n    GET_NORMAL_RANGE: 'getNormalRange',\r\n    UPDATE_NORMAL_RANGE: 'updateNormalRange',\r\n    GET_LOCK_STATE: 'getLockState',\r\n    GET_KUMC_CBC_PATH: 'getKumcCbcPath',\r\n    SET_WBC_NORMAL_RANGE: 'setWbcNormalRange',\r\n    GET_WBC_NORMAL_RANGE: 'getWbcNormalRange',\r\n    GET_SKMC_RESULT_CD: 'getSkmcResultCd',\r\n    SET_SKMC_RESULT_CD: 'setSkmcResultCd',\r\n    REMOVE_SKMC_RESULT_CD: 'removeSkmcResultCd',\r\n    GET_SKMC_REMARK: 'getSkmcRemark',\r\n    SET_SKMC_REMARK: 'setSkmcRemark',\r\n    REMOVE_SKMC_REMARK: 'removeSkmcRemark',\r\n    SET_SKMC_FAVORITE: 'setSkmcFavorite',\r\n    GET_SKMC_FAVORITE: 'getSkmcFavorite',\r\n    GET_SKMC_LIS_RESULTS: 'getSkmcLisResults',\r\n    SET_SKMC_LIS_RESULTS: 'setSkmcLisResults',\r\n    SET_ALARM_COUNT: 'setAlarmCount',\r\n    SET_SORT_TYPE: 'setSortType',\r\n    GET_SORT_TYPE: 'getSortType',\r\n    SET_CUSTOM_CLASS: 'setCustomClass',\r\n    GET_CUSTOM_CLASS: 'getCustomClass',\r\n    SET_SYS_INFO: 'setSysInfo',\r\n    GET_SYS_INFO: 'getSysInfo',\r\n    SET_BACKEND_DATA: 'setBackendData',\r\n    GET_BACKEND_DATA: 'getBackendData',\r\n\r\n    // 인하대 임시\r\n    SELECT_CBC_CODE_INHA: 'selectCbcCodeInha',\r\n    SELECT_LIS_CODE_INHA: 'selectLisCodeInha',\r\n    SELECT_LIS_CODE_RBC_INHA: 'selectLisCodeRbcInha',\r\n    SELECT_LIS_CONN_PATH_INHA: 'selectLisConnPathInha',\r\n    GET_RBC_COUNT_INHA: 'getRbcCountInha',\r\n    SELECT_WBC_RUNNING_COUNT: 'selectWbcRunningCount',\r\n\r\n    // wbc\r\n    GET_BRIGHTNESS_SLIDE_VALUE: 'getBrightnessSlideValue',\r\n    GET_RED_VALUE: 'getRedValue',\r\n    GET_GREEN_VALUE: 'getGreenValue',\r\n    GET_BLUE_VALUE: 'getBlueValue',\r\n    GET_RGB_VALUE: 'getRgbValue',\r\n    SET_SIZE_SLIDE_VALUE: 'setSizeSlideValue',\r\n    SET_BRIGHTNESS_SLIDE_VALUE: 'setBrightnessSlideValue',\r\n    SET_RED_VALUE: 'setRedValue',\r\n    SET_GREEN_VALUE: 'setGreenValue',\r\n    SET_BLUE_VALUE: 'setBlueValue',\r\n    SET_RGB_VALUE: 'setRgbValue',\r\n    SET_ROLLBACK_LIST: 'setRollbackList',\r\n    GET_ROLLBACK_LIST: 'getRollbackList',\r\n    GET_IMAGE_ROLLBACK_LIST: 'getImageRollbackList',\r\n    SET_CLONED_WBC_INFO: 'setClonedWbcInfo',\r\n\r\n    // rbc\r\n    GET_RBC_BRIGHTNESS_SLIDE_VALUE: 'getRbcBrightnessSlideValue',\r\n    GET_RBC_RED_VALUE: 'getRbcRedValue',\r\n    GET_RBC_GREEN_VALUE: 'getRbcGreenValue',\r\n    GET_RBC_BLUE_VALUE: 'getRbcBlueValue',\r\n    SET_RBC_BRIGHTNESS_SLIDE_VALUE: 'setRbcBrightnessSlideValue',\r\n    SET_RBC_RED_VALUE: 'setRbcRedValue',\r\n    SET_RBC_GREEN_VALUE: 'setRbcGreenValue',\r\n    SET_RBC_BLUE_VALUE: 'setRbcBlueValue',\r\n    SET_CLONED_RBC_INFO: 'setClonedRbcInfo',\r\n\r\n    UPDATE_OIL_COUNT: 'updateOilCount',\r\n    SET_RESULT_LIST: 'setResultList',\r\n    CLEAR_RESULT_LIST: 'clearResultList',\r\n    GET_RESULT_LIST: 'getResultList',\r\n    SET_WBC_REPORT_PRINT: 'setWbcReportPrint',\r\n    GET_WBC_REPORT_PRINT: 'getWbcReportPrint',\r\n    SET_RBC_REPORT_PRINT: 'setRbcReportPrint',\r\n    GET_RBC_REPORT_PRINT: 'getRbcReportPrint',\r\n    SET_RBC_SIZE: 'setRbcSize',\r\n    GET_RBC_SIZE: 'getRbcSize',\r\n    SET_RBC_CHROMIA: 'setRbcChromia',\r\n    GET_RBC_CHROMIA: 'getRbcChromia',\r\n    SET_RBC_SHAPE: 'setRbcShape',\r\n    GET_RBC_SHAPE: 'getRbcShape',\r\n    PUSH_RBC_SHAPE: 'pushRbcShape',\r\n    POP_RBC_SHAPE: 'popRbcShape',\r\n    SET_RBC_PLATELET: 'setRbcPlatelet',\r\n    GET_RBC_PLATELET: 'getRbcPlatelet',\r\n    PUSH_RBC_PLATELET: 'pushRbcPlatelet',\r\n    POP_RBC_PLATELET: 'popRbcPlatelet',\r\n    SET_RBC_INCLUSION: 'setRbcInclusion',\r\n    GET_RBC_INCLUSION: 'getRbcInclusion',\r\n    POP_RBC_INCLUSION: 'popRbcInclusion',\r\n    PUSH_RBC_INCLUSION: 'pushRbcInclusion',\r\n    SET_IS_SHOW_MODAL_BARCODE: 'setIsShowModalBarcode',\r\n    GET_IS_SHOW_MODAL_BARCODE: 'getIsShowModalBarcode',\r\n    SET_IS_NS_NB_INTEGRATION: 'setIsNsNbIntegration',\r\n    GET_IS_NS_NB_INTEGRATION: 'getIsNsNbIntegration',\r\n    SET_IS_ALARM: 'setIsAlarm',\r\n    GET_IS_ALARM: 'getIsAlarm',\r\n    SET_IS_CBC_SHOW: 'setIsCbcShow',\r\n    GET_IS_CBC_SHOW: 'getIsCbcShow',\r\n    SET_SITE_CD: 'setSiteCd',\r\n    GET_SITE_CD: 'getSiteCd',\r\n    SET_DEVICE_SERIALNUM: 'setDeviceSerialNm',\r\n    GET_DEVICE_SERIALNUM: 'getDeviceSerialNm',\r\n\r\n    SELECT_BF_HOT_KEY: 'selectBfHotKey',\r\n    SELECT_WBC_HOT_KEY: 'selectWbcHotKey',\r\n    SELECT_WBC_CUSTOM_CLASS: 'selectWbcCustomClass',\r\n    SELECT_EMP_NO: 'selectEmpNo',\r\n\r\n    // log history\r\n    INSERT_WBC_MODIFY_HIST: 'insetWbcModifyHist',\r\n    GET_WBC_MODIFY_HIST: 'getWbcModifyHist',\r\n    UPDATE_WBC_HIST_LIST: 'updateWbcHistList',\r\n    GET_WBC_HIST_LIST: 'getWbcHistList',\r\n\r\n    // Code group\r\n    GET_COMMON_CODE_LIST: 'getCommonCodeList',\r\n    GET_COMMON_CODE: 'getCommonCode',\r\n\r\n    GET_CODE_LIST_USER_POSITION: '00',\r\n    GET_CODE_LIST_USER_AUTHORIZATION: '01',\r\n    GET_CODE_LIST_USER_CASSETE_STATE: '02',\r\n    GET_CODE_LIST_PROCESSING_STATE: '03',\r\n    GET_CODE_LIST_ANALYSIS_TYPE: '04',\r\n    GET_CODE_LIST_CELL_COUNT: '05',\r\n    GET_CODE_LIST_GENERAL_STAIN: '06',\r\n    GET_CODE_LIST_SPECIAL_STAIN: '07',\r\n    GET_CODE_LIST_IMMUNO_STAIN: '08',\r\n    GET_CODE_LIST_SAMPLING_STAIN: '09',\r\n    GET_CODE_LIST_GENDER: '10',\r\n    GET_CODE_LIST_TEST_TYPE: '11',\r\n    GET_CODE_SIGNED_STATE: '12',\r\n    GET_CODE_LOG_TYPE: '13',\r\n    GET_CODE_SLOT_STATE: '14',\r\n\r\n    // log code\r\n    EVENT_TYPE_USER: '00',\r\n    EVENT_TYPE_SYSTEM: '01',\r\n\r\n    // System log\r\n    SET_EVENT_LOG: 'setEventLog',\r\n    GET_EVENT_LOG: 'getEventLog',\r\n    REMOVE_EVENT_LOG: 'removeEventLog',\r\n\r\n    // Storage\r\n    REMEMBER_PWD_KEY: 'uimdia190$^!00000000000000000000',\r\n    REMEMBER_PWD_IV: '0000000000000000',\r\n\r\n    // Workers\r\n    RECEIVE_DATA_BROADCAST_CHAN: 'RECEIVE_DATA_BROADCAST_CHAN',\r\n\r\n    // PB APIS [\r\n    GET_PB_CLASSIFICATIONS: 'getPbClassifications',\r\n    GET_CLASSIFICATION_IMAGES: 'getClassificationImages',\r\n    GET_MARKER_POSITION: 'getMarkerPosition',\r\n    GET_PB_HOT_KEYS: 'getPbHotKeys',\r\n    UPDATE_CLASSIFICATION: 'updateClassification',\r\n    PB_IA_MOVE_IMAGE: 'PbIaMoveImage',\r\n    SET_WBC_IMAGE_LIST: 'setWbcImageList',\r\n    GET_PB_WBC_IMAGES: 'getPbWbcImages',\r\n    SET_SELECTED_ITEM: 'setSelectedItem',\r\n    GET_SELECTED_ITEM: 'getSelectedItem',\r\n    IA_SET_CUSTOM_CLASS: 'iaSetCustomClass',\r\n    IA_GET_CUSTOM_CLASS: 'iaGetCustomClass',\r\n    // PB APIS ]\r\n\r\n\r\n    // Message\r\n    IDS_MSG_SUCCESS: 'Success',\r\n    IDS_MSG_FAILED: 'Failed',\r\n    IDS_MSG_OIL_REMAIN_COUNTER: 'Reset Immersion oil counter after final test or changing the Oil',\r\n    IDS_MSG_POWEROFF: 'Shutdown the system.',\r\n    IDS_MSG_INITALIZE: 'Please execute after initialization.',\r\n    IDS_MSG_SIGNING_COMPLETE: 'Signing is complete.',\r\n    IDS_MSG_DELETE_THE_SELECTED_ITEMS: 'Delete the selected items?',\r\n    IDS_MSG_ACCOUNT_CHANGED: 'Account conversion is complete.',\r\n    IDS_MSG_DELETE_ACCOUNT: 'Are you sure you want to delete your account?',\r\n    IDS_MSG_LOGOUT: 'Are you sure you want to logout now?',\r\n    IDS_MSG_DUPLICATE_KEY: 'The %s key is a duplicate key.',\r\n    IDS_MSG_HOTKEY_IN_ENGLISH: 'Please recheck the key',\r\n\r\n    IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD: 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP: 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID: 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR: 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID: 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING: 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS: 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR: 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS: 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO: 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST: 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2: 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS: 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM: 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE: 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED: 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST: 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS: 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION: 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO: 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID: 'Please confirm your user ID.',\r\n\r\n    IDS_DOWNLOAD_COMPLETE: 'Download Complete',\r\n    IDS_SELECT_SLIDE: 'Please select a slide.',\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED: 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION: 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE: 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE: 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS: 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE: 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM: 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER: 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL: 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION: 'This is a duplicate abbreviation.',\r\n    IDS_THIS_CARD_HAS_ALREADY_BEEN_USED: 'This card has already been used.',\r\n    IDS_MSG_UPLOAD_LIS: 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE: 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE: 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS: 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE: 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH: 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE: 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND: 'No data found.',\r\n    IDS_MSG_DATA_BACKUP: 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE: 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS: 'Size and Chromia categories are linked with LIS data.',\r\n\r\n    UPDATE_SUCCESSFULLY : 'Update Successfully',\r\n    TCP_DiSCONNECTED: 'The TCP connection was disconnected.',\r\n    alreadyInitialized: 'It has already been initialized.',\r\n\r\n    lockRow: 'Deletion is not allowed when locked.',\r\n    exit: 'Are you sure you want to quit the program?',\r\n};","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n\r\n    const formattedTime = now.format('YYYYMMDDHHmmssSSS');\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            exit: {\r\n                jobCmd: 'clientExit',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            }\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, {AxiosRequestConfig} from 'axios';\r\n\r\nimport {Endpoint, GenericObject} from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: any;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: any;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean, callImg?: string): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean, callImg?: string): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData, callImg);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        if (contentType === 'blob') {\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain') {\r\n            options.headers = {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if (formData) {\r\n            options.headers = {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, {\r\n                ...options,\r\n                data: payload\r\n            });\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","import {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\nexport const apiConstants = {\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification:{\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user:{\r\n        register:{\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login:{\r\n            endpoint:'user/login',\r\n            requiresToken: false,\r\n        },\r\n        userCheck:{\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        // userIp:{\r\n        //     endpoint: 'ip',\r\n        //     requiresToken: false,\r\n        // },\r\n        getUsers:{\r\n            endpoint:'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint:'user/update',\r\n            requiresToken: false,\r\n        },\r\n        deleteUser: {\r\n            endpoint: 'user/delete',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings:{\r\n        cellImgAnalyzedPost:{\r\n            cellImgAdd:{\r\n                endpoint:'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet:{\r\n                endpoint:'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut:{\r\n                endpoint:'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree:{\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree:{\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass:{\r\n            create: {\r\n                endpoint: 'wbcCustomClass/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcCustomClass/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'normalRange/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCodeRbc/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'cbcCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'filePathSet/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'minCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete:{\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail:{\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown:{\r\n                endpoint:'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState:{\r\n                endpoint:'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState:{\r\n                endpoint:'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get:{\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get:{\r\n                endpoint:'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'classOrders/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        remainingCount: {\r\n            get: {\r\n                endpoint: 'remaining-count/execute',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        qualityCheck: {\r\n            get: {\r\n                endpoint: 'qualityCheck/execute',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    images:{\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    dziReader: {\r\n        get: {\r\n            endpoint: 'dzi/send',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf:{\r\n        post:{\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem:{\r\n        post:{\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGet:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate:{\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message:{\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create:{\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            },\r\n            ip: {\r\n                endpoint: 'ip',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    backUp:{\r\n        backUpDate:{\r\n            endpoint: 'backup/post',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    excel: {\r\n        execute: {\r\n            endpoint: 'excel/execute',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    browser:{\r\n        exit:{\r\n            endpoint: 'browser/close-edge',\r\n            requiresToken: false,\r\n        }\r\n    }\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lis code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// minCount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};\r\n\r\n// remaining Count\r\nexport const remainingCount = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.remainingCount.get);\r\n};\r\n\r\nexport const qualityCheck = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.qualityCheck.get);\r\n};","// EventBus.ts\r\n\r\ntype EventHandler = (...args: any[]) => void;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 발행하는 메서드\r\n     public publish(eventName: string, ...args: any[]): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            handlers.forEach(handler => handler(...args));\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1 alertMessage\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const testTypeList = [\r\n    {value: '01', text: 'PB standard'},\r\n    {value: '04', text: 'PB premium'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n    {value: '06', text: 'BM squash'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const WbcPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PltPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', classCd: '', classNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', classNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', classNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', classNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', classNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', classNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', classNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', classNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', classNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', classNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', classNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', classNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', classNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', classNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', classNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', classNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', classNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', classNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', classNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', classNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', classNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', classNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', classNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', classNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', classNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', classNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', classNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', classNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', classNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', classNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', classNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', classNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', classNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', classNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', classNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', classNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', classNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', classNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', classNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const defaultCbcList_0011 = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true},\r\n    {cd: '40', classCd: '', fullNm: 'LUC', isSelected: true}\r\n]\r\n\r\nexport const defaultCbcList = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [\r\n{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    },\r\n    {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    },\r\n    {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    },\r\n    {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    },\r\n    {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    },\r\n    {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    },\r\n    {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    },\r\n    {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    },\r\n    {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    },\r\n    {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 19\r\n    },\r\n    {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    },\r\n    {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    },\r\n    {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    },\r\n    {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    },]\r\nexport const bmHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\nexport const bfHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '02', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 2\r\n}, {\r\n    id: '03', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 3\r\n}, {\r\n    id: '04', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 4\r\n}, {\r\n    id: '05', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 5\r\n}, {\r\n    id: '06', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 6\r\n}, {\r\n    id: '07', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 7\r\n}, {\r\n    id: '08', abbreviation: 'NR', fullNm: 'NRBC', key: '', orderIdx: 8\r\n}, {\r\n    id: '09', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 9\r\n}, {\r\n    id: '10', abbreviation: 'MC', fullNm: 'Malignant cell', key: '', orderIdx: 10\r\n}, {\r\n    id: '11', abbreviation: 'MT', fullNm: 'Mesothelial cell', key: '', orderIdx: 11\r\n}]\r\n\r\nexport const normalRange = [\r\n{\r\n    abbreviation: 'NE',\r\n    fullNm: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'ME',\r\n    fullNm: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MY',\r\n    fullNm: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PR',\r\n    fullNm: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LY',\r\n    fullNm: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MO',\r\n    fullNm: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'EO',\r\n    fullNm: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BA',\r\n    fullNm: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BL',\r\n    fullNm: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PC',\r\n    fullNm: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'NR',\r\n    fullNm: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'GP',\r\n    fullNm: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'PA',\r\n    fullNm: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'AR',\r\n    fullNm: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'MA',\r\n    fullNm: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n{\r\n    abbreviation: 'LR',\r\n    fullNm: 'Reactive lymphocyte',\r\n    classId: '61',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LA',\r\n    fullNm: 'Abnormal lymphocyte',\r\n    classId: '62',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n},\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false},\r\n    { fullNm: 'Blast', classId: '10', checked: false},\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false},\r\n    { fullNm: 'nRBC', classId: '12', checked: false},\r\n    { fullNm: 'Giant platelet', classId: '13', checked: false},\r\n    { fullNm: 'Platelet aggregation', classId: '14', checked: false},\r\n    { fullNm: 'Malaria', classId: '16', checked: false},\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', checked: false},\r\n    { fullNm: 'rbcPrintModel', classId: '99999', checked: false},\r\n]\r\nexport const imagePrintAndBm = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: true },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: true },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: true },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: true },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: true },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: true },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: true },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '06', checked: true },\r\n    { fullNm: 'Monocyte', classId: '07', checked: true },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: true },\r\n    { fullNm: 'Basophil', classId: '09', checked: true },\r\n    { fullNm: 'Blast', classId: '10', checked: true },\r\n    { fullNm: 'Plasma cell', classId: '11', checked: true },\r\n    { fullNm: 'Orthochromic Normoblast', classId: '12', checked: true },\r\n    { fullNm: 'Polychromic Normoblast', classId: '13', checked: true },\r\n    { fullNm: 'Basophilic Normoblast', classId: '14', checked: true },\r\n    { fullNm: 'Proerythroblast', classId: '15', checked: true },\r\n    { fullNm: 'Histiocyte', classId: '16', checked: true },\r\n    { fullNm: 'Others', classId: '17', checked: true }\r\n];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { fullNm: 'Neutrophil', classId: '01', key: 'NE' },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', key: 'NS' },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', key: 'NB' },\r\n    { fullNm: 'Metamyelocyte', classId: '02', key: 'ME' },\r\n    { fullNm: 'Myelocyte', classId: '03', key: 'MY' },\r\n    { fullNm: 'Promyelocyte', classId: '04', key: 'PR' },\r\n    { fullNm: 'Lymphocyte', classId: '05', key: 'LY' },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', key: 'LR' },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', key: 'LA' },\r\n    { fullNm: 'Monocyte', classId: '07', key: 'MO' },\r\n    { fullNm: 'Eosinophil', classId: '08', key: 'EO' },\r\n    { fullNm: 'Basophil', classId: '09', key: 'BA' },\r\n    { fullNm: 'Blast', classId: '10', key: 'BL' },\r\n    { fullNm: 'Plasma cell', classId: '11', key: 'PC' },\r\n    { fullNm: 'nRBC', classId: '12', key: 'NR' },\r\n    { fullNm: 'Giant platelet', classId: '13', key: 'GP' },\r\n    { fullNm: 'Platelet aggregation', classId: '14', key: 'PA' },\r\n    { fullNm: 'Malaria', classId: '16', key: 'MA' },\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', key: 'AR' },\r\n    { fullNm: 'rbcPrintModel', classId: '99999', key: '' },\r\n];\r\n\r\nexport const lisCodeRbcOption = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', fullNm: 'Normal', key: 'SIZN' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', fullNm: 'Macrocyte', key: 'SIZMA' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', fullNm: 'Microcyte', key: 'SIZMI' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', fullNm: 'Anisocytosis', key: '' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', fullNm: 'Normal', key: 'CHRN' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', fullNm: 'Hyperchromic', key: 'CHRHYPER' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', fullNm: 'Hypochromic', key: 'CHRHYPO' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', fullNm: 'Polychromia', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', fullNm: 'Normal', key: 'SHAPN' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', fullNm: 'Poikilocytosis', key: 'SHAPPO' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', fullNm: 'Target Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', fullNm: 'Burr Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', fullNm: 'Acanthocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', fullNm: 'Ovalocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', fullNm: 'Schistocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', fullNm: 'Sickle Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', fullNm: 'Stomatocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', fullNm: 'Tear Drop Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', fullNm: 'Spherocyte', key: '' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', fullNm: 'Howell-Jolly Body', key: '' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', fullNm: 'Basophilic Stippling', key: '' }\r\n];\r\n\r\nexport const minRunCount = [\r\n    { minGPCount:0, minPACount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [\r\n{\r\n    min: 0,\r\n    max: 700,\r\n    wbcTargetCount: 50\r\n}, {\r\n    min: 701,\r\n    max: 1000,\r\n    wbcTargetCount: 100\r\n}, {\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcTargetCount: 150\r\n}, {\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcTargetCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const barcodeImgDir = {\r\n    barcodeDirName: '00_Barcode_Image'\r\n}\r\n\r\nexport const dirName = {\r\n    howellJollyDirName: '19_Howell_jolly',\r\n    malariaDirName: '43_InclusionBody_Malaria',\r\n    noMalariaDirName: '44_InclusionBody_NoMalaria',\r\n    rbcClassDirName: '03_RBC_Classification',\r\n    rbcImageDirName: '02_RBC_Image',\r\n    barcodeDirName: '00_Barcode_Image',\r\n    wbcClassDirName: '01_WBC_Classification',\r\n    bfDirName: '02_LowPower_Image',\r\n    bfHighDirName: '03_HighPower_Image',\r\n    bfClassDirName: '05_BF_Classification',\r\n    iaRootPath: 'D:/ia_proc',\r\n}","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">OK</button>\r\n    <button class=\"alertCloseButton\" @click=\"hideConfirm\">CLOSE</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst hideConfirm = () => {\r\n    emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n    emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\n\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get);\r\n}\r\n\r\nexport const getDeviceIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.ip);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = { class: \"stopDiv\" }\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", null, \" INITIALIZING \", -1)\n\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props, { emit: __emit }) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = messages.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 8, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 0,\n              class: \"startStopP\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true })\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", {\n              key: 1,\n              class: \"startStopP\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\"\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_7))\n          }), 128))\n        ], 8, _hoisted_6), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountOptions), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y'}]),\n          onClick: sendInit\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'rotate-right'],\n            style: {\"font-size\":\"0.9rem\"},\n            class: _normalizeClass({ 'disabled': isInit.value !== 'N' })\n          }, null, 8, [\"class\"]),\n          _hoisted_10\n        ], 2)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\" @click=\"isInit === 'Y' && toggleStartStop('start')\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else @click=\"toggleStartStop('stop')\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' />\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in stitchCountOptions\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y'}\">\r\n        <font-awesome-icon :icon=\"['fas', 'rotate-right']\" style=\"font-size: 0.9rem;\"\r\n                           :class=\"{ 'disabled': isInit !== 'N' }\"\r\n        />\r\n        <span> INITIALIZING </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, nextTick, defineEmits} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = messages.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = { class: \"slideTime1 mt2\" }\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"INPUT\", -1)\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"OUTPUT\", -1)\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: [ 'parsedData', 'initValData'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _createElementVNode(\"p\", _hoisted_7, \"Number of \" + _toDisplayString(isBm.value ? 'BMs' : 'WBCs'), 1),\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_10\n      ]),\n      _createElementVNode(\"ul\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.output, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_12\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of {{ isBm ? 'BMs' : 'WBCs' }}</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">INPUT</p>\r\n      </ul>\r\n      <!-- output -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.output\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p class=\"mt1\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData', 'initValData']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"O\"),\n  /*#__PURE__*/_createTextVNode(\"rder \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"L\"),\n  /*#__PURE__*/_createTextVNode(\"ist\")\n], -1)\nconst _hoisted_3 = { class: \"orderListTable\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Barcode ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [\n  /*#__PURE__*/_createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\n\nimport {ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"table\", _hoisted_3, [\n      _hoisted_4,\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.analyzedDttm ? _unref(formatDateString)(slot?.analyzedDttm) : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(getCommonCode)('14', slot?.state)), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_6, _hoisted_8))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">O</span>rder <span class=\"greenColor\">L</span>ist</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n      <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n        <td>{{ slot?.barcodeId }}</td>\r\n        <td>{{ slot?.patientName }}</td>\r\n        <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n        <td>{{\r\n            slot?.analyzedDttm ? formatDateString(slot?.analyzedDttm) : formatDateString(slot?.orderDate)\r\n          }}\r\n        </td>\r\n        <!--        {{ slot?.state }}-->\r\n        <td>{{ getCommonCode('14', slot?.state) }}</td>\r\n      </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const basicWbcArr = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', key: '', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', key: '', orderIdx: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n}]\r\n\r\nexport const defaultWbcClassList = [\r\n    {\r\n        classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        classId: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', orderIdx: 8\r\n    }, {\r\n        classId: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 9\r\n    }, {\r\n        classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 10\r\n    }, {\r\n        classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 11\r\n    }, {\r\n        classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 12\r\n    }, {\r\n        classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 13\r\n    }, {\r\n        classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 14\r\n    }, {\r\n        classId: '12', abbreviation: 'NR', fullNm: 'nRBC', orderIdx: 15\r\n    }, {\r\n        classId: '13', abbreviation: 'GP', fullNm: 'Giant platelet', orderIdx: 16\r\n    }, {\r\n        classId: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', orderIdx: 17\r\n    }, {\r\n        classId: '16', abbreviation: 'MA', fullNm: 'Malaria', orderIdx: 18\r\n    }, {\r\n        classId: '15', abbreviation: 'AR', fullNm: 'Artifact', orderIdx: 19\r\n    }, {\r\n        classId: '17', abbreviation: 'SM', fullNm: 'Smudge', orderIdx: 20\r\n    }\r\n]\r\n\r\nexport const defaultBmClassList = [\r\n    {\r\n        classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        classId: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n    }, {\r\n        classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n    }, {\r\n        classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n    }, {\r\n        classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n    }, {\r\n        classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n    }, {\r\n        classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n    }, {\r\n        classId: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n    }, {\r\n        classId: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n    }, {\r\n        classId: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n    }, {\r\n        classId: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n    }, {\r\n        classId: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n    }, {\r\n        classId: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n    }]\r\n\r\nexport const basicWbcArrClint = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassListClint = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"BM\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"WBC\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_6 = { class: \"analysisWbc\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_8 = { class: \"categoryNm\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = { class: \"classNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_13 = { class: \"degree\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = {\n  key: 0,\n  class: \"categories mt1\"\n}\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_22 = { class: \"classNm\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_24 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_25 = { class: \"degree\" }\nconst _hoisted_26 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_27 = { class: \"mt1\" }\nconst _hoisted_28 = { class: \"categoryNm\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_30 = { class: \"classNm\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_32 = { key: 0 }\nconst _hoisted_33 = { class: \"degree\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\n\nimport {computed, ref, onMounted, watch, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _hoisted_2,\n            _createTextVNode(),\n            _hoisted_3,\n            _createTextVNode(\"lassification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _hoisted_4,\n            _createTextVNode(),\n            _hoisted_5,\n            _createTextVNode(\"lassification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createElementVNode(\"ul\", _hoisted_8, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_10, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_12, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_13, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                    _createElementVNode(\"ul\", _hoisted_20, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_22, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_24, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_25, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_26, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_27, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_28, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_29, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_30, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_33, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34))\n                : _createCommentVNode(\"\", true),\n              _hoisted_35\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\"><span class=\"greenColor\">BM</span> <span class=\"greenColor\">C</span>lassification\r\n      </template>\r\n      <template v-else><span class=\"greenColor\">WBC</span> <span class=\"greenColor\">C</span>lassification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li>\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li>\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt1\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <!--      nonrbc-->\r\n      <div class='mt1'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n              <li>{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n  /*#__PURE__*/_createTextVNode(\" Slide Image \")\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"col\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n], -1)\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"RBC\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\"),\n  /*#__PURE__*/_createTextVNode(\"lassification \")\n], -1)\nconst _hoisted_10 = { class: \"categoryNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { class: \"classNmRbc\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Platelets\"),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Malaria\")\n], -1)\nconst _hoisted_23 = { class: \"degree analysis\" }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = { style: {\"font-size\":\"0.7rem\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_4)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_12, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_14, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ]))\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_20, [\n        _hoisted_21,\n        _hoisted_22,\n        _createElementVNode(\"ul\", _hoisted_23, [\n          _createElementVNode(\"li\", _hoisted_24, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n          _createElementVNode(\"li\", _hoisted_25, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">RBC</span> <span class=\"greenColor\">C</span>lassification\r\n      </h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li>{{ classInfo?.classNm }}</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                  />\r\n                </li>\r\n                <li v-else>\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>Platelets</li>\r\n          <li>Malaria</li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=23d1ee3f&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider-found\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch} from 'vue';\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider-found\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps} from 'vue';\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData', 'pb100aCassette']);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n</script>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = { class: \"slideTime1 mt2\" }\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent pb100a\" }\nconst _hoisted_10 = { class: \"mt1\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView100A',\n  props: [ 'parsedData','pb100aCassette', 'initValData'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\nconst isBm = ref(false);\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _createElementVNode(\"p\", _hoisted_7, \"Number of \" + _toDisplayString(isBm.value ? 'BMs' : 'WBCs'), 1),\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 1),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _createElementVNode(\"p\", _hoisted_10, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of {{ isBm ? 'BMs' : 'WBCs'}}</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent pb100a'>\r\n        <p>INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData','pb100aCassette', 'initValData']);\r\nconst isBm = ref(false);\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-240bbbce\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref, onBeforeMount, computed} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData','isClass', 'startStatus', 'pb100aCassette'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    bmIsBoolen.value = false;\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  initValData.value = val;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute, { onInitDataChangeText: initDataChangeText }),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      (pbVersion.value !== '100a')\n        ? (_openBlock(), _createBlock(workingView, {\n            key: 0,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\"]))\n        : (_openBlock(), _createBlock(WorkingView100A, {\n            key: 1,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\", \"pb100aCassette\"])),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 2,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData,\n          pb100aCassette: __props.pb100aCassette\n        }, null, 8, [\"parsedData\", \"pb100aCassette\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute @initDataChangeText=\"initDataChangeText\"/>\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <workingView :initValData=\"initValData\" :parsedData=\"props.parsedData\" class=\"contentRightChild\" v-if=\"pbVersion !== '100a'\"/>\r\n    <WorkingView100A :initValData=\"initValData\" :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\" class=\"contentRightChild\" v-else/>\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref, onBeforeMount, computed} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\nconst emits = defineEmits();\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData','isClass', 'startStatus', 'pb100aCassette']);\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    bmIsBoolen.value = false;\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  initValData.value = val;\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped src=\"@/assets/css/layout.css\">\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"@/assets/css/layout.css?vue&type=style&index=0&id=240bbbce&lang=css&scoped=true&external\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-240bbbce\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse } from '@/common/api/service/user/dto/userDto'\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any, userId: string): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, userId);\r\n};\r\n\r\nexport const deleteUserApi = async (userId: any): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpDelete(apiConstants.user.deleteUser, userId, true);\r\n}\r\n\r\n// export const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n//     return httpClient.httpGet(apiConstants.user.userIp, '');\r\n// }","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \"CREATE ACCOUNT\", -1)\nconst _hoisted_3 = { class: \"joinWrapper\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\nconst _hoisted_12 = [\n  _hoisted_10,\n  _hoisted_11\n]\n\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicate User Id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showErrorAlert('Signin Fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", null, [\n            _hoisted_4,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_5,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_6,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_7,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_8,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_9,\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event))\n            }, _hoisted_12, 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt2 mb4 \">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul class=\"joinWrapper\">\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\">\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicate User Id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showErrorAlert('Signin Fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi,\r\n    getRbcDegreeApi,\r\n    getCbcCodeRbcApi,\r\n    createCbcCodeRbcApi,\r\n    createLisCodeWbcApi,\r\n    createLisCodeRbcApi,\r\n    getLisCodeWbcApi, getLisCodeRbcApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport { defaultBmClassList, defaultWbcClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport { defaultCbcList, defaultRbcDegree, lisCodeRbcOption, lisCodeWbcOption, normalRange, rbcClassList } from \"@/common/defines/constFile/settings\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    diffCellAnalyzingCount: projectType ? '500':'100',\r\n    diffWbcPositionMargin: '0',\r\n    diffRbcPositionMargin: '0',\r\n    diffPltPositionMargin: '0',\r\n    pbsCellAnalyzingCount: '100',\r\n    stitchCount: '1',\r\n    bfCellAnalyzingCount: '100',\r\n    iaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\n\r\n/**\r\n * API 요청 시 분류할 Constant\r\n * sendingForm: Create 요청 시 사용할 key 값\r\n * defaultItem: Create 요청 시 보내는 body\r\n * getRequest: get 요청 함수\r\n * createRequest: create 요청 함수\r\n * */\r\nconst settingsConstant = ref<any>({\r\n    'lisCodeWbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': lisCodeWbcOption,\r\n        'getRequest': getLisCodeWbcApi,\r\n        'createRequest': createLisCodeWbcApi,\r\n    },\r\n    'lisCodeRbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': lisCodeRbcOption,\r\n        'getRequest': getLisCodeRbcApi,\r\n        'createRequest': createLisCodeRbcApi,\r\n    },\r\n    'cbcCode': {\r\n        'sendingForm': 'cbcCodeItems',\r\n        'defaultItem': defaultCbcList,\r\n        'getRequest': getCbcCodeRbcApi,\r\n        'createRequest': createCbcCodeRbcApi,\r\n    },\r\n    'cellImage': {\r\n        'getRequest': getCellImgApi,\r\n        'createRequest': createCellImgApi,\r\n    },\r\n    'normalRange': {\r\n        'sendingForm': 'normalRangeItems',\r\n        'defaultItem': normalRange,\r\n        'getRequest': getNormalRangeApi,\r\n        'createRequest': createNormalRangeApi,\r\n    },\r\n    'orderClass': {\r\n        'getRequest': getOrderClassApi,\r\n        'createRequest': createOrderClassApi,\r\n    },\r\n    'rbcDegree': {\r\n        'getRequest': getRbcDegreeApi,\r\n        'createRequest': createRbcDegreeApi,\r\n    },\r\n})\r\n\r\n/** 로그인 시 Setting 값 설정 함수 */\r\nexport const initializeAllSettings = async () => {\r\n    await firstGetSettings('cellImage');\r\n    await firstGetSettings('orderClass');\r\n    await firstGetSettings('rbcDegree');\r\n    await firstGetSettings('lisCodeWbc')\r\n    await firstGetSettings('lisCodeRbc')\r\n    await firstGetSettings('cbcCode')\r\n    await firstGetSettings('normalRange')\r\n}\r\n\r\nconst firstGetSettings = async (initializeType: string) => {\r\n    const getRequest = settingsConstant.value[initializeType].getRequest;\r\n    try {\r\n        const { data } = await getRequest() || {};\r\n\r\n        if (!data || data.length === 0) {\r\n            const sendingFormStr = settingsConstant.value[initializeType]?.sendingForm;\r\n            const defaultItem = settingsConstant.value[initializeType].defaultItem;\r\n            const createRequest = settingsConstant.value[initializeType].createRequest;\r\n\r\n            const anotherDefaultValue = await defaultComputedValueForCreateRequest(initializeType)\r\n\r\n            if (sendingFormStr) {\r\n                await createRequest({ [sendingFormStr]: anotherDefaultValue || defaultItem });\r\n            } else {\r\n                await createRequest(anotherDefaultValue || defaultItem);\r\n            }\r\n\r\n            afterResponse(initializeType);\r\n        }\r\n    } catch (e) {\r\n        console.log(`${initializeType} Error - ${e}`);\r\n    }\r\n}\r\n\r\n/** Create 요청시 보낼 defaultValue 중 계산되어야 하는 값들을 반환하는 함수 */\r\nconst defaultComputedValueForCreateRequest = async (initializeType: string) => {\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            const cellImgSet = {\r\n                analysisType: defaultCellImgData.testTypeCd,\r\n                diffCellAnalyzingCount: defaultCellImgData.diffCellAnalyzingCount,\r\n                diffWbcPositionMargin: defaultCellImgData.diffWbcPositionMargin,\r\n                diffRbcPositionMargin: defaultCellImgData.diffRbcPositionMargin,\r\n                diffPltPositionMargin: defaultCellImgData.diffPltPositionMargin,\r\n                pbsCellAnalyzingCount: defaultCellImgData.pbsCellAnalyzingCount,\r\n                stitchCount: defaultCellImgData.stitchCount,\r\n                bfCellAnalyzingCount: defaultCellImgData.bfCellAnalyzingCount,\r\n                iaRootPath: defaultCellImgData.iaRootPath,\r\n                isNsNbIntegration: defaultCellImgData.isNsNbIntegration,\r\n                isAlarm: defaultCellImgData.isAlarm,\r\n                alarmCount: defaultCellImgData.alarmCount,\r\n                keepPage: defaultCellImgData.keepPage,\r\n                backupPath: defaultCellImgData.backupPath,\r\n                backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n                backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n                autoBackUpMonth: 'Not selected',\r\n                autoBackUpStartDate: null,\r\n            };\r\n            return cellImgSet;\r\n\r\n        case 'orderClass':\r\n            const orderList: any = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n            for (const index in orderList) {\r\n                orderList[index].orderIdx = index;\r\n            }\r\n            return orderList;\r\n\r\n        case 'rbcDegree':\r\n            await combindDegree();\r\n            const rbcDegreeList: any = [];\r\n\r\n            rbcClassListArr.value.forEach((category: any) => {\r\n                category.classInfo.forEach((classItem: any) => {\r\n                    rbcDegreeList.push({\r\n                        categoryId: category.categoryId,\r\n                        categoryNm: category.categoryNm,\r\n                        classId: classItem.classId,\r\n                        classNm: classItem.classNm,\r\n                        degree1: classItem.degree1,\r\n                        degree2: classItem.degree2,\r\n                        degree3: classItem.degree3,\r\n                    });\r\n                });\r\n            });\r\n            return rbcDegreeList;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n/** Response를 받은 후 할 작업 정리 함수 */\r\nconst afterResponse = (initializeType: string) => {\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            sessionStorage.setItem('isNsNbIntegration', defaultCellImgData?.isNsNbIntegration ? 'Y' : 'N');\r\n            sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.diffWbcPositionMargin));\r\n            sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.diffRbcPositionMargin));\r\n            sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.diffPltPositionMargin));\r\n            sessionStorage.setItem('iaRootPath', String(defaultCellImgData?.iaRootPath));\r\n            sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"uimdLogin\" }\nconst _hoisted_2 = { class: \"loginContent\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginTitle\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n  /*#__PURE__*/_createTextVNode(\"IMD\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginP mt2\" }, \"Unique Idea Medical Device\", -1)\nconst _hoisted_5 = { class: \"mt3 loginDiv\" }\nconst _hoisted_6 = { class: \"loginUl\" }\n\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { initializeAllSettings } from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if(result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))){\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _hoisted_4,\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"ul\", _hoisted_6, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\"\n              }, null, 512), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\"\n              }, null, 512), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"loginBtn\" }, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: loginUser\n            }, \"Login\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt2'>Unique Idea Medical Device</p>\r\n      <div class=\"mt3 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\">\r\n          </li>\r\n        </ul>\r\n\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <Alert\r\n    v-if=\"showAlert\"\r\n    :is-visible=\"showAlert\"\r\n    :type=\"alertType\"\r\n    :message=\"alertMessage\"\r\n    @hide=\"hideAlert\"\r\n    @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { initializeAllSettings } from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if(result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))){\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.backUp.backUpDate, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTable\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Analysis Type\", -1)\nconst _hoisted_3 = { colspan: \"2\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  rowspan: \"4\"\n}\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = { key: 1 }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)\nconst _hoisted_14 = [\"value\"]\nconst _hoisted_15 = { key: 2 }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Plt Position Margin\", -1)\nconst _hoisted_17 = [\"value\"]\nconst _hoisted_18 = { key: 3 }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", { rowspan: \"2\" }, \"PBS Analysis Values\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)\nconst _hoisted_21 = [\"value\"]\nconst _hoisted_22 = { key: 0 }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Stitch Count\", -1)\nconst _hoisted_24 = [\"value\"]\nconst _hoisted_25 = { key: 4 }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BF Analysis Values\", -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"th\", null, \"IA Root Path\", -1)\nconst _hoisted_30 = { colspan: \"2\" }\nconst _hoisted_31 = [\"value\"]\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"th\", null, \"NS/NB Integration\", -1)\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Alarm Timer (sec)\", -1)\nconst _hoisted_34 = { key: 5 }\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Keep WBC Page\", -1)\nconst _hoisted_36 = { class: \"settingTable auto\" }\nconst _hoisted_37 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"80\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20\" })\n], -1)\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BackUp Save Path\", -1)\nconst _hoisted_39 = [\"value\"]\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Backup and Restore\", -1)\nconst _hoisted_41 = { class: \"settingDatePickers\" }\n\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport { nextTick, onMounted, ref } from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\nconst createBackup = async () => {\r\n  if (backupRootPath.value === ''){\r\n    showErrorAlert('Please select a backup save path');\r\n    return\r\n  }\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"table\", _hoisted_1, [\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_2,\n            _createElementVNode(\"td\", _hoisted_3, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_4))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, testTypeCd.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'pb')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, \"WBC Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            (projectType.value === 'bm')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"BM Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            _hoisted_7,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((diffCellAnalyzingCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_8))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, diffCellAnalyzingCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [\n                _hoisted_10,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((wbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(WbcPositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_11))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, wbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [\n                _hoisted_13,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((rbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_14))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, rbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_15, [\n                _hoisted_16,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((pltPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_17))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pltPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_18, [\n                _hoisted_19,\n                _hoisted_20,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((pbsCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_21))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbsCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'bm')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_22))\n              : _createCommentVNode(\"\", true),\n            _hoisted_23,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((stitchCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_24))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, stitchCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_25, [\n                _hoisted_26,\n                _hoisted_27,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((bfCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_28))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, bfCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_29,\n            _createElementVNode(\"td\", _hoisted_30, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((iaRootPath).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_31))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, iaRootPath.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_32,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleNsNbIntegration\n              }, null, 8, [\"icon\"])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_33,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleAlarm\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((alarmCount).value = $event)),\n                class: \"alarmInput\",\n                onInput: _cache[10] || (_cache[10] = ($event: any) => (filterNumbersOnly($event)))\n              }, null, 544), [\n                [_vModelText, alarmCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_34, [\n                _hoisted_35,\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleKeepPage\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"table\", _hoisted_36, [\n        _hoisted_37,\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_38,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((backupRootPath).value = $event)),\n                class: \"autoBackUpPath\"\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_39))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, backupRootPath.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_40,\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"div\", _hoisted_41, [\n                _createVNode(_unref(Datepicker), {\n                  modelValue: backupStartDate.value,\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((backupStartDate).value = $event))\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_unref(Datepicker), {\n                  modelValue: backupEndDate.value,\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((backupEndDate).value = $event))\n                }, null, 8, [\"modelValue\"]),\n                _createElementVNode(\"button\", {\n                  class: \"backupBtn\",\n                  onClick: createBackup\n                }, \"backup\")\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn mb2\",\n        type: \"button\",\n        onClick: _cache[14] || (_cache[14] = ($event: any) => (cellImgSet()))\n      }, \"Save Cell Image Analyzed\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <table class=\"settingTable\">\r\n      <tbody>\r\n      <tr>\r\n        <th>Analysis Type</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='testTypeCd'>\r\n            <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--Common analysis values-->\r\n\r\n      <tr>\r\n        <!-- WBC diff analysis values -->\r\n        <th rowspan=\"4\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n\r\n        <!-- BM diff analysis values -->\r\n        <th v-if=\"projectType === 'bm'\">BM Diff Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n\r\n          <select v-model='diffCellAnalyzingCount'>\r\n            <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Wbc Position Margin</th>\r\n        <td>\r\n          <select v-model='wbcPositionMargin'>\r\n            <option v-for=\"type in WbcPositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Rbc Position Margin</th>\r\n        <td>\r\n          <select v-model='rbcPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Plt Position Margin</th>\r\n        <td>\r\n          <select v-model='pltPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      PBS analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th rowspan=\"2\">PBS Analysis Values</th>\r\n        <th>\r\n          Cell Analyzing Count\r\n        </th>\r\n        <td>\r\n          <select v-model='pbsCellAnalyzingCount'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th v-if=\"projectType === 'bm'\"></th>\r\n        <th>Stitch Count</th>\r\n        <td>\r\n          <select v-model='stitchCount'>\r\n            <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      BF analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>BF Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='bfCellAnalyzingCount'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>IA Root Path</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='iaRootPath'>\r\n            <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>NS/NB Integration</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleNsNbIntegration\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Alarm Timer (sec)</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleAlarm\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" v-model='alarmCount' class=\"alarmInput\" @input=\"filterNumbersOnly($event)\">\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Keep WBC Page</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleKeepPage\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <table class=\"settingTable auto\">\r\n      <colgroup>\r\n        <col width=\"80\">\r\n        <col width=\"20\">\r\n      </colgroup>\r\n      <tbody>\r\n      <tr>\r\n        <th>BackUp Save Path</th>\r\n        <td>\r\n          <select v-model='backupRootPath' class=\"autoBackUpPath\">\r\n            <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Backup and Restore</th>\r\n        <td>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n            <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n            <button class=\"backupBtn\" @click=\"createBackup\">backup</button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n<!--      나중에 기능 추가 할 부분 자동 백업-->\r\n<!--      <tr>-->\r\n<!--        <th>Auto Backup</th>-->\r\n<!--        <td>-->\r\n<!--          <div class=\"autoDateBox\">-->\r\n<!--            <select v-model='autoBackUpMonth'>-->\r\n<!--              <option v-for=\"month in autoDate\" :key=\"month.value\" :value=\"month.value\">-->\r\n<!--                {{ month.value }}-->\r\n<!--              </option>-->\r\n<!--            </select>-->\r\n<!--            <span>Month</span>-->\r\n<!--          </div>-->\r\n<!--        </td>-->\r\n<!--      </tr>-->\r\n      </tbody>\r\n    </table>\r\n    <button class=\"saveBtn mb2\" type=\"button\" @click='cellImgSet()'>Save Cell Image Analyzed</button>\r\n\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport { nextTick, onMounted, ref } from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\nconst createBackup = async () => {\r\n  if (backupRootPath.value === ''){\r\n    showErrorAlert('Please select a backup save path');\r\n    return\r\n  }\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { id: \"collapse-4\" }\nconst _hoisted_2 = { class: \"rbcDegreeCategoryNm\" }\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = { class: \"degreeInput mb1\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\n\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"mt2 rbcClassListArr\",\n            key: 'rbc' + index\n          }, [\n            _createElementVNode(\"div\", _hoisted_2, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                _createElementVNode(\"div\", null, _toDisplayString(classItem.classNm), 1),\n                _createElementVNode(\"div\", _hoisted_3, \" [ \" + _toDisplayString(`${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}`) + \" ] \", 1),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                    }, null, 8, _hoisted_5), [\n                      [_vModelText, classItem.degree1]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                    }, null, 8, _hoisted_6), [\n                      [_vModelText, classItem.degree2]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                    }, null, 8, _hoisted_7), [\n                      [_vModelText, classItem.degree3]\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", { onClick: onResetDegree }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div id=\"collapse-4\">\r\n      <!--      {{ rbcClassListArr }}-->\r\n      <div class=\"mt2 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n        <div class=\"rbcDegreeCategoryNm\">\r\n          {{ category?.categoryNm }}\r\n        </div>\r\n\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <div>\r\n            {{ classItem.classNm }}\r\n          </div>\r\n          <div class=\"mb1\">\r\n            [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]\r\n          </div>\r\n          <div>\r\n            <div class='degreeInput mb1'>\r\n              <input type=\"number\" v-model=\"classItem.degree1\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree2\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree3\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button @click=\"onResetDegree\">Reset</button>\r\n      <button type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"customSettingContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Gripper Open\", -1)\nconst _hoisted_3 = { class: \"mt2\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Camera Reset\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Charge Remaining Count\", -1)\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 1500);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            class: _normalizeClass({'defaultBtn': true, 'blinkGripper': isBlinkingGripper.value})\n          }, \"OK\", 2)\n        ]),\n        _createElementVNode(\"li\", _hoisted_3, [\n          _hoisted_4,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: _normalizeClass([\"defaultBtn\", {'defaultBtn': true, 'blinkGripper': isBlinkCameraReset.value}]),\n            onClick: onCameraReset\n          }, \"OK \", 2)\n        ]),\n        _createElementVNode(\"li\", { class: \"mt2\" }, [\n          _hoisted_5,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onScan\n          }, \"Scan\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb1\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkingGripper}\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkCameraReset}\"\r\n                @click=\"onCameraReset\">OK\r\n        </button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onScan\">Scan</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 1500);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, reactive} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'abbreviation'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.fullNm) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'fullNm'))\n              }, null, 40, _hoisted_3), [\n                [_vModelText, item.fullNm]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item.customNum }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.abbreviation\"\r\n              type=\"text\"\r\n              maxlength=\"3\"\r\n              placeholder=\"abbreviation\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'abbreviation')\"\r\n          />\r\n        </span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.fullNm\"\r\n              type=\"text\"\r\n              maxlength=\"25\"\r\n              placeholder=\"class name\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'fullNm')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, reactive} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"25\"\r\n              placeholder=\"class name\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item?.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item?.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item?.abbreviation }}</span>\r\n        <span>{{ item?.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"25\"\r\n              placeholder=\"class name\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"normalItems\" }\nconst _hoisted_2 = { class: \"mt1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_4 = [\"onInput\", \"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"div\", null, _toDisplayString(item.abbreviation) + \" - \" + _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\",\n                  onInput: ($event: any) => (filterNumbersOnly($event, item, 'min'))\n                }, null, 40, _hoisted_3), [\n                  [_vModelText, item.min]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  onInput: ($event: any) => (filterNumbersOnly($event, item, 'max')),\n                  \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 40, _hoisted_4), [\n                  [_vModelText, item.max]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\">\r\n        <div>\r\n          {{ item.abbreviation }} - {{ item.fullNm }}\r\n        </div>\r\n        <div class=\"mt1\">\r\n          <span>\r\n            <input v-model=\"item.min\"\r\n                   type=\"text\"\r\n                   maxlength=\"25\"\r\n                   placeholder=\"class name\"\r\n                   @input=\"filterNumbersOnly($event, item, 'min')\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <input\r\n                @input=\"filterNumbersOnly($event, item, 'max')\"\r\n                v-model=\"item.max\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"\r\n            />\r\n          </span>\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)\nconst _hoisted_3 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_4 = { class: \"nth1ChildOrder\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_4, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.fullNm), 1)\n          ])\n        ], 40, _hoisted_3))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.fullNm }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {onMounted, ref} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\"}\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC min\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC max\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"count\")\n  ])\n], -1)\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_5), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcTargetCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: +option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_7))\n                  }), 128))\n                ], 8, _hoisted_6), [\n                  [_vModelSelect, wbcRunning.wbcTargetCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto;\">\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcTargetCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"+option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n        class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n      }, \"Cell Image Analyzed\", 2),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n            class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n          }, \"RBC Degree\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n      }, \"Device Controls\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n      }, \"WBC Running Count\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n      _createElementVNode(\"button\", {\n        onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n            class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n          }, \"BF Hot Keys\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n      }, \"Normal Range\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n      <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n      <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n      <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n      </button>\r\n      <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n      </button>\r\n      <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n      <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n      <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertCloseButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt2\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"th\", null, \"No.\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"th\", null, \"User Type\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"User ID\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Date\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Latest Date\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Edit\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Delete\", -1)\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Edit Account\", -1)\nconst _hoisted_17 = { class: \"editModalContainer\" }\nconst _hoisted_18 = { class: \"userInputWrapper\" }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userType\",\n  style: {\"line-height\":\"0\"}\n}, \"User Type\", -1)\nconst _hoisted_20 = [\"value\"]\nconst _hoisted_21 = { class: \"userInputWrapper\" }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userId\"\n}, \"User ID\", -1)\nconst _hoisted_23 = { class: \"userInputWrapper\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userName\"\n}, \"Name\", -1)\nconst _hoisted_25 = { class: \"userInputWrapper\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"employeeNo\"\n}, \"Employee\", -1)\nconst _hoisted_27 = { class: \"userInputWrapper\" }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"subscriptionDate\"\n}, \"Subscription Date\", -1)\nconst _hoisted_29 = { class: \"userInputWrapper\" }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"latestDate\"\n}, \"Latest Date\", -1)\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n          class: \"searchSelect\"\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_3))\n          }), 128))\n        ], 512), [\n          [_vModelSelect, userSearchOption.value]\n        ]),\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n          class: \"searchInputBox\"\n        }, null, 512), [\n          [_vModelText, inputText.value]\n        ]),\n        _createVNode(_component_font_awesome_icon, {\n          icon: ['fas', 'search'],\n          class: \"searchBtn\",\n          onClick: onSearch\n        })\n      ]),\n      _createElementVNode(\"table\", _hoisted_4, [\n        _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_5,\n            _hoisted_6,\n            _hoisted_7,\n            _hoisted_8,\n            _hoisted_9,\n            _hoisted_10,\n            _hoisted_11,\n            (_unref(getStoredUser).userType === 'admin')\n              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                  _hoisted_12,\n                  _hoisted_13\n                ], 64))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: user.id\n            }, [\n              _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1),\n              (_unref(getStoredUser).userType === 'admin')\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (openLayer(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'pen-to-square'] })\n                    ], 8, _hoisted_14),\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (handleDeleteUser(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'trash'] })\n                    ], 8, _hoisted_15)\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    (isModalVisible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_16\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _createElementVNode(\"div\", _hoisted_18, [\n                _hoisted_19,\n                _withDirectives(_createElementVNode(\"select\", {\n                  id: \"userType\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedUserData.value.userType) = $event)),\n                  class: \"searchSelect inputMiddleWrapper\",\n                  style: {\"width\":\"132px !important\"}\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userTypeOptions.value, (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_20))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, selectedUserData.value.userType]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_21, [\n                _hoisted_22,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userId\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((selectedUserData.value.userId) = $event)),\n                  disabled: \"\",\n                  readonly: \"\"\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.userId]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_23, [\n                _hoisted_24,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userName\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((selectedUserData.value.name) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.name]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_25, [\n                _hoisted_26,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"employeeNo\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((selectedUserData.value.employeeNo) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.employeeNo]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_27, [\n                _hoisted_28,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"subscriptionDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((formattedSubscriptionDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedSubscriptionDate.value]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_29, [\n                _hoisted_30,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"latestDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((formattedLatestDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedLatestDate.value]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"modalBottom\" }, [\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"alertButton\",\n                onClick: putSelectedUserData\n              }, \"Edit\")\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt2\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n          <template v-if=\"getStoredUser.userType === 'admin'\">\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </template>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n          <template v-if=\"getStoredUser.userType === 'admin'\">\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"openLayer(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'pen-to-square']\" />\r\n            </td>\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"handleDeleteUser(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'trash']\" />\r\n            </td>\r\n          </template>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <Modal v-if=\"isModalVisible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <template #header>\r\n      <h2>Edit Account</h2>\r\n    </template>\r\n\r\n    <template #content>\r\n      <div class=\"editModalContainer\">\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userType\" style=\"line-height: 0\">User Type</label>\r\n          <select id=\"userType\" v-model=\"selectedUserData.userType\" class=\"searchSelect inputMiddleWrapper\" style=\"width: 132px !important;\">\r\n            <option v-for=\"option in userTypeOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userId\">User ID</label>\r\n          <input id=\"userId\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"selectedUserData.userId\" disabled readonly />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userName\">Name</label>\r\n          <input id=\"userName\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.name\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"employeeNo\">Employee</label>\r\n          <input id=\"employeeNo\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.employeeNo\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"subscriptionDate\">Subscription Date</label>\r\n          <input id=\"subscriptionDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedSubscriptionDate\" disabled />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"latestDate\">Latest Date</label>\r\n          <input id=\"latestDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedLatestDate\" disabled />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"modalBottom\">\r\n        <button type=\"button\" class=\"alertButton\" @click=\"putSelectedUserData\">Edit</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.id\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.fullNm), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.classId,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.id\">\r\n      <div>{{ item.fullNm }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.classId\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb4\" }, \" [ WBC ] \", -1)\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { class: \"alignDiv\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \" [ RBC ] \", -1)\nconst _hoisted_7 = { class: \"mb1\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = { class: \"alignDiv\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \" [ Min Count ] \", -1)\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Giant Platelet\", -1)\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Platelet Aggregation\", -1)\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classId\n        }, [\n          _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_4), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _hoisted_6,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.fullNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_7, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_8), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _hoisted_10,\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGPCount) = $event)),\n                onInput: _cache[1] || (_cache[1] = ($event: any) => (filterNumbersOnly($event, true))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minGPCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((minCountArr.value[0].minPACount) = $event)),\n                onInput: _cache[3] || (_cache[3] = ($event: any) => (filterNumbersOnly($event, false))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minPACount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_15, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb4\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.classId\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt2 mb4\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.fullNm\">\r\n      <p class=\"mb1\">{{ item.categoryNm }} - {{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb2\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGPCount\" @input=\"filterNumbersOnly($event, true)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPACount\" @input=\"filterNumbersOnly($event, false)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const hospitalSiteCd = [\r\n    {\r\n        siteCd: '0002',\r\n        hospitalNm: '서울성모병원',\r\n    },\r\n    {\r\n        siteCd: '0003',\r\n        hospitalNm: '스타고',\r\n    },\r\n    {\r\n        siteCd: '0004',\r\n        hospitalNm: '이원의료재단',\r\n    },\r\n    {\r\n        siteCd: '0006',\r\n        hospitalNm: '고대안암병원',\r\n    },\r\n    {\r\n        siteCd: '0007',\r\n        hospitalNm: '삼광의료재단',\r\n    },\r\n    {\r\n        siteCd: '0011',\r\n        hospitalNm: '인하대병원',\r\n    },\r\n    {\r\n        siteCd: '0019',\r\n        hospitalNm: '인천길병원',\r\n    },\r\n    {\r\n        siteCd: '0026',\r\n        hospitalNm: '건국대학교병원',\r\n    },\r\n    {\r\n        siteCd: '0000',\r\n        hospitalNm: '0000',\r\n    }\r\n\r\n]","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { defaultCbcList, defaultCbcList_0011 } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst siteCd = ref('');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        const hospitalName = hospitalSiteCd.filter(hospitalObj => hospitalObj.siteCd === siteCd.value)[0].hospitalNm;\r\n        if (hospitalName === '인하대병원') {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.cd\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.classCd) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.classCd]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <label v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.classCd\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { defaultCbcList, defaultCbcList_0011 } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst siteCd = ref('');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        const hospitalName = hospitalSiteCd.filter(hospitalObj => hospitalObj.siteCd === siteCd.value)[0].hospitalNm;\r\n        if (hospitalName === '인하대병원') {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \"LIS Hot Key\", -1)\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Lis File Path\", -1)\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Cbc File Path\", -1)\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[0] || (_cache[0] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_4,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_5)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_6,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_7)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb2\">LIS Hot Key</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n               @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Lis File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Cbc File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"tab-content\" }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n        class: _normalizeClass({ 'active': _unref(selectedTab) === 'ImagePrint' })\n      }, \"Image Print\", 2),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'LisCode' })\n            }, \"Lis Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'CbcCode' })\n            }, \"CBC Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'filePathSet' })\n            }, \"Lis(CBC) Hot Key & File Path\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': selectedTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': selectedTab === 'LisCode' }\">Lis Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': selectedTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': selectedTab === 'filePathSet' }\">Lis(CBC) Hot Key & File Path</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"QualityCheck\", -1)\n\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n      _createElementVNode(\"li\", { class: \"mt2\" }, [\n        _hoisted_1,\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          class: \"defaultBtn\",\n          onClick: qualityCheckOpen\n        }, \"Ok\")\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">QualityCheck</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"qualityCheckOpen\">Ok</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\n\nimport { ref, onMounted } from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersion.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n          _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n          _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersion\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = [\"onClick\"]\n\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n}\r\n);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", _hoisted_2, [\n      (viewerCheck.value === 'viewer')\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, _renderList(viewerTabs, (tab) => {\n            return _createElementVNode(\"li\", {\n              key: tab,\n              class: _normalizeClass({ activeTab: currentTab.value === tab }),\n              onClick: ($event: any) => (changeTab(tab))\n            }, _toDisplayString(tab), 11, _hoisted_3)\n          }), 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, _renderList(tabs, (tab) => {\n            return _createElementVNode(\"li\", {\n              key: tab,\n              class: _normalizeClass({ activeTab: currentTab.value === tab }),\n              onClick: ($event: any) => (changeTab(tab))\n            }, _toDisplayString(tab), 11, _hoisted_4)\n          }), 64))\n    ]),\n    (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <template v-if=\"viewerCheck === 'viewer'\">\r\n        <li v-for=\"tab in viewerTabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n      <template v-else>\r\n        <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n}\r\n);\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport { RuningInfoApiRequest } from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readDziFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.dziReader.get, request);\r\n}\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.Hl7Create.post, request);\r\n};","const disableScroll = () => {\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nconst enableScroll = () => {\r\n    document.body.style.overflow = 'auto';\r\n}\r\n\r\nexport { disableScroll, enableScroll };","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { style: {\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\",\"z-index\":\"9999\"} }\nconst _hoisted_3 = { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }\nconst _hoisted_4 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_5 = { style: {\"width\":\"100%\"} }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n], -1)\nconst _hoisted_7 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)\nconst _hoisted_9 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_10 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)\nconst _hoisted_12 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_13 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)\nconst _hoisted_15 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_16 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)\nconst _hoisted_18 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_19 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)\nconst _hoisted_21 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_22 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)\nconst _hoisted_24 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_25 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)\nconst _hoisted_27 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_28 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)\nconst _hoisted_30 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"div\", { style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"} }, null, -1)\nconst _hoisted_32 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)\nconst _hoisted_34 = { style: {\"width\":\"100%\"} }\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"20%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"15%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"15%\"} })\n], -1)\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", { style: {\"margin-bottom\":\"15px\",\"font-size\":\"18px\",\"font-weight\":\"normal\",\"padding-bottom\":\"100px\"} }, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n  ])\n], -1)\nconst _hoisted_37 = [\"rowspan\"]\nconst _hoisted_38 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_39 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_40 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_41 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_42 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_43 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_44 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_45 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_46 = { key: 0 }\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, null, -1)\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"Total\", -1)\nconst _hoisted_49 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_50 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_51 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Others\", -1)\nconst _hoisted_52 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Platelets\", -1)\nconst _hoisted_53 = {\n  style: {\"text-align\":\"left\",\"padding\":\"15px 0\"},\n  colspan: \"3\"\n}\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Malaria\", -1)\nconst _hoisted_56 = {\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"},\n  colspan: \"3\"\n}\nconst _hoisted_57 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding-top\":\"15px\"} }, \"Comment\", -1)\nconst _hoisted_58 = {\n  style: {\"text-align\":\"left\",\"padding-top\":\"15px\"},\n  colspan: \"4\"\n}\nconst _hoisted_59 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_60 = { style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"WBC classification result\", -1)\nconst _hoisted_62 = { style: {\"width\":\"100%\"} }\nconst _hoisted_63 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n  ])\n], -1)\nconst _hoisted_65 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_66 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_67 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_68 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_69 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total count\", -1)\nconst _hoisted_70 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_71 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1)\nconst _hoisted_72 = {\n  key: 0,\n  style: {\"text-align\":\"left\",\"padding-top\":\"30px\",\"font-weight\":\"bold\"}\n}\nconst _hoisted_73 = {\n  key: 1,\n  style: {\"padding-top\":\"5px\",\"padding-bottom\":\"15px\"}\n}\nconst _hoisted_74 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_75 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_76 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_77 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Comment\", -1)\nconst _hoisted_78 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_79 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_80 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\",\"text-align\":\"center\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"}\n}\nconst _hoisted_81 = { style: {\"font-weight\":\"bold\",\"font-size\":\"18px\",\"margin\":\"40px auto 20px\"} }\nconst _hoisted_82 = { style: {\"position\":\"relative\"} }\nconst _hoisted_83 = [\"src\", \"width\", \"height\"]\n\nimport {computed, onMounted, ref, watchEffect} from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'print',\n  props: ['printOnOff', 'selectItemWbc'],\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getOrderClass();\r\n  await rbcTotalAndReCount();\r\n  await getImagePrintData();\r\n  await printPage();\r\n});\r\n\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n          console.log(malariaTotal)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => imagePrintAndWbcArr.value.includes(item.id));\r\n\r\n        // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n        // wbcClassification Order 적용\r\n        const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n        const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n        wbcInfo.value = sortedWbcInfoData;\r\n        nonWbcClassList.value = sortedWbcInfoData.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Loading Print...\", 512), [\n      [_vShow, printReady.value]\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n        onClick: closePrint\n      }, \"Close\"),\n      _createElementVNode(\"div\", {\n        ref_key: \"printContent\",\n        ref: printContent,\n        style: {\"margin-top\":\"20px\"}\n      }, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"h3\", _hoisted_3, \"Analysis Report from UIMD \" + _toDisplayString(_unref(projectType) === 'bm' ? 'BM' : 'PB') + \" system\", 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"table\", _hoisted_5, [\n            _hoisted_6,\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", _hoisted_7, [\n                _hoisted_8,\n                _createElementVNode(\"td\", _hoisted_9, _toDisplayString(selectItems.value?.slotId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_10, [\n                _hoisted_11,\n                _createElementVNode(\"td\", _hoisted_12, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_13, [\n                _hoisted_14,\n                _createElementVNode(\"td\", _hoisted_15, _toDisplayString(selectItems.value?.submitUserId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_16, [\n                _hoisted_17,\n                _createElementVNode(\"td\", _hoisted_18, _toDisplayString(selectItems.value?.submitOfDate), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_19, [\n                _hoisted_20,\n                _createElementVNode(\"td\", _hoisted_21, _toDisplayString(_unref(projectType) === 'pb' ? _unref(getTestTypeText)(selectItems.value?.testType) : _unref(getBmTestTypeText)(selectItems.value?.testType)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_22, [\n                _hoisted_23,\n                _createElementVNode(\"td\", _hoisted_24, _toDisplayString(selectItems.value?.patientName), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_25, [\n                _hoisted_26,\n                _createElementVNode(\"td\", _hoisted_27, _toDisplayString(selectItems.value?.birthDay), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_28, [\n                _hoisted_29,\n                _createElementVNode(\"td\", _hoisted_30, _toDisplayString(selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n              ])\n            ])\n          ]),\n          _hoisted_31,\n          (['01', '04'].includes(selectItems.value?.testType))\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                _hoisted_33,\n                _createElementVNode(\"table\", _hoisted_34, [\n                  _hoisted_35,\n                  _hoisted_36,\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([selectItems.value.rbcInfoAfter], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n                            _createElementVNode(\"tr\", null, [\n                              _createElementVNode(\"td\", {\n                                rowspan: category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0),\n                                style: {\"text-align\":\"left\",\"vertical-align\":\"top\"}\n                              }, _toDisplayString(category.categoryNm), 9, _hoisted_37),\n                              _createElementVNode(\"td\", _hoisted_38, _toDisplayString(category.classInfo[0]?.classNm), 1),\n                              _createElementVNode(\"td\", _hoisted_39, _toDisplayString(category.classInfo[0]?.degree), 1),\n                              _createElementVNode(\"td\", _hoisted_40, _toDisplayString(category.classInfo[0]?.originalDegree), 1),\n                              _createElementVNode(\"td\", _hoisted_41, _toDisplayString(percentageChange(category.classInfo[0]?.originalDegree)), 1)\n                            ]),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo.slice(1), (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"tr\", { key: classIndex }, [\n                                _createElementVNode(\"td\", _hoisted_42, _toDisplayString(classInfo.classNm), 1),\n                                _createElementVNode(\"td\", _hoisted_43, _toDisplayString(classInfo.degree), 1),\n                                _createElementVNode(\"td\", _hoisted_44, _toDisplayString(classInfo.originalDegree), 1),\n                                _createElementVNode(\"td\", _hoisted_45, _toDisplayString(percentageChange(classInfo.originalDegree)), 1)\n                              ]))\n                            }), 128)),\n                            (category.categoryNm !== 'Shape')\n                              ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_46, [\n                                  _hoisted_47,\n                                  _hoisted_48,\n                                  _createElementVNode(\"td\", _hoisted_49, _toDisplayString(sizeChromiaTotal.value), 1),\n                                  _createElementVNode(\"td\", _hoisted_50, _toDisplayString(percentageChange(sizeChromiaTotal.value)) + \" %\", 1)\n                                ]))\n                              : _createCommentVNode(\"\", true)\n                          ], 64))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", null, [\n                      _hoisted_51,\n                      _hoisted_52,\n                      _createElementVNode(\"th\", _hoisted_53, _toDisplayString(pltCount.value) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", null, [\n                      _hoisted_54,\n                      _hoisted_55,\n                      _createElementVNode(\"th\", _hoisted_56, _toDisplayString(malariaCount.value) + \" / \" + _toDisplayString(maxRbcCount.value) + \" RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", null, [\n                      _hoisted_57,\n                      _withDirectives(_createElementVNode(\"th\", _hoisted_58, [\n                        _createElementVNode(\"pre\", _hoisted_59, _toDisplayString(selectItems.value?.rbcMemo), 1)\n                      ], 512), [\n                        [_vShow, selectItems.value?.rbcMemo]\n                      ])\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_60, [\n            _hoisted_61,\n            _createElementVNode(\"table\", _hoisted_62, [\n              _hoisted_63,\n              _hoisted_64,\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_65, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_66, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_67, _toDisplayString(item?.percent) + \" %\", 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_68, [\n                  _hoisted_69,\n                  _createElementVNode(\"td\", _hoisted_70, _toDisplayString(selectItems.value?.wbcInfo?.totalCount), 1),\n                  _hoisted_71\n                ]),\n                (_unref(projectType) !== 'bm')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_72, \"non-Wbc\"))\n                  : _createCommentVNode(\"\", true),\n                (_unref(projectType) !== 'bm')\n                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_73, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (item) => {\n                        return (_openBlock(), _createElementBlock(_Fragment, {\n                          key: item.id\n                        }, [\n                          _createElementVNode(\"td\", _hoisted_74, _toDisplayString(item.name), 1),\n                          _createElementVNode(\"td\", _hoisted_75, _toDisplayString(item.count), 1)\n                        ], 64))\n                      }), 128))\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"tr\", _hoisted_76, [\n                  _hoisted_77,\n                  _withDirectives(_createElementVNode(\"td\", _hoisted_78, [\n                    _createElementVNode(\"pre\", _hoisted_79, _toDisplayString(selectItems.value?.wbcMemo), 1)\n                  ], 512), [\n                    [_vShow, selectItems.value?.wbcMemo]\n                  ])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_80, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id,\n                  style: {}\n                }, [\n                  _createElementVNode(\"div\", _hoisted_81, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"5px\",\"margin-top\":\"5px\",\"outline\":\"1px solid #2c2d2c\",\"cursor\":\"auto\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_82, [\n                          _createElementVNode(\"img\", {\n                            src: getImageUrl(image.fileName, item.id, item.title),\n                            width: image.width ? image.width : '150px',\n                            height: image.height ? image.height : '150px',\n                            style: _normalizeStyle({ filter: image.filter }),\n                            class: \"cellImg\",\n                            ref_for: true,\n                            ref: \"cellRef\"\n                          }, null, 12, _hoisted_83),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ], 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"printReady\" class=\"moveImgIsBool\"> Loading Print...</div>\r\n  <div style=\"width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px; z-index:9999;\">\r\n    <button style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\" @click=\"closePrint\">Close</button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD {{projectType === 'bm' ? 'BM' : 'PB'}} system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ projectType === 'pb' ? getTestTypeText(selectItems?.testType) : getBmTestTypeText(selectItems?.testType) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n        <div style=\"margin-top: 20px; border-top: 2px dotted #696969\"></div>\r\n          <!-- RBC Classification -->\r\n          <div v-if=\"['01', '04'].includes(selectItems?.testType)\" style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 20%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n                <col style=\"width: 15%;\"/>\r\n                <col style=\"width: 15%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n              <tr style=\"margin-bottom: 15px; font-size: 18px; font-weight: normal; padding-bottom: 100px;\">\r\n                <th style=\"text-align: left;\">Category</th>\r\n                <th style=\"text-align: left;\">Class</th>\r\n                <th style=\"text-align: left;\">Degree</th>\r\n                <th style=\"text-align: left;\">Count</th>\r\n                <th style=\"text-align: left;\">Percent</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <template v-for=\"(classList, outerIndex) in [selectItems.rbcInfoAfter]\" :key=\"outerIndex\">\r\n                <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                  <tr>\r\n                    <td :rowspan=\"category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0)\" style=\"text-align: left; vertical-align: top;\">{{ category.categoryNm }}</td>\r\n                    <td style=\"text-align: left;\">{{ category.classInfo[0]?.classNm }}</td>\r\n                    <td style=\"text-align: left;\">{{ category.classInfo[0]?.degree }}</td>\r\n                    <td style=\"text-align: left;\">{{ category.classInfo[0]?.originalDegree }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(category.classInfo[0]?.originalDegree) }}</td>\r\n                  </tr>\r\n                  <template v-for=\"(classInfo, classIndex) in category.classInfo.slice(1)\" :key=\"classIndex\">\r\n                    <tr>\r\n                      <td style=\"text-align: left;\">{{ classInfo.classNm }}</td>\r\n                      <td style=\"text-align: left;\">{{ classInfo.degree }}</td>\r\n                      <td style=\"text-align: left;\">{{ classInfo.originalDegree }}</td>\r\n                      <td style=\"text-align: left;\">{{ percentageChange(classInfo.originalDegree) }}</td>\r\n                    </tr>\r\n                  </template>\r\n                  <tr v-if=\"category.categoryNm !== 'Shape'\">\r\n                    <td style=\"text-align: left;\"></td>\r\n                    <td style=\"text-align: left;\">Total</td>\r\n                    <td style=\"text-align: left;\">{{ sizeChromiaTotal }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(sizeChromiaTotal) }} %</td>\r\n                  </tr>\r\n                </template>\r\n              </template>\r\n              <tr>\r\n                <th style=\"text-align: left; padding: 15px 0;\">Others</th>\r\n                <th style=\"text-align: left; padding: 15px 0;\">Platelets</th>\r\n                <th style=\"text-align: left; padding: 15px 0;\" colspan=\"3\">{{ pltCount }} PLT / 1000 RBC</th>\r\n              </tr>\r\n              <tr>\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Malaria</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\" colspan=\"3\">{{ malariaCount }} / {{ maxRbcCount }} RBC</th>\r\n              </tr>\r\n              <tr>\r\n                <th style=\"text-align: left; padding-top: 15px;\">Comment</th>\r\n                <th v-show=\"selectItems?.rbcMemo\" style=\"text-align: left; padding-top: 15px;\" colspan=\"4\">\r\n                  <pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{ selectItems?.rbcMemo }}</pre>\r\n                </th>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <!-- WBC Classification -->\r\n          <div style=\"margin-top: 20px; border-top: 2px dotted #696969\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">WBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th style=\"text-align: left;\">Class</th>\r\n                  <th style=\"text-align: left;\">Count</th>\r\n                  <th style=\"text-align: left;\">Percent</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }} %</td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total count</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n              </tr>\r\n\r\n\r\n              <th style=\"text-align: left; padding-top: 30px; font-weight: bold;\" v-if=\"projectType !== 'bm'\">non-Wbc</th>\r\n              <tr style=\"padding-top: 5px; padding-bottom: 15px;\" v-if=\"projectType !== 'bm'\">\r\n                <template v-for=\"item in nonWbcClassList\" :key=\"item.id\" >\r\n                  <td style=\"text-align: left; padding: 5px 0;\">{{item.name}}</td>\r\n                  <td style=\"text-align: left; padding: 5px 0;\">{{item.count}}</td>\r\n\r\n                </template>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 15px 0;\">Comment</th>\r\n                <td v-show=\"selectItems?.wbcMemo\" colspan=\"2\" style=\"text-align: left; padding: 5px 0;\"><pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{ selectItems?.wbcMemo }}</pre></td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <!-- Print List -->\r\n            <ul class=\"print\" style=\"list-style: none; padding-left: 0; margin-top: 20px; text-align: center; display:flex; flex-direction: column; align-items: center; justify-content: center;\">\r\n              <li v-for=\"(item) in wbcInfo\" :key=\"item.id\" style=\"\">\r\n                <div style=\"font-weight: bold; font-size: 18px; margin: 40px auto 20px;\">{{ item?.title }} ({{ item?.count }})</div>\r\n                <ul :class=\"'wbcImgWrap ' + item?.title\" style=\"list-style: none; padding-left: 0; margin-top: 10px;\">\r\n                  <li v-for=\"(image) in item.images\" :key=\"image.fileName\" style=\"display: inline-block; margin-right: 5px; margin-top: 5px; outline: 1px solid #2c2d2c; cursor: auto;\">\r\n                    <div style=\"position: relative;\">\r\n                      <img :src=\"getImageUrl(image.fileName, item.id, item.title)\" :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\" :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                      <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watchEffect} from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\nconst props = defineProps(['printOnOff', 'selectItemWbc']);\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getOrderClass();\r\n  await rbcTotalAndReCount();\r\n  await getImagePrintData();\r\n  await printPage();\r\n});\r\n\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n          console.log(malariaTotal)\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => imagePrintAndWbcArr.value.includes(item.id));\r\n\r\n        // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n        // wbcClassification Order 적용\r\n        const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n        const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n        wbcInfo.value = sortedWbcInfoData;\r\n        nonWbcClassList.value = sortedWbcInfoData.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loadingDelay\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <table class='defaultTable mt2 dbDataTable' ref=\"scrollableDiv\">\r\n    <colgroup>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n    </colgroup>\r\n    <thead>\r\n    <tr>\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(S)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr :class=\"{ selectedTr: selectedItemId === item.id, submittedTr: item.submitState === 'Submit', rock: item.lock_status && item.pcIp !== myIp, checkFirst: item.submitState === 'checkFirst' }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n          title=\"Double click the row\"\r\n      >\r\n        <td> {{ idx + 1 }}</td>\r\n        <td @click=\"handleCheckboxChange(item)\">\r\n          <input type=\"checkbox\" v-model=\"item.checked\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon v-if=\"item?.submitState === 'checkFirst' || item?.submitState === ''\"\r\n                             :icon=\"['fas', 'pen-to-square']\"\r\n                             @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 10px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\"> NO Data</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 100) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"deleteRow\">Delete</li>\r\n      <!--      <li>export XLSX</li>-->\r\n    </ul>\r\n  </div>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li class=\"flexColumn\">\r\n            <label for=\"testType\">PB/BF</label>\r\n            <input id=\"testType\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.testType\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"traySlot\">Tray Slot</label>\r\n            <input id=\"traySlot\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.traySlot\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"barcode\">BARCODE ID</label>\r\n            <input id=\"barcode\" type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"patientId\">PATIENT ID</label>\r\n            <input id=\"patientId\" type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"patientName\">PATIENT NAME</label>\r\n            <input id=\"patientName\" type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"analyzedDate\">Analyzed date</label>\r\n            <input id=\"analyzedDate\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly\r\n                   disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"signedState\">Signed state</label>\r\n            <input id=\"signedState\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.submitState\" readonly disabled/>\r\n          </li>\r\n          <li>\r\n            <p>Barcode Image</p>\r\n            <img class=\"mt1\" :src=\"barcodeImg\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button class=\"alertButton\" @click=\"dbDataEditSet\">Save</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBarcodeDetailImageUrl, getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance, watch\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport moment from \"moment\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItemIdFalse', 'notStartLoading', 'loadingDelayParents']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst loadingDelay = ref(false);\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst barcodeImg = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst dataBasePageReset = computed(() => store.state.commonModule);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstShiftKeyStr = ref('');\r\nconst lastShiftKeyStr = ref('');\r\nlet socketTimeoutId = undefined; // 타이머 ID 저장\r\nconst scrollableDiv = ref(null);\r\n\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  projectType.value = window.PROJECT_TYPE;\r\n  scrollableDiv.value.scrollTop = 50;\r\n  if (scrollableDiv.value) {\r\n    scrollableDiv.value.addEventListener('scroll', handleScroll);\r\n  }\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n})\r\n\r\nasync function handleKeyDown(event) {\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n}\r\nconst handleScroll = () => {\r\n  // if (scrollableDiv.value.scrollTop === 0) {\r\n  //   emits('loadPrevData');\r\n  //   scrollableDiv.value.scrollTop = 50;\r\n  //\r\n  // }\r\n};\r\n\r\nfunction handleKeyUp(event) {\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n}\r\n\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n  if (scrollableDiv.value) {\r\n    scrollableDiv.value.removeEventListener('scroll', handleScroll);\r\n  }\r\n});\r\n\r\nwatch(\r\n    () => props.loadingDelayParents,\r\n    (newVal) => {\r\n      if(newVal){\r\n        loadingDelay.value = true;\r\n        // console.log('?');\r\n      }else{\r\n        loadingDelay.value = false;\r\n        // console.log('?')\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatchEffect(async () => {\r\n  if (props.dbData.length > 0) {\r\n    await nextTick();\r\n\r\n    if (props.selectedItemIdFalse){\r\n      // selectedItemId.value = '0';\r\n      // const filteredItems = props.dbData[0].id\r\n      // const selectedRow = document.querySelector(`[data-row-id=\"${filteredItems}\"]`);\r\n      // selectedRow.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n    }\r\n    const filteredItems = props.dbData.filter(item => item.id === Number(selectedSampleId.value || 0));\r\n    if (dataBasePageReset.value.dataBasePageReset === true && filteredItems.length !== 0) {\r\n      // loadingDelay.value = true;\r\n      await selectItem(filteredItems[0]);\r\n      await store.dispatch('commonModule/setCommonInfo', {dataBasePageReset: false});\r\n      await removeCheckBox();\r\n      // 선택된 행이 화면에 보이도록 스크롤 조정\r\n      const selectedRow = document.querySelector(`[data-row-id=\"${filteredItems[0].id}\"]`);\r\n      if (selectedRow && selectedItemId.value !== '0') {\r\n        // selectedRow.scrollIntoView({ behavior: 'auto', block: 'center' });\r\n        loadingDelay.value = false;\r\n      }\r\n      return;\r\n    }\r\n    // 첫 번째 행을 클릭\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.5,\r\n    });\r\n    if (loadMoreRef.value) {\r\n      observer.observe(loadMoreRef.value);\r\n    }\r\n\r\n    if(selectedItemId.value === '0' || !selectedItemId.value){\r\n      loadingDelay.value = false;\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst removeCheckBox = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = false;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = async (item, event) => {\r\n  if (props.dbData.filter(data => data.id === item.id).lock_status === false) {\r\n    showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleShiftSelection = () => {\r\n  const startId = Math.min(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n  const endId = Math.max(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n\r\n  const items = props.dbData;\r\n\r\n  items.forEach((item) => {\r\n    const itemId = Number(item.id);\r\n    if (itemId >= startId && itemId <= endId) {\r\n      item.checked = true;\r\n    }\r\n  });\r\n\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item) return;\r\n  item.checked = !item.checked;\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = async (item) => {\r\n  if (isShiftKeyPressed.value) {\r\n    if (!firstShiftKeyStr.value) {\r\n      firstShiftKeyStr.value = item.id;\r\n    } else {\r\n      lastShiftKeyStr.value = item.id;\r\n      handleShiftSelection();\r\n    }\r\n  } else {\r\n    firstShiftKeyStr.value = '';\r\n    lastShiftKeyStr.value = '';\r\n  }\r\n  if (isCtrlKeyPressed.value) {\r\n    handleCheckboxChange(item);\r\n  }\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(item.id)});\r\n};\r\n\r\nconst getIpAddress = async (item) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = result.data;\r\n    const req = `oldPcIp=${ipAddress}&newEntityId=${item.id}&newPcIp=${ipAddress}`\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type, payload, delay) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status && item?.pcIp !== myIp.value) {\r\n    return;\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: item.wbcInfoAfter});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getIpAddress(item);\r\n  await router.push('/databaseDetail');\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]]\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['', 'Ready', 'checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType);\r\n  const path = item?.img_drive_root_path !== '' && item?.img_drive_root_path ? item?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, item.slotId, barcodeImgDir.barcodeDirName);\r\n\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async () => {\r\n  try {\r\n    let selectedItems = props.dbData.filter(item => item.checked);\r\n    if (selectedItems.length === 0 && selectedItemId.value === '') {\r\n      showErrorAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    } else if (selectedItems.length === 0 && selectedItemId.value !== '') {\r\n      selectedItems = props.dbData.find(item => item.id === selectedItemId.value);\r\n      if (selectedItems.lock_status) {\r\n        showErrorAlert(messages.lockRow);\r\n        return;\r\n      }\r\n      const idsToDelete = selectedItems\r\n      const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n      const rootArr = `${path}/${selectedItems.slotId}`;\r\n      const req = {\r\n        ids: [idsToDelete.id],\r\n        img_drive_root_path: [rootArr]\r\n      }\r\n      const response = await deleteRunningApi(req);\r\n\r\n      if (response.success) {\r\n        showSuccessAlert('Items deleted successfully');\r\n        emits('refresh'); // 데이터 다시 불러오기\r\n        resetContextMenu();\r\n      } else {\r\n        console.error('Failed to delete items');\r\n      }\r\n    } else {\r\n      const idsToDelete = selectedItems.map(item => item.id);\r\n      const idsToDeleteLock = selectedItems.map(item => item.lock_status);\r\n      if (idsToDeleteLock.includes(true)) {\r\n        showErrorAlert(messages.lockRow);\r\n        return\r\n      }\r\n      const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n      const rootArr = selectedItems.map(item => `${path}/${item.slotId}`);\r\n      const req = {\r\n        ids: idsToDelete,\r\n        img_drive_root_path: rootArr\r\n      }\r\n      const response = await deleteRunningApi(req);\r\n\r\n      if (response.success) {\r\n        showSuccessAlert('Items deleted successfully');\r\n        emits('refresh'); // 데이터 다시 불러오기\r\n        resetContextMenu();\r\n      } else {\r\n        console.error('Failed to delete items');\r\n      }\r\n    }\r\n\r\n\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <ul class=\"orderListUi\">\r\n        <li>Order ID: <span>{{ selectedItem?.slotId }}</span>  </li>\r\n        <li>LIS status: <span>No data sent or received from LIS</span>  </li>\r\n        <li>Type of order:\r\n          <span v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">WBC + RBC</span>\r\n          <span v-else>{{ selectedItem?.testType }}</span>\r\n        </li> \r\n        <li>NS, NB Integration: <span>{{ selectedItem?.isNsNbIntegration }}</span>  </li>\r\n        <li>Patient ID: <span>{{ selectedItem?.patientId }}</span>  </li>\r\n        <li>Patient Name: <span>{{ selectedItem?.patientNm }}</span>  </li>\r\n        <li>\r\n          <img v-show=\"!barCodeImageShowError\" @error=\"onImageError\" :src=\"pilePath\" style=\"width: 355px\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <h3 class=\"mt2 mb1 hh3title\">Result Information</h3>\r\n      <ul>\r\n<!--        <li>Analyzed Date <span>{{ formatDateString(selectedItem?.analyzedDttm) }}</span></li>-->\r\n<!--        <li>Signed State <span>{{ selectedItem?.submitState }}</span></li>-->\r\n<!--        <li>Signed of Date <span>{{ selectedItem?.submitOfDate }}</span></li>-->\r\n<!--        <li>Signed User ID <span>{{ selectedItem?.submitUserId }}</span></li>-->\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">\r\n          <div class=\"resInfoContainer\">\r\n            <li class=\"resInfoWrapper mb1\">\r\n              <p>Class</p>\r\n              <p>Count</p>\r\n              <p>Percent</p>\r\n            </li>\r\n            <template v-for=\"result in selectedItem?.wbcInfoAfter\" :key=\"result.title\" >\r\n              <li v-if=\"showClassificationResults(result.title) && result.count > 0\" class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>{{ result.percent + '%' }}</p>\r\n              </li>\r\n            </template>\r\n            <li class=\"resInfoWrapper mt1 mb2\">\r\n              <p>Total</p>\r\n              <p>{{ wbcTotal }}</p>\r\n              <p>100%</p>\r\n            </li>\r\n\r\n            <template v-for=\"result in selectedItem?.wbcInfoAfter\" :key=\"result.title\" >\r\n              <li v-if=\"showClassificationNonWbcResults(result.title) && result.count > 0\" class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>-</p>\r\n              </li>\r\n            </template>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\nimport {ref, defineProps, onMounted, watchEffect, watch, nextTick, computed} from 'vue';\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport moment from \"moment/moment\";\r\nimport {useStore} from \"vuex\";\r\nconst store = useStore();\r\n\r\nconst props = defineProps(['selectedItem']);\r\nconst iaRootPath = ref(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nconst pilePath = ref('');\r\nconst barCodeImageShowError = ref(false);\r\nconst wbcTotal = ref(0);\r\nconst nonWbcTitles = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n\r\nonMounted(() => {\r\n  barCodeImageShowError.value = false;\r\n  // iaRootPath가 존재하면 getImageUrl 함수 호출\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n\r\n});\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  barCodeImageShowError.value = false;\r\n  setWbcTotalAndPercent();\r\n\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst setWbcTotalAndPercent = () => {\r\n  wbcTotal.value = props.selectedItem.wbcInfoAfter.reduce((acc,item) => {\r\n    if (!nonWbcTitles.includes(item.title)) return acc + Number(item.count)\r\n    return acc\r\n  }, 0)\r\n  for (const item of props.selectedItem.wbcInfoAfter) {\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(wbcTotal.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, props.selectedItem?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(wbcTotal.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd, testType) => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !nonWbcTitles.includes(classificationResult)\r\n  );\r\n};\r\n\r\nconst showClassificationNonWbcResults = (classificationResult) => {\r\n  return (classificationResult && classificationResult.length > 0 && nonWbcTitles.includes(classificationResult))\r\n}\r\n\r\n\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nfunction getImageUrl(imageName){\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + barcodeImgDir.barcodeDirName + '/'}&imageName=${imageName}`;\r\n}\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"WBC Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbWbcImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbWbcImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"BM Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbBmImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  console.log(props.selectedItem)\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbBmImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  console.log(props.selectedItem)\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { ApiResponse, useHttpClient } from \"@/common/api/httpClient\";\r\nimport { apiConstants } from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const executeExcelCreate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.excel.execute, request);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, KeepAlive as _KeepAlive, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleH3\" }\nconst _hoisted_2 = { class: \"listBoxTable\" }\nconst _hoisted_3 = { class: \"filterListDiv\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\nconst _hoisted_7 = [\n  _hoisted_4,\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"settingDatePickers\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"excelDivList\"\n}\nconst _hoisted_10 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_11 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \"NR count\", -1)\nconst _hoisted_13 = { class: \"wbcTotal\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Total\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", null, \"DESC\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"option\", null, \"ASC\", -1)\nconst _hoisted_18 = [\n  _hoisted_15,\n  _hoisted_16,\n  _hoisted_17\n]\nconst _hoisted_19 = { class: \"wbcInfoFilter\" }\nconst _hoisted_20 = { class: \"wbcInfoFilter\" }\nconst _hoisted_21 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_22 = [\"for\"]\nconst _hoisted_23 = { class: \"lastTestType\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Test Type\", -1)\nconst _hoisted_25 = [\"checked\"]\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"span\", null, \"ALL\", -1)\nconst _hoisted_27 = [\"checked\"]\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Diff\", -1)\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"span\", null, \"PBS\", -1)\nconst _hoisted_31 = [\"checked\"]\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Wedge\", -1)\nconst _hoisted_33 = [\"checked\"]\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Biopsy\", -1)\nconst _hoisted_35 = [\"checked\"]\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Squash\", -1)\nconst _hoisted_37 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {computed, getCurrentInstance, onBeforeMount, onBeforeUnmount, onMounted, ref, watch, watchEffect} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as XLSX from 'xlsx';\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst store = useStore();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst dataBaseOneCall = ref<any>(store.state.commonModule.dataBaseOneCall);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nfunction handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  initDbData().then(() => {\r\n    // loadingDelayParents.value = false;\r\n  });\r\n}\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n    // if (Number(lastSearchParams.page) !== 1) {\r\n    //   const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    //   if (numberOfCalls >= 4) {\r\n    //     await getDbData('mounted', numberOfCalls - 3);\r\n    //     await getDbData('mounted', numberOfCalls - 2);\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 3\r\n    //   } else {\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 1\r\n    //   }\r\n    //   await getDbData('mounted', numberOfCalls);\r\n    // } else {\r\n    //   await getDbData('mounted', 1);\r\n    // }\r\n    // const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    // for (let i = 1; i <= numberOfCalls; i++) {\r\n    //   await getDbData('mounted', i);\r\n    // }\r\n    await getDbData('search') ;\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if(type === 'loadMoreData'){\r\n    pageChange = page.value;\r\n  }else if(type === 'loadPrevData'){\r\n    pageChange = prevPage.value;\r\n  }else{\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if(page.value === 1 && result.data.data.length === 0){\r\n      loadingDelayParents.value = false;\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n          saveLastSearchParams();\r\n        }else{\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${iaRootPath.value}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    await executeExcelCreate(body);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_1, [\n        _createTextVNode(\" Classification List \"),\n        _createElementVNode(\"button\", { onClick: classListToggleEvent }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'list-check'] })\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _hoisted_7, 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n              class: \"searchInputBox\"\n            }, null, 512), [\n              [_vModelText, searchText.value]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: dateRefresh\n            }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'calendar-days'] }),\n              _createTextVNode(\" Refresh \")\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\"),\n            (viewerCheck.value !== 'viewer')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'file-csv'],\n                    onClick: exportToExcel\n                  })\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                      _hoisted_12,\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_13, [\n                  _hoisted_14,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _hoisted_18, 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_19, [\n                  _createElementVNode(\"span\", null, _toDisplayString(bmClassIsBoolen.value ? 'BM' : 'WBC') + \" Info Filter\", 1),\n                  _createElementVNode(\"ul\", _hoisted_20, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          id: 'checkbox_' + idx,\n                          \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                          onChange: updateFilter\n                        }, null, 40, _hoisted_21), [\n                          [_vModelCheckbox, item.checked]\n                        ]),\n                        _createElementVNode(\"label\", {\n                          for: 'checkbox_' + idx\n                        }, _toDisplayString(item.title), 9, _hoisted_22)\n                      ]))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_25),\n                      _hoisted_26\n                    ]),\n                    (!bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"01\",\n                              onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                              checked: testType.value === '01'\n                            }, null, 40, _hoisted_27),\n                            _hoisted_28\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_29),\n                            _hoisted_30\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true),\n                    (bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"02\",\n                              onChange: _cache[9] || (_cache[9] = ($event: any) => (changeTestType('02'))),\n                              checked: testType.value === '02'\n                            }, null, 40, _hoisted_31),\n                            _hoisted_32\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[10] || (_cache[10] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_33),\n                            _hoisted_34\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"06\",\n                              onChange: _cache[11] || (_cache[11] = ($event: any) => (changeTestType('06'))),\n                              checked: testType.value === '06'\n                            }, null, 40, _hoisted_35),\n                            _hoisted_36\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_openBlock(), _createBlock(_KeepAlive, null, [\n          _createVNode(ListTable, {\n            loadingDelayParents: loadingDelayParents.value,\n            dbData: dbGetData.value,\n            onLoadMoreData: loadMoreData,\n            onLoadPrevData: loadPrevData,\n            onInitData: initDbData,\n            onSelectItem: selectItem,\n            onRefresh: refresh,\n            onCheckListItem: checkListItem,\n            selectedItemIdFalse: selectedItemIdFalse.value,\n            notStartLoading: notStartLoading.value\n          }, null, 8, [\"loadingDelayParents\", \"dbData\", \"selectedItemIdFalse\", \"notStartLoading\"])\n        ], 1024))\n      ]),\n      _createElementVNode(\"div\", _hoisted_37, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click=\"classListToggleEvent\">\r\n        <font-awesome-icon :icon=\"['fas', 'list-check']\"/>\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <input type=\"text\" v-model='searchText' class=\"searchInputBox\"/>\r\n          <button class=\"searchClass\" @click=\"dateRefresh\">\r\n            <font-awesome-icon :icon=\"['fas', 'calendar-days']\"/>\r\n            Refresh\r\n          </button>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n\r\n          <button type=\"button\" class=\"searchClass\" @click=\"search\">Search</button>\r\n          <div v-if=\"viewerCheck !== 'viewer'\" class=\"excelDivList\">\r\n            <font-awesome-icon :icon=\"['fas', 'file-csv']\" @click=\"exportToExcel\"/>\r\n          </div>\r\n        </div>\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\">\r\n            <span>{{ bmClassIsBoolen ? 'BM' : 'WBC' }} Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label><input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/>\r\n                <span>ALL</span></label>\r\n              <template v-if=\"!bmClassIsBoolen\">\r\n                <label><input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                  <span>Diff</span></label>\r\n                <label><input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>PBS</span></label>\r\n              </template>\r\n\r\n              <template v-if=\"bmClassIsBoolen\">\r\n                <label><input type=\"checkbox\" value=\"02\" @change=\"changeTestType('02')\" :checked=\"testType === '02'\"/>\r\n                  <span>Wedge</span></label>\r\n                <label><input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>Biopsy</span></label>\r\n                <label><input type=\"checkbox\" value=\"06\" @change=\"changeTestType('06')\" :checked=\"testType === '06'\"/>\r\n                  <span>Squash</span></label>\r\n              </template>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <keep-alive>\r\n        <ListTable\r\n            :loadingDelayParents=\"loadingDelayParents\"\r\n            :dbData=\"dbGetData\"\r\n            @loadMoreData=\"loadMoreData\"\r\n            @loadPrevData=\"loadPrevData\"\r\n            @initData=\"initDbData\"\r\n            @selectItem=\"selectItem\"\r\n            @refresh=\"refresh\"\r\n            @checkListItem=\"checkListItem\"\r\n            :selectedItemIdFalse=\"selectedItemIdFalse\"\r\n            :notStartLoading='notStartLoading'\r\n        />\r\n      </keep-alive>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {computed, getCurrentInstance, onBeforeMount, onBeforeUnmount, onMounted, ref, watch, watchEffect} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as XLSX from 'xlsx';\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\r\nconst store = useStore();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst dataBaseOneCall = ref<any>(store.state.commonModule.dataBaseOneCall);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nfunction handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  initDbData().then(() => {\r\n    // loadingDelayParents.value = false;\r\n  });\r\n}\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n    // if (Number(lastSearchParams.page) !== 1) {\r\n    //   const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    //   if (numberOfCalls >= 4) {\r\n    //     await getDbData('mounted', numberOfCalls - 3);\r\n    //     await getDbData('mounted', numberOfCalls - 2);\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 3\r\n    //   } else {\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 1\r\n    //   }\r\n    //   await getDbData('mounted', numberOfCalls);\r\n    // } else {\r\n    //   await getDbData('mounted', 1);\r\n    // }\r\n    // const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    // for (let i = 1; i <= numberOfCalls; i++) {\r\n    //   await getDbData('mounted', i);\r\n    // }\r\n    await getDbData('search') ;\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if(type === 'loadMoreData'){\r\n    pageChange = page.value;\r\n  }else if(type === 'loadPrevData'){\r\n    pageChange = prevPage.value;\r\n  }else{\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if(page.value === 1 && result.data.data.length === 0){\r\n      loadingDelayParents.value = false;\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n          saveLastSearchParams();\r\n        }else{\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${iaRootPath.value}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    await executeExcelCreate(body);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"createdRbc\" }\nconst _hoisted_2 = { class: \"mt1 flexSpaceBetween\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1)\nconst _hoisted_4 = { class: \"leftWbcInfo rbcClass\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"categoryNm\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"classNmRbc\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = [\"onClick\"]\nconst _hoisted_13 = { key: 0 }\nconst _hoisted_14 = [\"value\"]\nconst _hoisted_15 = { key: 0 }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Others\", -1)\nconst _hoisted_17 = [\n  _hoisted_16\n]\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1)\nconst _hoisted_20 = { class: \"degree analysis\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_22 = { key: 0 }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_24 = {\n  key: 1,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_25 = { key: 1 }\nconst _hoisted_26 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_27 = {\n  key: 1,\n  class: \"rbcSapn\"\n}\nconst _hoisted_28 = {\n  key: 2,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_29 = {\n  key: 3,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_30 = { key: 2 }\nconst _hoisted_31 = { key: 3 }\nconst _hoisted_32 = { key: 4 }\nconst _hoisted_33 = { class: \"rbcPercent\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_35 = { key: 0 }\nconst _hoisted_36 = { key: 1 }\nconst _hoisted_37 = {\n  key: 2,\n  class: \"defaultText\"\n}\nconst _hoisted_38 = {\n  key: 3,\n  class: \"defaultText\"\n}\nconst _hoisted_39 = { key: 4 }\nconst _hoisted_40 = {\n  key: 5,\n  class: \"underline\"\n}\nconst _hoisted_41 = { class: \"rbcPercent mr1\" }\nconst _hoisted_42 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_43 = { key: 0 }\nconst _hoisted_44 = { key: 1 }\nconst _hoisted_45 = {\n  key: 2,\n  class: \"defaultText\"\n}\nconst _hoisted_46 = {\n  key: 3,\n  class: \"defaultText\"\n}\nconst _hoisted_47 = { key: 4 }\nconst _hoisted_48 = { class: \"categories rbcClass\" }\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_50 = { class: \"classNmRbc\" }\nconst _hoisted_51 = { key: 0 }\nconst _hoisted_52 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelet\", -1)\nconst _hoisted_53 = { class: \"degree analysis\" }\nconst _hoisted_54 = { style: {\"font-size\":\"0.8rem\"} }\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1)\nconst _hoisted_56 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1)\n\nimport {ref, watch, onMounted, computed, getCurrentInstance, watchEffect} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'selectItems', 'type', 'allCheckClear', 'isCommitChanged'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = __props;\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst countArtifact = ref(0);\r\nconst countDoubleNormal = ref(0);\r\n\r\nonMounted(async () => {\r\n  const {path} = router.currentRoute.value;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo.maxRbcCount;\r\n  submitState.value = props.selectItems?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n});\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  submitState.value = props.selectItems?.submitState;\r\n  afterChange(newItem);\r\n  rightClickItemSet();\r\n  allCheckType.value = true;\r\n});\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  const processItems = props.selectItems?.rbcInfo.rbcClass || props.selectItems?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(() => props.rbcInfo, async (newItem) => {\r\n  await afterChange(newItem);\r\n  await rbcTotalAndReCount();\r\n  await countReAdd();\r\n  await getRbcDegreeData();\r\n  await reDegree();\r\n});\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount();\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n      await reDegree();\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst handleClick = (outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any, value: string) => {\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n  clickChangeSens(classInfo.classNm, 'Others', category.categoryId, classInfo.classId);\r\n};\r\n\r\nfunction handleLiClick(outerIndex: number, innerIndex: any, classIndex: any, classInfo: any, category: any) {\r\n  toggleCheckbox(outerIndex, innerIndex, classIndex, classInfo, category);\r\n  clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId);\r\n}\r\n\r\nfunction toggleCheckbox(outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any) {\r\n  const value = `${outerIndex}-${innerIndex}-${classIndex}`;\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if(el.categoryId === '03'){\r\n      for (const classItem of el.classInfo) {\r\n          if(classItem.classNm === 'Artifact'){\r\n            countArtifact.value += 1\r\n          }else if(classItem.classNm === 'DoubleNormal'){\r\n            countDoubleNormal.value += 1\r\n          }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value=  Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n\r\n  sliderValue.value = 50;\r\n};\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: props.selectItems?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') {\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  let rbcData: any = {};\r\n  if (newItem) {\r\n    rbcData = newItem;\r\n  } else {\r\n    rbcData = props.selectItems;\r\n  }\r\n\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  if (rbcData?.rbcInfoAfter && typeof props.selectItems.rbcInfoAfter === 'object') {\r\n    rbcInfoAfterVal.value = Object.entries(rbcData.rbcInfoAfter).length === 0 ? rbcInfoBeforeVal.value : rbcData.rbcInfoAfter;\r\n  } else {\r\n    rbcInfoAfterVal.value = rbcData.rbcInfoAfter && rbcData.rbcInfoAfter.length === 1 ? rbcInfoBeforeVal.value : rbcData;\r\n  }\r\n\r\n\r\n  // Report 화면에서 RBC Classification 동기화 문제로 추가\r\n  if (props.type === 'report') {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    rbcInfoAfterVal.value = result.data.rbcInfoAfter;\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: result.data.rbcInfoAfter });\r\n  }\r\n  await classChange();\r\n}\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    console.error('rbcInfoBeforeVal.value is not an array');\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not an array');\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n    if (item.categoryId === '05') {\r\n      allCheckboxes.push({\r\n        classNm: 'Malaria',\r\n        categoryId: '05',\r\n        classId: '03'\r\n      });\r\n    }\r\n  }\r\n  allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await resRunningItem(updatedRuningInfo, false);\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst reDegree = async () => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Creating a new RBC classification ...\", 512), [\n      [_vShow, jsonIsBool.value]\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"ul\", _hoisted_4, [\n          _createElementVNode(\"li\", _hoisted_5, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'comment-dots'],\n              onClick: memoOpen\n            }),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                  _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"li\", {\n            onClick: commitConfirmed,\n            class: _normalizeClass({'submitted': submitState.value === 'Submit'})\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoBeforeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories rbcClass\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_7, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, \"Category\"))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", null, [\n                  _createElementVNode(\"span\", null, _toDisplayString(getCategoryName(category)), 1),\n                  (getCategoryName(category) === 'Shape' && __props.type !== 'report')\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        class: \"degreeAllCheckBtn\",\n                        onClick: ($event: any) => (toggleAll(allCheckType.value, category))\n                      }, _toDisplayString(allCheckType.value ? 'All Check' : 'All Uncheck'), 9, _hoisted_9))\n                    : _createCommentVNode(\"\", true)\n                ])\n              ]),\n              _createElementVNode(\"ul\", _hoisted_10, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Class\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    _createElementVNode(\"li\", {\n                      onClick: ($event: any) => (handleLiClick(outerIndex, innerIndex, classIndex, classInfo, category))\n                    }, [\n                      ((category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body') && __props.type !== 'report' && classInfo?.classNm !== 'Poikilocyte')\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: `${outerIndex}-${innerIndex}-${classIndex}`,\n                              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkedClassIndices).value = $event))\n                            }, null, 8, _hoisted_14), [\n                              [_vShow, !except.value],\n                              [_vModelCheckbox, checkedClassIndices.value]\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm), 1)\n                    ], 8, _hoisted_12),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, _hoisted_17))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 1,\n                          onClick: _cache[4] || (_cache[4] = ($event: any) => (handleClick(0, 0, 2, { classNm: 'Malaria', classId: '03' }, { categoryId: '05' }, '9-9-2')))\n                        }, [\n                          (__props.type !== 'report')\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                _withDirectives(_createElementVNode(\"input\", {\n                                  type: \"checkbox\",\n                                  value: \"9-9-2\",\n                                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((checkedClassIndices).value = $event)),\n                                  onChange: _cache[3] || (_cache[3] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                                }, null, 544), [\n                                  [_vShow, !except.value],\n                                  [_vModelCheckbox, checkedClassIndices.value]\n                                ])\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          _hoisted_19\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_20, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Degree\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    ((classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05'))\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_22, [\n                          (classInfo.classId !== '01' || category.categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_23, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-up'],\n                                    key: degreeIndex,\n                                    class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_24, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-down'],\n                                    key: degreeIndex + '-down',\n                                    class: _normalizeClass({\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_25, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_26, [\n                                _createVNode(_component_font_awesome_icon, { icon: ['fac', 'half-circle-up'] })\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_27, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fac', 'half-circle-up'],\n                                  class: \"degreeActive\"\n                                })\n                              ])),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex],'0', true)),\n                                  icon: ['fac', 'half-circle-down']\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_29, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], '1', true) ),\n                                  icon: ['fac', 'half-circle-down'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                        ])),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_30, \" - \"))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31, \" - \"))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, \" Total \"), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_33, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34, \"count\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_35, _toDisplayString(classInfo?.originalDegree), 1))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_36, \"-\")),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_37, _toDisplayString(countArtifact.value + countDoubleNormal.value || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_38, _toDisplayString(malariaCount.value || 0), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, _toDisplayString(sizeChromiaTotal.value), 1), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_40, _toDisplayString(shapeBodyTotal.value), 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_41, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_42, \"percent\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_43, _toDisplayString(percentageChange(classInfo?.originalDegree)), 1))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_44, \"-\")),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_45, _toDisplayString(percentageChange(countArtifact.value + countDoubleNormal.value)), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_46, _toDisplayString(percentageChange(malariaCount.value)), 1))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_47, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, \" 100% \"), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_48, [\n          _hoisted_49,\n          _createElementVNode(\"ul\", _hoisted_50, [\n            _createElementVNode(\"li\", {\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (handleClick(0, 0, 1, { classNm: 'Platelet', classId: '01' }, { categoryId: '04' }, '9-9-1'))),\n              style: {\"padding-top\":\"0\"}\n            }, [\n              (__props.type !== 'report')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_51, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      value: \"9-9-1\",\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((checkedClassIndices).value = $event)),\n                      onChange: _cache[6] || (_cache[6] = ($event: any) => (updateClassInfoArr('Platelet', $event.target.checked, '04', '01')))\n                    }, null, 544), [\n                      [_vShow, !except.value],\n                      [_vModelCheckbox, checkedClassIndices.value]\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              _hoisted_52\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_53, [\n            _createElementVNode(\"li\", _hoisted_54, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1)\n          ]),\n          _hoisted_55,\n          _hoisted_56\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <!--  {{ jsonIsBool }}-->\r\n  <div v-show=\"jsonIsBool\" class=\"createdRbc\"> Creating a new RBC classification ...</div>\r\n  <div>\r\n    <div class=\"mt1 flexSpaceBetween\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo rbcClass\">\r\n        <li style=\"position: relative\">\r\n          <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button @click=\"memoChange\">ok</button>\r\n            <button @click=\"memoCancel\">cancel</button>\r\n          </div>\r\n        </li>\r\n        <li @click=\"commitConfirmed\" :class=\"{'submitted': submitState === 'Submit'}\">\r\n          <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoBeforeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories rbcClass\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n            <li>\r\n              <span>{{ getCategoryName(category) }}</span>\r\n              <button class=\"degreeAllCheckBtn\" v-if=\"getCategoryName(category) === 'Shape' && type !== 'report'\"\r\n                      @click=\"toggleAll(allCheckType, category)\">\r\n                {{ allCheckType ? 'All Check' : 'All Uncheck' }}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"handleLiClick(outerIndex, innerIndex, classIndex, classInfo, category)\">\r\n                <div\r\n                    v-if=\"(category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body') && type !== 'report' && classInfo?.classNm !== 'Poikilocyte'\">\r\n                  <input type=\"checkbox\" :value=\"`${outerIndex}-${innerIndex}-${classIndex}`\"\r\n                         v-show=\"!except\"\r\n                         v-model=\"checkedClassIndices\">\r\n                </div>\r\n                <span>\r\n                  {{ classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm }}\r\n                </span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\">\r\n                <span>Others</span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '05'\"\r\n                  @click=\"handleClick(0, 0, 2, { classNm: 'Malaria', classId: '03' }, { categoryId: '05' }, '9-9-2')\"\r\n              >\r\n                <div v-if=\"type !== 'report'\">\r\n                  <input type=\"checkbox\"\r\n                         v-show=\"!except\"\r\n                         value=\"9-9-2\"\r\n                         v-model=\"checkedClassIndices\"\r\n                         @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\">\r\n                </div>\r\n                <span>Malaria</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"(classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05')\">\r\n                <span v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n                <span\r\n                    v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                    class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex + '-down'\"\r\n                      :class=\"{\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n\r\n              </li>\r\n              <li v-else>\r\n                <span v-if=\"classInfo.degree === '0'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n                <span v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree === '0'\" class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex],'0', true)\"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], '1', true) \"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '03'\">\r\n                -\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\">\r\n                -\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  Total\r\n                </div>\r\n              </div>\r\n            </template>\r\n\r\n          </ul>\r\n          <ul class=\"rbcPercent\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">count</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\">\r\n                {{ classInfo?.originalDegree }}\r\n              </li>\r\n              <li v-else>-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\">\r\n                {{ countArtifact + countDoubleNormal || 0 }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '05'\">\r\n                {{ malariaCount || 0 }}\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  {{ sizeChromiaTotal }}\r\n                </div>\r\n              </div>\r\n              <div class=\"underline\"\r\n                   v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\">\r\n                {{ shapeBodyTotal }}\r\n              </div>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"rbcPercent mr1\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">percent</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\">\r\n                {{ percentageChange(classInfo?.originalDegree) }}\r\n              </li>\r\n              <li v-else>-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '03'\">\r\n                {{ percentageChange(countArtifact + countDoubleNormal) }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\">\r\n                {{ percentageChange(malariaCount) }}\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  100%\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </ul>\r\n\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories rbcClass\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"handleClick(0, 0, 1, { classNm: 'Platelet', classId: '01' }, { categoryId: '04' }, '9-9-1')\"\r\n              style=\"padding-top: 0;\">\r\n            <div v-if=\"type !== 'report'\">\r\n              <input type=\"checkbox\"\r\n                     value=\"9-9-1\"\r\n                     v-show=\"!except\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Platelet', $event.target.checked, '04', '01')\">\r\n            </div>\r\n            <span>Platelet</span>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.8rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n        </ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n      </div>\r\n    </div>\r\n<!--    <div class=\"sensitivityDiv\" v-if=\"type !== 'report'\">-->\r\n<!--      <select v-model=\"selectedClass\" @change=\"classChange\">-->\r\n<!--        <option v-for=\"(item) in rightClickItem\" :key=\"item.classNm\">-->\r\n<!--          {{ item.classNm }}-->\r\n<!--        </option>-->\r\n<!--      </select>-->\r\n<!--      <SliderBar v-model=\"sliderValue\" :min=\"0\" :max=\"100\" leftText=\"less\" rightText=\"more\"/>-->\r\n<!--      <button class=\"degreeBtn\" type=\"button\" @click=\"sensRbcReJsonSend\">Ok</button>-->\r\n<!--    </div>-->\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits, getCurrentInstance, watchEffect} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'allCheckClear', 'isCommitChanged']);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst countArtifact = ref(0);\r\nconst countDoubleNormal = ref(0);\r\n\r\nonMounted(async () => {\r\n  const {path} = router.currentRoute.value;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo.maxRbcCount;\r\n  submitState.value = props.selectItems?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n});\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  submitState.value = props.selectItems?.submitState;\r\n  afterChange(newItem);\r\n  rightClickItemSet();\r\n  allCheckType.value = true;\r\n});\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  const processItems = props.selectItems?.rbcInfo.rbcClass || props.selectItems?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(() => props.rbcInfo, async (newItem) => {\r\n  await afterChange(newItem);\r\n  await rbcTotalAndReCount();\r\n  await countReAdd();\r\n  await getRbcDegreeData();\r\n  await reDegree();\r\n});\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount();\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n      await reDegree();\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst handleClick = (outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any, value: string) => {\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n  clickChangeSens(classInfo.classNm, 'Others', category.categoryId, classInfo.classId);\r\n};\r\n\r\nfunction handleLiClick(outerIndex: number, innerIndex: any, classIndex: any, classInfo: any, category: any) {\r\n  toggleCheckbox(outerIndex, innerIndex, classIndex, classInfo, category);\r\n  clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId);\r\n}\r\n\r\nfunction toggleCheckbox(outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any) {\r\n  const value = `${outerIndex}-${innerIndex}-${classIndex}`;\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if(el.categoryId === '03'){\r\n      for (const classItem of el.classInfo) {\r\n          if(classItem.classNm === 'Artifact'){\r\n            countArtifact.value += 1\r\n          }else if(classItem.classNm === 'DoubleNormal'){\r\n            countDoubleNormal.value += 1\r\n          }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value=  Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n\r\n  sliderValue.value = 50;\r\n};\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: props.selectItems?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') {\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  let rbcData: any = {};\r\n  if (newItem) {\r\n    rbcData = newItem;\r\n  } else {\r\n    rbcData = props.selectItems;\r\n  }\r\n\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  if (rbcData?.rbcInfoAfter && typeof props.selectItems.rbcInfoAfter === 'object') {\r\n    rbcInfoAfterVal.value = Object.entries(rbcData.rbcInfoAfter).length === 0 ? rbcInfoBeforeVal.value : rbcData.rbcInfoAfter;\r\n  } else {\r\n    rbcInfoAfterVal.value = rbcData.rbcInfoAfter && rbcData.rbcInfoAfter.length === 1 ? rbcInfoBeforeVal.value : rbcData;\r\n  }\r\n\r\n\r\n  // Report 화면에서 RBC Classification 동기화 문제로 추가\r\n  if (props.type === 'report') {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    rbcInfoAfterVal.value = result.data.rbcInfoAfter;\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: result.data.rbcInfoAfter });\r\n  }\r\n  await classChange();\r\n}\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    console.error('rbcInfoBeforeVal.value is not an array');\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not an array');\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n    if (item.categoryId === '05') {\r\n      allCheckboxes.push({\r\n        classNm: 'Malaria',\r\n        categoryId: '05',\r\n        classId: '03'\r\n      });\r\n    }\r\n  }\r\n  allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await resRunningItem(updatedRuningInfo, false);\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst reDegree = async () => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfoBeforeVal.value.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n</script>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request, '', false, window.VIEWER_CHECK);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-malaria\",\n  style: {\"text-align\":\"left\"}\n}, \"No Malaria\", -1)\nconst _hoisted_4 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\nconst _hoisted_7 = [\n  _hoisted_6\n]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (imageExist.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"div\", {\n            onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n            onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'malaria-' + index,\n                src: malaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                alt: \"malaria-image\",\n                onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('malaria', malaria, index))\n              }, null, 42, _hoisted_2))\n            }), 128))\n          ], 32)\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_3,\n          _createElementVNode(\"div\", {\n            onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'noMalaria-' + index,\n                src: noMalaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                alt: \"noMalaria-image\",\n                onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index))\n              }, null, 42, _hoisted_4))\n            }), 128))\n          ], 32)\n        ])\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <div @drop=\"onDrop('malaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <div class=\"no-malaria\" style=\"text-align:left\">No Malaria</div>\r\n      <div @drop=\"onDrop('noMalaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"rbc-container imgList\" }\nconst _hoisted_2 = { class: \"btn-container_img_list\" }\nconst _hoisted_3 = {\n  class: \"btn-imgsetbox_img_list\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_4 = { class: \"imgSet_img_list\" }\nconst _hoisted_5 = { class: \"alignItemsCenter\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", null, \"R\", -1)\nconst _hoisted_7 = { class: \"alignItemsCenter\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", null, \"G\", -1)\nconst _hoisted_9 = { class: \"alignItemsCenter\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", null, \"B\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Grid\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Ruler\", -1)\nconst _hoisted_13 = { class: \"ruler_box_img_list\" }\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Zoom\", -1)\nconst _hoisted_16 = { class: \"tiling-viewer_img_list-box_img_list\" }\nconst _hoisted_17 = { key: 2 }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Tile does not exist.\", -1)\nconst _hoisted_19 = [\n  _hoisted_18\n]\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = { class: \"classNmRbc\" }\nconst _hoisted_22 = [\"onClick\"]\nconst _hoisted_23 = { class: \"categories\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_25 = { class: \"classNmRbc\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1)\nconst _hoisted_27 = [\n  _hoisted_26\n]\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1)\nconst _hoisted_29 = [\n  _hoisted_28\n]\n\nimport {computed, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height)}\r\n}\r\n\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n  rbcMarker(newData);\r\n}, {deep: true});\r\n\r\nwatch(classInfoArrNewReData, async (nenenen, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (nenenen.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n    }\r\n    await rbcMarker(nenenen);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Poikilocyte': 'green',\r\n    'Target Cell': 'blue',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': 'orange',\r\n    'Ovalocyte': 'cyan',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': 'lime',\r\n    'Stomatocyte': 'teal',\r\n    'TearDrop Cell': 'navy',\r\n    'Spherocyte': 'gold',\r\n    'Howell-Jolly Body': 'indigo',\r\n    'Basophilic Stippling': 'olive',\r\n    'Malaria': 'black',\r\n    'Platelet': '#ffac35',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm.replace(/\\s/g, '') === info.classNm.replace(/\\s/g, '') && category.categoryId === info.categoryId) {\r\n\r\n          ctx.lineWidth = 6;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15,\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerClick: 1.2, // 클릭 확대 비율 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      viewer.value.addHandler('page', function (event: any) {\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') {\r\n          return;\r\n        }\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          if (!event.originalEvent.ctrlKey) {\r\n            await removeDiv();\r\n          }\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm === \"Normal\") {\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = item.width;\r\n            element.style.backgroundColor = color;\r\n            element.style.height = item.height;\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\nconst drawOverlays = () => {\r\n  const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n  overlays.forEach((item: any) => {\r\n    const element = document.createElement('div');\r\n    element.className = 'overlayElement';\r\n    element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n    viewer.value?.addOverlay({\r\n      element: element,\r\n      location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n    });\r\n  });\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName)\r\n        const {width, height} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.width = rulerPos.value.width + 'px';\r\n    element.style.height = rulerPos.value.height + 'px';\r\n    element.style.zIndex = '9999999';\r\n\r\n    // Zoom level calculation\r\n    const zoom = viewer.value.viewport.getZoom(true);\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerPos.value.width / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left / zoom) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerPos.value.height / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top / zoom) + 'px';\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31;\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81;\r\n      }\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tilingViewer');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return;\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30 || rulerPos.value.top <= 80) {\r\n          return;\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft;\r\n        rulerPos.value.top = element.offsetTop;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"button\", {\n            class: \"darkButton\",\n            onClick: imgSetOpen\n          }, \"IMG Setting\"),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n              _createElementVNode(\"span\", null, \"Brightness \" + _toDisplayString(imgBrightness.value), 1),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"120\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                onInput: changeImgBrightness\n              }, null, 544), [\n                [_vModelText, imgBrightness.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: brightnessReset\n              }, \"Brightness Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n              _createElementVNode(\"span\", null, \"RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ]\", 1),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _hoisted_6,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _hoisted_8,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_9, [\n                _hoisted_10,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ])\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: rgbReset\n              }, \"RGB Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n              _hoisted_11,\n              _createVNode(_component_font_awesome_icon, {\n                icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickGrid\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n              _hoisted_12,\n              _createElementVNode(\"div\", _hoisted_13, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                  return (_openBlock(), _createElementBlock(\"button\", {\n                    class: _normalizeClass([\"tab-ruler-btn_img_list\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                    onClick: ($event: any) => (onClickRuler(ruler)),\n                    key: ruler.id\n                  }, _toDisplayString(ruler.text), 11, _hoisted_14))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n              _hoisted_15,\n              _createVNode(_component_font_awesome_icon, {\n                icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickZoom\n              }, null, 8, [\"icon\"])\n            ])\n          ], 512), [\n            [_vShow, imgSet_img_list.value]\n          ])\n        ], 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_16, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer_img_list\",\n                style: {\"width\":\"100%\"},\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _hoisted_19))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rightClickItem.value], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_20, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_21, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                      ], 8, _hoisted_22))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_23, [\n                _hoisted_24,\n                _createElementVNode(\"ul\", _hoisted_25, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('04', '01', 'Platelet')))\n                  }, _hoisted_27),\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                  }, _hoisted_29)\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"rbc-container imgList\">\r\n    <div class=\"btn-container_img_list\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox_img_list' ref=\"imgSetWrap\">\r\n        <button class=\"darkButton\" @click=\"imgSetOpen\">IMG Setting</button>\r\n        <div class=\"imgSet_img_list\" v-show=\"imgSet_img_list\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness {{ imgBrightness }}</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"120\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"brightnessReset\">Brightness Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]</span>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>R</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>G</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>B</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n            <span>Ruler</span>\r\n            <div class=\"ruler_box_img_list\">\r\n              <button\r\n                  class=\"tab-ruler-btn_img_list\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer_img_list-box_img_list\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\"\r\n           ref=\"tilingViewerLayer\"\r\n           id=\"tiling-viewer_img_list\" style=\"width: 100%;\"\r\n           @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [rightClickItem]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n          <li @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n            <span>Malaria</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height)}\r\n}\r\n\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n  rbcMarker(newData);\r\n}, {deep: true});\r\n\r\nwatch(classInfoArrNewReData, async (nenenen, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (nenenen.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n    }\r\n    await rbcMarker(nenenen);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Poikilocyte': 'green',\r\n    'Target Cell': 'blue',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': 'orange',\r\n    'Ovalocyte': 'cyan',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': 'lime',\r\n    'Stomatocyte': 'teal',\r\n    'TearDrop Cell': 'navy',\r\n    'Spherocyte': 'gold',\r\n    'Howell-Jolly Body': 'indigo',\r\n    'Basophilic Stippling': 'olive',\r\n    'Malaria': 'black',\r\n    'Platelet': '#ffac35',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm.replace(/\\s/g, '') === info.classNm.replace(/\\s/g, '') && category.categoryId === info.categoryId) {\r\n\r\n          ctx.lineWidth = 6;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15,\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerClick: 1.2, // 클릭 확대 비율 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      viewer.value.addHandler('page', function (event: any) {\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') {\r\n          return;\r\n        }\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          if (!event.originalEvent.ctrlKey) {\r\n            await removeDiv();\r\n          }\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm === \"Normal\") {\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = item.width;\r\n            element.style.backgroundColor = color;\r\n            element.style.height = item.height;\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\nconst drawOverlays = () => {\r\n  const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n  overlays.forEach((item: any) => {\r\n    const element = document.createElement('div');\r\n    element.className = 'overlayElement';\r\n    element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n    viewer.value?.addOverlay({\r\n      element: element,\r\n      location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n    });\r\n  });\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName)\r\n        const {width, height} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.width = rulerPos.value.width + 'px';\r\n    element.style.height = rulerPos.value.height + 'px';\r\n    element.style.zIndex = '9999999';\r\n\r\n    // Zoom level calculation\r\n    const zoom = viewer.value.viewport.getZoom(true);\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerPos.value.width / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left / zoom) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerPos.value.height / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top / zoom) + 'px';\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31;\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81;\r\n      }\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tilingViewer');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return;\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30 || rulerPos.value.top <= 80) {\r\n          return;\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft;\r\n        rulerPos.value.top = element.offsetTop;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"REPORT\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"LIS-CBC\", -1)\nconst _hoisted_7 = { class: \"wbcMenuBottom\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\n\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    resData.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id) });\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}`\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      resData.value = res.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(res.data.id) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(dbId) });\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(selectItemsNewVal.id) });\r\n\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (selectItems.value?.testType !== '01' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              (!isLoading.value)\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 1,\n                    class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                    onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_4, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                    ]),\n                    _hoisted_5\n                  ], 2))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _hoisted_6\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_8),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_9)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (selectItems?.testType !== '01' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li v-if=\"!isLoading\" :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  defineEmits,\r\n  defineProps,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext']);\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    resData.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id) });\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}`\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      resData.value = res.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(res.data.id) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(dbId) });\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { selectedSampleId: String(selectItemsNewVal.id) });\r\n\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"titleCbc\" }, \"CBC + DIFF\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_4 = { class: \"cbcTable\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_6 = { class: \"cbcTable\" }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_9 = { class: \"cbcTable\" }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  const hospitalName = hospitalSiteCd.find(hospital => hospital.siteCd === siteCd.value)?.hospitalNm\r\n  switch (hospitalName) {\r\n    case '서울성모병원':\r\n      const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n      axios.get(realUrl, {\r\n        params: {\r\n          submit_id: 'TRLII00124',\r\n          business_id: 'li',\r\n          instcd: '012',\r\n          bcno: newVal.barcodeNo\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        cbcWorkList.value = json.root.spcworklist.worklist;\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n      break;\r\n\r\n    case '고대안암병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '인천길병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '0000':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '삼광의료재단':\r\n      /** Todo 작업 필요 */\r\n      break;\r\n\r\n    case '인하대병원':\r\n      if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n        const params = {\r\n          url: cbcFilePathSetArr.value,\r\n          machine: 'ADUIMD',\r\n          episode: props.selectItems.barcodeNo\r\n        }\r\n        console.log(params.url, params.machine, params.episode);\r\n        await axios.post(params.url + '/api/MifMain/Order', {\r\n          machine: params.machine,\r\n          episode: params.episode\r\n        }).then(function (result) {\r\n          cbcWorkList.value = [];\r\n          const res = result.data[0];\r\n          if (res?.returnCode === '0') {\r\n            cbcPatientNo.value = res?.regNo;\r\n            cbcPatientNm.value = res.name;\r\n            cbcSex.value = res.sex;\r\n            cbcAge.value = res.age;\r\n            inhaTestCode.value = res.testCode;\r\n            store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n            const testCodeList = res.testCode.split(',');\r\n            testCodeList.forEach(function (codes: any) {\r\n              const codeArray = codes.split('|');\r\n              const code = codeArray[0];\r\n              const value = codeArray[1];\r\n              const unit = codeArray[2];\r\n              cbcCodeList.value.forEach(function (cbcCode: any) {\r\n                if (cbcCode.cd === code) {\r\n                  const obj = {\r\n                    classNm: cbcCode.classCd,\r\n                    count: value,\r\n                    unit: unit\r\n                  }\r\n                  cbcWorkList.value.push(obj);\r\n                }\r\n              })\r\n\r\n            })\r\n\r\n          }\r\n        }).catch(function (err) {\r\n          console.log(err.message + ' : no CBC result');\r\n        })\r\n      }\r\n\r\n      break;\r\n\r\n    // CBC 공통\r\n    default:\r\n      if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n        const params = {\r\n          url: cbcFilePathSetArr.value,\r\n          barcodeNo: props.selectItems.barcodeNo,\r\n          userId: userModuleDataGet.value.userId,\r\n          deviceBarcode: deviceSerialNm.value\r\n        }\r\n        const url = params.url + '?' +\r\n            'barcodeNo=' + params.barcodeNo + '&' +\r\n            'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n            'userid=' + params.userId\r\n\r\n        await axios.get(url).then(async function  (result) {\r\n          const msg: any = await readH7File(result.data);\r\n          cbcWorkList.value = [];\r\n          msg.data?.segments.forEach(function (cbcSegment: any) {\r\n            if (cbcSegment.name.trim() === 'OBX') {\r\n              cbcCodeList.value.forEach(function (cbcCode: any) {\r\n                if (cbcCode.CBC_CD === cbcSegment.fields[3].value[0][0].value[0]) {\r\n                  var obj = {\r\n                    classNm: cbcCode.cd,\r\n                    count: cbcSegment.fields[5].value[0][0].value[0],\r\n                    unit: cbcSegment.fields[6].value[0][0].value[0]\r\n                  }\r\n                  cbcWorkList.value.push(obj)\r\n                }\r\n              })\r\n\r\n            } else if (cbcSegment.name.trim() === 'PID') {\r\n              cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n              cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n              cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n              cbcAge.value = cbcSegment.fields[7].value[0][0].value[0]\r\n            }\r\n          })\r\n        }).catch(function (err) {\r\n          console.log(err.message)\r\n        })\r\n      }\r\n      else { // 파일\r\n        const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n        // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n        if (readFileTxtRes.data.success) {\r\n          const msg: any = await readH7File(readFileTxtRes.data.data);\r\n\r\n          cbcWorkList.value = [];\r\n          msg?.data?.segments.forEach((cbcSegment: any) => {\r\n            if (cbcSegment.name.trim() === 'OBX') {\r\n              cbcCodeList.value.forEach((cbcCode: any) => {\r\n                //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n                if (cbcCode.cd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n                  const obj = {\r\n                    classNm: cbcCode.cd,\r\n                    count: cbcSegment.fields[5].value[0][0].value[0],\r\n                    unit: cbcSegment.fields[6].value[0][0].value[0]\r\n                  }\r\n                  cbcWorkList.value.push(obj);\r\n                }\r\n              })\r\n            }\r\n\r\n          })\r\n\r\n          console.log('cbcWorkList', cbcWorkList.value);\r\n        }else{\r\n          console.error(readFileTxtRes.data.message);\r\n        }\r\n      }\r\n\r\n      break;\r\n  }\r\n\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  let readFileTxtRes: any;\r\n  if(siteCd.value === '0000'){\r\n    readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n  }else{\r\n    readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n  }\r\n  if (readFileTxtRes.data.success) {\r\n    const cbcData = readFileTxtRes.data.data.toString();\r\n    const cbcDataArray = cbcData.split('\\n');\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title)) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (siteCd.value ==='0002')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem?.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (siteCd.value ==='0007')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"table\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, [\n                  _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                  (cbcItem.cham !=='')\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                    : _createCommentVNode(\"\", true),\n                  _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"table\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <h1 class=\"titleCbc\">CBC + DIFF</h1>\r\n    <div v-if=\"siteCd ==='0002'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem?.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"siteCd ==='0007'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  const hospitalName = hospitalSiteCd.find(hospital => hospital.siteCd === siteCd.value)?.hospitalNm\r\n  switch (hospitalName) {\r\n    case '서울성모병원':\r\n      const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n      axios.get(realUrl, {\r\n        params: {\r\n          submit_id: 'TRLII00124',\r\n          business_id: 'li',\r\n          instcd: '012',\r\n          bcno: newVal.barcodeNo\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        cbcWorkList.value = json.root.spcworklist.worklist;\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n      break;\r\n\r\n    case '고대안암병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '인천길병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '0000':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '삼광의료재단':\r\n      /** Todo 작업 필요 */\r\n      break;\r\n\r\n    case '인하대병원':\r\n      if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n        const params = {\r\n          url: cbcFilePathSetArr.value,\r\n          machine: 'ADUIMD',\r\n          episode: props.selectItems.barcodeNo\r\n        }\r\n        console.log(params.url, params.machine, params.episode);\r\n        await axios.post(params.url + '/api/MifMain/Order', {\r\n          machine: params.machine,\r\n          episode: params.episode\r\n        }).then(function (result) {\r\n          cbcWorkList.value = [];\r\n          const res = result.data[0];\r\n          if (res?.returnCode === '0') {\r\n            cbcPatientNo.value = res?.regNo;\r\n            cbcPatientNm.value = res.name;\r\n            cbcSex.value = res.sex;\r\n            cbcAge.value = res.age;\r\n            inhaTestCode.value = res.testCode;\r\n            store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n            const testCodeList = res.testCode.split(',');\r\n            testCodeList.forEach(function (codes: any) {\r\n              const codeArray = codes.split('|');\r\n              const code = codeArray[0];\r\n              const value = codeArray[1];\r\n              const unit = codeArray[2];\r\n              cbcCodeList.value.forEach(function (cbcCode: any) {\r\n                if (cbcCode.cd === code) {\r\n                  const obj = {\r\n                    classNm: cbcCode.classCd,\r\n                    count: value,\r\n                    unit: unit\r\n                  }\r\n                  cbcWorkList.value.push(obj);\r\n                }\r\n              })\r\n\r\n            })\r\n\r\n          }\r\n        }).catch(function (err) {\r\n          console.log(err.message + ' : no CBC result');\r\n        })\r\n      }\r\n\r\n      break;\r\n\r\n    // CBC 공통\r\n    default:\r\n      if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n        const params = {\r\n          url: cbcFilePathSetArr.value,\r\n          barcodeNo: props.selectItems.barcodeNo,\r\n          userId: userModuleDataGet.value.userId,\r\n          deviceBarcode: deviceSerialNm.value\r\n        }\r\n        const url = params.url + '?' +\r\n            'barcodeNo=' + params.barcodeNo + '&' +\r\n            'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n            'userid=' + params.userId\r\n\r\n        await axios.get(url).then(async function  (result) {\r\n          const msg: any = await readH7File(result.data);\r\n          cbcWorkList.value = [];\r\n          msg.data?.segments.forEach(function (cbcSegment: any) {\r\n            if (cbcSegment.name.trim() === 'OBX') {\r\n              cbcCodeList.value.forEach(function (cbcCode: any) {\r\n                if (cbcCode.CBC_CD === cbcSegment.fields[3].value[0][0].value[0]) {\r\n                  var obj = {\r\n                    classNm: cbcCode.cd,\r\n                    count: cbcSegment.fields[5].value[0][0].value[0],\r\n                    unit: cbcSegment.fields[6].value[0][0].value[0]\r\n                  }\r\n                  cbcWorkList.value.push(obj)\r\n                }\r\n              })\r\n\r\n            } else if (cbcSegment.name.trim() === 'PID') {\r\n              cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n              cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n              cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n              cbcAge.value = cbcSegment.fields[7].value[0][0].value[0]\r\n            }\r\n          })\r\n        }).catch(function (err) {\r\n          console.log(err.message)\r\n        })\r\n      }\r\n      else { // 파일\r\n        const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n        // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n        if (readFileTxtRes.data.success) {\r\n          const msg: any = await readH7File(readFileTxtRes.data.data);\r\n\r\n          cbcWorkList.value = [];\r\n          msg?.data?.segments.forEach((cbcSegment: any) => {\r\n            if (cbcSegment.name.trim() === 'OBX') {\r\n              cbcCodeList.value.forEach((cbcCode: any) => {\r\n                //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n                if (cbcCode.cd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n                  const obj = {\r\n                    classNm: cbcCode.cd,\r\n                    count: cbcSegment.fields[5].value[0][0].value[0],\r\n                    unit: cbcSegment.fields[6].value[0][0].value[0]\r\n                  }\r\n                  cbcWorkList.value.push(obj);\r\n                }\r\n              })\r\n            }\r\n\r\n          })\r\n\r\n          console.log('cbcWorkList', cbcWorkList.value);\r\n        }else{\r\n          console.error(readFileTxtRes.data.message);\r\n        }\r\n      }\r\n\r\n      break;\r\n  }\r\n\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  let readFileTxtRes: any;\r\n  if(siteCd.value === '0000'){\r\n    readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n  }else{\r\n    readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n  }\r\n  if (readFileTxtRes.data.success) {\r\n    const cbcData = readFileTxtRes.data.data.toString();\r\n    const cbcDataArray = cbcData.split('\\n');\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title)) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"wbcContent\"\n}\nconst _hoisted_2 = { class: \"topClintInfo\" }\n\nimport {computed, onMounted, onBeforeMount, ref, watch} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from '@/common/api/service/runningInfo/runningInfoApi';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst allUnCheck = ref(false);\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  selectItems.value = result.data;\r\n  rbcInfo.value = result.data;\r\n  let newData: any = [];\r\n  newData = data;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    (isLoading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"ul\", null, [\n              _createElementVNode(\"li\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)) + \" Smear\", 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n            ])\n          ]),\n          (cbcLayer.value)\n            ? (_openBlock(), _createBlock(LisCbc, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcRight shadowBox' + (cbcLayer.value ? ' cbcLayer' : '') )\n          }, [\n            _createVNode(RbcClass, {\n              allUnCheck: allUnCheck.value,\n              onIsBeforeUpdate: isBeforeUpdate,\n              onClassInfoArrUpdate: classInfoArrUpdate,\n              onClassInfoArrUpdateRe: classInfoArrUpdateRe,\n              selectItems: selectItems.value,\n              type: \"listTable\",\n              allCheckClear: allCheckClear.value,\n              rbcInfo: rbcInfo.value\n            }, null, 8, [\"allUnCheck\", \"selectItems\", \"allCheckClear\", \"rbcInfo\"])\n          ], 2),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n          }, [\n            _createVNode(RbcImageList, {\n              onUnChecked: unChecked,\n              isBefore: isBefore.value,\n              classInfoArr: classInfoArr.value,\n              selectItems: selectItems.value,\n              type: \"listTable\",\n              rbcInfo: rbcInfo.value\n            }, null, 8, [\"isBefore\", \"classInfoArr\", \"selectItems\", \"rbcInfo\"])\n          ], 2)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\" v-if=\"isLoading\">\r\n\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>{{ getTestTypeText(selectItems?.testType) }} Smear</li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox' + (cbcLayer ? ' cbcLayer' : '') \">\r\n      <RbcClass :allUnCheck=\"allUnCheck\" @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\" @classInfoArrUpdateRe=\"classInfoArrUpdateRe\" :selectItems=\"selectItems\" type='listTable' :allCheckClear=\"allCheckClear\" :rbcInfo=\"rbcInfo\" />\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList  @unChecked=\"unChecked\" :isBefore=\"isBefore\"  :classInfoArr=\"classInfoArr\" :selectItems=\"selectItems\" type='listTable' :rbcInfo=\"rbcInfo\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, onBeforeMount, ref, watch} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from '@/common/api/service/runningInfo/runningInfoApi';\r\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst allUnCheck = ref(false);\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  selectItems.value = result.data;\r\n  rbcInfo.value = result.data;\r\n  let newData: any = [];\r\n  newData = data;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const business_id = 'li'\r\n// 병원 코드\r\nexport const instcd = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const eqmtcd = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\nexport const spcParams = {\r\n    submit_id: 'TRLII00124',\r\n    business_id: 'li',\r\n    instcd: '012', // 병원 코드\r\n    bcno: 'H59'\r\n}\r\n\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"mt1 mb2 flexSpaceBetween\" }\nconst _hoisted_3 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_4 = { class: \"leftWbcInfo\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"wbcClassScroll\" }\nconst _hoisted_8 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"nth1Child classAttribute\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Class\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Before\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"(Count | Percent)\")\n], -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"After\"),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"(Count | Percent)\")\n], -1)\nconst _hoisted_13 = [\n  _hoisted_10,\n  _hoisted_11,\n  _hoisted_12\n]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_16 = { class: \"grayText\" }\nconst _hoisted_17 = { class: \"grayText\" }\nconst _hoisted_18 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_19 = { class: \"categories classTotal\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_21 = { style: {\"display\":\"flex\",\"justify-content\":\"center\",\"gap\":\"22px\"} }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"p\", null, \"100%\", -1)\nconst _hoisted_23 = { class: \"degree\" }\nconst _hoisted_24 = { style: {\"display\":\"flex\",\"justify-content\":\"center\",\"gap\":\"22px\"} }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"p\", null, \"100%\", -1)\nconst _hoisted_26 = { key: 0 }\nconst _hoisted_27 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_28 = [\"onClick\"]\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"li\", null, \" -\", -1)\nconst _hoisted_30 = { key: 1 }\nconst _hoisted_31 = [\"onClick\"]\nconst _hoisted_32 = { class: \"categoryNm\" }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_34 = { class: \"liNormalWidth\" }\nconst _hoisted_35 = { style: {\"width\":\"21%\"} }\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_37 = { key: 0 }\nconst _hoisted_38 = {\n  class: \"degree\",\n  style: {\"width\":\"22%\"}\n}\nconst _hoisted_39 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_40 = { key: 0 }\n\nimport {computed, nextTick, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\nconst nonRbcClassListVal = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst nonRbcClassBeforeList = ref<any>([]);\r\nconst nonRbcClassAfterList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems?.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  }\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  beforeAfterChange(newItem);\r\n}, {deep: true});\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems?.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems?.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.LIS_CD !== '') {\r\n        props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') { // 인하대\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.LIS_CD === 'H9600' || lisCode.LIS_CD === 'H9365' ||\r\n            lisCode.LIS_CD === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.LIS_CD + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      props.selectItems?.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.IA_CATEGORY_CD === rbcItem.IA_CATEGORY_CD) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.IA_CLASS_CD === rbcItemElement.IA_CLASS_CD) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.LIS_CD) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.LIS_CD}|${degree}|,`;\r\n              resultStr += `${lisCode.LIS_CD}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems?.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems?.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems?.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems?.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo = {...result.data, ...updatedItem}\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        let newWbcDataArr = [];\r\n        for (const wbcDataItem of wbcData) {\r\n          newWbcDataArr.push({\r\n            CD_NM: wbcDataItem.fullNm,\r\n            IA_CD: wbcDataItem?.id,\r\n            LIS_CD: wbcDataItem?.key,\r\n            MIN_COUNT: 0,\r\n          })\r\n        }\r\n        lisCodeWbcArr.value = newWbcDataArr;\r\n      }\r\n      if (rbcData) {\r\n        let newRbcDataArr = [];\r\n        for (const rbcDataItem of rbcData) {\r\n          newRbcDataArr.push({\r\n            CATEGORY_NM: rbcDataItem.categoryNm,\r\n            CLASS_NM: rbcDataItem?.fullNm,\r\n            IA_CATEGORY_CD: rbcDataItem?.categoryId,\r\n            IA_CLASS_CD: rbcDataItem?.id,\r\n            LIS_CD: rbcDataItem?.key,\r\n          })\r\n        }\r\n        lisCodeRbcArr.value = newRbcDataArr;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  // wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems?.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectedSampleId.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(filteredItems?.data?.id)});\r\n  selectItems.value = filteredItems.data;\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n  const wbcBeforeInfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n  const wbcAfterInfo = selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcBeforeInfo = sortWbcInfo(wbcBeforeInfo, wbcBeforeArr);\r\n  const sortedWbcAfterInfo = sortWbcInfo(wbcAfterInfo, wbcAfterArr);\r\n  wbcInfoAfterVal.value = sortedWbcAfterInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  wbcInfoBeforeVal.value = sortedWbcBeforeInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassAfterList.value = sortedWbcAfterInfo.filter((item: any) => titleArr.includes(item.title));\r\n  nonRbcClassBeforeList.value = sortedWbcBeforeInfo.filter((item: any) => titleArr.includes(item.title));\r\n\r\n  totalCountSet('before', wbcInfoBeforeVal.value);\r\n  totalCountSet('after', wbcInfoAfterVal.value);\r\n\r\n  wbcInfoBeforeVal.value.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalBeforeCount.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalBeforeCount.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n  })\r\n\r\n  wbcInfoAfterVal.value.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalAfterCount.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalAfterCount.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  nonRbcClassListVal.value = [];\r\n  wbcInfoVal.value = [];\r\n\r\n  nonRbcClassBeforeList.value.forEach((beforeItem: any) => {\r\n    const afterItem = nonRbcClassAfterList.value.find((afterItem: any) => afterItem.id === beforeItem.id);\r\n    if (afterItem && !nonRbcClassListVal.value.find((item: any) => item.id === beforeItem.id)) {\r\n      nonRbcClassListVal.value.push({\r\n        id: beforeItem.id,\r\n        name: beforeItem.name,\r\n        title: beforeItem.title,\r\n        count: { before: beforeItem.count, after: afterItem.count },\r\n        images: { before: beforeItem.images, after: afterItem.images },\r\n        percent: { before: beforeItem.percent, after: afterItem.percent }\r\n      });\r\n    }\r\n  });\r\n\r\n  wbcInfoBeforeVal.value.forEach((beforeItem: any) => {\r\n    const afterItem = wbcInfoAfterVal.value.find((afterItem: any) => afterItem.id === beforeItem.id);\r\n    if (afterItem && !wbcInfoVal.value.find((item: any) => item.id === beforeItem.id)) {\r\n      wbcInfoVal.value.push({\r\n        id: beforeItem.id,\r\n        name: beforeItem.name,\r\n        title: beforeItem.title,\r\n        count: { before: beforeItem.count, after: afterItem.count },\r\n        images: { before: beforeItem.images, after: afterItem.images },\r\n        percent: { before: beforeItem.percent, after: afterItem.percent }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  if (props.selectItems?.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value, ...nonRbcClassList.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value, ...nonRbcClassList.value]});\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoAfterVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectedSampleId.value));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report')\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          class: \"mt1\",\n          src: barcodeImg.value\n        }, null, 8, _hoisted_1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h3\", _hoisted_3, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_4, [\n        _createElementVNode(\"li\", _hoisted_5, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'comment-dots'],\n            onClick: memoOpen\n          }),\n          (memoModal.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _withDirectives(_createElementVNode(\"textarea\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((wbcMemo).value = $event))\n                }, null, 512), [\n                  [_vModelText, wbcMemo.value]\n                ]),\n                _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass({\r\n    'submitted': selectItems.value?.submitState === 'Submit',\r\n  })\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n        ], 2),\n        _createElementVNode(\"li\", { onClick: lisModalOpen }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n        ]),\n        _createElementVNode(\"li\", null, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (idx === 0)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_9, _hoisted_13))\n            : _createCommentVNode(\"\", true),\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 1,\n                class: \"nth1Child\",\n                onClick: ($event: any) => (goClass(item.id))\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", _hoisted_15, [\n                  _createElementVNode(\"span\", _hoisted_16, _toDisplayString(item.count.before), 1),\n                  _createElementVNode(\"span\", _hoisted_17, _toDisplayString(item.percent.before + '%' || '-'), 1)\n                ]),\n                _createElementVNode(\"li\", _hoisted_18, [\n                  _createElementVNode(\"span\", null, _toDisplayString(item?.count.after), 1),\n                  _createElementVNode(\"span\", null, _toDisplayString(item?.percent.after + '%' || '-'), 1)\n                ])\n              ], 8, _hoisted_14))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_8))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_19, [\n        _hoisted_20,\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", _hoisted_21, [\n            _createElementVNode(\"p\", null, _toDisplayString(totalBeforeCount.value || 0), 1),\n            _hoisted_22\n          ])\n        ]),\n        _createElementVNode(\"ul\", _hoisted_23, [\n          _createElementVNode(\"li\", _hoisted_24, [\n            _createElementVNode(\"p\", null, _toDisplayString(totalAfterCount.value || 0), 1),\n            _hoisted_25\n          ])\n        ])\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb2\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.count.after), 1),\n                      _hoisted_29\n                    ], 8, _hoisted_28))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_27))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonRbcClassListVal.value, (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\",\n                onClick: ($event: any) => (goClass(nWbcItem.id))\n              }, [\n                _createElementVNode(\"ul\", _hoisted_32, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_33, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", _hoisted_34, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_35, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_36))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, [\n                    _createTextVNode(_toDisplayString(nWbcItem?.count.before) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_37, \" / \" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", _hoisted_38, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, [\n                    _createTextVNode(_toDisplayString(nWbcItem?.count.after) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \" / \" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ], 8, _hoisted_31)), [\n                [_vShow, selectItems.value?.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img class=\"mt1\" v-if=\"type !== 'report'\"\r\n       :src=\"barcodeImg\"/>\r\n  <div class=\"mt1 mb2 flexSpaceBetween\">\r\n    <h3 class=\"wbcClassInfoLeft\">\r\n      {{ wbcClassTileChange() }}\r\n    </h3>\r\n    <ul class=\"leftWbcInfo\">\r\n      <li style=\"position: relative\">\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button @click=\"memoChange\">ok</button>\r\n          <button @click=\"memoCancel\">cancel</button>\r\n        </div>\r\n      </li>\r\n      <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems?.submitState === 'Submit',\r\n  }\">\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n      </li>\r\n      <li @click=\"lisModalOpen\">\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n      </li>\r\n      <li>\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\"/>\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul class=\"nth1Child classAttribute\" v-if=\"idx === 0\">\r\n        <li>Class</li>\r\n        <li>\r\n          <p>Before</p>\r\n          <p>(Count | Percent)</p>\r\n        </li>\r\n        <li>\r\n          <p>After</p>\r\n          <p>(Count | Percent)</p>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nth1Child\" v-if=\"shouldRenderCategory(item.title)\" @click=\"goClass(item.id)\">\r\n        <li>{{ item?.name }}</li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span class=\"grayText\">{{ item.count.before }}</span>\r\n          <span class=\"grayText\">{{ item.percent.before + '%' || '-' }}</span>\r\n        </li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span>{{ item?.count.after }}</span>\r\n          <span>{{ item?.percent.after + '%' || '-' }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"categories classTotal\">\r\n      <ul class=\"categoryNm\">\r\n        <li>\r\n          Total\r\n        </li>\r\n      </ul>\r\n      <ul>\r\n        <li style=\"display: flex; justify-content: center; gap: 22px;\">\r\n          <p>{{ totalBeforeCount || 0 }}</p>\r\n          <p>100%</p>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"degree\">\r\n        <li style=\"display: flex; justify-content: center; gap: 22px;\">\r\n          <p>{{ totalAfterCount || 0 }}</p>\r\n          <p>100%</p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb2\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li>{{ item?.count.after }}</li>\r\n          <li> -</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in nonRbcClassListVal\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems?.siteCd !== '0006' && nWbcItem?.title !== 'SM'\"\r\n             @click=\"goClass(nWbcItem.id)\">\r\n          <ul class=\"categoryNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n            <li class=\"liNormalWidth\">{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul style=\"width: 21%\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li>\r\n              {{ nWbcItem?.count.before }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ selectItems?.wbcInfo?.maxWbcCount }} WBC</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\" style=\"width: 22%\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>\r\n                {{ nWbcItem?.count.after }}\r\n                <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ selectItems?.wbcInfo?.maxWbcCount }} WBC</span></li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\nconst nonRbcClassListVal = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst nonRbcClassBeforeList = ref<any>([]);\r\nconst nonRbcClassAfterList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems?.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  }\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  beforeAfterChange(newItem);\r\n}, {deep: true});\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems?.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems?.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.LIS_CD !== '') {\r\n        props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') { // 인하대\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.LIS_CD === 'H9600' || lisCode.LIS_CD === 'H9365' ||\r\n            lisCode.LIS_CD === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.LIS_CD + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.LIS_CD + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.LIS_CD + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      props.selectItems?.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.IA_CATEGORY_CD === rbcItem.IA_CATEGORY_CD) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.IA_CLASS_CD === rbcItemElement.IA_CLASS_CD) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.LIS_CD) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.LIS_CD}|${degree}|,`;\r\n              resultStr += `${lisCode.LIS_CD}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems?.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems?.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems?.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems?.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      props.selectItems?.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.LIS_CD + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo = {...result.data, ...updatedItem}\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        let newWbcDataArr = [];\r\n        for (const wbcDataItem of wbcData) {\r\n          newWbcDataArr.push({\r\n            CD_NM: wbcDataItem.fullNm,\r\n            IA_CD: wbcDataItem?.id,\r\n            LIS_CD: wbcDataItem?.key,\r\n            MIN_COUNT: 0,\r\n          })\r\n        }\r\n        lisCodeWbcArr.value = newWbcDataArr;\r\n      }\r\n      if (rbcData) {\r\n        let newRbcDataArr = [];\r\n        for (const rbcDataItem of rbcData) {\r\n          newRbcDataArr.push({\r\n            CATEGORY_NM: rbcDataItem.categoryNm,\r\n            CLASS_NM: rbcDataItem?.fullNm,\r\n            IA_CATEGORY_CD: rbcDataItem?.categoryId,\r\n            IA_CLASS_CD: rbcDataItem?.id,\r\n            LIS_CD: rbcDataItem?.key,\r\n          })\r\n        }\r\n        lisCodeRbcArr.value = newRbcDataArr;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  // wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems?.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectedSampleId.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(filteredItems?.data?.id)});\r\n  selectItems.value = filteredItems.data;\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n  const wbcBeforeInfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n  const wbcAfterInfo = selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcBeforeInfo = sortWbcInfo(wbcBeforeInfo, wbcBeforeArr);\r\n  const sortedWbcAfterInfo = sortWbcInfo(wbcAfterInfo, wbcAfterArr);\r\n  wbcInfoAfterVal.value = sortedWbcAfterInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  wbcInfoBeforeVal.value = sortedWbcBeforeInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassAfterList.value = sortedWbcAfterInfo.filter((item: any) => titleArr.includes(item.title));\r\n  nonRbcClassBeforeList.value = sortedWbcBeforeInfo.filter((item: any) => titleArr.includes(item.title));\r\n\r\n  totalCountSet('before', wbcInfoBeforeVal.value);\r\n  totalCountSet('after', wbcInfoAfterVal.value);\r\n\r\n  wbcInfoBeforeVal.value.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalBeforeCount.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalBeforeCount.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n  })\r\n\r\n  wbcInfoAfterVal.value.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalAfterCount.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalAfterCount.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n  })\r\n\r\n\r\n  nonRbcClassListVal.value = [];\r\n  wbcInfoVal.value = [];\r\n\r\n  nonRbcClassBeforeList.value.forEach((beforeItem: any) => {\r\n    const afterItem = nonRbcClassAfterList.value.find((afterItem: any) => afterItem.id === beforeItem.id);\r\n    if (afterItem && !nonRbcClassListVal.value.find((item: any) => item.id === beforeItem.id)) {\r\n      nonRbcClassListVal.value.push({\r\n        id: beforeItem.id,\r\n        name: beforeItem.name,\r\n        title: beforeItem.title,\r\n        count: { before: beforeItem.count, after: afterItem.count },\r\n        images: { before: beforeItem.images, after: afterItem.images },\r\n        percent: { before: beforeItem.percent, after: afterItem.percent }\r\n      });\r\n    }\r\n  });\r\n\r\n  wbcInfoBeforeVal.value.forEach((beforeItem: any) => {\r\n    const afterItem = wbcInfoAfterVal.value.find((afterItem: any) => afterItem.id === beforeItem.id);\r\n    if (afterItem && !wbcInfoVal.value.find((item: any) => item.id === beforeItem.id)) {\r\n      wbcInfoVal.value.push({\r\n        id: beforeItem.id,\r\n        name: beforeItem.name,\r\n        title: beforeItem.title,\r\n        count: { before: beforeItem.count, after: afterItem.count },\r\n        images: { before: beforeItem.images, after: afterItem.images },\r\n        percent: { before: beforeItem.percent, after: afterItem.percent }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n  if (props.selectItems?.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value, ...nonRbcClassList.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value, ...nonRbcClassList.value]});\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoAfterVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectedSampleId.value));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"reportDiv\" }\nconst _hoisted_2 = { class: \"wbcDiv shadowBox\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"rbcDiv shadowBox\"\n}\nconst _hoisted_4 = { class: \"reportDetail shadowBox\" }\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"[Hospital]\", -1)\nconst _hoisted_7 = { class: \"reportDivTop\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_10 = { class: \"reportTable\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Slot ID\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered date\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed by ID\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed date\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient ID\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered Classification\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Birth\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gender\", -1)\nconst _hoisted_20 = { class: \"reportDivBottom\" }\nconst _hoisted_21 = { class: \"reportH3 mb1 pl0\" }\nconst _hoisted_22 = { class: \"tableClass\" }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"%\")\n  ])\n], -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Total\", -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"td\", null, \"100.00\", -1)\nconst _hoisted_27 = {\n  key: 0,\n  class: \"reportH3 mb1 pl0\"\n}\nconst _hoisted_28 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_30 = { key: 0 }\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"td\", null, \"-\", -1)\nconst _hoisted_32 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"reportH3 mb1 pl0\" }, \"RBC classification result\", -1)\nconst _hoisted_34 = { class: \"printRbcCategory\" }\nconst _hoisted_35 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_36 = { class: \"printRbcClass\" }\nconst _hoisted_37 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_38 = { class: \"printRbcDegree\" }\nconst _hoisted_39 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_40 = { class: \"printTotalText\" }\nconst _hoisted_41 = { class: \"printRbcCount\" }\nconst _hoisted_42 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_43 = { class: \"printRbcPercent\" }\nconst _hoisted_44 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport { computed, getCurrentInstance, onMounted, ref } from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId)\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.commonModule.rbcInfoAfterData);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n  await rbcTotalAndReCount();\r\n  await getRbcDegreeData();\r\n  await reDegree();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    rbcInfo.value = result.data;\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await initData();\r\n  await rbcTotalAndReCount();\r\n}\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value?.rbcInfoAfter && selectItems.value?.rbcInfoAfter.length !== 0 ? selectItems.value?.rbcInfoAfter : selectItems.value?.rbcInfo.rbcClass;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n    }, [\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(WbcClass, {\n                key: 0,\n                wbcInfo: wbcInfo.value,\n                selectItems: selectItems.value,\n                type: \"report\",\n                onClassOrderChanged: classOrderChanged,\n                onSubmitStateChanged: submitStateChanged,\n                isCommitChanged: isCommitChanged.value\n              }, null, 8, [\"wbcInfo\", \"selectItems\", \"isCommitChanged\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              (!isLoading.value)\n                ? (_openBlock(), _createBlock(RbcClass, {\n                    key: 0,\n                    rbcInfo: rbcInfo.value,\n                    selectItems: selectItems.value,\n                    type: \"report\",\n                    onSubmitStateChanged: submitStateChanged,\n                    isCommitChanged: isCommitChanged.value\n                  }, null, 8, [\"rbcInfo\", \"selectItems\", \"isCommitChanged\"]))\n                : _createCommentVNode(\"\", true)\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _hoisted_6,\n            _createTextVNode(),\n            _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'print'],\n              onClick: printStart,\n              class: \"printStart\"\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD PB system\"))\n              : _createCommentVNode(\"\", true),\n            (projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_9, \"Analysis Report from UIMD BM system\"))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"table\", _hoisted_10, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_11,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_12,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_13,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_14,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_16,\n                  _createElementVNode(\"td\", null, _toDisplayString(projectBm.value ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_17,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_18,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_19,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass(['wbcLeft', projectBm.value && 'wbcLeftBm'])\n            }, [\n              _createElementVNode(\"h3\", _hoisted_21, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n              _createElementVNode(\"table\", _hoisted_22, [\n                _hoisted_23,\n                _hoisted_24,\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcArr.value, (item) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: item.id,\n                      class: \"wbcClassDbDiv\"\n                    }, [\n                      (shouldRenderCategory(item.title))\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.percent || '-'), 1)\n                          ], 64))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", null, [\n                    _hoisted_25,\n                    _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                    _hoisted_26\n                  ])\n                ])\n              ]),\n              (!selectItems.value?.wbcInfo?.nonRbcClassList && !projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_27, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              (!projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"table\", _hoisted_28, [\n                    _hoisted_29,\n                    _createElementVNode(\"tbody\", null, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                          _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                          _createElementVNode(\"td\", null, [\n                            _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                            (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _hoisted_31\n                        ], 512)), [\n                          [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                        ])\n                      }), 128))\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                  _hoisted_33,\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoAfterData.value], (classList, outerIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: innerIndex,\n                          class: \"categories\"\n                        }, [\n                          _createElementVNode(\"ul\", _hoisted_34, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_35, \"Category\"))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"li\", null, _toDisplayString(category?.categoryNm), 1)\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_36, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_37, \"Class\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                            }), 128))\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_38, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39, \"Degree\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.degree), 1))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", _hoisted_40, \"Total\", 512), [\n                              [_vShow, category.categoryNm !== 'Shape']\n                            ])\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_41, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_42, \"Count\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.originalDegree), 1))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", null, _toDisplayString(sizeChromiaTotal.value), 513), [\n                              [_vShow, category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia']\n                            ]),\n                            _withDirectives(_createElementVNode(\"li\", null, _toDisplayString(shapeBodyTotal.value), 513), [\n                              [_vShow, category?.categoryNm === 'Inclusion Body']\n                            ])\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_43, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_44, \"Percent\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(percentageChange(classInfo?.originalDegree)), 1))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", null, \"100%\", 512), [\n                              [_vShow, category.categoryNm !== 'Shape']\n                            ])\n                          ])\n                        ]))\n                      }), 128))\n                    ], 64))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ])\n    ], 2),\n    (printOnOff.value)\n      ? (_openBlock(), _createBlock(Print, {\n          key: 0,\n          ref_key: \"printContent\",\n          ref: printContent,\n          printOnOff: printOnOff.value,\n          selectItemWbc: selectItems.value.wbcInfo.wbcInfo[0],\n          onPrintClose: printClose\n        }, null, 8, [\"printOnOff\", \"selectItemWbc\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" />\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\">\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\" />\r\n    <div class=\"reportDiv\">\r\n      <div class=\"wbcDiv shadowBox\">\r\n        <WbcClass v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report' @classOrderChanged=\"classOrderChanged\" @submitStateChanged=\"submitStateChanged\" :isCommitChanged=\"isCommitChanged\" />\r\n      </div>\r\n      <div class=\"rbcDiv shadowBox\" v-if=\"!projectBm\">\r\n        <RbcClass v-if=\"!isLoading\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='report' @submitStateChanged=\"submitStateChanged\" :isCommitChanged=\"isCommitChanged\" />\r\n      </div>\r\n      <div class=\"reportDetail shadowBox\">\r\n        <div class=\"reportTitle\">\r\n          <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n          <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n        </div>\r\n        <div class=\"reportDivTop\">\r\n          <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n          <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n          <table class=\"reportTable\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Slot ID</th>\r\n              <td>{{ selectItems?.slotId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered date</th>\r\n              <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed by ID</th>\r\n              <td>{{ selectItems?.submitUserId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed date</th>\r\n              <td>{{ selectItems?.submitOfDate }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Patient ID</th>\r\n              <td>{{ selectItems?.patientId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered Classification</th>\r\n              <td>{{ projectBm ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{{ selectItems?.patientName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Birth</th>\r\n              <td>{{ selectItems?.birthDay }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Gender</th>\r\n              <td>{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"reportDivBottom\">\r\n          <div :class=\"['wbcLeft', projectBm && 'wbcLeftBm']\">\r\n            <h3 class=\"reportH3 mb1 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n            <table class=\"tableClass\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th>Class</th>\r\n                <th>Count</th>\r\n                <th>%</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item) in wbcArr\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                <template v-if=\"shouldRenderCategory(item.title)\">\r\n                  <td>{{ item?.name }}</td>\r\n                  <td>{{ item?.count }}</td>\r\n                  <td> {{ item?.percent || '-' }}</td>\r\n                </template>\r\n              </tr>\r\n              <tr>\r\n                <td>Total</td>\r\n                <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                <td>100.00</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList && !projectBm\" class=\"reportH3 mb1 pl0\">non-WBC</h3>\r\n            <table class=\"tableClass\" v-if=\"!projectBm\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <tbody>\r\n              <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n                <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                  <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                  <td>\r\n                    {{ nWbcItem?.count }}\r\n                    <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                        selectItems?.wbcInfo?.maxWbcCount\r\n                      }} WBC</span>\r\n                  </td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </template>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div class=\"rbcRight\" v-if=\"!projectBm\">\r\n            <h3 class=\"reportH3 mb1 pl0\">RBC classification result</h3>\r\n            <template v-for=\"(classList, outerIndex) in [rbcInfoAfterData]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <div class=\"categories\">\r\n                  <ul class=\"printRbcCategory\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n                    <li>{{ category?.categoryNm }}</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcClass\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>{{ classInfo?.classNm }}</li>\r\n                    </template>\r\n                  </ul>\r\n                  <ul class=\"printRbcDegree\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>\r\n                        {{ classInfo?.degree }}\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li class=\"printTotalText\" v-show=\"category.categoryNm !== 'Shape'\">Total</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcCount\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>\r\n                        {{ classInfo?.originalDegree }}\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li v-show=\"category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia'\">{{ sizeChromiaTotal }}</li>\r\n                    <li v-show=\"category?.categoryNm === 'Inclusion Body'\">{{ shapeBodyTotal }}</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcPercent\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Percent</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>\r\n                        {{ percentageChange(classInfo?.originalDegree) }}\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li v-show=\"category.categoryNm !== 'Shape'\">100%</li>\r\n                  </ul>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <Print v-if=\"printOnOff\" ref=\"printContent\" :printOnOff=\"printOnOff\" :selectItemWbc=\"selectItems.wbcInfo.wbcInfo[0]\" @printClose=\"printClose\" />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport { computed, getCurrentInstance, onMounted, ref } from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId)\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.commonModule.rbcInfoAfterData);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n  await rbcTotalAndReCount();\r\n  await getRbcDegreeData();\r\n  await reDegree();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    rbcInfo.value = result.data;\r\n\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await initData();\r\n  await rbcTotalAndReCount();\r\n}\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value?.rbcInfoAfter && selectItems.value?.rbcInfoAfter.length !== 0 ? selectItems.value?.rbcInfoAfter : selectItems.value?.rbcInfo.rbcClass;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vShow as _vShow, withModifiers as _withModifiers, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackground\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loader\" }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingText\" }, \"Loading...\", -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_6 = [\"onClick\", \"onDrop\"]\nconst _hoisted_7 = { class: \"circle\" }\nconst _hoisted_8 = {\n  key: 1,\n  class: \"cellImgBox\"\n}\nconst _hoisted_9 = { class: \"mt1\" }\nconst _hoisted_10 = [\"onInput\", \"checked\"]\nconst _hoisted_11 = [\"onDrop\"]\nconst _hoisted_12 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_13 = { style: {\"position\":\"relative\"} }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_15 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\", \"onLoad\"]\nconst _hoisted_16 = {\n  key: 2,\n  class: \"divCompare\"\n}\nconst _hoisted_17 = { class: \"divCompareChild\" }\nconst _hoisted_18 = [\"value\"]\nconst _hoisted_19 = { class: \"cellImgBox\" }\nconst _hoisted_20 = { class: \"mt1\" }\nconst _hoisted_21 = [\"checked\"]\nconst _hoisted_22 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_23 = { style: {\"position\":\"relative\"} }\nconst _hoisted_24 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_25 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_26 = { class: \"divCompareChild\" }\nconst _hoisted_27 = [\"value\"]\nconst _hoisted_28 = { class: \"cellImgBox\" }\nconst _hoisted_29 = { class: \"mt1\" }\nconst _hoisted_30 = [\"checked\"]\nconst _hoisted_31 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_32 = { style: {\"position\":\"relative\"} }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_34 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\n\nimport {computed, ref, watch, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ninterface WbcInfo {\r\n  // wbcInfo 타입 정의\r\n  [key: string]: any;\r\n}\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImageGallery',\n  props: {\n    wbcInfo: {},\n    updateWbcInfo: { type: Function },\n    classCompareShow: { type: Boolean },\n    selectedTitle: {},\n    hiddenImages: {},\n    setRef: { type: Function },\n    replaceFileNamePrefix: { type: Function },\n    getImageUrl: { type: Function },\n    onDragOver: { type: Function },\n    isBorderChanged: { type: Function },\n    isSelected: { type: Function },\n    totalCount: {}\n  },\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClass = ref('Neutrophil-Segmented');\r\nconst firstClassObj = ref<any>({});\r\nconst lastClass = ref('Neutrophil-Band');\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst previousFirstClass = ref('Neutrophil-Segmented');\r\nconst previousLastClass = ref('Neutrophil-Band');\r\nconst loading = ref(true);\r\nconst totalImages = ref(0);\r\nconst loadedImages = ref(0);\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n__expose({\r\n  scrollToElement,\r\n});\r\n\r\nconst props = __props;\r\nconst emits = __emit;\r\n\r\nconst {wbcInfo} = toRefs(props);\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  // console.log(newVal)\r\n  loading.value = false;\r\n});\r\n\r\nwatch(\r\n    wbcInfo,\r\n    (newVal) => {\r\n      classImgChange('first', null);\r\n      classImgChange('last', null);\r\n    },\r\n    {deep: true}\r\n);\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n  // console.log('Image loaded', itemIndex);\r\n  // console.log('props.wbcInfo.length', props.wbcInfo.length - 1);\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  }else{\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0'){\r\n    loading.value = false\r\n  }\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (loading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"ul\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(wbcInfo), (item) => {\n        return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n          key: item.id,\n          onClick: ($event: any) => (scrollToElement(item.id)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(($event: any) => (_ctx.$emit('onDragOverCircle')), [\"prevent\"])),\n          onDrop: ($event: any) => (_ctx.$emit('onDropCircle', item))\n        }, [\n          _createElementVNode(\"div\", _hoisted_7, [\n            _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n            _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n          ])\n        ], 40, _hoisted_6)), [\n          [_vShow, siteCd.value !== '0006' && item?.title !== 'SM']\n        ])\n      }), 128))\n    ]),\n    (!_ctx.classCompareShow)\n      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(wbcInfo), (item, itemIndex) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: item.id,\n              ref_for: true,\n              ref: setRef(item.id)\n            }, [\n              _withDirectives(_createElementVNode(\"div\", null, [\n                _createElementVNode(\"p\", _hoisted_9, [\n                  _createElementVNode(\"input\", {\n                    type: \"checkbox\",\n                    onInput: ($event: any) => (_ctx.$emit('allCheckChange', $event, item.title)),\n                    checked: _ctx.selectedTitle === item.title\n                  }, null, 40, _hoisted_10),\n                  _createTextVNode(\" \" + _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \") \", 1)\n                ])\n              ], 512), [\n                [_vShow, item?.count !== '0' && item?.count !== 0]\n              ]),\n              _withDirectives(_createElementVNode(\"ul\", {\n                class: _normalizeClass('wbcImgWrap ' + item?.title),\n                onDragover: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                onDrop: () => _ctx.$emit('onDrop', itemIndex)\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                  return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                    key: image?.fileName,\n                    class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                    onClick: () => _ctx.$emit('selectImage', itemIndex, imageIndex, item),\n                    onDblclick: () => _ctx.$emit('openModal', image, item),\n                    onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, item), [\"prevent\"])\n                  }, [\n                    _createElementVNode(\"div\", _hoisted_13, [\n                      image\n                        ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                            _createElementVNode(\"div\", {\n                              class: \"fileTitle\",\n                              style: _normalizeStyle({ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' })\n                            }, [\n                              _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                              _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                            ], 4)\n                          ], 512)), [\n                            [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== item?.title]\n                          ])\n                        : _createCommentVNode(\"\", true),\n                      (image && image.fileName)\n                        ? _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                            key: 1,\n                            src: _ctx.getImageUrl(image.fileName, item.id, item.title, ''),\n                            width: image.width ? image.width : '150px',\n                            height: image.height ? image.height : '150px',\n                            style: _normalizeStyle({ filter: image.filter }),\n                            onDragstart: () => _ctx.$emit('onDragStart', itemIndex, imageIndex),\n                            draggable: \"true\",\n                            class: \"cellImg\",\n                            ref_for: true,\n                            ref_key: \"cellRef\",\n                            ref: cellRef,\n                            onError: () => _ctx.$emit('hideImage', item.id, image.fileName, item.title),\n                            onLoad: ($event: any) => (handleImageLoad(itemIndex))\n                          }, null, 44, _hoisted_15)), [\n                            [_vShow, image && !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                          ])\n                        : _createCommentVNode(\"\", true),\n                      (image && image.coordinates)\n                        ? (_openBlock(), _createElementBlock(\"div\", {\n                            key: 2,\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4))\n                        : _createCommentVNode(\"\", true)\n                    ])\n                  ], 42, _hoisted_12)), [\n                    [_vShow, image && !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                  ])\n                }), 128))\n              ], 42, _hoisted_11), [\n                [_vShow, item?.count !== '0' && item?.count !== 0]\n              ])\n            ]))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [\n          _createElementVNode(\"div\", _hoisted_17, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((firstClass).value = $event)),\n              onChange: _cache[3] || (_cache[3] = ($event: any) => (classImgChange('first' , $event)))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: option.id,\n                  value: option.name\n                }, _toDisplayString(option?.name), 9, _hoisted_18))\n              }), 128))\n            ], 544), [\n              [_vModelSelect, firstClass.value]\n            ]),\n            _createElementVNode(\"ul\", _hoisted_19, [\n              _createElementVNode(\"li\", null, [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"p\", _hoisted_20, [\n                    _createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      onInput: _cache[4] || (_cache[4] = ($event: any) => (_ctx.$emit('allCheckChange', $event, firstClassObj.value?.title))),\n                      checked: _ctx.selectedTitle === firstClassObj.value?.title\n                    }, null, 40, _hoisted_21),\n                    _createElementVNode(\"label\", null, _toDisplayString(firstClassObj.value?.title) + \" (\" + _toDisplayString(firstClassObj.value?.count) + \") \", 1)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass('wbcImgWrap ' + firstClassObj.value?.title),\n                  onDragover: _cache[6] || (_cache[6] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                  onDrop: _cache[7] || (_cache[7] = () => _ctx.$emit('onDrop', firstItemIndex.value))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(firstClassObj.value.images, (image, imageIndex) => {\n                    return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                      key: image?.fileName,\n                      class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                      onClick: () => _ctx.$emit('selectImage', firstItemIndex.value, imageIndex, firstClassObj.value),\n                      onDblclick: () => _ctx.$emit('openModal', image, firstClassObj.value),\n                      onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, firstClassObj.value), [\"prevent\"])\n                    }, [\n                      _createElementVNode(\"div\", _hoisted_23, [\n                        image\n                          ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n                              _createElementVNode(\"div\", {\n                                class: \"fileTitle\",\n                                style: _normalizeStyle({ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' })\n                              }, [\n                                _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                              ], 4)\n                            ], 512)), [\n                              [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== firstClassObj.value?.title]\n                            ])\n                          : _createCommentVNode(\"\", true),\n                        (image && image.fileName)\n                          ? _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                              key: 1,\n                              src: _ctx.getImageUrl(image.fileName, firstClassObj.value.id, firstClassObj.value.title, ''),\n                              width: image.width ? image.width : '150px',\n                              height: image.height ? image.height : '150px',\n                              style: _normalizeStyle({ filter: image.filter }),\n                              onDragstart: () => _ctx.$emit('onDragStart', firstItemIndex.value, imageIndex),\n                              draggable: \"true\",\n                              class: \"cellImg\",\n                              ref_for: true,\n                              ref_key: \"cellRef\",\n                              ref: cellRef,\n                              onError: () => _ctx.$emit('hideImage', firstClassObj.value.id, image.fileName, firstClassObj.value.title),\n                              onLoad: _cache[5] || (_cache[5] = ($event: any) => (handleImageLoad(firstItemIndex.value)))\n                            }, null, 44, _hoisted_25)), [\n                              [_vShow, image && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`]]\n                            ])\n                          : _createCommentVNode(\"\", true),\n                        (image && image.coordinates)\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 2,\n                              class: \"center-point\",\n                              style: _normalizeStyle(image.coordinates)\n                            }, null, 4))\n                          : _createCommentVNode(\"\", true)\n                      ])\n                    ], 42, _hoisted_22)), [\n                      [_vShow, image && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`]]\n                    ])\n                  }), 128))\n                ], 34)\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_26, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((lastClass).value = $event)),\n              onChange: _cache[9] || (_cache[9] = ($event: any) => (classImgChange('last', $event)))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: option.id,\n                  value: option.name\n                }, _toDisplayString(option?.name), 9, _hoisted_27))\n              }), 128))\n            ], 544), [\n              [_vModelSelect, lastClass.value]\n            ]),\n            _createElementVNode(\"ul\", _hoisted_28, [\n              _createElementVNode(\"li\", null, [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"p\", _hoisted_29, [\n                    _createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      onInput: _cache[10] || (_cache[10] = ($event: any) => (_ctx.$emit('allCheckChange', $event, lastClassObj.value?.title))),\n                      checked: _ctx.selectedTitle === lastClassObj.value?.title\n                    }, null, 40, _hoisted_30),\n                    _createTextVNode(\" \" + _toDisplayString(lastClassObj.value?.title) + \" (\" + _toDisplayString(lastClassObj.value?.count) + \") \", 1)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass('wbcImgWrap ' + lastClassObj.value?.title),\n                  onDragover: _cache[12] || (_cache[12] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                  onDrop: _cache[13] || (_cache[13] = () => _ctx.$emit('onDrop', lastItemIndex.value))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lastClassObj.value.images, (image, imageIndex) => {\n                    return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                      key: image?.fileName,\n                      class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                      onClick: () => _ctx.$emit('selectImage', lastItemIndex.value, imageIndex, lastClassObj.value),\n                      onDblclick: () => _ctx.$emit('openModal', image, lastClassObj.value),\n                      onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, lastClassObj.value), [\"prevent\"])\n                    }, [\n                      _createElementVNode(\"div\", _hoisted_32, [\n                        image\n                          ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                              _createElementVNode(\"div\", {\n                                class: \"fileTitle\",\n                                style: _normalizeStyle({ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' })\n                              }, [\n                                _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                              ], 4)\n                            ], 512)), [\n                              [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== lastClassObj.value?.title]\n                            ])\n                          : _createCommentVNode(\"\", true),\n                        (image && image.fileName)\n                          ? _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                              key: 1,\n                              src: _ctx.getImageUrl(image.fileName, lastClassObj.value.id, lastClassObj.value.title, ''),\n                              width: image.width ? image.width : '150px',\n                              height: image.height ? image.height : '150px',\n                              style: _normalizeStyle({ filter: image.filter }),\n                              onDragstart: () => _ctx.$emit('onDragStart', lastItemIndex.value, imageIndex),\n                              draggable: \"true\",\n                              class: \"cellImg\",\n                              ref_for: true,\n                              ref_key: \"cellRef\",\n                              ref: cellRef,\n                              onError: () => _ctx.$emit('hideImage', lastClassObj.value.id, image.fileName, lastClassObj.value.title),\n                              onLoad: _cache[11] || (_cache[11] = ($event: any) => (handleImageLoad(lastItemIndex.value)))\n                            }, null, 44, _hoisted_34)), [\n                              [_vShow, image && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`]]\n                            ])\n                          : _createCommentVNode(\"\", true),\n                        (image && image.coordinates)\n                          ? (_openBlock(), _createElementBlock(\"div\", {\n                              key: 2,\n                              class: \"center-point\",\n                              style: _normalizeStyle(image.coordinates)\n                            }, null, 4))\n                          : _createCommentVNode(\"\", true)\n                      ])\n                    ], 42, _hoisted_31)), [\n                      [_vShow, image && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`]]\n                    ])\n                  }), 128))\n                ], 34)\n              ])\n            ])\n          ])\n        ]))\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loading\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <ul class=\"wbcInfoDbUl\">\r\n    <template v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n      <li @click=\"scrollToElement(item.id)\" v-show=\"siteCd !== '0006' && item?.title !== 'SM'\" @dragover.prevent=\"$emit('onDragOverCircle')\" @drop=\"$emit('onDropCircle', item)\">\r\n        <div class=\"circle\" >\r\n          <p>{{ item?.title }}</p>\r\n          <p>{{ item?.count }}</p>\r\n        </div>\r\n      </li>\r\n    </template>\r\n  </ul>\r\n  <ul class=\"cellImgBox\" v-if=\"!classCompareShow\">\r\n    <li v-for=\"(item, itemIndex) in wbcInfo\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n      <div v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n        <p class=\"mt1\">\r\n          <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, item.title)\"\r\n                 :checked=\"selectedTitle === item.title\">\r\n          {{ item?.title }}\r\n          ({{ item?.count }})\r\n        </p>\r\n      </div>\r\n      <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver\" @drop=\"() => $emit('onDrop', itemIndex)\"\r\n          v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n        <template v-for=\"(image, imageIndex) in item.images\" :key=\"image?.fileName\">\r\n          <li\r\n              :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n              @click=\"() => $emit('selectImage', itemIndex, imageIndex, item)\"\r\n              @dblclick=\"() => $emit('openModal', image, item)\"\r\n              v-show=\"image && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n              @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, item)\"\r\n          >\r\n            <div style=\"position: relative;\">\r\n              <div v-if=\"image\" class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                <div class=\"fileTitle\" :style=\"{ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' }\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'arrow-right']\"/>\r\n                  {{ image.title }}\r\n                </div>\r\n              </div>\r\n              <img v-if=\"image && image.fileName\" :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                   :width=\"image.width ? image.width : '150px'\"\r\n                   :height=\"image.height ? image.height : '150px'\"\r\n                   :style=\"{ filter: image.filter }\"\r\n                   @dragstart=\"() => $emit('onDragStart', itemIndex, imageIndex)\"\r\n                   draggable=\"true\"\r\n                   class=\"cellImg\"\r\n                   ref=\"cellRef\"\r\n                   @error=\"() => $emit('hideImage', item.id, image.fileName, item.title)\"\r\n                   v-show=\"image && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                   @load=\"handleImageLoad(itemIndex)\"\r\n              />\r\n              <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n            </div>\r\n          </li>\r\n        </template>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n<!--  클래스 단일 비교 부분 -->\r\n  <div v-else class=\"divCompare\">\r\n    <div class=\"divCompareChild\">\r\n      <select v-model=\"firstClass\" @change=\"classImgChange('first' , $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt1\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, firstClassObj?.title)\"\r\n                     :checked=\"selectedTitle === firstClassObj?.title\">\r\n              <label>\r\n                {{ firstClassObj?.title }}\r\n                ({{ firstClassObj?.count }})\r\n              </label>\r\n\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + firstClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', firstItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in firstClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                  @click=\"() => $emit('selectImage', firstItemIndex, imageIndex, firstClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, firstClassObj)\"\r\n                  v-show=\"image && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, firstClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== firstClassObj?.title\">\r\n                    <div class=\"fileTitle\" :style=\"{ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' }\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img v-if=\"image && image.fileName\"\r\n                       :src=\"getImageUrl(image.fileName, firstClassObj.id, firstClassObj.title, '')\"\r\n                       :width=\"image.width ? image.width : '150px'\"\r\n                       :height=\"image.height ? image.height : '150px'\"\r\n                       :style=\"{ filter: image.filter }\"\r\n                       @dragstart=\"() => $emit('onDragStart', firstItemIndex, imageIndex)\"\r\n                       draggable=\"true\"\r\n                       class=\"cellImg\"\r\n                       ref=\"cellRef\"\r\n                       @error=\"() => $emit('hideImage', firstClassObj.id, image.fileName, firstClassObj.title)\"\r\n                       v-show=\"image && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                       @load=\"handleImageLoad(firstItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"divCompareChild\">\r\n      <select v-model=\"lastClass\" @change=\"classImgChange('last', $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt1\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, lastClassObj?.title)\"\r\n                     :checked=\"selectedTitle === lastClassObj?.title\">\r\n              {{ lastClassObj?.title }}\r\n              ({{ lastClassObj?.count }})\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + lastClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', lastItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in lastClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                  @click=\"() => $emit('selectImage', lastItemIndex, imageIndex, lastClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, lastClassObj)\"\r\n                  v-show=\"image && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, lastClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== lastClassObj?.title\">\r\n                    <div class=\"fileTitle\" :style=\"{ fontSize: image.width ? (parseInt(image.width) / 6) + 'px' : '15px' }\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img v-if=\"image && image.fileName\"\r\n                       :src=\"getImageUrl(image.fileName, lastClassObj.id, lastClassObj.title, '')\"\r\n                       :width=\"image.width ? image.width : '150px'\"\r\n                       :height=\"image.height ? image.height : '150px'\"\r\n                       :style=\"{ filter: image.filter }\"\r\n                       @dragstart=\"() => $emit('onDragStart', lastItemIndex, imageIndex)\"\r\n                       draggable=\"true\"\r\n                       class=\"cellImg\"\r\n                       ref=\"cellRef\"\r\n                       @error=\"() => $emit('hideImage', lastClassObj.id, image.fileName, lastClassObj.title)\"\r\n                       v-show=\"image && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                       @load=\"handleImageLoad(lastItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {computed, ref, watch, defineExpose, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClass = ref('Neutrophil-Segmented');\r\nconst firstClassObj = ref<any>({});\r\nconst lastClass = ref('Neutrophil-Band');\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst previousFirstClass = ref('Neutrophil-Segmented');\r\nconst previousLastClass = ref('Neutrophil-Band');\r\nconst loading = ref(true);\r\nconst totalImages = ref(0);\r\nconst loadedImages = ref(0);\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\ndefineExpose({\r\n  scrollToElement,\r\n});\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ninterface WbcInfo {\r\n  // wbcInfo 타입 정의\r\n  [key: string]: any;\r\n}\r\n\r\n\r\nconst props = defineProps<{\r\n  wbcInfo: WbcInfo;\r\n  updateWbcInfo: (newInfo: WbcInfo) => void;\r\n  classCompareShow: boolean;\r\n  selectedTitle: string;\r\n  hiddenImages: { [key: string]: boolean };\r\n  setRef: (el: any, id: string) => void;\r\n  replaceFileNamePrefix: (fileName: string) => string;\r\n  getImageUrl: (fileName: string, itemId: string, itemTitle: string, prefix: string) => string;\r\n  onDragOver: () => void;\r\n  isBorderChanged: (image: Image) => boolean;\r\n  isSelected: (image: Image) => boolean;\r\n  totalCount: string;\r\n}>();\r\nconst emits = defineEmits();\r\n\r\nconst {wbcInfo} = toRefs(props);\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  // console.log(newVal)\r\n  loading.value = false;\r\n});\r\n\r\nwatch(\r\n    wbcInfo,\r\n    (newVal) => {\r\n      classImgChange('first', null);\r\n      classImgChange('last', null);\r\n    },\r\n    {deep: true}\r\n);\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n  // console.log('Image loaded', itemIndex);\r\n  // console.log('props.wbcInfo.length', props.wbcInfo.length - 1);\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  }else{\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0'){\r\n    loading.value = false\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"topClintInfo\" }\nconst _hoisted_4 = { class: \"imgMenuSetDiv\" }\nconst _hoisted_5 = { class: \"sizeContainer\" }\nconst _hoisted_6 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_7 = { class: \"imgSet\" }\nconst _hoisted_8 = { class: \"alignItemsCenter\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", null, \"R\", -1)\nconst _hoisted_10 = { class: \"alignItemsCenter\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"label\", null, \"G\", -1)\nconst _hoisted_12 = { class: \"alignItemsCenter\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"label\", null, \"B\", -1)\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"wbcModal\" }\nconst _hoisted_16 = { class: \"wbcModalImageContent\" }\nconst _hoisted_17 = [\"src\"]\n\nimport {computed, getCurrentInstance, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  await getDetailRunningInfo();\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo: any = [];\r\n    wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  cellMarkerIcon.value = false;\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemImageArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n        cameraResetTimeOut = null;\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n          const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n          draggedItem.images.splice(draggedImageIndex, 1);\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n          }\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              })\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemImageArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: selectItems.value?.id})\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value?.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n        await getWbcCustomClasses(false, null);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse\n    }, null, 8, [\"isNext\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight shadowBox' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        (!isLoading.value)\n          ? (_openBlock(), _createBlock(ClassInfo, {\n              key: 0,\n              wbcInfo: wbcInfo.value,\n              selectItems: selectItems.value,\n              classCompareShow: classCompareShow.value,\n              type: \"listTable\",\n              onNextPage: nextPage,\n              onScrollEvent: scrollToElement\n            }, null, 8, [\"wbcInfo\", \"selectItems\", \"classCompareShow\"]))\n          : _createCommentVNode(\"\", true)\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _createTextVNode(\" Cell Marking \")\n          ]),\n          _createElementVNode(\"button\", {\n            onClick: showSizeControl,\n            class: \"sizeButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _createTextVNode(\" Size \")\n          ]),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"div\", null, [\n              _createTextVNode(\" Size \" + _toDisplayString(imgPixelConvertToPercent(imageSize.value)) + \" \", 1),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'undo'],\n                onClick: imgSizeReset\n              }),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"290\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ])\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_6, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _createTextVNode(\" IMG Setting \")\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _createTextVNode(\" Brightness \" + _toDisplayString(imgBrightness.value) + \" \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"120\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb2\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _createTextVNode(\" RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ] \", 1),\n                _createElementVNode(\"div\", _hoisted_8, [\n                  _hoisted_9,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: _cache[4] || (_cache[4] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_10, [\n                  _hoisted_11,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: _cache[6] || (_cache[6] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _hoisted_13,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: _cache[8] || (_cache[8] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ])\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          _createElementVNode(\"button\", { onClick: classCompare }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'code-compare'] }),\n            _createTextVNode(\" Class Compare \")\n          ]),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _createTextVNode(\" Rollback \")\n          ])\n        ]),\n        _createElementVNode(\"div\", null, [\n          _createVNode(ImageGallery, {\n            ref_key: \"$imageGalleryRef\",\n            ref: $imageGalleryRef,\n            wbcInfo: wbcInfo.value,\n            totalCount: selectItems.value?.wbcInfo?.totalCount,\n            classCompareShow: classCompareShow.value,\n            selectedTitle: selectedTitle.value,\n            hiddenImages: hiddenImages.value,\n            replaceFileNamePrefix: replaceFileNamePrefix,\n            getImageUrl: getImageUrl,\n            onDragOver: onDragOver,\n            isBorderChanged: isBorderChanged,\n            isSelected: isSelected,\n            updateWbcInfo: updateWbcInfo.value,\n            onAllCheckChange: allCheckChange,\n            onSelectImage: selectImage,\n            onOpenModal: openModal,\n            onHideImage: hideImage,\n            onHandleRightClick: handleRightClick,\n            onOnDrop: onDrop,\n            onOnDragStart: onDragStart,\n            onOnDropCircle: onDropCircle,\n            onOnDragOverCircle: onDragOverCircle,\n            onScrollToElement: scrollToElement,\n            cellRef: cellRef.value,\n            \"onUpdate:cellRef\": handleUpdateCellRef\n          }, null, 8, [\"wbcInfo\", \"totalCount\", \"classCompareShow\", \"selectedTitle\", \"hiddenImages\", \"updateWbcInfo\", \"cellRef\"])\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(item.name), 9, _hoisted_14))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", _hoisted_15, [\n          _createElementVNode(\"div\", {\n            class: \"wbc-modal-content\",\n            onClick: outerClickCloseModal\n          }, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_16, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\"\n              }, null, 12, _hoisted_17)\n            ]),\n            _createElementVNode(\"div\", { class: \"buttons\" }, [\n              _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n              _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n            ])\n          ])\n        ], 512), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>\r\n          {{ projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}\r\n        </li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" :classCompareShow=\"classCompareShow\"\r\n                 type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <!--size-->\r\n        <button @click=\"showSizeControl\" class=\"sizeButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            Size {{ imgPixelConvertToPercent(imageSize) }}\r\n            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"290\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <!--            <button class=\"resetBtn mb2\" @click=\"imgSizeReset\">Size Reset</button>-->\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness {{ imgBrightness }}\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"120\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb2\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]\r\n\r\n              <div class=\"alignItemsCenter\">\r\n                <label>R</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[0]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"alignItemsCenter\">\r\n                <label>G</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[1]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"alignItemsCenter\">\r\n                <label>B</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[2]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button @click=\"classCompare\">\r\n          <font-awesome-icon :icon=\"['fas', 'code-compare']\"/>\r\n          Class Compare\r\n        </button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ImageGallery\r\n            ref=\"$imageGalleryRef\"\r\n            :wbcInfo=\"wbcInfo\"\r\n            :totalCount=\"selectItems?.wbcInfo?.totalCount\"\r\n            :classCompareShow=\"classCompareShow\"\r\n            :selectedTitle=\"selectedTitle\"\r\n            :hiddenImages=\"hiddenImages\"\r\n            :replaceFileNamePrefix=\"replaceFileNamePrefix\"\r\n            :getImageUrl=\"getImageUrl\"\r\n            :onDragOver=\"onDragOver\"\r\n            :isBorderChanged=\"isBorderChanged\"\r\n            :isSelected=\"isSelected\"\r\n            :updateWbcInfo=\"updateWbcInfo\"\r\n            @allCheckChange=\"allCheckChange\"\r\n            @selectImage=\"selectImage\"\r\n            @openModal=\"openModal\"\r\n            @hideImage=\"hideImage\"\r\n            @handleRightClick=\"handleRightClick\"\r\n            @onDrop=\"onDrop\"\r\n            @onDragStart=\"onDragStart\"\r\n            @onDropCircle=\"onDropCircle\"\r\n            @onDragOverCircle=\"onDragOverCircle\"\r\n            @scrollToElement=\"scrollToElement\"\r\n            :cellRef=\"cellRef\"\r\n            @update:cellRef=\"handleUpdateCellRef\"\r\n        />\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n        <div class=\"wbc-modal-content\" @click=\"outerClickCloseModal\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <button @click=\"zoomIn\">+</button>\r\n            <button @click=\"zoomOut\">-</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, getCurrentInstance, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n})\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  await getDetailRunningInfo();\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo: any = [];\r\n    wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  cellMarkerIcon.value = false;\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemImageArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n        cameraResetTimeOut = null;\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n          const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n          draggedItem.images.splice(draggedImageIndex, 1);\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n          }\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              })\r\n            }\r\n          });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemImageArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: selectItems.value?.id})\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value?.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n        await getWbcCustomClasses(false, null);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div v-if=\"loading\" class=\"overlay\">\r\n    <div class=\"spinner\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps } from 'vue';\r\n\r\nconst props = defineProps(['type', 'isLoading'])\r\nconst loading = ref(props.isLoading);\r\n\r\nwatch(() => props.isLoading, (newVal) => {\r\n      loading.value = newVal;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.spinner {\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 5px solid rgba(255, 255, 255, 0.3);\r\n  border-top-color: white;\r\n  border-radius: 50%;\r\n  animation: spin 1s linear infinite;\r\n}\r\n\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n</style>","import script from \"./LoadingOverlay.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./LoadingOverlay.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./LoadingOverlay.vue?vue&type=style&index=0&id=0dc8a6ac&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0dc8a6ac\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1)\nconst _hoisted_2 = { class: \"leftImgList\" }\nconst _hoisted_3 = { class: \"leftImgUl\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Partical Image\", -1)\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"leftImgUl\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Zone\", -1)\nconst _hoisted_8 = [\"src\", \"onDblclick\"]\nconst _hoisted_9 = { class: \"leftImgUl\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal stitch\", -1)\nconst _hoisted_11 = [\"src\", \"onDblclick\"]\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Megakaryocyte\", -1)\nconst _hoisted_13 = [\"src\", \"onDblclick\"]\n\nimport {nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\nimport LoadingOverlay from \"@/components/commonUi/LoadingOverlay.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nconst imageLoaded = ref(true);\r\nconst loadedImagesCount = ref(0);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async(newItem) => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\nconst onLoad = () => {\r\n  loadedImagesCount.value++;\r\n  if (loadedImagesCount.value === paImages.value.length) {\r\n    imageLoaded.value = false;\r\n  }\r\n};\r\n\r\nconst onError = () => {\r\n  loadedImagesCount.value++;\r\n  if (loadedImagesCount.value === paImages.value.length) {\r\n    imageLoaded.value = false;\r\n  }\r\n  console.log('Failed to load Image');\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (buttonOfen.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"closeViewer\",\n          onClick: closeViewer\n        }, \"x\"))\n      : _createCommentVNode(\"\", true),\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\"\n          }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'particle'),\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'particle'))),\n              onLoad: onLoad,\n              onError: onError\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _hoisted_7,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\",\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'idealZone'),\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealZone')))\n            }, null, 40, _hoisted_8)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"div\", null, [\n          _hoisted_10,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: index,\n              class: \"leftImgLi\"\n            }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'idealStitch'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealStitch')))\n              }, null, 40, _hoisted_11)\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_12,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: index,\n              class: \"leftImgLi\"\n            }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'mega'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'mega')))\n              }, null, 40, _hoisted_13)\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createVNode(LoadingOverlay, { isLoading: imageLoaded.value }, null, 8, [\"isLoading\"])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"closeViewer\" @click=\"closeViewer\" v-if=\"buttonOfen\">x</div>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <ul class=\"leftImgUl\">\r\n      <p>Partical Image</p>\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\" class=\"leftImgLi\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'particle')\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(getImageUrls(image, 'particle'))\"\r\n             @load=\"onLoad\"\r\n             @error=\"onError\"\r\n        >\r\n      </li>\r\n    </ul>\r\n    <ul class=\"leftImgUl\">\r\n      <p>Ideal Zone</p>\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" class=\"leftImgLi\" style=\"width:100px\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'idealZone')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealZone'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"leftImgUl\">\r\n      <div>\r\n        <p>Ideal stitch</p>\r\n        <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\" class=\"leftImgLi\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'idealStitch')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealStitch'))\">\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <p>Megakaryocyte</p>\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\" class=\"leftImgLi\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'mega')\" @dblclick=\"openInViewer(getImageUrls(image, 'mega'))\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n\r\n  <LoadingOverlay :isLoading=\"imageLoaded\" />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\nimport LoadingOverlay from \"@/components/commonUi/LoadingOverlay.vue\";\r\n\r\nconst props = defineProps(['selectItems']);\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nconst imageLoaded = ref(true);\r\nconst loadedImagesCount = ref(0);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async(newItem) => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\nconst onLoad = () => {\r\n  loadedImagesCount.value++;\r\n  if (loadedImagesCount.value === paImages.value.length) {\r\n    imageLoaded.value = false;\r\n  }\r\n};\r\n\r\nconst onError = () => {\r\n  loadedImagesCount.value++;\r\n  if (loadedImagesCount.value === paImages.value.length) {\r\n    imageLoaded.value = false;\r\n  }\r\n  console.log('Failed to load Image');\r\n};\r\n\r\n</script>","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport {onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"img\", {\n      src: hideImage.value,\n      ref_key: \"hideImageRef\",\n      ref: hideImageRef,\n      style: {\"display\":\"none\"},\n      onLoad: _cache[0] || (_cache[0] = ($event: any) => (onImageLoad(true)))\n    }, null, 40, _hoisted_1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        ref_key: \"tilingViewerLayer\",\n        ref: tilingViewerLayer,\n        id: \"tiling-viewer\"\n      }, null, 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" ></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {defineProps, onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport {computed, ref, onMounted, onBeforeMount, nextTick} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(TilingViewer, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(LeftImgList, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, onBeforeMount, nextTick} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\nconst store = useStore()\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport DatabaseWbc from '@/views/datebase/commponent/detail/wbc/listDetailWbc.vue';\r\nimport Report from '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach((to, from, next)  => {\r\n    // 페이지 이동 전에 setInterval 정리\r\n    // clearIntervalIfExists();\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n// 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const currentUser = store.state.userModule;\r\n\r\n    if ((to.name !== 'login' && to.name !== 'join') && (!getStoredUser.userId && !currentUser.userId)) {\r\n        // 로그인이 필요한 페이지에 접근하려고 할 때 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    }\r\n    else if (to.name === \"database\") {\r\n        store.dispatch('commonModule/setCommonInfo', {dataBasePageReset: true});\r\n        next();\r\n    } else {\r\n        // 그 외의 경우에는 계속 진행\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const getBrowserExit = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.browser.exit);\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = { class: \"borderLine\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"headerLogo\"\n}, null, -1)\nconst _hoisted_4 = { class: \"logoProjectTitle\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1)\nconst _hoisted_8 = { class: \"small-icon-menu\" }\nconst _hoisted_9 = { class: \"lastMenu\" }\nconst _hoisted_10 = { class: \"lastLiM\" }\nconst _hoisted_11 = { class: \"iconHeaderMenu\" }\nconst _hoisted_12 = { class: \"alarm\" }\nconst _hoisted_13 = [\"title\"]\nconst _hoisted_14 = [\"title\"]\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\nconst _hoisted_16 = { class: \"immersionOilContainer\" }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Immersion Oil count Reset\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)\nconst _hoisted_19 = { class: \"smallTitle\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)\nconst _hoisted_21 = {\n  class: \"border ml-5\",\n  style: {\"width\":\"80px\"}\n}\nconst _hoisted_22 = { class: \"flexColumnAlignEnd\" }\nconst _hoisted_23 = { class: \"mt2\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Prime Immersion Oil\", -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Prime oil to remove air from the oil hose\", -1)\nconst _hoisted_26 = { class: \"flexColumnAlignEnd\" }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)\n\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {getBrowserExit} from \"@/common/api/service/browserExit/browserExitApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst clickType = ref('');\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      await getBrowserExit();\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = messages.exit;\r\n  showConfirm.value = true;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_2, [\n                _hoisted_3,\n                _createElementVNode(\"p\", _hoisted_4, _toDisplayString(projectBm.value ? 'BM' : 'PB'), 1)\n              ]),\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheck.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _hoisted_6\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_7\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              _createElementVNode(\"div\", _hoisted_8, [\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_10, [\n                      _createElementVNode(\"div\", { onClick: logOutBoxOn }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: logout\n                      }, \" LOGOUT \"),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: exit\n                      }, \" EXIT \")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", _hoisted_12, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking': isAlarm.value })\n                      }, null, 8, [\"class\"])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open']\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount\",\n                      onClick: openLayer,\n                      title: 'oilCount: ' + (oilCountData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'droplet'] })\n                    ], 8, _hoisted_13),\n                    _createElementVNode(\"li\", {\n                      class: \"storage\",\n                      title: 'storage: ' + (storagePercentData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'database'] })\n                    ], 8, _hoisted_14)\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (visible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_15\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_16, [\n              _hoisted_17,\n              _hoisted_18,\n              _createElementVNode(\"div\", _hoisted_19, [\n                _hoisted_20,\n                _createElementVNode(\"div\", _hoisted_21, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_22, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"Reset\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _hoisted_25,\n              _createElementVNode(\"div\", _hoisted_26, [\n                _hoisted_27,\n                _createElementVNode(\"button\", {\n                  type: \"button\",\n                  onClick: onPrime,\n                  class: _normalizeClass({'alertButton': true, 'blinkGripper': isBlinkingPrime.value})\n                }, \"Prime \", 2)\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav>\r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"@/assets/celli.png\" class=\"headerLogo\"/>\r\n          <p class=\"logoProjectTitle\">{{ projectBm ? 'BM' : 'PB' }}</p>\r\n        </div>\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/\" v-if=\"viewerCheck === 'main'\"\r\n                     :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/dataBase\"\r\n                     :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div @click='logOutBoxOn'>\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/>\r\n                  {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <div class='logOutBox' @click='logout'>\r\n                  LOGOUT\r\n                </div>\r\n                <div class='logOutBox' @click='exit'>\r\n                  EXIT\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n            <ul>\r\n              <li class=\"alarm\">\r\n                <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking': isAlarm }\"/>\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n                <font-awesome-icon v-else :icon=\"['fas', 'door-open']\"/>\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n              </li>\r\n              <li class=\"oliCount\" @click=\"openLayer\" :title=\"'oilCount: ' + (oilCountData || 0)\">\r\n                <font-awesome-icon :icon=\"['fas', 'droplet']\"/>\r\n              </li>\r\n              <li class=\"storage\" :title=\"'storage: ' + (storagePercentData || 0)\">\r\n                <font-awesome-icon :icon=\"['fas', 'database']\"/>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle\">Immersion Oil count Reset</h5>\r\n        <span class=\"colorGray\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"smallTitle\">\r\n          <span>Estimated number of slides left</span>\r\n          <div class=\"border ml-5\" style=\"width: 80px;\">{{ oilCount }}</div>\r\n        </div>\r\n\r\n        <div class=\"flexColumnAlignEnd\">\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt2'>\r\n        <h5 class=\"modalTitle\">Prime Immersion Oil</h5>\r\n        <span class=\"colorGray\">Prime oil to remove air from the oil hose</span>\r\n        <div class=\"flexColumnAlignEnd\">\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button type=\"button\" @click='onPrime' :class=\"{'alertButton': true, 'blinkGripper': isBlinkingPrime}\">Prime\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {getBrowserExit} from \"@/common/api/service/browserExit/browserExitApi\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst clickType = ref('');\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      await getBrowserExit();\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = messages.exit;\r\n  showConfirm.value = true;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    iaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceSerialNm: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n    rbcReData: boolean;\r\n    rbcReDataClass: boolean;\r\n    rbcInfoAfterData: any[];\r\n    resetRbcArr: boolean;\r\n    selectedSampleId: string;\r\n    classInfoArr: any[];\r\n    rbcReDataCheck: boolean;\r\n    appAlertOpen: boolean;\r\n    dataBasePageReset: boolean;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setIaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceSerialNm: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n        setRbcReData: (state: CommonState, value: boolean) => void;\r\n        setRbcReDataClass: (state: CommonState, value: boolean) => void;\r\n        setRbcInfoAfterData: (state: CommonState, value: any[]) => void;\r\n        setResetRbcArr: (state: CommonState, value: boolean) => void;\r\n        setSelectedSampleId: (state: CommonState, value: string) => void;\r\n        setClassInfoArr: (state: CommonState, value: any[]) => void;\r\n        setRbcReDataCheck: (state: CommonState, value: boolean) => void;\r\n        setAppAlertOpen: (state: CommonState, value: boolean) => void;\r\n        setDataBasePageReset: (state: CommonState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        iaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceSerialNm: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n        rbcReData: false,\r\n        rbcReDataClass: false,\r\n        rbcInfoAfterData: [],\r\n        resetRbcArr: false,\r\n        selectedSampleId: '',\r\n        classInfoArr:[],\r\n        rbcReDataCheck: false,\r\n        appAlertOpen: false,\r\n        dataBasePageReset: false,\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsAlarm(state: CommonState, value: boolean): void {\r\n            state.isAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setIaRootPath(state: CommonState, value: string): void {\r\n            state.iaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceSerialNm(state: CommonState, value: string): void {\r\n            state.deviceSerialNm = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setSelectedSampleId(state: CommonState, value: string): void {\r\n            state.selectedSampleId = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n        setRbcReData(state: CommonState, value: boolean): void {\r\n            state.rbcReData = value;\r\n        },\r\n        setRbcReDataClass(state: CommonState, value: boolean): void {\r\n            state.rbcReDataClass = value;\r\n        },\r\n        setResetRbcArr(state: CommonState, value: boolean): void {\r\n            state.resetRbcArr = value;\r\n        },\r\n        setRbcInfoAfterData(state: CommonState, value: any[]): void {\r\n            state.rbcInfoAfterData = value;\r\n        },\r\n        // classInfoArr\r\n        setClassInfoArr(state: CommonState, value: any[]): void {\r\n            state.classInfoArr = value;\r\n        },\r\n        setRbcReDataCheck(state: CommonState, value: boolean): void {\r\n            state.rbcReDataCheck = value;\r\n        },\r\n        setAppAlertOpen(state: CommonState, value: boolean): void {\r\n            state.appAlertOpen = value;\r\n        },\r\n        setDataBasePageReset(state: CommonState, value: boolean): void {\r\n            state.dataBasePageReset = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isAlarm')) {\r\n                commit('setIsAlarm', payload.isAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('iaRootPath')) {\r\n                commit('setIaRootPath', payload.iaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceSerialNm')) {\r\n                commit('setDeviceSerialNm', payload.deviceSerialNm);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('selectedSampleId')) {\r\n                commit('setSelectedSampleId', payload.selectedSampleId)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReData')) {\r\n                commit('setRbcReData', payload.rbcReData)\r\n            }\r\n            if(payload.hasOwnProperty('rbcReDataClass')){\r\n                commit('setRbcReDataClass', payload.rbcReDataClass)\r\n            }\r\n            if (payload.hasOwnProperty('rbcInfoAfterData')) {\r\n                commit('setRbcInfoAfterData', payload.rbcInfoAfterData)\r\n            }\r\n            if(payload.hasOwnProperty('resetRbcArr')) {\r\n                commit('setResetRbcArr', payload.resetRbcArr)\r\n            }\r\n            if(payload.hasOwnProperty('classInfoArr')) {\r\n                commit('setClassInfoArr', payload.classInfoArr)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReDataCheck')){\r\n                commit('setRbcReDataCheck', payload.rbcReDataCheck)\r\n            }\r\n            if(payload.hasOwnProperty('appAlertOpen')){\r\n                commit('setAppAlertOpen', payload.appAlertOpen);\r\n            }\r\n            if (payload.hasOwnProperty('dataBasePageReset')){\r\n                commit('setDataBasePageReset', payload.dataBasePageReset);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {rbcClassificationModule} from '@/store/modules/analysis/rbcClassification';\r\nimport {wbcClassificationModule} from '@/store/modules/analysis/wbcclassification';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport { embeddedStatusModule } from '@/store/modules/embeddedStatusModule';\r\nimport { orderListModule } from '@/store/modules/analysis/orderListModule';\r\nimport { runningInfoModule } from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\n// import createPersistedState from 'vuex-persistedstate';\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        // rbcClassificationModule,\r\n        // wbcClassificationModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import store from '@/store/index';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any): Promise<any> => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceSerialNm: data.deviceBarcode\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n        return null;\r\n    }else {\r\n        await store.dispatch('commonModule/setCommonInfo', {'appAlertOpen': true});\r\n        return data?.resultMsg;\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'class': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            console.log(`SET [NE] Abnormal : ${wbcItem.title}`);\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.class.push(`[NE] : [${percent.toFixed(2)}]%`);\r\n                        } else {\r\n                            console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                // console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${wbcItem.count}]Count`);\r\n                            } else {\r\n                                // console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n\r\n                            if (percent < range.min || percent > range.max) {\r\n                                console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${percent.toFixed(2)}]%`);\r\n                            } else {\r\n                                console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount, provide } from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\n\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      // sessionStorage.clear();\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if(res !== null){\r\n          showErrorAlert(res);\r\n        }\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  console.log(payload)\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId?: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value\n      }, null, 8, [\"parsedData\", \"isClass\", \"startStatus\", \"pb100aCassette\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount, provide } from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\n\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      // sessionStorage.clear();\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if(res !== null){\r\n          showErrorAlert(res);\r\n        }\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  console.log(payload)\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId?: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=050db1d6&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n// 소켓 인스턴스를 보유할 앱 컨텍스트의 속성을 생성합니다.\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n    }\r\n}\r\nconst apiBaseUrl = window.MAIN_API_IP || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, { transports: ['websocket'], withCredentials: true });\r\n\r\n        app.config.globalProperties.$socket = socket;\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// src/icons/customIcons.ts\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst faHalfCircleUp: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-up',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e002', // unicode\r\n        'M256 0c141.385 0 256 114.615 256 256H0C0 114.615 114.615 0 256 0z' // SVG path data for top half circle\r\n    ]\r\n};\r\n\r\nconst faHalfCircleDown: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-down',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e003', // unicode\r\n        'M256 512c-141.385 0-256-114.615-256-256h512c0 141.385-114.615 256-256 256z' // SVG path data for bottom half circle\r\n    ]\r\n};\r\n\r\nexport { faHalfCircleUp, faHalfCircleDown };\r\n","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/color.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/layoutExtraWide.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHalfCircleUp, faHalfCircleDown } from './icons/customIcons'; // 커스텀 아이콘 불러오기\r\n/// <reference path=\"../types/webapi.d.ts\" />\r\n\r\nlibrary.add(fas);\r\nlibrary.add(faCircle);\r\nlibrary.add(faHalfCircleUp);\r\nlibrary.add(faHalfCircleDown); // 커스텀 아이콘 추가\r\n\r\nconst app = createApp(App);\r\n\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9595); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","commonCodeList","grpCd","grpNm","cd","cdNm","testType","value","text","bmTestType","getCommonCode","foundCode","find","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","iaRootPath","slotId","barcodeDirName","baseUrl","sessionStorage","getItem","window","MAIN_API_IP","APP_API_BASE_URL","_hoisted_1","_createElementVNode","class","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_toDisplayString","wbcCount","__exports__","analysisOptions","wbcCountOptions","bmCountOptions","stitchCountOptions","slideCard","input","slotNo","slotState","output","slideCard100a","messages","Logout","GET_POSITION_LIST","GET_LOGIN_HISTORY","SET_USER","IS_REGIST_USER","UPDATE_LOGIN_DTTM","UPDATE_USER_AVAILABLE","GET_WBC_CLASS_LIST","GET_WBC_CLASS_LIST_ALL","GET_WBC_TOTAL_COUNT","UPDATE_WBC_COUNT","GET_WBC_COUNT","GET_TEST_TYPE","GET_MODIFIED_TEST_TYPE","GET_STITCH_COUNT","GET_RBC_COUNT","GET_RBC_COUNT_HIST","GET_RBC_COUNT_SKMC","UPDATE_DEGREE","INIT_WBC_COUNT","INIT_RBC_DEGREE","GET_WBC_INFO","SET_WBC_IMAGE_HIST","GET_WBC_IMAGE_HIST","INIT_WBC_IMAGE_HIST","INSERT_WBC_CLASSIFICATION","SET_WBC_CUSTOM_LIST","UPDATE_HOT_KEYS","UPDATE_BF_HOT_KEYS","UPDATE_ORDER","UPDATE_ORDER_BF","UPDATE_IMAGE_HIST","SET_CURRENT_WBC_RESULTS","GET_CURRENT_WBC_RESULTS","SET_BEFORE_WBC_RESULTS","GET_BEFORE_WBC_RESULTS","GET_WBC_MODIFY_LIST","GET_WBC_MODIFY_LIST_ALL","GET_BF_MODIFY_LIST","GET_RBC_CLASS_LIST","GET_MALARIA_COUNT","UPDATE_MALARIA_COUNT","SET_CURRENT_RBC_RESULTS","GET_CURRENT_RBC_RESULTS","SET_CLASSIFICATION","GET_CLASSIFICATION_ITEM","SET_CLASSIFICATION_ITEM","UPDATE_RBC_CLASSIFICATION","UPDATE_RBC_CLASSIFICATION_SKMC","INSERT_WBC_SUCCESS","SELECT_RBC_DEGREE","UPDATE_RBC_DEGREE","SET_TEST_LIST","GET_TEST_LIST","GET_TEST_RESULT","GET_RBC_FIELDS","GET_WBC_FIELDS","GET_RBC_ITEMS","GET_WBC_ITEMS","INIT_OIL_COUNT","UPDATE_RESULT","UPDATE_RUNNING_STATE","GET_ORDER_LIST","SET_ORDER_LIST","UPDATE_ORDER_LIST","INIT_ORDER_LIST","GET_TEST_RESULT_ALL","GET_SEARCH_OPTIONS","UPDATE_SEARCH_OPTIONS","SET_TEST_HISTORY","GET_TEST_HISTORY_LIST","ALL_TEST_HISTORY_LIST","SEARCH_TEST_HISTORY_LIST","UPDATE_TEST_HISTORY","GET_TEST_HISTORY","DELETE_TEST_HISTORY","UPDATE_SIGNED_STATE","UPDATE_TEST_HISTORY_WBC_INFO","GET_RBC_COMMENT","GET_WBC_COMMENT","GET_RUNNING_INTERVAL_ID","SET_RUNNING_INTERVAL_ID","UPDATE_TIMER","GET_TIMER","SET_TIMER","SET_WORKING_INTERVAL_ID","GET_WORKING_INTERVAL_ID","GET_RUNNING_STATE","SET_SLIDE_TIMER","UPDATE_SLIDE_TIMER","GET_SLIDE_TIME_COUNT","SET_USER_STOP","GET_USER_STOP","SET_WBC_CELL_POSITION","GET_WBC_CELL_POSITION","GET_TEST_HISTORY_PREV","GET_TEST_HISTORY_NEXT","SET_IS_RECOVERY_RUN","GET_IS_RECOVERY_RUN","SET_WORK_LIST","GET_WORK_LIST","INIT_WORK_LIST","DELETE_WORK_LIST","UPDATE_WORK_LIST","UPDATE_WORK_LIST_BM","UPDATE_SIGNED_WORK_LIST","UPDATE_RBC_COMMENT","UPDATE_WBC_COMMENT","UPDATE_BM_COMMENT","UPDATE_SELECT_ORDER_ID","GET_SELECT_ORDER_ID","ADD_WORK_LIST","GET_TEST_BARCODES","ADD_DSP_LIST","GET_DSP_LIST","SET_LIS_HOT_KEY","UPDATE_NEW_TEST_SET","UPDATE_EXEC_TEST_TYPE","INITIALIZE_MOUNT_CNT","UPDATE_MOUNT_CNT","GET_CURRENT_USER","GET_SETTINGS","UPDATE_RUNNING_PATH","UPDATE_RESULT_PATH_WBC","UPDATE_RESULT_PATH_RBC","UPDATE_BARCODE_PATH","GET_SYSTEM_TIME_ID","SET_SYSTEM_TIME_ID","GET_USER","UPDATE_REMEMBER_STATE","SET_CURRENT_USER","UPDATE_ROOT_PATH","GET_FILE_FILTER","GET_USER_LIST","UPDATE_ANALYSIS_TYPE","UPDATE_TEST_TYPE","UPDATE_RUNNING_MODE","UPDATE_USER","DELETE_USER","UPDATE_MARKER_STATE","GET_MARKER_STATE","SET_PAUSE_STATE","GET_PAUSE_STATE","GET_BF_WHOLE_SLIDE_PATH","GET_BF_WBC_CLASS_LIST","GET_SIZE_SLIDE_VALUE","UPDATE_LIS_CODE","SELECT_LIS_CODE","SELECT_LIS_CODE_RBC","UPDATE_CBC_CODE","SELECT_CBC_CODE","UPDATE_LIS_CONN_PATH","SELECT_LIS_CONN_PATH","GET_BACKUP_LIST","RESTORE_BACKUP_DATA","DELETE_BACKUP_DATA","RESET_RBC_DEGREE","GET_DEFAULT_RBC_DEGREE","UPDATE_CHECKED_CELL","SET_LOCK_SLIDE","SET_HOST_IP","GET_HOST_IP","GET_NORMAL_RANGE","UPDATE_NORMAL_RANGE","GET_LOCK_STATE","GET_KUMC_CBC_PATH","SET_WBC_NORMAL_RANGE","GET_WBC_NORMAL_RANGE","GET_SKMC_RESULT_CD","SET_SKMC_RESULT_CD","REMOVE_SKMC_RESULT_CD","GET_SKMC_REMARK","SET_SKMC_REMARK","REMOVE_SKMC_REMARK","SET_SKMC_FAVORITE","GET_SKMC_FAVORITE","GET_SKMC_LIS_RESULTS","SET_SKMC_LIS_RESULTS","SET_ALARM_COUNT","SET_SORT_TYPE","GET_SORT_TYPE","SET_CUSTOM_CLASS","GET_CUSTOM_CLASS","SET_SYS_INFO","GET_SYS_INFO","SET_BACKEND_DATA","GET_BACKEND_DATA","SELECT_CBC_CODE_INHA","SELECT_LIS_CODE_INHA","SELECT_LIS_CODE_RBC_INHA","SELECT_LIS_CONN_PATH_INHA","GET_RBC_COUNT_INHA","SELECT_WBC_RUNNING_COUNT","GET_BRIGHTNESS_SLIDE_VALUE","GET_RED_VALUE","GET_GREEN_VALUE","GET_BLUE_VALUE","GET_RGB_VALUE","SET_SIZE_SLIDE_VALUE","SET_BRIGHTNESS_SLIDE_VALUE","SET_RED_VALUE","SET_GREEN_VALUE","SET_BLUE_VALUE","SET_RGB_VALUE","SET_ROLLBACK_LIST","GET_ROLLBACK_LIST","GET_IMAGE_ROLLBACK_LIST","SET_CLONED_WBC_INFO","GET_RBC_BRIGHTNESS_SLIDE_VALUE","GET_RBC_RED_VALUE","GET_RBC_GREEN_VALUE","GET_RBC_BLUE_VALUE","SET_RBC_BRIGHTNESS_SLIDE_VALUE","SET_RBC_RED_VALUE","SET_RBC_GREEN_VALUE","SET_RBC_BLUE_VALUE","SET_CLONED_RBC_INFO","UPDATE_OIL_COUNT","SET_RESULT_LIST","CLEAR_RESULT_LIST","GET_RESULT_LIST","SET_WBC_REPORT_PRINT","GET_WBC_REPORT_PRINT","SET_RBC_REPORT_PRINT","GET_RBC_REPORT_PRINT","SET_RBC_SIZE","GET_RBC_SIZE","SET_RBC_CHROMIA","GET_RBC_CHROMIA","SET_RBC_SHAPE","GET_RBC_SHAPE","PUSH_RBC_SHAPE","POP_RBC_SHAPE","SET_RBC_PLATELET","GET_RBC_PLATELET","PUSH_RBC_PLATELET","POP_RBC_PLATELET","SET_RBC_INCLUSION","GET_RBC_INCLUSION","POP_RBC_INCLUSION","PUSH_RBC_INCLUSION","SET_IS_SHOW_MODAL_BARCODE","GET_IS_SHOW_MODAL_BARCODE","SET_IS_NS_NB_INTEGRATION","GET_IS_NS_NB_INTEGRATION","SET_IS_ALARM","GET_IS_ALARM","SET_IS_CBC_SHOW","GET_IS_CBC_SHOW","SET_SITE_CD","GET_SITE_CD","SET_DEVICE_SERIALNUM","GET_DEVICE_SERIALNUM","SELECT_BF_HOT_KEY","SELECT_WBC_HOT_KEY","SELECT_WBC_CUSTOM_CLASS","SELECT_EMP_NO","INSERT_WBC_MODIFY_HIST","GET_WBC_MODIFY_HIST","UPDATE_WBC_HIST_LIST","GET_WBC_HIST_LIST","GET_COMMON_CODE_LIST","GET_COMMON_CODE","GET_CODE_LIST_USER_POSITION","GET_CODE_LIST_USER_AUTHORIZATION","GET_CODE_LIST_USER_CASSETE_STATE","GET_CODE_LIST_PROCESSING_STATE","GET_CODE_LIST_ANALYSIS_TYPE","GET_CODE_LIST_CELL_COUNT","GET_CODE_LIST_GENERAL_STAIN","GET_CODE_LIST_SPECIAL_STAIN","GET_CODE_LIST_IMMUNO_STAIN","GET_CODE_LIST_SAMPLING_STAIN","GET_CODE_LIST_GENDER","GET_CODE_LIST_TEST_TYPE","GET_CODE_SIGNED_STATE","GET_CODE_LOG_TYPE","GET_CODE_SLOT_STATE","EVENT_TYPE_USER","EVENT_TYPE_SYSTEM","SET_EVENT_LOG","GET_EVENT_LOG","REMOVE_EVENT_LOG","REMEMBER_PWD_KEY","REMEMBER_PWD_IV","RECEIVE_DATA_BROADCAST_CHAN","GET_PB_CLASSIFICATIONS","GET_CLASSIFICATION_IMAGES","GET_MARKER_POSITION","GET_PB_HOT_KEYS","UPDATE_CLASSIFICATION","PB_IA_MOVE_IMAGE","SET_WBC_IMAGE_LIST","GET_PB_WBC_IMAGES","SET_SELECTED_ITEM","GET_SELECTED_ITEM","IA_SET_CUSTOM_CLASS","IA_GET_CUSTOM_CLASS","IDS_MSG_SUCCESS","IDS_MSG_FAILED","IDS_MSG_OIL_REMAIN_COUNTER","IDS_MSG_POWEROFF","IDS_MSG_INITALIZE","IDS_MSG_SIGNING_COMPLETE","IDS_MSG_DELETE_THE_SELECTED_ITEMS","IDS_MSG_ACCOUNT_CHANGED","IDS_MSG_DELETE_ACCOUNT","IDS_MSG_LOGOUT","IDS_MSG_DUPLICATE_KEY","IDS_MSG_HOTKEY_IN_ENGLISH","IDS_ERROR_CHECK_ID","IDS_ERROR_CHECK_PASSWORD","IDS_ERROR_NOT_MATCHED_PASSWORD","IDS_ERROR_SIGINUP","IDS_ERROR_SIGINUP_ALREADY_ID","IDS_ERROR_LOGIN_ERROR","IDS_ERROR_LOGIN_ID","IDS_ERROR_ALREADY_RUNNING","IDS_ERROR_STOP_PROCESS","IDS_ERROR_INIT_ERROR","IDS_ERROR_CHECK_REQUIRED_FIELDS","IDS_ERROR_CHECK_SLOT_NO","IDS_ERROR_FAVORITE_MAX_REGIST","IDS_ERROR_FAVORITE_MAX_REGIST2","IDS_ERROR_ENTER_YOUR_ORDER_DETAILS","IDS_ERROR_SELECT_A_TARGET_ITEM","IDS_ERROR_PLEASE_SELECT_AN_IMAGE","IDS_ERROR_ALREADY_ADDED","IDS_ERROR_ADD_A_WORKLIST","IDS_ERROR_NO_TEST_RESULTS","IDS_ERROR_FILE_CLISSIFICATION","IDS_ERROR_ENTER_CLASS_INFO","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","IDS_DOWNLOAD_COMPLETE","IDS_SELECT_SLIDE","IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED","IDS_RECOVER_GRIPPER_CONDITION","IDS_PLEASE_ENTER_END_DATE","IDS_PLEASE_ENTER_START_DATE","IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS","IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE","IDS_RESTART_SYSTEM","IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER","IDS_BARCODE_REGISTRATION_SUCCESSFUL","IDS_THIS_IS_A_DUPLICATION_ABBREVIATION","IDS_THIS_CARD_HAS_ALREADY_BEEN_USED","IDS_MSG_UPLOAD_LIS","IDS_MSG_SUBMIT_SLIDE","IDS_MSG_CONFIRM_SLIDE","IDS_PLEASE_SELECT_A_CLASS","IDS_PLEASE_SELECT_A_BACKUP_DATE","IDS_PLEASE_SELECT_A_BACKUP_PATH","IDS_PLEASE_SELECT_A_BACKUP_FILE","IDS_NO_DATA_FOUND","IDS_MSG_DATA_BACKUP","IDS_MSG_DATA_RESTORE","IDS_MSG_SIZE_CHROMIA_LINKED_LIS","UPDATE_SUCCESSFULLY","TCP_DiSCONNECTED","alreadyInitialized","lockRow","exit","getDateTimeStr","now","moment","formattedTime","format","formatDateString","dateString","momentObj","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","useHttpClient","apiBaseUrl","httpGet","url","parameters","type","callImg","httpGetAct","endpoint","options","headers","axios","defaults","withCredentials","slush","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","auth","refresh","requiresToken","processInfo","list","rbcclassification","wbcclassification","user","register","login","userCheck","getUsers","userDataPut","deleteUser","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","pageUpDown","updatePcIpState","clearPcIpState","folder","folders","classOrder","remainingCount","qualityCheck","images","move","moveClassImage","jsonReader","jsonCreate","dziReader","pdf","filesystem","readGet","createDirectory","fileCreate","fileTxtRead","H7Read","H7Message","Hl7Create","device","getDeviceInfo","ip","backUp","backUpDate","excel","execute","browser","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","forEach","unsubscribe","filter","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","PositionMarginList","WbcPositionMarginList","defaultCbcList_0011","classCd","fullNm","isSelected","defaultCbcList","rbcClassList","categoryId","categoryNm","classInfo","classId","classNm","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","abbreviation","key","orderIdx","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","lisCodeRbcOption","minRunCount","minGPCount","minPACount","wbcRunningCount","wbcTargetCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","barcodeImgDir","dirName","howellJollyDirName","malariaDirName","noMalariaDirName","rbcClassDirName","rbcImageDirName","wbcClassDirName","bfDirName","bfHighDirName","bfClassDirName","hideConfirm","okConfirm","createDeviceInfoApi","getDeviceInfoApi","getDeviceIpApi","userModuleDataGet","userModule","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","emits","showConfirm","confirmType","confirmMessage","filteredWbcCount","newUserId","oldUserId","initDataExecute","nextTick","setWbcRunningCount","initData","loginSetData","dispatch","newRunInfo","newVals","newIsRunningState","newBfSelectFiles","newEmbeddedStatusJobCmd","newExecuteState","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","emitSocketData","toggleStartStop","action","showSuccessAlert","rbcPositionMargin","assign","InfoData","startEmbedded","message","handleOkConfirm","sendInit","newObj","runInfoObj","result","diffCellAnalyzingCount","pbsCellAnalyzingCount","bfCellAnalyzingCount","console","log","runCountResult","runCountData","filteredRunCountData","deviceData","_component_font_awesome_icon","_resolveComponent","_Fragment","_withDirectives","$event","disabled","_renderList","_vModelSelect","onClick","_createVNode","icon","_normalizeClass","_unref","style","_createBlock","Alert","onHide","_createCommentVNode","Confirm","onOkConfirm","width","height","runningInfoModule","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","isBm","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","Number","percentage","setInterval","initValData","item","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","cx","cy","r","stroke","fill","colspan","dspOrderList","pb100aCassette","startStatus","existingItemIndex","findIndex","slot","basicWbcArr","basicBmClassList","defaultWbcClassList","defaultBmClassList","basicWbcArrClint","title","name","count","percent","order","basicBmClassListClint","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","storeEm","dspWbcClassList","dspBfClassList","nonWbcClassList","totalCount","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","allCountsAreZero","flat","nonRbcWbcInfoArray","includes","updateCounts","iCasStatArr","lastIndexOf","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","formattedPercent","getCategoryName","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","folderPath","match","fileName","imageUrl","runningPath","pathItem","image","unshift","_Transition","mode","default","_withCtx","alt","_","iCasExist","oCasExist","casExistChangeText","val","pbVersion","viewerCheck","onBeforeMount","router","PB_VERSION","rbcUpdate","classInfoUpdate","initDataChangeText","Execute","onInitDataChangeText","ProcessInfo","orderList","_vShow","isClass","workingView","WorkingView100A","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","getAllUsersApi","getUserApi","putUserDataApi","deleteUserApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","createAccount","currentDate","Date","showErrorAlert","subscriptionDate","_vModelText","rbcClassListArr","reactive","defaultCellImgData","testTypeCd","diffWbcPositionMargin","diffRbcPositionMargin","diffPltPositionMargin","isAlarm","alarmCount","keepPage","backupPath","backupStartDate","backupEndDate","settingsConstant","initializeAllSettings","firstGetSettings","getRequest","initializeType","sendingFormStr","sendingForm","defaultItem","createRequest","anotherDefaultValue","defaultComputedValueForCreateRequest","afterResponse","cellImgSet","toISOString","split","autoBackUpMonth","autoBackUpStartDate","combindDegree","rbcDegreeList","classItem","defaultDegree","isAutoLoginEnabled","isAutoLogginable","getStoredUser","localStorage","loginUser","goJoinPage","getIpAddress","updateAccount","document","documentElement","requestFullscreen","resFlag","placeholder","rowspan","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","analysisVal","backupRootPath","local","toDate","saveHttpType","drive","backupDrive","cellimgId","filterNumbersOnly","filteredValue","replace","trim","createBackup","backupDto","startDate","add","endDate","sourceFolderPath","driveGet","saveData","backUpData","savePlace","backupPlace","dataKey","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","onInput","Datepicker","modelValue","onResetDegree","createRbcDegreeData","error","processData","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","from","values","isBlinkingGripper","isBlinkCameraReset","blinkTimeout","cameraResetTimeOut","onScan","onGripperOpen","clearTimeout","setTimeout","onCameraReset","wbcCustomParm","customNum","wbcCustomItems","getWbcCustomClasses","saveWbcCustomClass","updateResult","classArr","filterEnglishAndNumbers","field","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","bfHotKeysItems","getBfHotKeyClasses","saveBfCustomClass","normalItems","getNormalRange","saveNormalRange","normalRangeItems","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","top","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","activeTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","visible","closeLayer","for","storedUser","currentUserId","allUsers","userSearchOption","userSearchOptions","userTypeOptions","inputText","isModalVisible","selectedUserData","selectedUserId","formattedSubscriptionDate","formattedLatestDate","latestDate","getAllUsers","filterUsers","users","searchText","searchOption","searchQuery","toLowerCase","searchField","onSearch","filteredUsers","putSelectedUserData","currentUserData","getSelectedUser","selectedUserIdParam","openLayer","onModalOpen","isVisible","handleDeleteUser","Modal","onAfterOpen","header","content","readonly","imagePrintAndWbcArr","selectedItems","getImagePrintData","saveImagePrint","imagePrintItems","_vModelCheckbox","lisCodeWbcArr","lisCodeRbcArr","minCountArr","saveLisCode","rbcResult","minCountResult","lisCodeItems","updateRbcResult","updateMinCountResult","minCountItems","is","wbcResult","wbcData","rbcData","minCountData","hospitalSiteCd","hospitalNm","cbcCodeArr","saveCbcCode","cbcCodeItems","hospitalName","hospitalObj","filePathSetArr","getFilePathSetData","saveFilePathSet","filePathSetItems","updateHotKey","updateFilePath","updateCbcFilePath","selectedTab","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","qualityCheckOpen","projectVersion","AI_VERSION","WEB_FRONTEND_VERSION","WEB_BACKEND_VERSION","tabs","viewerTabs","currentTab","changeTab","tab","components","LoginAccount","AnalysisDatabase","Report","QualityCheck","Version","viewerComponents","storedTab","currentTabComponent","createRunningApi","updateRunningApi","getRunningApi","queryString","entries","encodeURIComponent","join","deleteRunningApi","detailRunningApi","pageUpDownRunnIngApi","updatePcIpStateApi","readJsonFile","readDziFile","readFileTxt","readH7File","readH7Message","createH17","disableScroll","body","overflow","enableScroll","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","printContent","selectedSampleId","selectItems","orderClass","nonWbcIdList","rbcInfoPathAfter","rbcTotalVal","sizeChromiaTotal","chromiaTotalTwo","shapeBodyTotal","nonWbcTitleArr","printReady","getDetailRunningInfo","selectItemWbc","rbcTotalAndReCount","printPage","img_drive_root_path","url_new","response_new","fullPath","url_Old","response_old","newJsonData","rbcItem","newRbcData","foundElementIndex","el","newRbcDataObj","posX","posY","chromiaTotalval","shapeBodyTotalVal","shapeBodyTotalVal2","lastIndex","rbcInfoAfter","pathCategory","cat","pathClass","countReAdd","percentageChange","totalPLT","malariaTotal","lastElement","xel","parseFloat","filteredWbcInfo","compressedContent","pako","innerHTML","level","fetch","method","ok","blob","URL","createObjectURL","open","revokeObjectURL","oArr","sortArr","sortedWbcInfoData","sortWbcInfo","newSortArr","nameA","nameB","closePrint","ref_key","submitUserId","submitOfDate","birthDay","gender","rbcMemo","wbcMemo","_normalizeStyle","coordinates","loadMoreRef","selectedItemId","itemObj","myIp","loadingDelay","contextMenu","x","y","rightClickItem","printOnOff","selectAllCheckbox","instance","barcodeImg","dataBasePageReset","isCtrlKeyPressed","isShiftKeyPressed","firstShiftKeyStr","lastShiftKeyStr","socketTimeoutId","scrollableDiv","handleKeyDown","ctrlKey","shiftKey","scrollTop","addEventListener","handleScroll","handleOutsideClick","handleKeyUp","onUnmounted","removeEventListener","loadingDelayParents","watchEffect","dbData","selectedItemIdFalse","filteredItems","selectItem","removeCheckBox","selectedRow","querySelector","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","dbDataItem","contextMenuElement","contains","rowRightClick","lock_status","wbcInfoData","sortedArray","clientX","handleShiftSelection","startId","endId","items","itemId","handleCheckboxChange","entry","isIntersecting","intersectionRatio","ipAddress","then","delayedEmit","catch","delay","appContext","config","globalProperties","$socket","pcIp","clonedWbcInfo","wbcInfoAfter","clonedRbcInfo","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","submitState","deleteRow","idsToDelete","rootArr","ids","idsToDeleteLock","submitStateChangeText","pilePath","barCodeImageShowError","wbcTotal","nonWbcTitles","selectedItem","newSelectedItem","setWbcTotalAndPercent","reduce","acc","showClassificationResults","classificationResult","showClassificationNonWbcResults","onImageError","allImages","hiddenImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","hideImage","imageSet","onError","rootPath","executeExcelCreate","dbGetData","today","thirtyDaysAgo","setDate","searchType","page","prevPage","titleItem","titleItemArr","nrCount","wbcCountOrder","classListToggle","bmClassIsBoolen","prevDataPage","reqDataPrev","checkedSelectedItems","dataBaseOneCall","eventTriggered","notStartLoading","handleStateVal","initDbData","on","off","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","getDbData","saveLastSearchParams","storedSearchParams","pageNum","pageChange","requestData","pageSize","startDay","endDay","dateA","dateB","diff","diffInMs","getTime","diffInDays","loadMoreData","loadPrevData","exportToExcel","folderName","checkedItem","dateRefresh","checkListItem","onChange","_KeepAlive","ListTable","onLoadMoreData","onLoadPrevData","onInitData","onSelectItem","onRefresh","onCheckListItem","ListInfo","ListWbcImg","ListBmImg","checkedClassIndices","rbcInfoAfterVal","rbcInfoBeforeVal","memo","sliderValue","memoModal","isBefore","classInfoArr","useRouter","except","selectedClass","allCheckType","jsonIsBool","rbcReData","resetRbcArr","bodyTotal","shapeTotal","rbcReDataCheck","rbcSendtimerId","timeoutId","countArtifact","countDoubleNormal","currentRoute","rightClickItemSet","isCommitChanged","allCheckClear","newItem","afterChange","processItems","argument","reDegree","handleClick","isChecked","updateClassInfoArr","clickChangeSens","handleLiClick","toggleCheckbox","shapeTotalVal","inclusionBody","classChange","sensitivity","classInfoItem","resetTimer","sensRbcReJsonSend","rbcInfoAfterSensitivity","className","anyWay","rbcInfoAfterData","afterCategory","afterClassItem","selectedClassVal","findClass","updatedItem","resRunningItem","toggleAll","check","allCheckboxes","checkbox","some","oldItem","updataClassInfoaArr","onClickDegree","isNormal","memoOpen","memoCancel","memoChange","enterAppliedRbcMemo","replaceAll","alertShow","scrollTo","behavior","commitConfirmed","onCommit","localTime","rulers","moveImgPost","moveClassImagePost","VIEWER_CHECK","malariaList","noMalariaList","selectedClickImages","indexBeforePressingShift","draggedImages","imageExist","getImageList","json","err","handleBodyClick","closest","handleClickImage","section","imgName","clickedImage","startIdx","endIdx","i","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","malaria","noMalaria","viewer","imgSet_img_list","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","activeRuler","showSelect","rulerPos","prevPosX","prevPosY","left","rulerSize","rulerWidth","viewBoxWH","tilingViewerLayer","tileExist","newItemClassInfoArr","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","classInfoArrNewReData","canvasCurrentHeight","canvasCurrentWitdh","initElement","closeSelectBox","dziWidthHeight","urlImage","imageFileName","imageResponse","filePath","extractWidthHeightFromDzi","xmlString","parser","DOMParser","xmlDoc","parseFromString","sizeElement","getElementsByTagName","getAttribute","moveRbcClassEvent","existingOverlays","getElementsByClassName","newAsrr","moveRbcClassItem","removeDiv","rbcInfoPathAfterJsonCreate","drawRbcMarker","overlaysArray","overlay","removeOverlay","compareData","jsonData","jsonString","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","selectBox","removeRbcMarker","rbcMarker","nenenen","rbcClassRightClick","currentTarget","HTMLElement","sss","getElementById","destroy","canvas","ctx","getContext","clearRect","beginPath","colors","info","lineWidth","strokeStyle","classItemPosX","classItemPosY","rectPath","Path2D","x2","x1","y2","y1","ddrr","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","maxZoomLevel","minZoomLevel","zoomPerClick","zoomPerScroll","viewportMargins","bottom","right","visibilityRatio","element","moveHandler","existingMagCanvas","removeChild","drawer","magCanvas","createElement","magCtx","magWidth","magHeight","zoomLevel","position","border","borderRadius","zIndex","appendChild","drawImage","visibility","addOverlay","location","addHandler","Image","Size","Width","Height","parentElement","container","drawRuler","originalEvent","itemPos","color","setAttribute","backgroundColor","opacity","overlayRect","viewport","imageToViewportRectangle","clickPos","pointFromPixel","canvasPos","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","fileNameResult","extractSubStringBeforeFiles","xmlns","Url","Format","Overlap","TileSize","searchString","endIndex","indexOf","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbReset","brightnessReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","maxNumberOfLines","numberOfLines","round","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","gridLines","querySelectorAll","line","remove","onClickRuler","ruler","divtilingViewer","rulerOverlay","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","zoomRatio","viewportToImageZoom","titleElement","textAlign","fontSize","minWidth","startX","endX","startY","endY","centerX","centerY","halfWidth","onClickZoom","Malaria","onContextmenu","resData","route","useRoute","cbcLayer","isButtonDisabled","pageMoveDeleteStop","isLoading","isNext","moveWbc","deleteConnectionStatus","upDownBlockAccess","pageGo","pageUpDownRunnIng","step","res","processNextDbIndex","direction","handleDataResponse","dbId","resClassInfo","wbcArr","sortedWbcInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","cbcWorkList","cbcPatientNo","cbcPatientNm","cbcSex","cbcAge","inhaTestCode","cbcFilePathSetArr","deviceSerialNm","cbcCodeList","selectItemsVal","getCbcPathData","getCbcCodeList","initCbcData","hospital","realUrl","params","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","kuahGilHosCbc","machine","episode","returnCode","regNo","sex","age","testCode","testCodeList","codes","codeArray","obj","deviceBarcode","msg","segments","cbcSegment","CBC_CD","fields","readFileTxtRes","updateRunningApiPost","cbcData","cbcDataArray","excludedTitles","originalDb","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","allUnCheck","isBeforeUpdate","refreshClass","classInfoArrUpdate","classInfoArrUpdateRe","unChecked","ClassInfoMenu","onRefreshClass","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","onClassInfoArrUpdateRe","RbcImageList","onUnChecked","eqmtcd","CbcWbcTestCdList_0002","spcParams","fileSysPost","createFile","clonedWbcInfoStore","wbcInfoVal","wbcInfoAfterVal","wbcInfoBeforeVal","nonRbcClassListVal","nonRbcClassList","nonRbcClassBeforeList","nonRbcClassAfterList","titleArr","toggleLock","totalBeforeCount","totalAfterCount","okMessageType","lisFilePathSetArr","getLisWbcRbcData","getLisPathData","beforeAfterChange","lisModalOpen","goClass","wbcClassTileChange","updateOriginalDb","toggleLockEvent","uploadLis","codeList","fiveDiffWorkList","wbcDiffCountItem","wbcItem","wbcTemp","fiveDiffItem","nsPercentItem","ancResult","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","resultFlag","ResultFlag","resultflag","_text","error2","lisLastStep","seq","LIS_CD","IA_CD","lisFileUrlCreate","godae","inhaDataSend","otherDataSend","fileCreateRes","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","sendLisMessage","filepath","resultStr","tmpList","tmpStr","rbcTmp","MIN_COUNT","specialCodes","IA_CATEGORY_CD","rbcItemElement","IA_CLASS_CD","replacements","rbcTmp2","kumcMergePercent","kumcBandPercent","segItem","bandItem","parms","filename","resultMsg","userid","errorCode","errorMessage","newWbcDataArr","wbcDataItem","CD_NM","newRbcDataArr","rbcDataItem","CATEGORY_NM","CLASS_NM","succ","fail","userNm","getUsernm","usernm","enterAppliedWbcMemo","getStringValue","noAlert","wbcBeforeInfo","wbcAfterInfo","wbcBeforeArr","wbcAfterArr","sortedWbcBeforeInfo","sortedWbcAfterInfo","totalCountSet","beforeItem","afterItem","before","after","showType","titleInArray","classInfoSort","classOrderChanged","wbcArrs","submitStateChanged","changedSubmitState","WbcClass","onClassOrderChanged","onSubmitStateChanged","Print","onPrintClose","updateWbcInfo","Function","classCompareShow","Boolean","selectedTitle","setRef","replaceFileNamePrefix","onDragOver","isBorderChanged","expose","__expose","refsArray","cellRef","firstClass","firstClassObj","lastClass","firstItemIndex","lastItemIndex","lastClassObj","previousFirstClass","previousLastClass","loading","scrollToElement","targetElement","scrollIntoView","toRefs","classImgChange","handleImageLoad","itemIndex","updateClassValue","currentClass","previousClass","classObj","$emit","imageIndex","onDblclick","parseInt","onLoad","moveImgIsBool","draggedItemIndex","draggedImageIndex","firstClickedImageIndex","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","imageSize","selectSizeTitle","allCheck","cellMarkerIcon","modalOpen","selectedImageSrc","modalImageWidth","modalImageHeight","imgSet","selectItemImageArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","$imageGalleryRef","handleClickOutside","imgSetLocalStorage","currentMoveImgIsBool","handleUpdateCellRef","refValue","classCompare","imgPixelConvertToPercent","storedBrightness","storedRgb","imageSizeCopy","nextPage","isNextFalse","handleRightClick","openContextMenu","showSizeControl","menuHeight","screenHeight","innerHeight","mouseX","mouseY","menuX","menuY","menuWidth","innerWidth","moveSelectedImages","itemIdx","matchingItemFind","infoItem","addToRollbackHistory","draggedItem","matchingItemIndex","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","projectTypeReturn","wbcinfo","wbcPush","foundObject","itemsToDelete","prefix","modifiedPrefix","openModal","closeModal","outerClickCloseModal","zoomIn","newWidth","newHeight","zoomOut","drawCellMarker","imgResize","jsonImageDat","imageElement","foundItem","FILE_NM","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","POSX2","POSX1","rectHeight","POSY2","POSY1","display","allCheckChange","allCheckInsert","idxKey","imgSizeReset","reset","selectedSizeTitle","changeImageSize","currentWidth","currentHeight","onDragOverCircle","onDropCircle","toUpperCase","moveSelectedImagesToTargetItem","targetIndex","selectedImages","sourceItemIndex","sourceItem","correspondingItem","itemImg","dataItem","wbcInfoIdArr","customClassArr","selectImage","classInfoitem","imageIndexInSelected","img","targetItemIndex","originalOnDrop","selectedImagesToMove","keyMove","wbcInfosArr","sourceFolders","destinationFolders","classInfoBagic","matchingItem","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","Set","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","highImg","findAfterArr","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","onIsNextFalse","ClassInfo","onNextPage","onScrollEvent","ImageGallery","onAllCheckChange","onSelectImage","onOpenModal","onHideImage","onHandleRightClick","onOnDrop","onOnDragStart","onOnDropCircle","onOnDragOverCircle","onScrollToElement","paImages","idealZoneImages","idealStitchImages","megaImages","strArray","buttonOfen","imageLoaded","loadedImagesCount","viewerSmall","getImgUrl","getImageUrls","getImageUrlsSmallImg","resp","openInViewer","navigator","showZoomControl","showHomeControl","showFullScreenControl","showRotationControl","showFullPageControl","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","closeViewer","viewerElement","LoadingOverlay","hideImageRef","newImgHeight","newImgWidth","onImageLoad","imgElement","complete","naturalHeight","naturalWidth","bool","transform","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","to","next","currentUser","getBrowserExit","_imports_0","appHeaderLeftHidden","logOutBox","isBlinkingPrime","isDoorOpen","storagePercent","eqStatCdData","oilCountData","storagePercentData","maxOilCount","statusBarWrapper","statusBar","noRouterPush","currentTime","isAralrmInterver","clickType","formattedDate","updateDateTime","toLocaleDateString","toLocaleTimeString","clear","fullscreenElement","exitFullscreen","timerId","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","logOutBoxOn","logout","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","_component_router_link","namespaced","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","storageSize","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","embeddedNumber","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","chatRunningData","rbcReDataClass","appAlertOpen","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setIaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceSerialNm","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setSelectedSampleId","setCbcLayer","setInhaTestCode","setRbcReData","setRbcReDataClass","setResetRbcArr","setRbcInfoAfterData","setClassInfoArr","setRbcReDataCheck","setAppAlertOpen","setDataBasePageReset","setCommonInfo","hasOwnProperty","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","errorLevel","processingCode","cassetId","existingSlot","existing","setTimeInfo","createStore","modules","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","runningInfoStore","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","range","countingInterStartval","countingInterRunval","viewerCheckApp","parsedDataProps","deleteData","siteCdDvBarCode","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","reqArrPaste","sendMessage","leave","startSysPostWebSocket","runInfoPostWebSocket","textDecoder","TextDecoder","stringData","decode","parseDataWarp","deviceInfoObj","saveDeviceInfo","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","traySlot","tactTime","bf_lowPowerPath","bminfo","saveRunningInfo","deviceInfo","deviceItem","last","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","socketPlugin","install","app","socket","io","transports","faHalfCircleUp","iconName","faHalfCircleDown","library","fas","faCircle","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","n","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}