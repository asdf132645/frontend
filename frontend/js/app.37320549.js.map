{"version":3,"file":"js/app.37320549.js","mappings":"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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constFile/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constFile/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constFile/analysis.ts","webpack://uimdCell/./src/common/defines/constFile/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constFile/settings.ts","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/lib/commonfunction/settingFunctions.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/utils/settingSave.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/common/siteCd/siteCd.ts","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?2b55","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/common/lib/utils/scrollBlock.ts","webpack://uimdCell/./src/common/lib/commonfunction/classFicationPercent.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/common/api/service/excel/excelApi.ts","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/defines/constFile/rbc.ts","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constFile/lis.ts","webpack://uimdCell/./src/common/lib/utils/removeDuplicateIds.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?5895","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/ImageGallery.vue?18ab","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/common/lib/storeSetData/common.ts","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/common/defines/constFile/classArr.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/icons/customIcons.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 4856,\n\t\"./uz-latn.js\": 4856,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]","export const testType = [\r\n    {value: '01', text: 'WBC Diff'},\r\n    {value: '04', text: 'PBS'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];","import { commonCodeList } from '@/common/defines/constFile/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constFile/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, iaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n    return `${apiBaseUrl}/images/getImageRealTime?folder=${iaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}`;\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"P\"),\n  /*#__PURE__*/_createTextVNode(\"rocessing \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"I\"),\n  /*#__PURE__*/_createTextVNode(\"nformation \")\n], -1)\nconst _hoisted_2 = { class: \"processInfoUl\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)\nconst _hoisted_6 = { class: \"proVal\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\nconst _hoisted_13 = { class: \"proSpan\" }\nconst _hoisted_14 = { class: \"proVal\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)\nconst _hoisted_16 = { class: \"proVal\" }\nconst _hoisted_17 = { class: \"proSpan\" }\nconst _hoisted_18 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst currentCardCount = ref('');\r\nconst currentCardName = ref('');\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount;\r\n    }\r\n    currentCardCount.value = sysInfo.currentCardCount;\r\n    currentCardName.value = sysInfo.currentCardName;\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"ul\", _hoisted_2, [\n      _createElementVNode(\"li\", null, [\n        _hoisted_3,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_5,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_7,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_9,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_13, _toDisplayString(siteCd.value === '0019' ? 'Order Date' : 'Analyzed Date'), 1),\n        _createElementVNode(\"span\", _hoisted_14, _toDisplayString(siteCd.value === '0019' ? processInfoItem.value?.analyzedDttm   : processInfoItem.value?.orderDate), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_15,\n        _createElementVNode(\"span\", _hoisted_16, _toDisplayString(prevOilCount.value), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_17, _toDisplayString(currentCardName.value), 1),\n        _createElementVNode(\"span\", _hoisted_18, _toDisplayString(currentCardCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">P</span>rocessing <span class=\"greenColor\">I</span>nformation </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <span class=\"proSpan\">\r\n          {{ siteCd === '0019' ? 'Order Date' : 'Analyzed Date' }}\r\n        </span>\r\n        <span class=\"proVal\">\r\n          {{ siteCd === '0019' ? processInfoItem?.analyzedDttm   : processInfoItem?.orderDate }}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ currentCardName }}</span>\r\n        <span class=\"proVal\">{{ currentCardCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst currentCardCount = ref('');\r\nconst currentCardName = ref('');\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount;\r\n    }\r\n    currentCardCount.value = sysInfo.currentCardCount;\r\n    currentCardName.value = sysInfo.currentCardName;\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const wbcCountOptions = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const bmCountOptions = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const stitchCountOptions = [{value: '1', text: '1 stitch'},\r\n    {value: '2', text: '2 stitch'},\r\n    {value: '3', text: '3 stitch'},\r\n    {value: '4', text: '4 stitch'},\r\n    {value: '5', text: '5 stitch'}];\r\n\r\nexport const slideCard = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ]\r\n};\r\n\r\nexport const slideCard100a = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ]\r\n};\r\n","interface Messages {\r\n    [key: string]: string;\r\n}\r\nexport  const messages: Messages = {\r\n    Logout: 'Would you like to log out?',\r\n\r\n    // login page\r\n    GET_POSITION_LIST: 'getPositionList',\r\n    GET_LOGIN_HISTORY: 'getLoginHistory',\r\n    SET_USER: 'setUser',\r\n    IS_REGIST_USER: 'isRegistUser',\r\n    UPDATE_LOGIN_DTTM: 'updateLoginDttm',\r\n    UPDATE_USER_AVAILABLE: 'updateUserAvailable',\r\n\r\n    // WBC classification\r\n    GET_WBC_CLASS_LIST: 'getWbcClassList',\r\n    GET_WBC_CLASS_LIST_ALL: 'getWbcClassListAll',\r\n    GET_WBC_TOTAL_COUNT: 'getWbcTotalCount',\r\n    UPDATE_WBC_COUNT: 'updateWbcCount',\r\n    GET_WBC_COUNT: 'getWbcCount',\r\n    GET_TEST_TYPE: 'getTestType',\r\n    // 인하대 test type 명칭 변경\r\n    GET_MODIFIED_TEST_TYPE: 'getModifiedTestType',\r\n    GET_STITCH_COUNT: 'getStitchCount',\r\n    GET_RBC_COUNT: 'getRbcCount',\r\n    GET_RBC_COUNT_HIST: 'getRbcCountHist',\r\n    GET_RBC_COUNT_SKMC: 'getRbcCountSkmc',\r\n    UPDATE_DEGREE: 'updateDegree',\r\n    INIT_WBC_COUNT: 'initWbcCount',\r\n    INIT_RBC_DEGREE: 'initRbcDegree',\r\n    GET_WBC_INFO: 'getWbcInfo',\r\n    SET_WBC_IMAGE_HIST: 'setWbcImageHist',\r\n    GET_WBC_IMAGE_HIST: 'getWbcImageHist',\r\n    INIT_WBC_IMAGE_HIST: 'initWbcImageHist',\r\n    INSERT_WBC_CLASSIFICATION: 'insertWbcClassification',\r\n    SET_WBC_CUSTOM_LIST: 'setWbcClassList',\r\n    UPDATE_HOT_KEYS: 'updateHotKeys',\r\n    UPDATE_BF_HOT_KEYS: 'updateBfHotKeys',\r\n    UPDATE_ORDER: 'updateOrder',\r\n    UPDATE_ORDER_BF: 'updateOrderBf',\r\n    UPDATE_IMAGE_HIST: 'updateImageHist',\r\n    SET_CURRENT_WBC_RESULTS: 'setCurrentWbcResults',\r\n    GET_CURRENT_WBC_RESULTS: 'getCurrentWbcResults',\r\n    SET_BEFORE_WBC_RESULTS: 'setBeforeWbcResults',\r\n    GET_BEFORE_WBC_RESULTS: 'getBeforeWbcResults',\r\n\r\n    // 집계\r\n    GET_WBC_MODIFY_LIST: 'getWbcModifyList',\r\n    GET_WBC_MODIFY_LIST_ALL: 'getWbcModifyListAll',\r\n    GET_BF_MODIFY_LIST: 'getBfModifyList',\r\n\r\n    // RBC classification\r\n    GET_RBC_CLASS_LIST: 'getRbcClassList',\r\n    GET_MALARIA_COUNT: 'getMalariaCount',\r\n    UPDATE_MALARIA_COUNT: 'updateMalariaCount',\r\n    SET_CURRENT_RBC_RESULTS: 'setCurrentRbcResults',\r\n    GET_CURRENT_RBC_RESULTS: 'getCurrentRbcResults',\r\n\r\n    SET_CLASSIFICATION: 'setClassification',\r\n    GET_CLASSIFICATION_ITEM: 'getClassificationItem',\r\n    SET_CLASSIFICATION_ITEM: 'setClassificationItem',\r\n\r\n    UPDATE_RBC_CLASSIFICATION: 'updateRbcClassificatin',\r\n    UPDATE_RBC_CLASSIFICATION_SKMC: 'updateRbcClassificatinSkmc',\r\n    INSERT_WBC_SUCCESS: 'insertWbcSuccess',\r\n    SELECT_RBC_DEGREE: 'selectRbcDegree',\r\n    UPDATE_RBC_DEGREE: 'updateRbcDegree',\r\n\r\n    // Test page\r\n    SET_TEST_LIST: 'setTestList',\r\n    GET_TEST_LIST: 'getTestList',\r\n    GET_TEST_RESULT: 'getTestResult',\r\n    GET_RBC_FIELDS: 'getRbcFields',\r\n    GET_WBC_FIELDS: 'getWbcFields',\r\n    GET_RBC_ITEMS: 'getRbcItems',\r\n    GET_WBC_ITEMS: 'getWbcItems',\r\n    INIT_OIL_COUNT: 'initOilCount',\r\n    UPDATE_RESULT: 'updateResult',\r\n    UPDATE_RUNNING_STATE: 'updateRunningState',\r\n    GET_ORDER_LIST: 'getOrderList',\r\n    SET_ORDER_LIST: 'setOrderList',\r\n    UPDATE_ORDER_LIST: 'updateOrderList',\r\n    INIT_ORDER_LIST: 'initOrderList',\r\n    GET_TEST_RESULT_ALL: 'getTestResultAll',\r\n    GET_SEARCH_OPTIONS: 'getSearchOptions',\r\n    UPDATE_SEARCH_OPTIONS: 'updateSearchOption',\r\n    SET_TEST_HISTORY: 'setTestHistory',\r\n    GET_TEST_HISTORY_LIST: 'getTestHistoryList',\r\n    ALL_TEST_HISTORY_LIST: 'allTestHistoryList',\r\n    SEARCH_TEST_HISTORY_LIST: 'searchTestHistoryList',\r\n    UPDATE_TEST_HISTORY: 'updateTestHistory',\r\n    GET_TEST_HISTORY: 'getTestHistory',\r\n    DELETE_TEST_HISTORY: 'deleteTestHistory',\r\n    UPDATE_SIGNED_STATE: 'updatesubmitState',\r\n    UPDATE_TEST_HISTORY_WBC_INFO: 'updateTestHistoryWbcInfo',\r\n    GET_RBC_COMMENT: 'getRbcComment',\r\n    GET_WBC_COMMENT: 'getWbcComment',\r\n    GET_RUNNING_INTERVAL_ID: 'getRunningIntervalId',\r\n    SET_RUNNING_INTERVAL_ID: 'setRuningIntervalId',\r\n    UPDATE_TIMER: 'updateWorkingTimer',\r\n    GET_TIMER: 'getWorkingTimer',\r\n    SET_TIMER: 'setWorkingTimer',\r\n    SET_WORKING_INTERVAL_ID: 'setWorkingIntervalId',\r\n    GET_WORKING_INTERVAL_ID: 'getWorkingIntervalId',\r\n    GET_RUNNING_STATE: 'getRunningState',\r\n    SET_SLIDE_TIMER: 'setSlideTimer',\r\n    UPDATE_SLIDE_TIMER: 'updateSlideTimer',\r\n    GET_SLIDE_TIME_COUNT: 'getSlideTimeCount',\r\n    SET_USER_STOP: 'setUserStop',\r\n    GET_USER_STOP: 'getUserStop',\r\n    SET_WBC_CELL_POSITION: 'setWbcCellPosition',\r\n    GET_WBC_CELL_POSITION: 'getWbcCellPosition',\r\n    GET_TEST_HISTORY_PREV: 'getTestHistoryPrev',\r\n    GET_TEST_HISTORY_NEXT: 'getTestHistoryNext',\r\n    SET_IS_RECOVERY_RUN: 'setIsRecoveryRun',\r\n    GET_IS_RECOVERY_RUN: 'getIsRecoveryRun',\r\n\r\n    // Work List\r\n    SET_WORK_LIST: 'setWorkList',\r\n    GET_WORK_LIST: 'getWorkList',\r\n    INIT_WORK_LIST: 'initWorkList',\r\n    DELETE_WORK_LIST: 'deleteWorkList',\r\n    UPDATE_WORK_LIST: 'updateWorkList',\r\n    UPDATE_WORK_LIST_BM: 'updateWorkListBm',\r\n    UPDATE_SIGNED_WORK_LIST: 'updateSignedWorkList',\r\n    UPDATE_RBC_COMMENT: 'updateRbcComment',\r\n    UPDATE_WBC_COMMENT: 'updateWbcComment',\r\n    UPDATE_BM_COMMENT: 'updateBmComment',\r\n    UPDATE_SELECT_ORDER_ID: 'updateSelectOrderId',\r\n    GET_SELECT_ORDER_ID: 'getSelectOrderId',\r\n    ADD_WORK_LIST: 'addWorkList',\r\n    GET_TEST_BARCODES: 'getTestBarcodes',\r\n    ADD_DSP_LIST: 'addDspList',\r\n    GET_DSP_LIST: 'getDspList',\r\n\r\n    // Common\r\n    // lis 단축키 추가\r\n    SET_LIS_HOT_KEY: 'setLisHotKey',\r\n    UPDATE_NEW_TEST_SET: 'updateNewTestSet',\r\n    UPDATE_EXEC_TEST_TYPE: 'updateExecTestType',\r\n    INITIALIZE_MOUNT_CNT: 'initializeMountCnt',\r\n    UPDATE_MOUNT_CNT: 'updateMountCnt',\r\n    GET_CURRENT_USER: 'getCurrentUser',\r\n    GET_SETTINGS: 'getSettings',\r\n    UPDATE_RUNNING_PATH: 'updateRunningPath',\r\n    UPDATE_RESULT_PATH_WBC: 'updateResultPathWbc',\r\n    UPDATE_RESULT_PATH_RBC: 'updateResultPathRbc',\r\n    UPDATE_BARCODE_PATH: 'updateBarcodePath',\r\n    GET_SYSTEM_TIME_ID: 'getSystemTimeId',\r\n    SET_SYSTEM_TIME_ID: 'setSystemTimeId',\r\n    GET_USER: 'getUser',\r\n    UPDATE_REMEMBER_STATE: 'updateRememberState',\r\n    SET_CURRENT_USER: 'setCurrentUser',\r\n    UPDATE_ROOT_PATH: 'updateRootPath',\r\n    GET_FILE_FILTER: 'getFileFilter',\r\n    GET_USER_LIST: 'getUserList',\r\n    UPDATE_ANALYSIS_TYPE: 'updateAnalysisType',\r\n    UPDATE_TEST_TYPE: 'updateTestType',\r\n    UPDATE_RUNNING_MODE: 'updateRunningMode',\r\n    UPDATE_USER: 'updateUser',\r\n    DELETE_USER: 'deleteUser',\r\n    UPDATE_MARKER_STATE: 'updateMarkerState',\r\n    GET_MARKER_STATE: 'getMarkerState',\r\n    SET_PAUSE_STATE: 'setPauseState',\r\n    GET_PAUSE_STATE: 'getPauseState',\r\n    GET_BF_WHOLE_SLIDE_PATH: 'getBfWholeSlidePath',\r\n    GET_BF_WBC_CLASS_LIST: 'getBfWbcClassList',\r\n    GET_SIZE_SLIDE_VALUE: 'getSizeSlideValue',\r\n    UPDATE_LIS_CODE: 'updateLisCode',\r\n    SELECT_LIS_CODE: 'selectLisCode',\r\n    SELECT_LIS_CODE_RBC: 'selectLisCodeRbc',\r\n    UPDATE_CBC_CODE: 'updateCbcCode',\r\n    SELECT_CBC_CODE: 'selectCbcCode',\r\n    UPDATE_LIS_CONN_PATH: 'updateLisConnPath',\r\n    SELECT_LIS_CONN_PATH: 'selectLisConnPath',\r\n    GET_BACKUP_LIST: 'getBackupList',\r\n    RESTORE_BACKUP_DATA: 'restoreBackupData',\r\n    DELETE_BACKUP_DATA: 'deleteBackupData',\r\n    RESET_RBC_DEGREE: 'resetRbcDegree',\r\n    GET_DEFAULT_RBC_DEGREE: 'getDefaultRbcDegree',\r\n    UPDATE_CHECKED_CELL: 'updateCheckedCell',\r\n    SET_LOCK_SLIDE: 'setLockSlide',\r\n    SET_HOST_IP: 'setHostIp',\r\n    GET_HOST_IP: 'getHostIp',\r\n    GET_NORMAL_RANGE: 'getNormalRange',\r\n    UPDATE_NORMAL_RANGE: 'updateNormalRange',\r\n    GET_LOCK_STATE: 'getLockState',\r\n    GET_KUMC_CBC_PATH: 'getKumcCbcPath',\r\n    SET_WBC_NORMAL_RANGE: 'setWbcNormalRange',\r\n    GET_WBC_NORMAL_RANGE: 'getWbcNormalRange',\r\n    GET_SKMC_RESULT_CD: 'getSkmcResultCd',\r\n    SET_SKMC_RESULT_CD: 'setSkmcResultCd',\r\n    REMOVE_SKMC_RESULT_CD: 'removeSkmcResultCd',\r\n    GET_SKMC_REMARK: 'getSkmcRemark',\r\n    SET_SKMC_REMARK: 'setSkmcRemark',\r\n    REMOVE_SKMC_REMARK: 'removeSkmcRemark',\r\n    SET_SKMC_FAVORITE: 'setSkmcFavorite',\r\n    GET_SKMC_FAVORITE: 'getSkmcFavorite',\r\n    GET_SKMC_LIS_RESULTS: 'getSkmcLisResults',\r\n    SET_SKMC_LIS_RESULTS: 'setSkmcLisResults',\r\n    SET_ALARM_COUNT: 'setAlarmCount',\r\n    SET_SORT_TYPE: 'setSortType',\r\n    GET_SORT_TYPE: 'getSortType',\r\n    SET_CUSTOM_CLASS: 'setCustomClass',\r\n    GET_CUSTOM_CLASS: 'getCustomClass',\r\n    SET_SYS_INFO: 'setSysInfo',\r\n    GET_SYS_INFO: 'getSysInfo',\r\n    SET_BACKEND_DATA: 'setBackendData',\r\n    GET_BACKEND_DATA: 'getBackendData',\r\n\r\n    // 인하대 임시\r\n    SELECT_CBC_CODE_INHA: 'selectCbcCodeInha',\r\n    SELECT_LIS_CODE_INHA: 'selectLisCodeInha',\r\n    SELECT_LIS_CODE_RBC_INHA: 'selectLisCodeRbcInha',\r\n    SELECT_LIS_CONN_PATH_INHA: 'selectLisConnPathInha',\r\n    GET_RBC_COUNT_INHA: 'getRbcCountInha',\r\n    SELECT_WBC_RUNNING_COUNT: 'selectWbcRunningCount',\r\n\r\n    // wbc\r\n    GET_BRIGHTNESS_SLIDE_VALUE: 'getBrightnessSlideValue',\r\n    GET_RED_VALUE: 'getRedValue',\r\n    GET_GREEN_VALUE: 'getGreenValue',\r\n    GET_BLUE_VALUE: 'getBlueValue',\r\n    GET_RGB_VALUE: 'getRgbValue',\r\n    SET_SIZE_SLIDE_VALUE: 'setSizeSlideValue',\r\n    SET_BRIGHTNESS_SLIDE_VALUE: 'setBrightnessSlideValue',\r\n    SET_RED_VALUE: 'setRedValue',\r\n    SET_GREEN_VALUE: 'setGreenValue',\r\n    SET_BLUE_VALUE: 'setBlueValue',\r\n    SET_RGB_VALUE: 'setRgbValue',\r\n    SET_ROLLBACK_LIST: 'setRollbackList',\r\n    GET_ROLLBACK_LIST: 'getRollbackList',\r\n    GET_IMAGE_ROLLBACK_LIST: 'getImageRollbackList',\r\n    SET_CLONED_WBC_INFO: 'setClonedWbcInfo',\r\n\r\n    // rbc\r\n    GET_RBC_BRIGHTNESS_SLIDE_VALUE: 'getRbcBrightnessSlideValue',\r\n    GET_RBC_RED_VALUE: 'getRbcRedValue',\r\n    GET_RBC_GREEN_VALUE: 'getRbcGreenValue',\r\n    GET_RBC_BLUE_VALUE: 'getRbcBlueValue',\r\n    SET_RBC_BRIGHTNESS_SLIDE_VALUE: 'setRbcBrightnessSlideValue',\r\n    SET_RBC_RED_VALUE: 'setRbcRedValue',\r\n    SET_RBC_GREEN_VALUE: 'setRbcGreenValue',\r\n    SET_RBC_BLUE_VALUE: 'setRbcBlueValue',\r\n    SET_CLONED_RBC_INFO: 'setClonedRbcInfo',\r\n\r\n    UPDATE_OIL_COUNT: 'updateOilCount',\r\n    SET_RESULT_LIST: 'setResultList',\r\n    CLEAR_RESULT_LIST: 'clearResultList',\r\n    GET_RESULT_LIST: 'getResultList',\r\n    SET_WBC_REPORT_PRINT: 'setWbcReportPrint',\r\n    GET_WBC_REPORT_PRINT: 'getWbcReportPrint',\r\n    SET_RBC_REPORT_PRINT: 'setRbcReportPrint',\r\n    GET_RBC_REPORT_PRINT: 'getRbcReportPrint',\r\n    SET_RBC_SIZE: 'setRbcSize',\r\n    GET_RBC_SIZE: 'getRbcSize',\r\n    SET_RBC_CHROMIA: 'setRbcChromia',\r\n    GET_RBC_CHROMIA: 'getRbcChromia',\r\n    SET_RBC_SHAPE: 'setRbcShape',\r\n    GET_RBC_SHAPE: 'getRbcShape',\r\n    PUSH_RBC_SHAPE: 'pushRbcShape',\r\n    POP_RBC_SHAPE: 'popRbcShape',\r\n    SET_RBC_PLATELET: 'setRbcPlatelet',\r\n    GET_RBC_PLATELET: 'getRbcPlatelet',\r\n    PUSH_RBC_PLATELET: 'pushRbcPlatelet',\r\n    POP_RBC_PLATELET: 'popRbcPlatelet',\r\n    SET_RBC_INCLUSION: 'setRbcInclusion',\r\n    GET_RBC_INCLUSION: 'getRbcInclusion',\r\n    POP_RBC_INCLUSION: 'popRbcInclusion',\r\n    PUSH_RBC_INCLUSION: 'pushRbcInclusion',\r\n    SET_IS_SHOW_MODAL_BARCODE: 'setIsShowModalBarcode',\r\n    GET_IS_SHOW_MODAL_BARCODE: 'getIsShowModalBarcode',\r\n    SET_IS_NS_NB_INTEGRATION: 'setIsNsNbIntegration',\r\n    GET_IS_NS_NB_INTEGRATION: 'getIsNsNbIntegration',\r\n    SET_IS_ALARM: 'setIsAlarm',\r\n    GET_IS_ALARM: 'getIsAlarm',\r\n    SET_IS_CBC_SHOW: 'setIsCbcShow',\r\n    GET_IS_CBC_SHOW: 'getIsCbcShow',\r\n    SET_SITE_CD: 'setSiteCd',\r\n    GET_SITE_CD: 'getSiteCd',\r\n    SET_DEVICE_SERIALNUM: 'setDeviceSerialNm',\r\n    GET_DEVICE_SERIALNUM: 'getDeviceSerialNm',\r\n\r\n    SELECT_BF_HOT_KEY: 'selectBfHotKey',\r\n    SELECT_WBC_HOT_KEY: 'selectWbcHotKey',\r\n    SELECT_WBC_CUSTOM_CLASS: 'selectWbcCustomClass',\r\n    SELECT_EMP_NO: 'selectEmpNo',\r\n\r\n    // log history\r\n    INSERT_WBC_MODIFY_HIST: 'insetWbcModifyHist',\r\n    GET_WBC_MODIFY_HIST: 'getWbcModifyHist',\r\n    UPDATE_WBC_HIST_LIST: 'updateWbcHistList',\r\n    GET_WBC_HIST_LIST: 'getWbcHistList',\r\n\r\n    // Code group\r\n    GET_COMMON_CODE_LIST: 'getCommonCodeList',\r\n    GET_COMMON_CODE: 'getCommonCode',\r\n\r\n    GET_CODE_LIST_USER_POSITION: '00',\r\n    GET_CODE_LIST_USER_AUTHORIZATION: '01',\r\n    GET_CODE_LIST_USER_CASSETE_STATE: '02',\r\n    GET_CODE_LIST_PROCESSING_STATE: '03',\r\n    GET_CODE_LIST_ANALYSIS_TYPE: '04',\r\n    GET_CODE_LIST_CELL_COUNT: '05',\r\n    GET_CODE_LIST_GENERAL_STAIN: '06',\r\n    GET_CODE_LIST_SPECIAL_STAIN: '07',\r\n    GET_CODE_LIST_IMMUNO_STAIN: '08',\r\n    GET_CODE_LIST_SAMPLING_STAIN: '09',\r\n    GET_CODE_LIST_GENDER: '10',\r\n    GET_CODE_LIST_TEST_TYPE: '11',\r\n    GET_CODE_SIGNED_STATE: '12',\r\n    GET_CODE_LOG_TYPE: '13',\r\n    GET_CODE_SLOT_STATE: '14',\r\n\r\n    // log code\r\n    EVENT_TYPE_USER: '00',\r\n    EVENT_TYPE_SYSTEM: '01',\r\n\r\n    // System log\r\n    SET_EVENT_LOG: 'setEventLog',\r\n    GET_EVENT_LOG: 'getEventLog',\r\n    REMOVE_EVENT_LOG: 'removeEventLog',\r\n\r\n    // Storage\r\n    REMEMBER_PWD_KEY: 'uimdia190$^!00000000000000000000',\r\n    REMEMBER_PWD_IV: '0000000000000000',\r\n\r\n    // Workers\r\n    RECEIVE_DATA_BROADCAST_CHAN: 'RECEIVE_DATA_BROADCAST_CHAN',\r\n\r\n    // PB APIS [\r\n    GET_PB_CLASSIFICATIONS: 'getPbClassifications',\r\n    GET_CLASSIFICATION_IMAGES: 'getClassificationImages',\r\n    GET_MARKER_POSITION: 'getMarkerPosition',\r\n    GET_PB_HOT_KEYS: 'getPbHotKeys',\r\n    UPDATE_CLASSIFICATION: 'updateClassification',\r\n    PB_IA_MOVE_IMAGE: 'PbIaMoveImage',\r\n    SET_WBC_IMAGE_LIST: 'setWbcImageList',\r\n    GET_PB_WBC_IMAGES: 'getPbWbcImages',\r\n    SET_SELECTED_ITEM: 'setSelectedItem',\r\n    GET_SELECTED_ITEM: 'getSelectedItem',\r\n    IA_SET_CUSTOM_CLASS: 'iaSetCustomClass',\r\n    IA_GET_CUSTOM_CLASS: 'iaGetCustomClass',\r\n    // PB APIS ]\r\n\r\n\r\n    // Message\r\n    IDS_MSG_SUCCESS: 'Success',\r\n    IDS_MSG_FAILED: 'Failed',\r\n    IDS_MSG_OIL_REMAIN_COUNTER: 'Reset Immersion oil counter after final test or changing the Oil',\r\n    IDS_MSG_POWEROFF: 'Shutdown the system.',\r\n    IDS_MSG_INITALIZE: 'Please execute after initialization.',\r\n    IDS_MSG_SIGNING_COMPLETE: 'Signing is complete.',\r\n    IDS_MSG_DELETE_THE_SELECTED_ITEMS: 'Delete the selected items?',\r\n    IDS_MSG_ACCOUNT_CHANGED: 'Account conversion is complete.',\r\n    IDS_MSG_DELETE_ACCOUNT: 'Are you sure you want to delete your account?',\r\n    IDS_MSG_LOGOUT: 'Are you sure you want to logout now?',\r\n    IDS_MSG_DUPLICATE_KEY: 'The %s key is a duplicate key.',\r\n    IDS_MSG_HOTKEY_IN_ENGLISH: 'Please recheck the key',\r\n\r\n    IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD: 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP: 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID: 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR: 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID: 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING: 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS: 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR: 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS: 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO: 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST: 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2: 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS: 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM: 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE: 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED: 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST: 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS: 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION: 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO: 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID: 'Please confirm your user ID.',\r\n\r\n    IDS_DOWNLOAD_COMPLETE: 'Download Complete',\r\n    IDS_SELECT_SLIDE: 'Please select a slide.',\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED: 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION: 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE: 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE: 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS: 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE: 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM: 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER: 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL: 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION: 'This is a duplicate abbreviation.',\r\n    IDS_THIS_CARD_HAS_ALREADY_BEEN_USED: 'This card has already been used.',\r\n    IDS_MSG_UPLOAD_LIS: 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE: 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE: 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS: 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE: 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH: 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE: 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND: 'No data found.',\r\n    IDS_MSG_DATA_BACKUP: 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE: 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS: 'Size and Chromia categories are linked with LIS data.',\r\n    UPLOAD_PLEASE_LIS: 'To upload the LIS, please enter the content in the LIS File Path field under the LIS(CBC) Hot Key & File Path tab in the settings page and save it.',\r\n    UPLOAD_PLEASE_CBC: 'To load CBC, please enter the content in the CBC File Path field under the LIS(CBC) Hot Key & File Path tab in the settings page and save it.',\r\n\r\n    UPDATE_SUCCESSFULLY : 'Update Successfully',\r\n    TCP_DiSCONNECTED: 'The TCP connection was disconnected.',\r\n    alreadyInitialized: 'It has already been initialized.',\r\n\r\n    lockRow: 'Deletion is not allowed when locked.',\r\n    exit: 'Are you sure you want to quit the program?',\r\n\r\n    settingSaveSuccess: 'Saved successfully',\r\n    settingSaveFailure: 'Save failed',\r\n    settingUpdateSuccess: 'Updated successfully',\r\n    settingUpdateFailure: 'Update failed',\r\n    settingNotSaved: 'Setting not saved',\r\n\r\n    SAVE: 'Save',\r\n    LEAVE: 'Leave',\r\n    CANCEL: 'Cancel',\r\n    CLOSE: 'Close',\r\n    COPY: 'Copy',\r\n    MOVE: 'Move',\r\n    DELETE: 'Delete',\r\n    UPLOAD: 'Upload',\r\n    OK: 'Ok',\r\n\r\n    SETTING_INFO_DOWNLOAD_SAVE_PATH_EN: 'Destination path for download and Origin path for upload',\r\n    SETTING_INFO_DOWNLOAD_SAVE_PATH_KO: '다운로드 시 저장 경로 & 업로드 시 백업 파일 경로',\r\n    SETTING_INFO_UPLOAD_EN: '',\r\n    SETTING_INFO_UPLOAD_KO: 'Download Save Path에서 업로드할 폴더 선택 & 데이터 업로드 폴더 경로 선택',\r\n    SETTING_INFO_DOWNLOAD_EN: '',\r\n    SETTING_INFO_DOWNLOAD_KO: '다운로드 받을 날짜 선택 & copy: 다른 컴퓨터로 이동시킬때 사용(데이터 복사)',\r\n    SETTING_INFO_KEEP_PAGE_EN: 'Keep page when moving in Database detail page by up, down arrows',\r\n    SETTING_INFO_KEEP_PAGE_KO: '데이터베이스 상세 페이지에서 좌측 하단 위, 아래 화살표를 사용하여 검체 이동할 때 탭 유지',\r\n    SETTING_INFO_ALARM_TIME_EN: '',\r\n    SETTING_INFO_ALARM_TIME_KO: '알람 켜기/끄기 & 타이머(초) 선택',\r\n    SETTING_INFO_NS_NB_INTEGRATION_EN: '',\r\n    SETTING_INFO_NS_NB_INTEGRATION_KO: 'ON일 경우 Neutrophil-Segment, Neutrophil-Band 를 Neutrophil로 합쳐서 검사',\r\n    SETTING_INFO_IA_ROOT_PATH_EN: '',\r\n    SETTING_INFO_IA_ROOT_PATH_KO: '검체 데이터 저장 경로 및 다운로드 진행 시 시작 경로',\r\n    SETTING_INFO_COMMON: '',\r\n    SETTING_INFO_BF_ANALYSIS_VALUES: '',\r\n    SETTING_INFO_PBS_ANALYSIS_VALUES: '',\r\n    SETTING_INFO_WBC_DIFF_ANALYSIS_VALUES: '',\r\n    SETTING_INFO_ANALYSIS_TYPE: '',\r\n};","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n\r\n    const formattedTime = now.format('YYYYMMDDHHmm');\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            exit: {\r\n                jobCmd: 'clientExit',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            searchCardCount: {\r\n                jobCmd: 'SEARCH_CARD_COUNT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                testType: '',\r\n            },\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, {AxiosRequestConfig} from 'axios';\r\n\r\nimport {Endpoint, GenericObject} from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: any;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: any;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean, callImg?: string): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean, callImg?: string): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData, callImg);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false, callImg?: string): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        if (contentType === 'blob') {\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain') {\r\n            options.headers = {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if (formData) {\r\n            options.headers = {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n        if (callImg === 'viewer') {\r\n            apiBaseUrl = window.MAIN_API_IP;\r\n        }\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, {\r\n                ...options,\r\n                data: payload\r\n            });\r\n            return Promise.resolve(response.data || {code: 500, data: undefined, success: false});\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","import {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\nexport const apiConstants = {\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification:{\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user:{\r\n        register: {\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login: {\r\n            endpoint:'user/login',\r\n            requiresToken: false,\r\n        },\r\n        logout: {\r\n            endpoint: 'user/logout',\r\n            requiresToken: false,\r\n        },\r\n        userCheck: {\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        // userIp:{\r\n        //     endpoint: 'ip',\r\n        //     requiresToken: false,\r\n        // },\r\n        getUsers: {\r\n            endpoint:'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint:'user/update',\r\n            requiresToken: false,\r\n        },\r\n        deleteUser: {\r\n            endpoint: 'user/delete',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings: {\r\n        cellImgAnalyzedPost: {\r\n            cellImgAdd: {\r\n                endpoint:'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet: {\r\n                endpoint:'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut: {\r\n                endpoint:'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree: {\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree: {\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass: {\r\n            create: {\r\n                endpoint: 'wbcCustomClass/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcCustomClass/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'normalRange/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCodeRbc/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'cbcCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'filePathSet/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'minCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete:{\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail:{\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            classInfoDetail:{\r\n                endpoint: 'runningInfo/classInfoDetail',\r\n                requiresToken: false,\r\n            },\r\n            classInfoDetailSelectQuery:{\r\n                endpoint: 'runningInfo/classInfoDetailSelectQuery',\r\n                requiresToken: false,\r\n            },\r\n            classInfoMenuDetailSelectQuery:{\r\n                endpoint: 'runningInfo/classInfoMenuDetailSelectQuery',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown:{\r\n                endpoint:'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState:{\r\n                endpoint:'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState:{\r\n                endpoint:'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            },\r\n            removePageAllData:{\r\n                endpoint:'runningInfo/removePageAllData',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get:{\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get:{\r\n                endpoint:'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'classOrders/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        remainingCount: {\r\n            get: {\r\n                endpoint: 'remaining-count/execute',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        qualityCheck: {\r\n            get: {\r\n                endpoint: 'qualityCheck/execute',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    images:{\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    dziReader: {\r\n        get: {\r\n            endpoint: 'dzi/send',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf:{\r\n        post:{\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem:{\r\n        post:{\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGetJpg:{\r\n            endpoint: 'file/check-file-exists',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate:{\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        },\r\n        cbcSaveData:{\r\n            endpoint: 'file/cbcSaveData',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message:{\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create:{\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            },\r\n            ip: {\r\n                endpoint: 'ip',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    download:{\r\n        backUpDate: {\r\n            endpoint: 'download/post',\r\n            requiresToken: false,\r\n        },\r\n        checkIsPossibleToBackup: {\r\n            endpoint: 'download/check',\r\n            requiresToken: false,\r\n        },\r\n        openDrive: {\r\n            endpoint: 'download/openDrive',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    upload: {\r\n        restoreData: {\r\n            endpoint: 'upload/execute',\r\n            requiresToken: false,\r\n        },\r\n        checkDuplicated: {\r\n            endpoint: 'upload/checkDuplicatedData',\r\n            requiresToken: false,\r\n        },\r\n        checkPossibleUploadFile: {\r\n            endpoint: 'upload/checkPossibleUploadFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    excel: {\r\n        execute: {\r\n            endpoint: 'excel/execute',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    browser:{\r\n        exit:{\r\n            endpoint: 'browser/close-edge',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    img:{\r\n        checkImageExists: {\r\n            endpoint: 'images/checkImageExists',\r\n            requiresToken: false,\r\n        }\r\n    }\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lis code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// minCount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};\r\n\r\n// remaining Count\r\nexport const remainingCount = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.remainingCount.get);\r\n};\r\n\r\nexport const qualityCheck = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.qualityCheck.get);\r\n};","// EventBus.ts\r\n\r\ntype EventHandler = (...args: any[]) => void;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 발행하는 메서드\r\n     public publish(eventName: string, ...args: any[]): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            handlers.forEach(handler => handler(...args));\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p v-if=\"props.type === 'error'\">\r\n      <font-awesome-icon :icon=\"['fas', 'circle-exclamation']\" class=\"bigFont\" />\r\n    </p>\r\n    <p class=\"mb1 alertMessage\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const testTypeList = [\r\n    {value: '01', text: 'WBC Diff(Standard)'},\r\n    {value: '04', text: 'PBS(Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n    // {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '06', text: 'BM squash'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '100', text: '100' },\r\n    { value: '200', text: '200' },\r\n    { value: '300', text: '300' },\r\n    { value: '400', text: '400' },\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const edgeShotTypeList = [\r\n    { value: '0', text: 'None' },\r\n    { value: '1', text: 'Smear Top' },\r\n    { value: '2', text: 'Smear Top + Side' },\r\n]\r\n\r\nexport const PositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const WbcPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PltPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', classCd: '', classNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', classNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', classNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', classNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', classNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', classNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', classNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', classNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', classNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', classNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', classNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', classNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', classNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', classNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', classNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', classNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', classNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', classNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', classNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', classNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', classNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', classNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', classNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', classNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', classNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', classNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', classNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', classNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', classNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', classNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', classNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', classNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', classNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', classNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', classNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', classNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', classNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', classNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', classNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const defaultCbcList_0011 = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true},\r\n    {cd: '40', classCd: '', fullNm: 'LUC', isSelected: true}\r\n]\r\n\r\nexport const defaultCbcList = [\r\n    {cd: '01', classCd: 'diff', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: 'seg', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: 'band', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [\r\n{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    },\r\n    {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    },\r\n    {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    },\r\n    {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    },\r\n    {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    },\r\n    {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    },\r\n    {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    },\r\n    {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    },\r\n    {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    },\r\n    {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 19\r\n    },\r\n    {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    },\r\n    {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    },\r\n    {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    },\r\n    {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    },]\r\nexport const bmHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\nexport const bfHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '02', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 2\r\n}, {\r\n    id: '03', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 3\r\n}, {\r\n    id: '04', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 4\r\n}, {\r\n    id: '05', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 5\r\n}, {\r\n    id: '06', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 6\r\n}, {\r\n    id: '07', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 7\r\n}, {\r\n    id: '08', abbreviation: 'NR', fullNm: 'NRBC', key: '', orderIdx: 8\r\n}, {\r\n    id: '09', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 9\r\n}, {\r\n    id: '10', abbreviation: 'MC', fullNm: 'Malignant cell', key: '', orderIdx: 10\r\n}, {\r\n    id: '11', abbreviation: 'MT', fullNm: 'Mesothelial cell', key: '', orderIdx: 11\r\n}]\r\n\r\nexport const normalRange = [\r\n{\r\n    abbreviation: 'NE',\r\n    fullNm: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'ME',\r\n    fullNm: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MY',\r\n    fullNm: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PR',\r\n    fullNm: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LY',\r\n    fullNm: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MO',\r\n    fullNm: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'EO',\r\n    fullNm: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BA',\r\n    fullNm: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BL',\r\n    fullNm: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PC',\r\n    fullNm: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'NR',\r\n    fullNm: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'GP',\r\n    fullNm: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'PA',\r\n    fullNm: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'AR',\r\n    fullNm: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'MA',\r\n    fullNm: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n{\r\n    abbreviation: 'LR',\r\n    fullNm: 'Reactive lymphocyte',\r\n    classId: '61',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LA',\r\n    fullNm: 'Abnormal lymphocyte',\r\n    classId: '62',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n},\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false},\r\n    { fullNm: 'Blast', classId: '10', checked: false},\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false},\r\n    { fullNm: 'nRBC', classId: '12', checked: false},\r\n    { fullNm: 'Giant platelet', classId: '13', checked: false},\r\n    { fullNm: 'Platelet aggregation', classId: '14', checked: false},\r\n    { fullNm: 'Malaria', classId: '16', checked: false},\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', checked: false},\r\n    { fullNm: 'rbcPrintModel', classId: '99999', checked: false},\r\n]\r\nexport const imagePrintAndBm = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '06', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false },\r\n    { fullNm: 'Blast', classId: '10', checked: false },\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false },\r\n    { fullNm: 'Orthochromic Normoblast', classId: '12', checked: false },\r\n    { fullNm: 'Polychromic Normoblast', classId: '13', checked: false },\r\n    { fullNm: 'Basophilic Normoblast', classId: '14', checked: false },\r\n    { fullNm: 'Proerythroblast', classId: '15', checked: false },\r\n    { fullNm: 'Histiocyte', classId: '16', checked: false },\r\n    { fullNm: 'Others', classId: '17', checked: false }\r\n];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { fullNm: 'Neutrophil', classId: '01', key: 'NE' },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', key: 'NS' },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', key: 'NB' },\r\n    { fullNm: 'Metamyelocyte', classId: '02', key: 'ME' },\r\n    { fullNm: 'Myelocyte', classId: '03', key: 'MY' },\r\n    { fullNm: 'Promyelocyte', classId: '04', key: 'PR' },\r\n    { fullNm: 'Lymphocyte', classId: '05', key: 'LY' },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', key: 'LR' },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', key: 'LA' },\r\n    { fullNm: 'Monocyte', classId: '07', key: 'MO' },\r\n    { fullNm: 'Eosinophil', classId: '08', key: 'EO' },\r\n    { fullNm: 'Basophil', classId: '09', key: 'BA' },\r\n    { fullNm: 'Blast', classId: '10', key: 'BL' },\r\n    { fullNm: 'Plasma cell', classId: '11', key: 'PC' },\r\n    { fullNm: 'nRBC', classId: '12', key: 'NR' },\r\n    { fullNm: 'Giant platelet', classId: '13', key: 'GP' },\r\n    { fullNm: 'Platelet aggregation', classId: '14', key: 'PA' },\r\n    { fullNm: 'Malaria', classId: '16', key: 'MA' },\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', key: 'AR' },\r\n    { fullNm: 'rbcPrintModel', classId: '99999', key: '' },\r\n];\r\n\r\nexport const lisCodeRbcOption = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', fullNm: 'Normal', key: 'SIZN' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', fullNm: 'Macrocyte', key: 'SIZMA' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', fullNm: 'Microcyte', key: 'SIZMI' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', fullNm: 'Anisocytosis', key: '' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', fullNm: 'Normal', key: 'CHRN' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', fullNm: 'Hyperchromic', key: 'CHRHYPER' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', fullNm: 'Hypochromic', key: 'CHRHYPO' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', fullNm: 'Polychromia', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', fullNm: 'Normal', key: 'SHAPN' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', fullNm: 'Poikilocytosis', key: 'SHAPPO' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', fullNm: 'Target Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', fullNm: 'Burr Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', fullNm: 'Acanthocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', fullNm: 'Ovalocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', fullNm: 'Schistocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', fullNm: 'Sickle Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', fullNm: 'Stomatocyte', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', fullNm: 'Tear Drop Cell', key: '' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', fullNm: 'Spherocyte', key: '' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', fullNm: 'Howell-Jolly Body', key: '' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', fullNm: 'Basophilic Stippling', key: '' }\r\n];\r\n\r\nexport const minRunCount = [\r\n    { minGPCount:0, minPACount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [\r\n{\r\n    min: 0,\r\n    max: 700,\r\n    wbcTargetCount: 50\r\n}, {\r\n    min: 701,\r\n    max: 1000,\r\n    wbcTargetCount: 100\r\n}, {\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcTargetCount: 150\r\n}, {\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcTargetCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const barcodeImgDir = {\r\n    barcodeDirName: '00_Barcode_Image'\r\n}\r\n\r\nexport const dirName = {\r\n    howellJollyDirName: '19_Howell_jolly',\r\n    malariaDirName: '43_InclusionBody_Malaria',\r\n    noMalariaDirName: '44_InclusionBody_NoMalaria',\r\n    rbcClassDirName: '03_RBC_Classification',\r\n    rbcImageDirName: '02_RBC_Image',\r\n    barcodeDirName: '00_Barcode_Image',\r\n    wbcClassDirName: '01_WBC_Classification',\r\n    bfDirName: '02_LowPower_Image',\r\n    bfHighDirName: '03_HighPower_Image',\r\n    bfClassDirName: '05_BF_Classification',\r\n    iaRootPath: 'D:/ia_proc',\r\n}\r\n\r\nexport const settingName = {\r\n    cellImageAnalyzed: 'cellImageAnalyzed',\r\n    rbcDegree: 'rbcDegree',\r\n    wbcRunningCount: 'wbcRunningCount',\r\n    wbcCustomClass: 'wbcCustomClass',\r\n    wbcHotKeys: 'wbcHotKeys',\r\n    bfHotKeys: 'bfHotKeys',\r\n    normalRange: 'normalRange',\r\n    classOrder: 'classOrder',\r\n    imagePrint: 'imagePrint',\r\n    lisCode: 'lisCode',\r\n    cbcCode: 'cbcCode',\r\n    filePathSet: 'filePathSet',\r\n}","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">{{ confirmText || 'OK' }}</button>\r\n    <button class=\"alertCloseButton\" @click=\"hideConfirm\">{{ closeText || 'CLOSE' }}</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {defineProps, computed} from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message', 'confirmText', 'closeText']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst hideConfirm = () => {\r\n  emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n  emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\n\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get);\r\n}\r\n\r\nexport const getDeviceIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.ip);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = { class: \"stopDiv\" }\nconst _hoisted_6 = [\"disabled\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"span\", null, \" INITIALIZING \", -1)\n\nimport { ref, computed, watch, onMounted, nextTick } from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, testTypeList, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props, { emit: __emit }) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\nconst isInitializing = ref(false);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  await initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n  if(value.resetAnalyzing){\r\n    cellImgGet();\r\n    store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: false});\r\n  }\r\n},{deep: true});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit,\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n});\r\n\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: any) => {\r\n  EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst sendSearchCardCount = () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const req = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  }\r\n  tcpReq().embedStatus.searchCardCount.reqUserId = userId.value;\r\n  tcpReq().embedStatus.searchCardCount.testType = analysisType.value;\r\n  EventBus.publish('childEmitSocketData', req);\r\n}\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = messages.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n    const edgeShotType = sessionStorage.getItem('edgeShotType') || '0';\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n      edgeShotType:  edgeShotType || '0',\r\n    });\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorALert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  // if (isInitializing.value) {\r\n  //   if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n  //     showSuccessAlert(messages.alreadyInitialized);\r\n  //   }\r\n  //     showErrorALert('Program is already running');\r\n  //     return;\r\n  // }\r\n\r\n  // if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n  //   showSuccessAlert(messages.alreadyInitialized);\r\n  //   return;\r\n  // }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n  // isInitializing.value = true;\r\n}\r\n\r\nconst initData = async () => {\r\n  const newObj = {...embeddedStatusJobCmd.value }\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        await store.dispatch('commonModule/setCommonInfo', { analysisType: analysisType.value });\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value,\n          onChange: sendSearchCardCount\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 40, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", {\n              key: 0,\n              class: \"startStopP\",\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true })\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", {\n              key: 1,\n              class: \"startStopP\",\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n            }, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\"\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_5, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_7))\n          }), 128))\n        ], 8, _hoisted_6), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountOptions), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y'}]),\n          onClick: sendInit\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'rotate-right'],\n            style: {\"font-size\":\"0.9rem\"},\n            class: _normalizeClass({ 'disabled': isInit.value !== 'N' })\n          }, null, 8, [\"class\"]),\n          _hoisted_10\n        ], 2)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\" @change=\"sendSearchCardCount\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\" @click=\"isInit === 'Y' && toggleStartStop('start')\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else @click=\"toggleStartStop('stop')\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' />\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in stitchCountOptions\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y'}\">\r\n        <font-awesome-icon :icon=\"['fas', 'rotate-right']\" style=\"font-size: 0.9rem;\"\r\n                           :class=\"{ 'disabled': isInit !== 'N' }\"\r\n        />\r\n        <span> INITIALIZING </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed, watch, onMounted, nextTick, defineEmits } from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi, getRunInfoApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList, testTypeList, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst siteCd = ref('');\r\nconst filteredWbcCount = ref<any>();\r\nconst isInitializing = ref(false);\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecute();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecute();\r\n});\r\n\r\nconst initDataExecute = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  await getDeviceInfo();\r\n  await setWbcRunningCount();\r\n  await initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecute();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n  if(value.resetAnalyzing){\r\n    cellImgGet();\r\n    store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: false});\r\n  }\r\n},{deep: true});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit,\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n});\r\n\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: any) => {\r\n  EventBus.publish('childEmitSocketData', payload);\r\n};\r\n\r\nconst sendSearchCardCount = () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const req = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  }\r\n  tcpReq().embedStatus.searchCardCount.reqUserId = userId.value;\r\n  tcpReq().embedStatus.searchCardCount.testType = analysisType.value;\r\n  EventBus.publish('childEmitSocketData', req);\r\n}\r\n\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      confirmMessage.value = messages.IDS_RECOVER_GRIPPER_CONDITION;\r\n      showConfirm.value = true;\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n    const edgeShotType = sessionStorage.getItem('edgeShotType') || '0';\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: filteredWbcCount.value || wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n      edgeShotType:  edgeShotType || '0',\r\n    });\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorALert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n}\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  // if (isInitializing.value) {\r\n  //   if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n  //     showSuccessAlert(messages.alreadyInitialized);\r\n  //   }\r\n  //     showErrorALert('Program is already running');\r\n  //     return;\r\n  // }\r\n\r\n  // if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n  //   showSuccessAlert(messages.alreadyInitialized);\r\n  //   return;\r\n  // }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n  // isInitializing.value = true;\r\n}\r\n\r\nconst initData = async () => {\r\n  const newObj = {...embeddedStatusJobCmd.value }\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        await store.dispatch('commonModule/setCommonInfo', { analysisType: analysisType.value });\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst setWbcRunningCount = async () => {\r\n  // 0011 - 인하대인 경우 -> WbcRunningCount로 분류\r\n  if (window.PROJECT_TYPE !== 'pb' || siteCd.value !== '0011') return;\r\n\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runCountData = runCountResult.data;\r\n\r\n      if (runCountData && runCountData?.length > 0) {\r\n        const filteredRunCountData: any = runCountData.filter(data => data.min <= wbcCount.value && wbcCount.value <= data.max)[0];\r\n        if (filteredRunCountData.wbcTargetCount) {\r\n          filteredWbcCount.value = filteredRunCountData.wbcTargetCount;\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, \"Working View\", -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Total Time\", -1)\nconst _hoisted_8 = {\n  key: 0,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"INPUT\", -1)\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"OUTPUT\", -1)\nconst _hoisted_13 = {\n  key: 1,\n  class: \"slideCardWrap\"\n}\nconst _hoisted_14 = { class: \"slideContent pb100a\" }\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: ['parsedData', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.PB_VERSION;\r\n  // slideCard100a\r\n  slideCardData.value = pbVersion.value === '100a' ? slideCard100a : slideCard;\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    (pbVersion.value === '12a')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"ul\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _hoisted_10\n          ]),\n          _createElementVNode(\"ul\", _hoisted_11, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.output, (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n              }, null, 2))\n            }), 128)),\n            _hoisted_12\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n          _createElementVNode(\"ul\", _hoisted_14, [\n            _createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([...slideCardData.value.input].reverse(), (item) => {\n              return (_openBlock(), _createElementBlock(\"li\", {\n                key: item.slotNo,\n                class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n              }, null, 2))\n            }), 128)),\n            _createElementVNode(\"p\", _hoisted_15, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 1)\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\">Working View</h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Total Time</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap' v-if=\"pbVersion === '12a'\">\r\n      <!-- input -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">INPUT</p>\r\n      </ul>\r\n      <!-- output -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.output\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p class=\"mt1\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n    <div class='slideCardWrap' v-else>\r\n      <!-- input -->\r\n      <ul class='slideContent pb100a'>\r\n        <p>INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in [...slideCardData.input].reverse()\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst initValData = computed(() => store.state.commonModule.initValData);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps(['parsedData', 'pb100aCassette']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst isBm = ref(false);\r\nconst fixEqStatCd = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  if (sysInfo.eqStatCd === '02') {\r\n    fixEqStatCd.value = false;\r\n  }\r\n\r\n  if (!fixEqStatCd.value) {\r\n    eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  }\r\n\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if (newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n    dashoffset.value = circumference.value;\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(() => eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => initValData.value, (newVal) => {\r\n  if (newVal) {\r\n    eqStatCd.value = '05';\r\n  }\r\n  fixEqStatCd.value = newVal;\r\n})\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nonBeforeMount(() => {\r\n  pbVersion.value = window.PB_VERSION;\r\n  // slideCard100a\r\n  slideCardData.value = pbVersion.value === '100a' ? slideCard100a : slideCard;\r\n})\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  isBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  if (countingInterval) {\r\n    clearInterval(countingInterval);\r\n    countingInterval = null;\r\n  }\r\n  if (countingIntervalTotal) {\r\n    clearInterval(countingIntervalTotal);\r\n    countingIntervalTotal = null;\r\n  }\r\n});\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, \"Order List\", -1)\nconst _hoisted_3 = { class: \"orderListTable\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Barcode ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [\n  /*#__PURE__*/_createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\n\nimport {ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n\r\n        /** 만약 오류가 발생해서 OrderList가 10개 초과일 경우 화면에서 보여주는 OrderList를 10개까지만 보여주는 코드 */\r\n        // Start\r\n        if (dspOrderList.value.length > 10) {\r\n          dspOrderList.value = [];\r\n        }\r\n        // End\r\n\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      } else {\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"table\", _hoisted_3, [\n      _hoisted_4,\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.analyzedDttm ? _unref(formatDateString)(slot?.analyzedDttm) : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(getCommonCode)('14', slot?.state)), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_6, _hoisted_8))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\">Order List</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n        <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n          <td>{{ slot?.barcodeId }}</td>\r\n          <td>{{ slot?.patientName }}</td>\r\n          <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n          <td>{{\r\n              slot?.analyzedDttm ? formatDateString(slot?.analyzedDttm) : formatDateString(slot?.orderDate)\r\n            }}\r\n          </td>\r\n          <td>{{ getCommonCode('14', slot?.state) }}</td>\r\n        </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n\r\n        /** 만약 오류가 발생해서 OrderList가 10개 초과일 경우 화면에서 보여주는 OrderList를 10개까지만 보여주는 코드 */\r\n        // Start\r\n        if (dspOrderList.value.length > 10) {\r\n          dspOrderList.value = [];\r\n        }\r\n        // End\r\n\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      } else {\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    title: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport interface DefaultBasicWbcArrType {\r\n    id: string,\r\n    abbreviation: string,\r\n    fullNm: string,\r\n    key: string,\r\n    orderIdx: number\r\n}\r\n\r\n\r\nexport const basicWbcArr: DefaultBasicWbcArrType[] = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', key: '', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', key: '', orderIdx: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList: DefaultBasicWbcArrType[] = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\n\r\nexport const defaultWbcClassList = [\r\n    {\r\n        classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        classId: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', orderIdx: 8\r\n    }, {\r\n        classId: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 9\r\n    }, {\r\n        classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 10\r\n    }, {\r\n        classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 11\r\n    }, {\r\n        classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 12\r\n    }, {\r\n        classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 13\r\n    }, {\r\n        classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 14\r\n    }, {\r\n        classId: '12', abbreviation: 'NR', fullNm: 'nRBC', orderIdx: 15\r\n    }, {\r\n        classId: '13', abbreviation: 'GP', fullNm: 'Giant platelet', orderIdx: 16\r\n    }, {\r\n        classId: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', orderIdx: 17\r\n    }, {\r\n        classId: '16', abbreviation: 'MA', fullNm: 'Malaria', orderIdx: 18\r\n    }, {\r\n        classId: '15', abbreviation: 'AR', fullNm: 'Artifact', orderIdx: 19\r\n    }, {\r\n        classId: '17', abbreviation: 'SM', fullNm: 'Smudge', orderIdx: 20\r\n    }\r\n]\r\n\r\nexport const defaultBmClassList = [\r\n    {\r\n        classId: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        classId: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        classId: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        classId: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        classId: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        classId: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        classId: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        classId: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n    }, {\r\n        classId: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n    }, {\r\n        classId: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n    }, {\r\n        classId: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n    }, {\r\n        classId: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n    }, {\r\n        classId: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n    }, {\r\n        classId: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n    }, {\r\n        classId: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n    }, {\r\n        classId: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n    }, {\r\n        classId: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n    }, {\r\n        classId: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n    }, {\r\n        classId: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n    }]\r\n\r\nexport const basicWbcArrClint = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassListClint = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"BM\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"WBC\", -1)\nconst _hoisted_4 = { class: \"analysisWbc\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_6 = { class: \"categoryNm\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_8 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_9 = { class: \"classNm\" }\nconst _hoisted_10 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_11 = { style: {\"text-align\":\"center\",\"cursor\":\"default\"} }\nconst _hoisted_12 = { class: \"degree\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_14 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \" 100.00 \")\n], -1)\nconst _hoisted_20 = {\n  key: 0,\n  class: \"categories mt1\"\n}\nconst _hoisted_21 = { class: \"categoryNm\" }\nconst _hoisted_22 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_23 = { class: \"classNm\" }\nconst _hoisted_24 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_25 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_26 = { class: \"degree\" }\nconst _hoisted_27 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_28 = { class: \"mt1\" }\nconst _hoisted_29 = {\n  class: \"categoryNm\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_30 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_31 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_32 = { class: \"classNm\" }\nconst _hoisted_33 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_34 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_35 = { key: 0 }\nconst _hoisted_36 = { class: \"degree\" }\nconst _hoisted_37 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"-\", -1)\n\nimport { computed, ref, onMounted, watch, getCurrentInstance } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\nconst firstTry = ref(false);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\nconst isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst selectNonWbc = (wbcArray: any) => {\r\n  return wbcArray.flat().filter((item: any) => ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title));\r\n}\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _hoisted_2,\n            _createTextVNode(\"Classification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _hoisted_3,\n            _createTextVNode(\" Classification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                    _createElementVNode(\"ul\", _hoisted_6, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_7, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_8, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_9, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_10, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_11, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_12, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_14, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", _hoisted_18, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_19\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [\n                    _createElementVNode(\"ul\", _hoisted_21, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_22, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_23, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_24, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_25, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_26, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27, \"-\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_28, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectNonWbc(dspWbcClassList.value), (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_29, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_30, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", _hoisted_31, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_32, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_33))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", _hoisted_34, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_35, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_36, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_37))\n                : _createCommentVNode(\"\", true),\n              _hoisted_38\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\"><span class=\"greenColor\">BM</span>Classification\r\n      </template>\r\n      <template v-else><span class=\"greenColor\">WBC</span> Classification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Class</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Count</li>\r\n              <li style=\"text-align: center; cursor: default;\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">%</li>\r\n              <li style=\"cursor: default;\">\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li style=\"cursor: default;\">\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li style=\"cursor: default;\">\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li style=\"cursor: default;\">\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt1\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">-</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n\r\n      <!-- nonWbc -->\r\n      <div class='mt1'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in selectNonWbc(dspWbcClassList)\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\" style=\"cursor: default;\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\" style=\"cursor: default;\">non-WBC</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li style=\"cursor: default;\">{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li style=\"cursor: default;\">-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\nconst firstTry = ref(false);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\nconst isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\nonMounted(() => {\r\n  updateDataArray( basicBmClassList, null, true);\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      // if (currentSlot.wbcCount === '00') {\r\n      //   return;\r\n      // }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst selectNonWbc = (wbcArray: any) => {\r\n  return wbcArray.flat().filter((item: any) => ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title));\r\n}\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n  /*#__PURE__*/_createTextVNode(\" Slide Image \")\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"col\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n], -1)\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"RBC\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\"),\n  /*#__PURE__*/_createTextVNode(\"lassification \")\n], -1)\nconst _hoisted_10 = { class: \"categoryNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_12 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_13 = { class: \"classNmRbc\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_15 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_16 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_17 = { class: \"degree analysis\" }\nconst _hoisted_18 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_19 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_20 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_21 = { key: 0 }\nconst _hoisted_22 = { key: 1 }\nconst _hoisted_23 = {\n  key: 2,\n  style: {\"font-size\":\"0.7rem\",\"cursor\":\"default\"}\n}\nconst _hoisted_24 = { class: \"categories\" }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"Others\")\n], -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, \"Platelets\")\n], -1)\nconst _hoisted_27 = { class: \"degree analysis\" }\nconst _hoisted_28 = { style: {\"font-size\":\"0.7rem\",\"cursor\":\"default\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  if (rbcInfo.length === 0) {\r\n    dspRbcClassList.value[0] = basicRbcArr;\r\n  }\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_4)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", _hoisted_12, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_13, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        _createElementVNode(\"li\", _hoisted_15, _toDisplayString(classInfo?.classNm), 1),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, \"Malaria\"))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_17, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_18, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_19, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }),\n                                  style: {\"cursor\":\"default\"}\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_20, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ])),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_24, [\n        _hoisted_25,\n        _hoisted_26,\n        _createElementVNode(\"ul\", _hoisted_27, [\n          _createElementVNode(\"li\", _hoisted_28, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">RBC</span> <span class=\"greenColor\">C</span>lassification\r\n      </h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Category</li>\r\n              <li style=\"cursor: default;\">{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li style=\"cursor: default;\">{{ classInfo?.classNm }}</li>\r\n\r\n                <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" style=\"cursor: default;\">Malaria</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\" style=\"cursor: default;\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                      style=\"cursor: default;\"\r\n                  />\r\n                </li>\r\n                <li v-else style=\"cursor: default;\">\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n\r\n                <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" style=\"font-size: 0.7rem; cursor: default;\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n\r\n    <!-- Others -->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li style=\"cursor: default;\">Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li style=\"cursor: default;\">Platelets</li>\r\n<!--          <li style=\"cursor: default;\">Malaria</li>-->\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem; cursor: default;\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n<!--          <li style=\"font-size: 0.7rem; cursor: default;\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>-->\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  if (rbcInfo.length === 0) {\r\n    dspRbcClassList.value[0] = basicRbcArr;\r\n  }\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=0d04aeda&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider-found\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch} from 'vue';\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        style: {\"width\":\"150px\",\"height\":\"150px\"},\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider-found\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              style=\"width: 150px; height: 150px;\"\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps} from 'vue';\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData', 'pb100aCassette']);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      console.log(\"IMAGE_RESET - should be 'reset'\", newVal)\r\n      if(newVal === 'reset'){\r\n        images.value = [];\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo && slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n        const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n          ...pathItem,\r\n          // path: pathItem.path + '?' + getDateTimeStr(),\r\n          path: pathItem.path,\r\n          id: generateUniqueId()\r\n        }));\r\n\r\n        for (const image of runningPath) {\r\n          images.value.unshift(image);\r\n        }\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string {\r\n  if (!types || types.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  return imageUrl;\r\n}\r\n</script>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = (n: any) => (_pushScopeId(\"data-v-6ea27ac8\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref, onBeforeMount, computed, watch} from \"vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData','isClass', 'startStatus', 'pb100aCassette'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  pbVersion.value = window.PB_VERSION;\r\n  bmIsBoolen.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n});\r\n\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  store.dispatch('commonModule/setCommonInfo', {initValData: val});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute, { onInitDataChangeText: initDataChangeText }),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(workingView, {\n        initValData: initValData.value,\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette,\n        class: \"contentRightChild\"\n      }, null, 8, [\"initValData\", \"parsedData\", \"pb100aCassette\"]),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 0,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData,\n          pb100aCassette: __props.pb100aCassette\n        }, null, 8, [\"parsedData\", \"pb100aCassette\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute @initDataChangeText=\"initDataChangeText\" />\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <workingView  :initValData=\"initValData\" :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\" class=\"contentRightChild\" />\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref, onBeforeMount, computed, watch} from \"vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\nconst emits = defineEmits();\r\n\r\nconst store = useStore();\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData','isClass', 'startStatus', 'pb100aCassette']);\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nonBeforeMount(async () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    router.push('/database')\r\n  }\r\n\r\n  pbVersion.value = window.PB_VERSION;\r\n  bmIsBoolen.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n});\r\n\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  store.dispatch('commonModule/setCommonInfo', {initValData: val});\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped src=\"@/assets/css/layout.css\">\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"@/assets/css/layout.css?vue&type=style&index=0&id=6ea27ac8&lang=css&scoped=true&external\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6ea27ac8\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse } from '@/common/api/service/user/dto/userDto'\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const logoutApi = async (request: Pick<loginUser, 'userId'>): Promise<ApiResponse<UserResponse | string | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.logout, request);\r\n}\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any, userId: string): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, userId);\r\n};\r\n\r\nexport const deleteUserApi = async (userId: any): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpDelete(apiConstants.user.deleteUser, userId, true);\r\n}\r\n\r\n// export const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n//     return httpClient.httpGet(apiConstants.user.userIp, '');\r\n// }","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \"CREATE ACCOUNT\", -1)\nconst _hoisted_3 = { class: \"joinWrapper\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\nconst _hoisted_12 = [\n  _hoisted_10,\n  _hoisted_11\n]\n\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (idVal.value.includes('_')) {\r\n    await showErrorAlert('UserId is not available');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicated user id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showErrorAlert('Signin fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", null, [\n            _hoisted_4,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_5,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_6,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_7,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_8,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_9,\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event))\n            }, _hoisted_12, 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt2 mb4 \">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul class=\"joinWrapper\">\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\">\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n\r\n  if (idVal.value === \"\") {\r\n    await showErrorAlert('Please enter id');\r\n    return;\r\n  }\r\n  else if (idVal.value.includes('_')) {\r\n    await showErrorAlert('UserId is not available');\r\n    return;\r\n  }\r\n  else if (password.value === \"\") {\r\n    await showErrorAlert('Please enter password');\r\n    return;\r\n  }\r\n  else if (nameVal.value === \"\") {\r\n    await showErrorAlert('Please enter name');\r\n    return;\r\n  }\r\n  else if (employeeNo.value === \"\") {\r\n    await showErrorAlert('Please enter Employee No');\r\n    return;\r\n  }\r\n  else if (passwordRepeat.value === \"\") {\r\n    await showErrorAlert('Please enter repeat password');\r\n    return;\r\n  }\r\n  else if (password.value !== passwordRepeat.value) {\r\n    await showErrorAlert('Please check if the password and password are the same');\r\n    return;\r\n  }\r\n\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result: any = await createUser(user);\r\n    if (result.data?.userId) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    } else {\r\n\r\n      // User Id 중복\r\n      if (result.data.includes('Duplicate')) {\r\n        await showErrorAlert('Duplicated user id');\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showErrorAlert('Signin fail');\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi,\r\n    getRbcDegreeApi,\r\n    getCbcCodeRbcApi,\r\n    createCbcCodeRbcApi,\r\n    createLisCodeWbcApi,\r\n    createLisCodeRbcApi,\r\n    getLisCodeWbcApi, getLisCodeRbcApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport { defaultBmClassList, defaultWbcClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport { defaultCbcList, defaultRbcDegree, lisCodeRbcOption, lisCodeWbcOption, normalRange, rbcClassList } from \"@/common/defines/constFile/settings\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    diffCellAnalyzingCount: projectType ? '500':'100',\r\n    diffWbcPositionMargin: '0',\r\n    diffRbcPositionMargin: '0',\r\n    diffPltPositionMargin: '0',\r\n    pbsCellAnalyzingCount: '100',\r\n    stitchCount: '1',\r\n    edgeShotType: '0',\r\n    bfCellAnalyzingCount: '100',\r\n    iaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\n\r\n/**\r\n * API 요청 시 분류할 Constant\r\n * sendingForm: Create 요청 시 사용할 key 값\r\n * defaultItem: Create 요청 시 보내는 body\r\n * getRequest: get 요청 함수\r\n * createRequest: create 요청 함수\r\n * */\r\nconst settingsConstant = ref<any>({\r\n    'lisCodeWbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': lisCodeWbcOption,\r\n        'getRequest': getLisCodeWbcApi,\r\n        'createRequest': createLisCodeWbcApi,\r\n    },\r\n    'lisCodeRbc': {\r\n        'sendingForm': 'lisCodeItems',\r\n        'defaultItem': lisCodeRbcOption,\r\n        'getRequest': getLisCodeRbcApi,\r\n        'createRequest': createLisCodeRbcApi,\r\n    },\r\n    'cbcCode': {\r\n        'sendingForm': 'cbcCodeItems',\r\n        'defaultItem': defaultCbcList,\r\n        'getRequest': getCbcCodeRbcApi,\r\n        'createRequest': createCbcCodeRbcApi,\r\n    },\r\n    'cellImage': {\r\n        'getRequest': getCellImgApi,\r\n        'createRequest': createCellImgApi,\r\n    },\r\n    'normalRange': {\r\n        'sendingForm': 'normalRangeItems',\r\n        'defaultItem': normalRange,\r\n        'getRequest': getNormalRangeApi,\r\n        'createRequest': createNormalRangeApi,\r\n    },\r\n    'orderClass': {\r\n        'getRequest': getOrderClassApi,\r\n        'createRequest': createOrderClassApi,\r\n    },\r\n    'rbcDegree': {\r\n        'getRequest': getRbcDegreeApi,\r\n        'createRequest': createRbcDegreeApi,\r\n    },\r\n})\r\n\r\n/** 로그인 시 Setting 값 설정 함수 */\r\nexport const initializeAllSettings = async () => {\r\n    await firstGetSettings('cellImage');\r\n    await firstGetSettings('orderClass');\r\n    await firstGetSettings('rbcDegree');\r\n    await firstGetSettings('lisCodeWbc')\r\n    await firstGetSettings('lisCodeRbc')\r\n    await firstGetSettings('cbcCode')\r\n    await firstGetSettings('normalRange')\r\n}\r\n\r\nconst firstGetSettings = async (initializeType: string) => {\r\n    const getRequest = settingsConstant.value[initializeType].getRequest;\r\n    try {\r\n        const { data } = await getRequest() || {};\r\n\r\n        if (!data || data.length === 0) {\r\n            const sendingFormStr = settingsConstant.value[initializeType]?.sendingForm;\r\n            const defaultItem = settingsConstant.value[initializeType].defaultItem;\r\n            const createRequest = settingsConstant.value[initializeType].createRequest;\r\n\r\n            const anotherDefaultValue = await defaultComputedValueForCreateRequest(initializeType)\r\n\r\n            if (sendingFormStr) {\r\n                await createRequest({ [sendingFormStr]: anotherDefaultValue || defaultItem });\r\n            } else {\r\n                await createRequest(anotherDefaultValue || defaultItem);\r\n            }\r\n\r\n            afterResponse(initializeType);\r\n        }\r\n    } catch (e) {\r\n        console.log(`${initializeType} Error - ${e}`);\r\n    }\r\n}\r\n\r\n/** Create 요청시 보낼 defaultValue 중 계산되어야 하는 값들을 반환하는 함수 */\r\nconst defaultComputedValueForCreateRequest = async (initializeType: string) => {\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            const cellImgSet = {\r\n                analysisType: defaultCellImgData.testTypeCd,\r\n                diffCellAnalyzingCount: defaultCellImgData.diffCellAnalyzingCount,\r\n                diffWbcPositionMargin: defaultCellImgData.diffWbcPositionMargin,\r\n                diffRbcPositionMargin: defaultCellImgData.diffRbcPositionMargin,\r\n                diffPltPositionMargin: defaultCellImgData.diffPltPositionMargin,\r\n                pbsCellAnalyzingCount: defaultCellImgData.pbsCellAnalyzingCount,\r\n                stitchCount: defaultCellImgData.stitchCount,\r\n                edgeShotType: defaultCellImgData.edgeShotType,\r\n                bfCellAnalyzingCount: defaultCellImgData.bfCellAnalyzingCount,\r\n                iaRootPath: defaultCellImgData.iaRootPath,\r\n                isNsNbIntegration: defaultCellImgData.isNsNbIntegration ? 'Y' : 'N',\r\n                isAlarm: defaultCellImgData.isAlarm,\r\n                alarmCount: defaultCellImgData.alarmCount,\r\n                keepPage: defaultCellImgData.keepPage,\r\n                backupPath: defaultCellImgData.backupPath,\r\n                backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n                backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n                autoBackUpMonth: 'Not selected',\r\n                autoBackUpStartDate: null,\r\n            };\r\n            return cellImgSet;\r\n\r\n        case 'orderClass':\r\n            const orderList: any = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n            for (const index in orderList) {\r\n                orderList[index].orderIdx = index;\r\n            }\r\n            return orderList;\r\n\r\n        case 'rbcDegree':\r\n            await combindDegree();\r\n            const rbcDegreeList: any = [];\r\n\r\n            rbcClassListArr.value.forEach((category: any) => {\r\n                category.classInfo.forEach((classItem: any) => {\r\n                    rbcDegreeList.push({\r\n                        categoryId: category.categoryId,\r\n                        categoryNm: category.categoryNm,\r\n                        classId: classItem.classId,\r\n                        classNm: classItem.classNm,\r\n                        degree1: classItem.degree1,\r\n                        degree2: classItem.degree2,\r\n                        degree3: classItem.degree3,\r\n                    });\r\n                });\r\n            });\r\n            return rbcDegreeList;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n/** Response를 받은 후 할 작업 정리 함수 */\r\nconst afterResponse = (initializeType: string) => {\r\n    switch (initializeType) {\r\n        case 'cellImage':\r\n            sessionStorage.setItem('isNsNbIntegration', defaultCellImgData.isNsNbIntegration ? 'Y' : 'N');\r\n            sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.diffWbcPositionMargin));\r\n            sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.diffRbcPositionMargin));\r\n            sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.diffPltPositionMargin));\r\n            sessionStorage.setItem('edgeShotType', String(defaultCellImgData?.edgeShotType));\r\n            sessionStorage.setItem('iaRootPath', String(defaultCellImgData?.iaRootPath));\r\n            sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackgroundForLogin\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loaderForLogin\" }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingTextLogin\" }, \"Loading...\", -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"uimdLogin\" }\nconst _hoisted_6 = { class: \"loginContent\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginTitle\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n  /*#__PURE__*/_createTextVNode(\"IMD\")\n], -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginP mt2\" }, \"Unique Idea Medical Device\", -1)\nconst _hoisted_9 = { class: \"mt3 loginDiv\" }\nconst _hoisted_10 = { class: \"loginUl\" }\n\nimport { getCurrentInstance, ref, onMounted, computed } from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { initializeAllSettings } from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\nconst isTcpConnected = computed(() => store.state.commonModule.isTcpConnected);\r\nconst isViewer = ref(false);\r\nconst forceViewer = ref('');\r\n\r\n//\r\nonMounted(async () => {\r\n  forceViewer.value = window.FORCE_VIEWER;\r\n  await checkIsViewer()\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined | any> = await login(user);\r\n    if (result?.data?.user) {\r\n\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst checkIsViewer = async () => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data)))) {\r\n      isViewer.value = false;\r\n    } else {\r\n      isViewer.value = true;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) && window.FORCE_VIEWER !== 'viewer'){\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (forceViewer.value === 'main' && !isViewer.value && !isTcpConnected.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _hoisted_7,\n        _hoisted_8,\n        _createElementVNode(\"div\", _hoisted_9, [\n          _createElementVNode(\"ul\", _hoisted_10, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\"\n              }, null, 512), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\"\n              }, null, 512), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"loginBtn\" }, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: loginUser\n            }, \"Login\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackgroundForLogin\" v-if=\"forceViewer === 'main' && !isViewer && !isTcpConnected\">\r\n    <div class=\"loaderForLogin\"></div>\r\n    <p class=\"loadingTextLogin\">Loading...</p>\r\n  </div>\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt2'>Unique Idea Medical Device</p>\r\n      <div class=\"mt3 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\">\r\n          </li>\r\n        </ul>\r\n\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <Alert\r\n    v-if=\"showAlert\"\r\n    :is-visible=\"showAlert\"\r\n    :type=\"alertType\"\r\n    :message=\"alertMessage\"\r\n    @hide=\"hideAlert\"\r\n    @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { getCurrentInstance, ref, onMounted, computed } from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { initializeAllSettings } from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\nconst isTcpConnected = computed(() => store.state.commonModule.isTcpConnected);\r\nconst isViewer = ref(false);\r\nconst forceViewer = ref('');\r\n\r\n//\r\nonMounted(async () => {\r\n  forceViewer.value = window.FORCE_VIEWER;\r\n  await checkIsViewer()\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined | any> = await login(user);\r\n    if (result?.data?.user) {\r\n\r\n      await initializeAllSettings();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst checkIsViewer = async () => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data)))) {\r\n      isViewer.value = false;\r\n    } else {\r\n      isViewer.value = true;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if((result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) && window.FORCE_VIEWER !== 'viewer'){\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('viewerCheck', 'main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('viewerCheck', 'viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDateApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.download.backUpDate, request);\r\n};\r\n\r\nexport const downloadPossibleApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPost(apiConstants.download.checkIsPossibleToBackup, request);\r\n}\r\n\r\nexport const openDriveApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.download.openDrive, request);\r\n}\r\n\r\nexport const uploadBackupApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.upload.restoreData, request);\r\n}\r\n\r\nexport const uploadPossibleApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.upload.checkDuplicated, request);\r\n}\r\n\r\nexport const checkPossibleUploadFileApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPost(apiConstants.upload.checkPossibleUploadFile, request);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelSelect as _vModelSelect, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, vModelRadio as _vModelRadio, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"loadingBackground\" }\nconst _hoisted_2 = { class: \"progressContainer\" }\nconst _hoisted_3 = { class: \"loadingProgressBarText\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loadingBackground\"\n}\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loaderForLogin\" }, null, -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingTextLogin\" }, \"Loading...\", -1)\nconst _hoisted_7 = [\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"settingCellImgAnalyzedContainer\" }\nconst _hoisted_9 = { class: \"settingTable\" }\nconst _hoisted_10 = { key: 0 }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Analysis Type\", -1)\nconst _hoisted_12 = { colspan: \"2\" }\nconst _hoisted_13 = [\"value\"]\nconst _hoisted_14 = { key: 1 }\nconst _hoisted_15 = {\n  key: 0,\n  rowspan: \"1\"\n}\nconst _hoisted_16 = { key: 1 }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_18 = [\"value\"]\nconst _hoisted_19 = { key: 2 }\nconst _hoisted_20 = [\"rowspan\"]\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)\nconst _hoisted_22 = [\"value\"]\nconst _hoisted_23 = { key: 3 }\nconst _hoisted_24 = { key: 0 }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Stitch Count\", -1)\nconst _hoisted_26 = [\"value\"]\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Edge Shot Type\", -1)\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { key: 4 }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BF Analysis Values\", -1)\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_32 = [\"value\"]\nconst _hoisted_33 = { key: 5 }\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"th\", { rowspan: \"3\" }, \"Common\", -1)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)\nconst _hoisted_36 = [\"value\"]\nconst _hoisted_37 = { key: 6 }\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)\nconst _hoisted_39 = [\"value\"]\nconst _hoisted_40 = { key: 7 }\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Plt Position Margin\", -1)\nconst _hoisted_42 = [\"value\"]\nconst _hoisted_43 = { colspan: \"2\" }\nconst _hoisted_44 = [\"value\"]\nconst _hoisted_45 = { key: 8 }\nconst _hoisted_46 = { key: 9 }\nconst _hoisted_47 = { key: 10 }\nconst _hoisted_48 = { class: \"settingTable auto\" }\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"90\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"10\" })\n], -1)\nconst _hoisted_50 = { class: \"downloadSavePathContainer\" }\nconst _hoisted_51 = [\"value\"]\nconst _hoisted_52 = { title: \"Download data from start to end date\" }\nconst _hoisted_53 = { class: \"backupDatePickers\" }\nconst _hoisted_54 = { colspan: \"2\" }\nconst _hoisted_55 = { class: \"settingUploadContainer\" }\nconst _hoisted_56 = [\"value\"]\nconst _hoisted_57 = {\n  key: 0,\n  class: \"fs12\",\n  style: {\"top\":\"0\"}\n}\nconst _hoisted_58 = {\n  key: 1,\n  class: \"fs12\"\n}\nconst _hoisted_59 = /*#__PURE__*/_createElementVNode(\"span\", { style: {\"color\":\"red\"} }, \"duplicated\", -1)\nconst _hoisted_60 = {\n  key: 2,\n  class: \"uploadDuplicatedSlotContainer\"\n}\nconst _hoisted_61 = /*#__PURE__*/_createElementVNode(\"p\", { style: {\"color\":\"black\"} }, \"Duplicated Barcode Numbers\", -1)\nconst _hoisted_62 = { class: \"uploadDuplicatedSlotWrapper\" }\nconst _hoisted_63 = { class: \"uploadModalBtnContainer\" }\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"fs12\",\n  style: {\"top\":\"0\"}\n}, \"Upload file list\", -1)\nconst _hoisted_65 = { class: \"downloadDeleteContainer\" }\nconst _hoisted_66 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"downloadDeleteSemiTitle\" }, \"Select upload file\", -1)\nconst _hoisted_67 = { class: \"downloadDeleteWrapper\" }\nconst _hoisted_68 = { style: {\"font-size\":\"0.8rem\"} }\nconst _hoisted_69 = [\"value\"]\nconst _hoisted_70 = { class: \"mt4\" }\nconst _hoisted_71 = { class: \"uploadModalBtnContainer\" }\n\nimport { createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport { computed, nextTick, onMounted, ref, watch, getCurrentInstance } from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList, settingName, edgeShotTypeList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport moment from \"moment\";\r\nimport {\r\n  backUpDateApi,\r\n  downloadPossibleApi,\r\n  uploadPossibleApi,\r\n  uploadBackupApi,\r\n  openDriveApi,\r\n  checkPossibleUploadFileApi\r\n} from \"@/common/api/service/backup/wbcApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport ConfirmThreeBtn from \"@/components/commonUi/ConfirmThreeBtn.vue\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst showUploadModal = ref(false);\r\n\r\nconst alertMessage = ref('');\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst edgeShotType = ref('0');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst downloadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\nconst uploadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\n\r\nconst projectType = ref('pb');\r\nconst testTypeArr = ref<any>([]);\r\nconst uploadSlotIdObj = ref({duplicated: [], nonDuplicated: []});\r\nconst possibleUploadCount = computed(() => uploadSlotIdObj.value?.nonDuplicated && uploadSlotIdObj.value?.nonDuplicated.length);\r\nconst impossibleUploadCount = computed(() => uploadSlotIdObj.value?.duplicated && uploadSlotIdObj.value?.duplicated.length);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst isRestoring = ref(false);\r\nconst isDownloading = ref(false);\r\nconst isLoadingProgressBar = ref(false);\r\nconst showDownloadConfirm = ref(false);\r\nconst downloadConfirmMessage = ref('');\r\nconst downloadDto = ref<any>({});\r\nconst totalFileCount = ref(1);\r\nconst successFileCount = ref(0);\r\nconst downloadUploadType = ref('copy');\r\nconst intervalId = ref<any>(null);\r\nconst deletableDownloadFiles = ref({});\r\nconst loadingState = ref('');\r\nconst showUploadSelectModal = ref(false);\r\nconst possibleUploadFileNames = ref([]);\r\nconst selectedUploadFile = ref('');\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\nwatch([testTypeCd, diffCellAnalyzingCount, diffCellAnalyzingCount, wbcPositionMargin, rbcPositionMargin,\r\n  pltPositionMargin, pbsCellAnalyzingCount, edgeShotType, stitchCount, bfCellAnalyzingCount, iaRootPath, isNsNbIntegration, isAlarm, alarmCount, keepPage], async () => {\r\n  const cellAfterSettingObj = {\r\n    id: cellimgId.value,\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(cellAfterSettingObj)});\r\n  if (settingType.value !== settingName.cellImageAnalyzed) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n  }\r\n})\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'UIMD_BM_backup' : 'UIMD_PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        edgeShotType.value = String(data?.edgeShotType);\r\n        iaRootPath.value = data.iaRootPath;\r\n        downloadRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n\r\n        const cellBeforeSettingObj = {\r\n          id: cellimgId.value,\r\n          analysisType: data?.analysisType,\r\n          diffCellAnalyzingCount: data?.diffCellAnalyzingCount,\r\n          diffWbcPositionMargin: data?.diffWbcPositionMargin,\r\n          diffRbcPositionMargin: data?.diffRbcPositionMargin,\r\n          diffPltPositionMargin: data?.diffPltPositionMargin,\r\n          pbsCellAnalyzingCount: data?.pbsCellAnalyzingCount,\r\n          stitchCount: data?.stitchCount,\r\n          edgeShotType: data?.edgeShotType,\r\n          bfCellAnalyzingCount: data?.bfCellAnalyzingCount,\r\n          iaRootPath: data?.iaRootPath,\r\n          isNsNbIntegration: data?.isNsNbIntegration,\r\n          isAlarm: data?.isAlarm,\r\n          alarmCount: data?.alarmCount,\r\n          keepPage: data?.keepPage,\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n        await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: downloadRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? messages.settingSaveSuccess : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      const keepPageType = projectType.value === 'pb' ? 'keepPage': 'bmKeepPage'\r\n      sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n      await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst uploadConfirm = async (uploadType: 'move' | 'copy') => {\r\n  showUploadModal.value = false;\r\n  totalFileCount.value = possibleUploadCount.value;\r\n  try {\r\n    isLoadingProgressBar.value = true;\r\n    const day = localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      dayQuery,\r\n      projectType: projectType.value,\r\n      uploadType\r\n    }\r\n    downloadUploadType.value = uploadType;\r\n\r\n    if (uploadType === 'move') {\r\n      loadingState.value = 'moved';\r\n    } else {\r\n      loadingState.value = 'copied';\r\n    }\r\n\r\n    successFileCount.value = 0;\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    handlePolling();\r\n    const result = await uploadBackupApi(uploadDto);\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      showSuccessAlert('Upload completed successfully');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    successFileCount.value = totalFileCount.value;\r\n    clearInterval(intervalId.value);\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n  await updateFileCounts('Upload');\r\n}\r\n\r\nconst uploadCancel = async () => {\r\n  showUploadModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await cellImgSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleDownloadClose = () => {\r\n  showDownloadConfirm.value = false;\r\n}\r\n\r\nconst handlePolling = async () => {\r\n  const duration = String(totalFileCount.value).length // 1초\r\n  intervalId.value = setInterval(async () => {\r\n    successFileCount.value += 1;\r\n    if (successFileCount.value === totalFileCount.value - 1) {\r\n      clearInterval(intervalId.value);\r\n    }\r\n  }, duration * 1500);\r\n}\r\n\r\nconst downloadUploadStopWebSocket = (state: boolean) => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('isDownloadUploading', {\r\n    type: 'SEND_DATA',\r\n    payload: state\r\n  });\r\n}\r\n\r\nconst handleDownload = async (downloadType: 'move' | 'copy') => {\r\n  const downloadDto = downloadDtoObj(downloadType);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n  downloadUploadStopWebSocket(true);\r\n\r\n  if (downloadType === 'move') {\r\n    loadingState.value = 'moved';\r\n  } else {\r\n    loadingState.value = 'copied';\r\n  }\r\n\r\n  successFileCount.value = 0;\r\n\r\n  try {\r\n    handlePolling();\r\n    await backUpDateApi(downloadDto);\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    clearInterval(intervalId.value);\r\n    successFileCount.value = totalFileCount.value;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n\r\n  await updateFileCounts('Download');\r\n}\r\n\r\nconst updateFileCounts = async (downloadUploadType: 'Download' | 'Upload') => {\r\n  successFileCount.value = totalFileCount.value;\r\n  setTimeout(async () => {\r\n    totalFileCount.value = 0;\r\n    successFileCount.value = 0;\r\n    isLoadingProgressBar.value = false;\r\n  }, 2000)\r\n  await showSuccessAlert(`${downloadUploadType} Success`);\r\n}\r\n\r\nconst downloadDtoObj = (downloadType: 'move' | 'copy') => {\r\n  downloadUploadType.value = downloadType;\r\n  showDownloadConfirm.value = false;\r\n  const day = localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const downloadDto = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n    dayQuery,\r\n    downloadType\r\n  }\r\n  isLoadingProgressBar.value = true;\r\n\r\n  return downloadDto;\r\n}\r\n\r\nconst createBackup = async () => {\r\n  if (downloadRootPath.value === ''){\r\n    showErrorAlert('Please select a download save path');\r\n    return\r\n  }\r\n\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n\r\n  if (!moment(sendingDownloadStartDate).isSameOrBefore(sendingDownloadEndDate)) {\r\n    showErrorAlert('Please check the date');\r\n    return\r\n  }\r\n\r\n  downloadDto.value = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n  };\r\n  try {\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    isDownloading.value = true;\r\n    const isPossibleToBackup = await downloadPossibleApi(downloadDto.value);\r\n    if (isPossibleToBackup.data.success) {\r\n      totalFileCount.value = Number(isPossibleToBackup.data.message.split(' ')[1]);\r\n      showDownloadConfirm.value = true;\r\n      downloadConfirmMessage.value = 'Would you like to copy files?';\r\n      // downloadConfirmMessage.value = `Would you move or copy files`;\r\n    } else {\r\n      showErrorAlert(isPossibleToBackup.data.message);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    isDownloading.value = false;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n}\r\n\r\nconst handleSelectUploadFile = async () => {\r\n  const uploadDto = {\r\n    originUploadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    const result = await checkPossibleUploadFileApi(uploadDto);\r\n    if (result.success) {\r\n      possibleUploadFileNames.value = result.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    possibleUploadFileNames.value = [];\r\n  } finally {\r\n    showUploadSelectModal.value = true;\r\n  }\r\n}\r\n\r\nconst openSourceDrive = async () => {\r\n  const downloadDto = {\r\n    originDownloadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    await openDriveApi(downloadDto);\r\n  } catch (e) {\r\n    deletableDownloadFiles.value = [];\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleUploadSelectFile = async () => {\r\n    try {\r\n    isRestoring.value = true;\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      projectType: projectType.value\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n\r\n    const result: any = await uploadPossibleApi(uploadDto);\r\n\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      totalFileCount.value = result.data.totalMove;\r\n      successFileCount.value = result.data.successMove;\r\n      showUploadModal.value = true;\r\n      uploadSlotIdObj.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n      await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    isRestoring.value = false;\r\n  }\r\n\r\n  showUploadSelectModal.value = false;\r\n}\r\n\r\nconst handleUploadSelectModalClose = () => {\r\n  showUploadSelectModal.value = false;\r\n  selectedUploadFile.value = '';\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"p\", _hoisted_3, _toDisplayString(successFileCount.value) + \" / \" + _toDisplayString(totalFileCount.value) + \" files \" + _toDisplayString(loadingState.value) + \"...\", 1),\n        _createElementVNode(\"div\", {\n          class: \"progressBar\",\n          style: _normalizeStyle({ width: (successFileCount.value / totalFileCount.value) * 100 + '%' })\n        }, null, 4)\n      ])\n    ], 512), [\n      [_vShow, isLoadingProgressBar.value]\n    ]),\n    (isRestoring.value || isDownloading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, _hoisted_7))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"table\", _hoisted_9, [\n        _createElementVNode(\"tbody\", null, [\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_10, [\n                _hoisted_11,\n                _createElementVNode(\"td\", _hoisted_12, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_13))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, testTypeCd.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_14, [\n                (projectType.value === 'pb')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_15, \"WBC Diff Analysis Values\"))\n                  : _createCommentVNode(\"\", true),\n                (projectType.value === 'bm')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_16, \"BM Diff Analysis Values\"))\n                  : _createCommentVNode(\"\", true),\n                _hoisted_17,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((diffCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_18))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, diffCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_19, [\n                _createElementVNode(\"th\", {\n                  rowspan: projectType.value === 'pb' && testTypeCd.value === '04' ? 3 : 2\n                }, \"PBS Analysis Values\", 8, _hoisted_20),\n                _hoisted_21,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((pbsCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_22))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbsCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_23, [\n                (projectType.value === 'bm')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_24))\n                  : _createCommentVNode(\"\", true),\n                _hoisted_25,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((stitchCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_26))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, stitchCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _withDirectives(_createElementVNode(\"tr\", null, [\n            _hoisted_27,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((edgeShotType).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(edgeShotTypeList), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_28))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, edgeShotType.value]\n              ])\n            ])\n          ], 512), [\n            [_vShow, projectType.value === 'pb' && testTypeCd.value === '04' && viewerCheck.value !== 'viewer']\n          ]),\n          (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_29, [\n                _hoisted_30,\n                _hoisted_31,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((bfCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_32))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, bfCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_33, [\n                _hoisted_34,\n                _hoisted_35,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((wbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(WbcPositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_36))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, wbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_37, [\n                _hoisted_38,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((rbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_39))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, rbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb' && viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_40, [\n                _hoisted_41,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((pltPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_42))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pltPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", {\n              style: _normalizeStyle(viewerCheck.value === 'viewer' && 'width: 214px;')\n            }, [\n              _createTextVNode(\" IA Root Path \"),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-info'],\n                title: _unref(messages).SETTING_INFO_IA_ROOT_PATH_KO\n              }, null, 8, [\"title\"])\n            ], 4),\n            _createElementVNode(\"td\", _hoisted_43, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((iaRootPath).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_44))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, iaRootPath.value]\n              ])\n            ])\n          ]),\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_45, [\n                _createElementVNode(\"th\", null, [\n                  _createTextVNode(\" NS/NB Integration \"),\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'circle-info'],\n                    title: _unref(messages).SETTING_INFO_NS_NB_INTEGRATION_KO\n                  }, null, 8, [\"title\"])\n                ]),\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleNsNbIntegration\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_46, [\n                _createElementVNode(\"th\", null, [\n                  _createTextVNode(\" Alarm Timer (sec) \"),\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'circle-info'],\n                    title: _unref(messages).SETTING_INFO_ALARM_TIME_KO\n                  }, null, 8, [\"title\"])\n                ]),\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleAlarm\n                  }, null, 8, [\"icon\"])\n                ]),\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"text\",\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((alarmCount).value = $event)),\n                    class: \"alarmInput\",\n                    onInput: _cache[11] || (_cache[11] = ($event: any) => (filterNumbersOnly($event)))\n                  }, null, 544), [\n                    [_vModelText, alarmCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (viewerCheck.value !== 'viewer')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_47, [\n                _createElementVNode(\"th\", null, [\n                  _createTextVNode(\" Keep Page \"),\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'circle-info'],\n                    title: _unref(messages).SETTING_INFO_KEEP_PAGE_KO\n                  }, null, 8, [\"title\"])\n                ]),\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleKeepPage\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"table\", _hoisted_48, [\n        _hoisted_49,\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", null, [\n              _createTextVNode(\" Download Save Path \"),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-info'],\n                title: _unref(messages).SETTING_INFO_DOWNLOAD_SAVE_PATH_KO\n              }, null, 8, [\"title\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"div\", _hoisted_50, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((downloadRootPath).value = $event)),\n                  class: \"downloadPath\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type,\n                      value: type\n                    }, _toDisplayString(type), 9, _hoisted_51))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, downloadRootPath.value]\n                ]),\n                _createVNode(_component_font_awesome_icon, {\n                  icon: ['fas', 'folder-open'],\n                  onClick: openSourceDrive,\n                  class: \"openDriveIcon\"\n                })\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", _hoisted_52, [\n              _createTextVNode(\" Download \"),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-info'],\n                title: _unref(messages).SETTING_INFO_DOWNLOAD_KO\n              }, null, 8, [\"title\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _createElementVNode(\"div\", _hoisted_53, [\n                _createVNode(_unref(Datepicker), {\n                  modelValue: backupStartDate.value,\n                  \"onUpdate:modelValue\": _cache[13] || (_cache[13] = ($event: any) => ((backupStartDate).value = $event))\n                }, null, 8, [\"modelValue\"]),\n                _createVNode(_unref(Datepicker), {\n                  modelValue: backupEndDate.value,\n                  \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((backupEndDate).value = $event))\n                }, null, 8, [\"modelValue\"]),\n                _createElementVNode(\"button\", {\n                  class: \"backupBtn\",\n                  onClick: createBackup\n                }, \"Download\")\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _createElementVNode(\"th\", null, [\n              _createTextVNode(\" Upload \"),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-info'],\n                title: _unref(messages).SETTING_INFO_UPLOAD_KO\n              }, null, 8, [\"title\"])\n            ]),\n            _createElementVNode(\"td\", _hoisted_54, [\n              _createElementVNode(\"div\", _hoisted_55, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": _cache[15] || (_cache[15] = ($event: any) => ((uploadRootPath).value = $event)),\n                  class: \"uploadSavePath\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: type,\n                      value: type\n                    }, _toDisplayString(type), 9, _hoisted_56))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, uploadRootPath.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"uploadBtn\",\n                  onClick: handleSelectUploadFile\n                }, \"Upload\")\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn mb2\",\n        type: \"button\",\n        onClick: _cache[16] || (_cache[16] = ($event: any) => (cellImgSet()))\n      }, \"Save\")\n    ]),\n    (showUploadModal.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 1,\n          class: _normalizeClass(impossibleUploadCount.value === 0 ? 'uploadModalSmall' : 'uploadModal')\n        }, [\n          (impossibleUploadCount.value === 0)\n            ? (_openBlock(), _createElementBlock(\"p\", _hoisted_57, \"Would you like to upload?\"))\n            : (impossibleUploadCount.value > 0)\n              ? (_openBlock(), _createElementBlock(\"pre\", _hoisted_58, [\n                  _createTextVNode(\"      There are \"),\n                  _hoisted_59,\n                  _createTextVNode(\" items\\n      Would you like to upload possible items?\\n    \")\n                ]))\n              : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(impossibleUploadCount.value === 0 && 'uploadModalCountWrapperSmall')\n          }, [\n            _createElementVNode(\"p\", null, \"Movable Items Count: \" + _toDisplayString(possibleUploadCount.value), 1),\n            _createElementVNode(\"p\", null, \"Duplicated Count: \" + _toDisplayString(impossibleUploadCount.value), 1)\n          ], 2),\n          (impossibleUploadCount.value > 0)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_60, [\n                _hoisted_61,\n                _createElementVNode(\"ul\", _hoisted_62, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(uploadSlotIdObj.value?.duplicated, (barcodeNo) => {\n                    return (_openBlock(), _createElementBlock(\"li\", {\n                      class: \"userSelectText\",\n                      key: barcodeNo\n                    }, _toDisplayString(barcodeNo), 1))\n                  }), 128))\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_63, [\n            _withDirectives(_createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: _cache[17] || (_cache[17] = ($event: any) => (uploadConfirm('copy')))\n            }, _toDisplayString(_unref(messages).COPY), 513), [\n              [_vShow, possibleUploadCount.value > 0]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"memoModalBtn\",\n              onClick: uploadCancel\n            }, _toDisplayString(impossibleUploadCount.value === 0 ? _unref(messages).CANCEL : _unref(messages).CLOSE), 1)\n          ])\n        ], 2))\n      : _createCommentVNode(\"\", true),\n    _withDirectives(_createElementVNode(\"div\", {\n      class: _normalizeClass(possibleUploadFileNames.value.length === 0 ? 'downloadDeleteSmallModal' : 'downloadDeleteModal')\n    }, [\n      _hoisted_64,\n      _withDirectives(_createElementVNode(\"div\", _hoisted_65, [\n        _hoisted_66,\n        _createElementVNode(\"ul\", _hoisted_67, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(possibleUploadFileNames.value, (folderName) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              class: \"userSelectText flexSpaceBetween\",\n              key: folderName\n            }, [\n              _createElementVNode(\"p\", _hoisted_68, _toDisplayString(folderName), 1),\n              _withDirectives(_createElementVNode(\"input\", {\n                style: {\"margin\":\"0\"},\n                \"onUpdate:modelValue\": _cache[18] || (_cache[18] = ($event: any) => ((selectedUploadFile).value = $event)),\n                type: \"radio\",\n                value: folderName\n              }, null, 8, _hoisted_69), [\n                [_vModelRadio, selectedUploadFile.value]\n              ])\n            ]))\n          }), 128))\n        ])\n      ], 512), [\n        [_vShow, possibleUploadFileNames.value.length > 0]\n      ]),\n      _withDirectives(_createElementVNode(\"p\", _hoisted_70, \"No files\", 512), [\n        [_vShow, possibleUploadFileNames.value.length === 0]\n      ]),\n      _createElementVNode(\"div\", _hoisted_71, [\n        (possibleUploadFileNames.value.length > 0)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _createElementVNode(\"button\", {\n                class: \"memoModalBtn\",\n                onClick: handleUploadSelectFile\n              }, _toDisplayString(_unref(messages).UPLOAD), 1),\n              _createElementVNode(\"button\", {\n                class: \"memoModalBtn\",\n                onClick: handleUploadSelectModalClose\n              }, _toDisplayString(_unref(messages).CANCEL), 1)\n            ], 64))\n          : (_openBlock(), _createElementBlock(\"button\", {\n              key: 1,\n              class: \"memoModalBtn\",\n              onClick: handleUploadSelectModalClose\n            }, _toDisplayString(_unref(messages).CLOSE), 1))\n      ])\n    ], 2), [\n      [_vShow, showUploadSelectModal.value]\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showDownloadConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 3,\n          \"is-visible\": showDownloadConfirm.value,\n          message: downloadConfirmMessage.value,\n          confirmText: _unref(messages).COPY,\n          closeText: _unref(messages).CLOSE,\n          onHide: handleDownloadClose,\n          onOkConfirm: _cache[19] || (_cache[19] = ($event: any) => (handleDownload('copy')))\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 4,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loadingBackground\" v-show=\"isLoadingProgressBar\">\r\n    <div class=\"progressContainer\">\r\n      <p class=\"loadingProgressBarText\">{{ successFileCount }} / {{ totalFileCount  }} files {{ loadingState }}...</p>\r\n      <div\r\n          class=\"progressBar\"\r\n          :style=\"{ width: (successFileCount / totalFileCount) * 100 + '%' }\"\r\n      ></div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"loadingBackground\" v-if=\"isRestoring || isDownloading\">\r\n    <div class=\"loaderForLogin\"></div>\r\n    <p class=\"loadingTextLogin\">Loading...</p>\r\n  </div>\r\n    <div class=\"settingCellImgAnalyzedContainer\">\r\n        <table class=\"settingTable\">\r\n        <tbody>\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <th>Analysis Type</th>\r\n          <td colspan=\"2\">\r\n            <select v-model='testTypeCd'>\r\n              <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <!--Common analysis values-->\r\n\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <!-- WBC diff analysis values -->\r\n          <th rowspan=\"1\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n\r\n          <!-- BM diff analysis values -->\r\n          <th v-if=\"projectType === 'bm'\">BM Diff Analysis Values</th>\r\n          <th>Cell Analyzing Count</th>\r\n          <td>\r\n\r\n            <select v-model='diffCellAnalyzingCount'>\r\n              <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <!--      PBS analysis values-->\r\n        <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n          <th :rowspan=\"projectType === 'pb' && testTypeCd === '04' ? 3 : 2\">PBS Analysis Values</th>\r\n          <th>\r\n            Cell Analyzing Count\r\n          </th>\r\n          <td>\r\n            <select v-model='pbsCellAnalyzingCount'>\r\n              <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <th v-if=\"projectType === 'bm'\"></th>\r\n          <th>Stitch Count</th>\r\n          <td>\r\n            <select v-model='stitchCount'>\r\n              <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr v-show=\"projectType === 'pb' && testTypeCd === '04' && viewerCheck !== 'viewer'\">\r\n          <th>Edge Shot Type</th>\r\n          <td>\r\n            <select v-model='edgeShotType'>\r\n              <option v-for=\"type in edgeShotTypeList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <!--      BF analysis values-->\r\n        <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n          <th>BF Analysis Values</th>\r\n          <th>Cell Analyzing Count</th>\r\n          <td>\r\n            <select v-model='bfCellAnalyzingCount'>\r\n              <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n\r\n        <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n          <th rowspan=\"3\">Common</th>\r\n          <th>Wbc Position Margin</th>\r\n          <td>\r\n            <select v-model='wbcPositionMargin'>\r\n              <option v-for=\"type in WbcPositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n          <th>Rbc Position Margin</th>\r\n          <td>\r\n            <select v-model='rbcPositionMargin'>\r\n              <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"projectType === 'pb' && viewerCheck !== 'viewer'\">\r\n          <th>Plt Position Margin</th>\r\n          <td>\r\n            <select v-model='pltPositionMargin'>\r\n              <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th :style=\"viewerCheck === 'viewer' && 'width: 214px;'\">\r\n            IA Root Path\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_IA_ROOT_PATH_KO\" />\r\n          </th>\r\n          <td colspan=\"2\">\r\n            <select v-model='iaRootPath'>\r\n              <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n            </select>\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <th>\r\n            NS/NB Integration\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_NS_NB_INTEGRATION_KO\" />\r\n          </th>\r\n          <td>\r\n            <font-awesome-icon\r\n                :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                class=\"iconSize\"\r\n                @click=\"toggleNsNbIntegration\"\r\n            />\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <th>\r\n            Alarm Timer (sec)\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_ALARM_TIME_KO\" />\r\n          </th>\r\n          <td>\r\n            <font-awesome-icon\r\n                :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                class=\"iconSize\"\r\n                @click=\"toggleAlarm\"\r\n            />\r\n          </td>\r\n          <td>\r\n            <input type=\"text\" v-model='alarmCount' class=\"alarmInput\" @input=\"filterNumbersOnly($event)\">\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"viewerCheck !== 'viewer'\">\r\n          <th>\r\n            Keep Page\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_KEEP_PAGE_KO\" />\r\n          </th>\r\n          <td>\r\n            <font-awesome-icon\r\n                :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                class=\"iconSize\"\r\n                @click=\"toggleKeepPage\"\r\n            />\r\n          </td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <table class=\"settingTable auto\">\r\n        <colgroup>\r\n          <col width=\"90\">\r\n          <col width=\"10\">\r\n        </colgroup>\r\n        <tbody>\r\n        <tr>\r\n          <th>\r\n            Download Save Path\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_DOWNLOAD_SAVE_PATH_KO\" />\r\n          </th>\r\n\r\n          <td>\r\n            <div class=\"downloadSavePathContainer\">\r\n              <select v-model='downloadRootPath' class=\"downloadPath\">\r\n                <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n              </select>\r\n              <font-awesome-icon :icon=\"['fas', 'folder-open']\" @click=\"openSourceDrive\" class=\"openDriveIcon\" />\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th title=\"Download data from start to end date\">\r\n            Download\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_DOWNLOAD_KO\" />\r\n          </th>\r\n          <td>\r\n            <div class=\"backupDatePickers\">\r\n              <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n              <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n              <button class=\"backupBtn\" @click=\"createBackup\">Download</button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr>\r\n          <th>\r\n            Upload\r\n            <font-awesome-icon :icon=\"['fas', 'circle-info']\" :title=\"messages.SETTING_INFO_UPLOAD_KO\" />\r\n          </th>\r\n          <td colspan=\"2\">\r\n            <div class=\"settingUploadContainer\">\r\n              <select v-model='uploadRootPath' class=\"uploadSavePath\">\r\n                <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n              </select>\r\n\r\n<!--              <input type=\"file\" ref=\"uploadFileInput\" @change=\"handleUploadFileChange\" style=\"display: none;\" accept=\".sql\" />-->\r\n              <button class=\"uploadBtn\" @click=\"handleSelectUploadFile\">Upload</button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <!--      나중에 기능 추가 할 부분 자동 백업-->\r\n        <!--      <tr>-->\r\n        <!--        <th>Auto Backup</th>-->\r\n        <!--        <td>-->\r\n        <!--          <div class=\"autoDateBox\">-->\r\n        <!--            <select v-model='autoBackUpMonth'>-->\r\n        <!--              <option v-for=\"month in autoDate\" :key=\"month.value\" :value=\"month.value\">-->\r\n        <!--                {{ month.value }}-->\r\n        <!--              </option>-->\r\n        <!--            </select>-->\r\n        <!--            <span>Month</span>-->\r\n        <!--          </div>-->\r\n        <!--        </td>-->\r\n        <!--      </tr>-->\r\n        </tbody>\r\n      </table>\r\n      <button class=\"saveBtn mb2\" type=\"button\" @click='cellImgSet()'>Save</button>\r\n    </div>\r\n\r\n\r\n  <!-- Upload 확인 모달 -->\r\n  <div v-if=\"showUploadModal\" :class=\"impossibleUploadCount === 0 ? 'uploadModalSmall' : 'uploadModal'\">\r\n    <p v-if=\"impossibleUploadCount === 0\" class=\"fs12\" style=\"top: 0;\">Would you like to upload?</p>\r\n    <pre v-else-if=\"impossibleUploadCount > 0\"\r\n        class=\"fs12\"\r\n    >\r\n      There are <span style=\"color: red;\">duplicated</span> items\r\n      Would you like to upload possible items?\r\n    </pre>\r\n    <div :class=\"impossibleUploadCount === 0 && 'uploadModalCountWrapperSmall'\">\r\n      <p>Movable Items Count: {{ possibleUploadCount }}</p>\r\n      <p>Duplicated Count: {{ impossibleUploadCount }}</p>\r\n    </div>\r\n    <div v-if=\"impossibleUploadCount > 0\" class=\"uploadDuplicatedSlotContainer\">\r\n      <p style=\"color: black;\">Duplicated Barcode Numbers</p>\r\n      <ul class=\"uploadDuplicatedSlotWrapper\">\r\n          <li class=\"userSelectText\" v-for=\"barcodeNo in uploadSlotIdObj?.duplicated\" :key=\"barcodeNo\">\r\n            {{ barcodeNo }}\r\n          </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"uploadModalBtnContainer\">\r\n      <button v-show=\"possibleUploadCount > 0\" class=\"memoModalBtn\" @click=\"uploadConfirm('copy')\">{{ messages.COPY }}</button>\r\n<!--      <button v-show=\"possibleUploadCount > 0\" class=\"memoModalBtn\" @click=\"uploadConfirm('move')\">{{ messages.MOVE }}</button>-->\r\n      <button class=\"memoModalBtn\" @click=\"uploadCancel\">{{ impossibleUploadCount === 0 ? messages.CANCEL : messages.CLOSE }}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Upload 선택 모달 -->\r\n  <div v-show=\"showUploadSelectModal\" :class=\"possibleUploadFileNames.length === 0 ? 'downloadDeleteSmallModal' : 'downloadDeleteModal'\">\r\n    <p class=\"fs12\" style=\"top: 0;\">Upload file list</p>\r\n    <div v-show=\"possibleUploadFileNames.length > 0\" class=\"downloadDeleteContainer\">\r\n      <p class=\"downloadDeleteSemiTitle\">Select upload file</p>\r\n      <ul class=\"downloadDeleteWrapper\">\r\n        <li class=\"userSelectText flexSpaceBetween\" v-for=\"folderName in possibleUploadFileNames\" :key=\"folderName\">\r\n          <p style=\"font-size: 0.8rem;\">{{ folderName }}</p>\r\n          <input style=\"margin: 0;\" v-model=\"selectedUploadFile\" type=\"radio\" :value=\"folderName\" />\r\n        </li>\r\n\r\n      </ul>\r\n    </div>\r\n    <p class=\"mt4\" v-show=\"possibleUploadFileNames.length === 0\">No files</p>\r\n    <div class=\"uploadModalBtnContainer\">\r\n      <template v-if=\"possibleUploadFileNames.length > 0\">\r\n        <button class=\"memoModalBtn\" @click=\"handleUploadSelectFile\">{{ messages.UPLOAD }}</button>\r\n        <button class=\"memoModalBtn\" @click=\"handleUploadSelectModalClose\">{{ messages.CANCEL }}</button>\r\n      </template>\r\n      <button v-else class=\"memoModalBtn\" @click=\"handleUploadSelectModalClose\">{{ messages.CLOSE }}</button>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showDownloadConfirm\"\r\n      :is-visible=\"showDownloadConfirm\"\r\n      :message=\"downloadConfirmMessage\"\r\n      :confirmText=\"messages.COPY\"\r\n      :closeText=\"messages.CLOSE\"\r\n      @hide=\"handleDownloadClose\"\r\n      @okConfirm=\"handleDownload('copy')\"\r\n  />\r\n<!--  <ConfirmThreeBtn-->\r\n<!--      v-if=\"showDownloadConfirm\"-->\r\n<!--      :is-visible=\"showDownloadConfirm\"-->\r\n<!--      :message=\"downloadConfirmMessage\"-->\r\n<!--      :confirmText=\"messages.MOVE\"-->\r\n<!--      :confirmText2=\"messages.COPY\"-->\r\n<!--      :closeText=\"messages.CLOSE\"-->\r\n<!--      @hide=\"handleDownloadClose\"-->\r\n<!--      @okConfirm=\"handleDownload('move')\"-->\r\n<!--      @okConfirm2=\"handleDownload('copy')\"-->\r\n<!--  />-->\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport { computed, nextTick, onMounted, ref, watch, getCurrentInstance } from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList, settingName, edgeShotTypeList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport moment from \"moment\";\r\nimport {\r\n  backUpDateApi,\r\n  downloadPossibleApi,\r\n  uploadPossibleApi,\r\n  uploadBackupApi,\r\n  openDriveApi,\r\n  checkPossibleUploadFileApi\r\n} from \"@/common/api/service/backup/wbcApi\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport ConfirmThreeBtn from \"@/components/commonUi/ConfirmThreeBtn.vue\";\r\n\r\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst showUploadModal = ref(false);\r\n\r\nconst alertMessage = ref('');\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst edgeShotType = ref('0');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst downloadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\nconst uploadRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\nconst autoDate = ref([\r\n  {value: 'Not selected'},\r\n  {value: 1},\r\n  {value: 2},\r\n  {value: 3},\r\n  {value: 4},\r\n  {value: 5},\r\n  {value: 6},\r\n  {value: 7},\r\n  {value: 8},\r\n  {value: 9},\r\n  {value: 10},\r\n  {value: 11},\r\n  {value: 12}\r\n]);\r\nconst autoBackUpMonth = ref('Not selected');\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\n\r\nconst projectType = ref('pb');\r\nconst testTypeArr = ref<any>([]);\r\nconst uploadSlotIdObj = ref({duplicated: [], nonDuplicated: []});\r\nconst possibleUploadCount = computed(() => uploadSlotIdObj.value?.nonDuplicated && uploadSlotIdObj.value?.nonDuplicated.length);\r\nconst impossibleUploadCount = computed(() => uploadSlotIdObj.value?.duplicated && uploadSlotIdObj.value?.duplicated.length);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst isRestoring = ref(false);\r\nconst isDownloading = ref(false);\r\nconst isLoadingProgressBar = ref(false);\r\nconst showDownloadConfirm = ref(false);\r\nconst downloadConfirmMessage = ref('');\r\nconst downloadDto = ref<any>({});\r\nconst totalFileCount = ref(1);\r\nconst successFileCount = ref(0);\r\nconst downloadUploadType = ref('copy');\r\nconst intervalId = ref<any>(null);\r\nconst deletableDownloadFiles = ref({});\r\nconst loadingState = ref('');\r\nconst showUploadSelectModal = ref(false);\r\nconst possibleUploadFileNames = ref([]);\r\nconst selectedUploadFile = ref('');\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\nwatch([testTypeCd, diffCellAnalyzingCount, diffCellAnalyzingCount, wbcPositionMargin, rbcPositionMargin,\r\n  pltPositionMargin, pbsCellAnalyzingCount, edgeShotType, stitchCount, bfCellAnalyzingCount, iaRootPath, isNsNbIntegration, isAlarm, alarmCount, keepPage], async () => {\r\n  const cellAfterSettingObj = {\r\n    id: cellimgId.value,\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(cellAfterSettingObj)});\r\n  if (settingType.value !== settingName.cellImageAnalyzed) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cellImageAnalyzed });\r\n  }\r\n})\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst filterNumbersOnly = (event: Event) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  alarmCount.value = filteredValue.trim();\r\n};\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'UIMD_BM_backup' : 'UIMD_PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.diffWbcPositionMargin;\r\n        rbcPositionMargin.value = data.diffRbcPositionMargin;\r\n        pltPositionMargin.value = data.diffPltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        edgeShotType.value = String(data?.edgeShotType);\r\n        iaRootPath.value = data.iaRootPath;\r\n        downloadRootPath.value = data.backupPath || (window.PROJECT_TYPE === 'bm' ? 'D:\\\\UIMD_BM_backup' : 'D:\\\\UIMD_PB_backup');\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n        autoBackUpMonth.value = data?.autoBackUpMonth;\r\n\r\n        const cellBeforeSettingObj = {\r\n          id: cellimgId.value,\r\n          analysisType: data?.analysisType,\r\n          diffCellAnalyzingCount: data?.diffCellAnalyzingCount,\r\n          diffWbcPositionMargin: data?.diffWbcPositionMargin,\r\n          diffRbcPositionMargin: data?.diffRbcPositionMargin,\r\n          diffPltPositionMargin: data?.diffPltPositionMargin,\r\n          pbsCellAnalyzingCount: data?.pbsCellAnalyzingCount,\r\n          stitchCount: data?.stitchCount,\r\n          edgeShotType: data?.edgeShotType,\r\n          bfCellAnalyzingCount: data?.bfCellAnalyzingCount,\r\n          iaRootPath: data?.iaRootPath,\r\n          isNsNbIntegration: data?.isNsNbIntegration,\r\n          isAlarm: data?.isAlarm,\r\n          alarmCount: data?.alarmCount,\r\n          keepPage: data?.keepPage,\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n        await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cellBeforeSettingObj) });\r\n      }\r\n\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    diffWbcPositionMargin: wbcPositionMargin.value,\r\n    diffRbcPositionMargin: rbcPositionMargin.value,\r\n    diffPltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    edgeShotType: edgeShotType.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: downloadRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    autoBackUpMonth: autoBackUpMonth.value,\r\n    autoBackUpStartDate: autoBackUpMonth.value !== 'Not selected' ? moment(new Date()).local().toDate().toISOString().split('T')[0]:null,\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? messages.settingSaveSuccess : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n      sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      const keepPageType = projectType.value === 'pb' ? 'keepPage': 'bmKeepPage'\r\n      sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n      await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst uploadConfirm = async (uploadType: 'move' | 'copy') => {\r\n  showUploadModal.value = false;\r\n  totalFileCount.value = possibleUploadCount.value;\r\n  try {\r\n    isLoadingProgressBar.value = true;\r\n    const day = localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      dayQuery,\r\n      projectType: projectType.value,\r\n      uploadType\r\n    }\r\n    downloadUploadType.value = uploadType;\r\n\r\n    if (uploadType === 'move') {\r\n      loadingState.value = 'moved';\r\n    } else {\r\n      loadingState.value = 'copied';\r\n    }\r\n\r\n    successFileCount.value = 0;\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    handlePolling();\r\n    const result = await uploadBackupApi(uploadDto);\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      showSuccessAlert('Upload completed successfully');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    successFileCount.value = totalFileCount.value;\r\n    clearInterval(intervalId.value);\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n  await updateFileCounts('Upload');\r\n}\r\n\r\nconst uploadCancel = async () => {\r\n  showUploadModal.value = false;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await cellImgSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleDownloadClose = () => {\r\n  showDownloadConfirm.value = false;\r\n}\r\n\r\nconst handlePolling = async () => {\r\n  const duration = String(totalFileCount.value).length // 1초\r\n  intervalId.value = setInterval(async () => {\r\n    successFileCount.value += 1;\r\n    if (successFileCount.value === totalFileCount.value - 1) {\r\n      clearInterval(intervalId.value);\r\n    }\r\n  }, duration * 1500);\r\n}\r\n\r\nconst downloadUploadStopWebSocket = (state: boolean) => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('isDownloadUploading', {\r\n    type: 'SEND_DATA',\r\n    payload: state\r\n  });\r\n}\r\n\r\nconst handleDownload = async (downloadType: 'move' | 'copy') => {\r\n  const downloadDto = downloadDtoObj(downloadType);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n  downloadUploadStopWebSocket(true);\r\n\r\n  if (downloadType === 'move') {\r\n    loadingState.value = 'moved';\r\n  } else {\r\n    loadingState.value = 'copied';\r\n  }\r\n\r\n  successFileCount.value = 0;\r\n\r\n  try {\r\n    handlePolling();\r\n    await backUpDateApi(downloadDto);\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    clearInterval(intervalId.value);\r\n    successFileCount.value = totalFileCount.value;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n\r\n  await updateFileCounts('Download');\r\n}\r\n\r\nconst updateFileCounts = async (downloadUploadType: 'Download' | 'Upload') => {\r\n  successFileCount.value = totalFileCount.value;\r\n  setTimeout(async () => {\r\n    totalFileCount.value = 0;\r\n    successFileCount.value = 0;\r\n    isLoadingProgressBar.value = false;\r\n  }, 2000)\r\n  await showSuccessAlert(`${downloadUploadType} Success`);\r\n}\r\n\r\nconst downloadDtoObj = (downloadType: 'move' | 'copy') => {\r\n  downloadUploadType.value = downloadType;\r\n  showDownloadConfirm.value = false;\r\n  const day = localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const downloadDto = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n    dayQuery,\r\n    downloadType\r\n  }\r\n  isLoadingProgressBar.value = true;\r\n\r\n  return downloadDto;\r\n}\r\n\r\nconst createBackup = async () => {\r\n  if (downloadRootPath.value === ''){\r\n    showErrorAlert('Please select a download save path');\r\n    return\r\n  }\r\n\r\n  const sendingDownloadStartDate = moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n  const sendingDownloadEndDate = moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0];\r\n\r\n  if (!moment(sendingDownloadStartDate).isSameOrBefore(sendingDownloadEndDate)) {\r\n    showErrorAlert('Please check the date');\r\n    return\r\n  }\r\n\r\n  downloadDto.value = {\r\n    startDate: sendingDownloadStartDate, // 백업 시작일\r\n    endDate: sendingDownloadEndDate, // 백업 종료일\r\n    originDownloadPath: `${iaRootPath.value}`, //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n    destinationDownloadPath: downloadRootPath.value, // 백업 경로\r\n    projectType: projectType.value,\r\n  };\r\n  try {\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n    isDownloading.value = true;\r\n    const isPossibleToBackup = await downloadPossibleApi(downloadDto.value);\r\n    if (isPossibleToBackup.data.success) {\r\n      totalFileCount.value = Number(isPossibleToBackup.data.message.split(' ')[1]);\r\n      showDownloadConfirm.value = true;\r\n      downloadConfirmMessage.value = 'Would you like to copy files?';\r\n      // downloadConfirmMessage.value = `Would you move or copy files`;\r\n    } else {\r\n      showErrorAlert(isPossibleToBackup.data.message);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    isDownloading.value = false;\r\n    downloadUploadStopWebSocket(false);\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n  }\r\n}\r\n\r\nconst handleSelectUploadFile = async () => {\r\n  const uploadDto = {\r\n    originUploadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    const result = await checkPossibleUploadFileApi(uploadDto);\r\n    if (result.success) {\r\n      possibleUploadFileNames.value = result.data;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    possibleUploadFileNames.value = [];\r\n  } finally {\r\n    showUploadSelectModal.value = true;\r\n  }\r\n}\r\n\r\nconst openSourceDrive = async () => {\r\n  const downloadDto = {\r\n    originDownloadPath: downloadRootPath.value\r\n  };\r\n\r\n  try {\r\n    await openDriveApi(downloadDto);\r\n  } catch (e) {\r\n    deletableDownloadFiles.value = [];\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleUploadSelectFile = async () => {\r\n    try {\r\n    isRestoring.value = true;\r\n    const uploadDto = {\r\n      fileName: selectedUploadFile.value,\r\n      destinationUploadPath: uploadRootPath.value,\r\n      originUploadPath: downloadRootPath.value,\r\n      projectType: projectType.value\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: true });\r\n    downloadUploadStopWebSocket(true);\r\n\r\n    const result: any = await uploadPossibleApi(uploadDto);\r\n\r\n    if (typeof result.data === 'string') {\r\n      showErrorAlert(result.data);\r\n    } else {\r\n      totalFileCount.value = result.data.totalMove;\r\n      successFileCount.value = result.data.successMove;\r\n      showUploadModal.value = true;\r\n      uploadSlotIdObj.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  } finally {\r\n    downloadUploadStopWebSocket(false);\r\n      await store.dispatch('commonModule/setCommonInfo', { isDownloadOrUploading: false });\r\n    isRestoring.value = false;\r\n  }\r\n\r\n  showUploadSelectModal.value = false;\r\n}\r\n\r\nconst handleUploadSelectModalClose = () => {\r\n  showUploadSelectModal.value = false;\r\n  selectedUploadFile.value = '';\r\n}\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"mb1 fs12\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = { class: \"mt1\" }\nconst _hoisted_4 = { class: \"degreeInput mb1\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\n\nimport {computed, onMounted, reactive, ref, watch, watchEffect} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree, settingName} from '@/common/defines/constFile/settings';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n});\r\n\r\nwatch(() => rbcClassListArr.value, async (rbcClassListArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.rbcDegree) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(messages.settingSaveFailure);\r\n    console.error(e);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await createRbcDegreeData();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"mt2 mb4 rbcClassListArr\",\n            key: 'rbc' + index\n          }, [\n            _createElementVNode(\"div\", _hoisted_1, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                (classItem.classNm !== 'Normal')\n                  ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                      _createElementVNode(\"span\", null, _toDisplayString(classItem.classNm), 1),\n                      _createElementVNode(\"div\", _hoisted_2, \" [ \" + _toDisplayString(`${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}`) + \" ] \", 1),\n                      _createElementVNode(\"div\", _hoisted_3, [\n                        _createElementVNode(\"div\", _hoisted_4, [\n                          _withDirectives(_createElementVNode(\"input\", {\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                          }, null, 8, _hoisted_5), [\n                            [_vModelText, classItem.degree1]\n                          ]),\n                          _withDirectives(_createElementVNode(\"input\", {\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                          }, null, 8, _hoisted_6), [\n                            [_vModelText, classItem.degree2]\n                          ]),\n                          _withDirectives(_createElementVNode(\"input\", {\n                            type: \"number\",\n                            \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                          }, null, 8, _hoisted_7), [\n                            [_vModelText, classItem.degree3]\n                          ])\n                        ])\n                      ])\n                    ], 64))\n                  : _createCommentVNode(\"\", true)\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", {\n          class: \"saveBtn mb2\",\n          onClick: onResetDegree\n        }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          class: \"saveBtn mb2\",\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div>\r\n<!--      <div class=\"mt2 mb4\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">-->\r\n<!--        <div style=\"display: flex; flex-direction: column\">-->\r\n<!--          <h2 class=\"fs12\">{{ category?.categoryNm }}</h2>-->\r\n\r\n<!--          <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">-->\r\n\r\n<!--            <div style=\"display: flex; align-items: center; justify-content: space-between;\">-->\r\n<!--              <template v-if=\"classItem.classNm !== 'Normal'\">-->\r\n<!--                <h3 class=\"fs10\">{{ classItem.classNm }} [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]</h3>-->\r\n<!--                <div class=\"mt1\">-->\r\n<!--                  <div class='degreeInput mb1' style=\"display: flex;\">-->\r\n<!--                    <input type=\"number\" v-model=\"classItem.degree1\"/>-->\r\n<!--                    <input type=\"number\" v-model=\"classItem.degree2\"/>-->\r\n<!--                    <input type=\"number\" v-model=\"classItem.degree3\"/>-->\r\n<!--                  </div>-->\r\n<!--                </div>-->\r\n<!--              </template>-->\r\n<!--            </div>-->\r\n\r\n<!--          </div>-->\r\n<!--        </div>-->\r\n<!--      </div>-->\r\n      <div class=\"mt2 mb4 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n        <div class=\"mb1 fs12\">\r\n          {{ category?.categoryNm }}\r\n        </div>\r\n\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <template v-if=\"classItem.classNm !== 'Normal'\">\r\n            <span>\r\n              {{ classItem.classNm }}\r\n            </span>\r\n            <div class=\"mb1\">\r\n              [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]\r\n            </div>\r\n            <div class=\"mt1\">\r\n              <div class='degreeInput mb1'>\r\n                <input type=\"number\" v-model=\"classItem.degree1\"/>\r\n                <input type=\"number\" v-model=\"classItem.degree2\"/>\r\n                <input type=\"number\" v-model=\"classItem.degree3\"/>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button class=\"saveBtn mb2\" @click=\"onResetDegree\">Reset</button>\r\n      <button class=\"saveBtn mb2\" type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, reactive, ref, watch, watchEffect} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree, settingName} from '@/common/defines/constFile/settings';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n});\r\n\r\nwatch(() => rbcClassListArr.value, async (rbcClassListArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.rbcDegree) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.rbcDegree });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(messages.settingSaveFailure);\r\n    console.error(e);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(rbcClassListArr.value) });\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await createRbcDegreeData();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"customSettingContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Gripper Open\", -1)\nconst _hoisted_3 = { class: \"mt2\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Camera Reset\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Charge Remaining Count\", -1)\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 500);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            class: _normalizeClass({'defaultBtn': true, 'blinkGripper': isBlinkingGripper.value})\n          }, \"OK\", 2)\n        ]),\n        _createElementVNode(\"li\", _hoisted_3, [\n          _hoisted_4,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: _normalizeClass([\"defaultBtn\", {'defaultBtn': true, 'blinkGripper': isBlinkCameraReset.value}]),\n            onClick: onCameraReset\n          }, \"OK \", 2)\n        ]),\n        _createElementVNode(\"li\", { class: \"mt2\" }, [\n          _hoisted_5,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onScan\n          }, \"Scan\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb1\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkingGripper}\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" :class=\"{'defaultBtn': true, 'blinkGripper': isBlinkCameraReset}\"\r\n                @click=\"onCameraReset\">OK\r\n        </button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onScan\">Scan</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {remainingCount} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\nconst isBlinkingGripper = ref(false);\r\nconst isBlinkCameraReset = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\nlet cameraResetTimeOut: ReturnType<typeof setTimeout> | null = null;\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\nconst onScan = async () => {\r\n  await remainingCount();\r\n}\r\n\r\nconst onGripperOpen = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingGripper.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.gripperOpen);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingGripper.value = false;\r\n    blinkTimeout = null;\r\n  }, 500);\r\n\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if (cameraResetTimeOut !== null) {\r\n    clearTimeout(cameraResetTimeOut);\r\n  }\r\n\r\n  isBlinkCameraReset.value = true;\r\n  tcpReq().embedStatus.gripperOpen.reqUserId = userId.value;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.cameraReset);\r\n\r\n  cameraResetTimeOut = setTimeout(() => {\r\n    isBlinkCameraReset.value = false;\r\n    cameraResetTimeOut = null;\r\n  }, 500);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, onBeforeMount, computed, watch} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport { basicWbcArr, basicBmClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {settingName} from \"@/common/defines/constFile/settings\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm'\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n});\r\n\r\nwatch(() => wbcCustomItems.value, async (wbcCustomItemsAfterSettingObj) => {\r\n  if (validateCustomClass()) {\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItemsAfterSettingObj) });\r\n  }\r\n  if (settingType.value !== settingName.wbcCustomClass) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  if (!validateCustomClass()) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcCustomItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst validateCustomClass = () => {\r\n  let existingClassFullNmArr, existingClassAbbreivationArr;\r\n\r\n  if (projectBm.value ) {\r\n    existingClassFullNmArr = basicBmClassList.map(item => item.fullNm);\r\n    existingClassAbbreivationArr = basicBmClassList.map(item => item.abbreviation)\r\n  } else {\r\n    existingClassFullNmArr = basicWbcArr.map(item => item.fullNm)\r\n    existingClassAbbreivationArr = basicWbcArr.map(item => item.abbreviation);\r\n  }\r\n\r\n  for (const wbcCustomItem of wbcCustomItems.value) {\r\n    if (wbcCustomItem.fullNm === '' && wbcCustomItem.abbreviation !== '') {\r\n      showErrorAlert(\"You should enter abbreviation\")\r\n      return false;\r\n    } else if (wbcCustomItem.fullNm !== '' && wbcCustomItem.abbreviation === '') {\r\n      showErrorAlert(\"You should enter class name\")\r\n      return false;\r\n    }\r\n\r\n    if (existingClassAbbreivationArr.includes(wbcCustomItem.abbreviation)) {\r\n      showErrorAlert(`${wbcCustomItem.abbreviation} is existing abbreviation`)\r\n      return false;\r\n    } else if (existingClassFullNmArr.includes(wbcCustomItem.fullNm)) {\r\n      showErrorAlert(`${wbcCustomItem.fullNm} is existing class name`)\r\n      return false;\r\n    } else if (wbcCustomItem.abbreviation === 'OT') {\r\n      showErrorAlert(\"Can't use OT abbreviation!\")\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'abbreviation'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.fullNm) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'fullNm'))\n              }, null, 40, _hoisted_3), [\n                [_vModelText, item.fullNm]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item.customNum }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.abbreviation\"\r\n              type=\"text\"\r\n              maxlength=\"3\"\r\n              placeholder=\"abbreviation\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'abbreviation')\"\r\n          />\r\n        </span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.fullNm\"\r\n              type=\"text\"\r\n              maxlength=\"25\"\r\n              placeholder=\"class name\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'fullNm')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeMount, computed, watch} from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport { basicWbcArr, basicBmClassList } from \"@/store/modules/analysis/wbcclassification\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {settingName} from \"@/common/defines/constFile/settings\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm'\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n});\r\n\r\nwatch(() => wbcCustomItems.value, async (wbcCustomItemsAfterSettingObj) => {\r\n  if (validateCustomClass()) {\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItemsAfterSettingObj) });\r\n  }\r\n  if (settingType.value !== settingName.wbcCustomClass) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcCustomClass });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  if (!validateCustomClass()) {\r\n    return;\r\n  }\r\n\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'abbreviation' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcCustomItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcCustomItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst validateCustomClass = () => {\r\n  let existingClassFullNmArr, existingClassAbbreivationArr;\r\n\r\n  if (projectBm.value ) {\r\n    existingClassFullNmArr = basicBmClassList.map(item => item.fullNm);\r\n    existingClassAbbreivationArr = basicBmClassList.map(item => item.abbreviation)\r\n  } else {\r\n    existingClassFullNmArr = basicWbcArr.map(item => item.fullNm)\r\n    existingClassAbbreivationArr = basicWbcArr.map(item => item.abbreviation);\r\n  }\r\n\r\n  for (const wbcCustomItem of wbcCustomItems.value) {\r\n    if (wbcCustomItem.fullNm === '' && wbcCustomItem.abbreviation !== '') {\r\n      showErrorAlert(\"You should enter abbreviation\")\r\n      return false;\r\n    } else if (wbcCustomItem.fullNm !== '' && wbcCustomItem.abbreviation === '') {\r\n      showErrorAlert(\"You should enter class name\")\r\n      return false;\r\n    }\r\n\r\n    if (existingClassAbbreivationArr.includes(wbcCustomItem.abbreviation)) {\r\n      showErrorAlert(`${wbcCustomItem.abbreviation} is existing abbreviation`)\r\n      return false;\r\n    } else if (existingClassFullNmArr.includes(wbcCustomItem.fullNm)) {\r\n      showErrorAlert(`${wbcCustomItem.fullNm} is existing class name`)\r\n      return false;\r\n    } else if (wbcCustomItem.abbreviation === 'OT') {\r\n      showErrorAlert(\"Can't use OT abbreviation!\")\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, computed, onBeforeMount, watch} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, settingName, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n});\r\n\r\nwatch(() => wbcHotKeysItems.value, async (wbcHotKeysItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"1\",\n                placeholder: \"hot key\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"1\"\r\n              placeholder=\"hot key\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, onBeforeMount, watch} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, settingName, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nonMounted(async () => {\r\n  await getWbcHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n});\r\n\r\nwatch(() => wbcHotKeysItems.value, async (wbcHotKeysItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value === 'bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\", \"onInput\"]\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n});\r\n\r\nwatch(() => bfHotKeysItems.value, async (bfHotKeysAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(bfHotKeysAfterSettingObj)});\r\n  if (settingType.value !== settingName.bfHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveBfCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item?.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item?.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"1\",\n                placeholder: \"hot key\",\n                onInput: ($event: any) => (filterEnglishAndNumbers($event, item, 'key'))\n              }, null, 40, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item?.abbreviation }}</span>\r\n        <span>{{ item?.fullNm }}</span>\r\n        <span>\r\n          <input\r\n              v-model=\"item.key\"\r\n              type=\"text\"\r\n              maxlength=\"1\"\r\n              placeholder=\"hot key\"\r\n              @input=\"filterEnglishAndNumbers($event, item, 'key')\"\r\n          />\r\n        </span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n});\r\n\r\nwatch(() => bfHotKeysItems.value, async (bfHotKeysAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(bfHotKeysAfterSettingObj)});\r\n  if (settingType.value !== settingName.bfHotKeys) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.bfHotKeys });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst filterEnglishAndNumbers = (event: Event, item: any, field: 'key' | 'fullNm') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^a-zA-Z0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(bfHotKeysItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveBfCustomClass();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"normalItems\" }\nconst _hoisted_2 = { class: \"mt1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\", \"onInput\"]\nconst _hoisted_4 = [\"onInput\", \"onUpdate:modelValue\"]\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n});\r\n\r\nwatch(() => normalItems.value, async (normalItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.normalRange) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(normalItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveNormalRange();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"div\", null, _toDisplayString(item.abbreviation) + \" - \" + _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\",\n                  onInput: ($event: any) => (filterNumbersOnly($event, item, 'min'))\n                }, null, 40, _hoisted_3), [\n                  [_vModelText, item.min]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  onInput: ($event: any) => (filterNumbersOnly($event, item, 'max')),\n                  \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 40, _hoisted_4), [\n                  [_vModelText, item.max]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\">\r\n        <div>\r\n          {{ item.abbreviation }} - {{ item.fullNm }}\r\n        </div>\r\n        <div class=\"mt1\">\r\n          <span>\r\n            <input v-model=\"item.min\"\r\n                   type=\"text\"\r\n                   maxlength=\"25\"\r\n                   placeholder=\"class name\"\r\n                   @input=\"filterNumbersOnly($event, item, 'min')\"\r\n            />\r\n          </span>\r\n          <span>\r\n            <input\r\n                @input=\"filterNumbersOnly($event, item, 'max')\"\r\n                v-model=\"item.max\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"\r\n            />\r\n          </span>\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n});\r\n\r\nwatch(() => normalItems.value, async (normalItemsAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItemsAfterSettingObj) });\r\n  if (settingType.value !== settingName.normalRange) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.normalRange });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value});\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst filterNumbersOnly = (event: Event, item: any, field: 'min' | 'max') => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  item[field] = filteredValue.trim();\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(normalItems.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(normalItems.value) });\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveNormalRange();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)\nconst _hoisted_3 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_4 = { class: \"nth1ChildOrder\" }\n\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {settingName} from \"@/common/defines/constFile/settings\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst wbcInfoChangeVal = ref<any>([]);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  await getOrderClass();\r\n})\r\n\r\nwatch(() => wbcInfoChangeVal.value, async (classOrderAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderAfterSettingObj)});\r\n  if (settingType.value !== settingName.classOrder) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n\r\n      const classOrderBeforeSettingObj = wbcInfoChangeVal.value;\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? messages.settingSaveSuccess : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveOrderClassSave();\r\n  showConfirm.value = false;\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_4, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.fullNm), 1)\n          ])\n        ], 40, _hoisted_3))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.fullNm }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport {settingName} from \"@/common/defines/constFile/settings\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst wbcInfoChangeVal = ref<any>([]);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  await getOrderClass();\r\n})\r\n\r\nwatch(() => wbcInfoChangeVal.value, async (classOrderAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderAfterSettingObj)});\r\n  if (settingType.value !== settingName.classOrder) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.classOrder });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n\r\n      const classOrderBeforeSettingObj = wbcInfoChangeVal.value;\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(classOrderBeforeSettingObj)});\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? messages.settingSaveSuccess : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n    await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveOrderClassSave();\r\n  showConfirm.value = false;\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n}\r\n\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\"}\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC min\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC max\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"count\")\n  ])\n], -1)\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, settingName, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n});\r\n\r\nwatch(() => wbcRunInfoCountArr.value, async (wbcRunInfoCountArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcRunningCount) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcRunningCount();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_5), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcTargetCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: +option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_7))\n                  }), 128))\n                ], 8, _hoisted_6), [\n                  [_vModelSelect, wbcRunning.wbcTargetCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto;\">\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcTargetCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"+option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, settingName, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n});\r\n\r\nwatch(() => wbcRunInfoCountArr.value, async (wbcRunInfoCountArrAfterSettingObj) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArrAfterSettingObj) });\r\n  if (settingType.value !== settingName.wbcRunningCount) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.wbcRunningCount });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(wbcRunInfoCountArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveWbcRunningCount();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n    currentCardCount: string;\r\n    currentCardName: string;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n            currentCardCount: '',\r\n            currentCardName: '',\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    iaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceSerialNm: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n    rbcReData: boolean;\r\n    rbcReDataClass: boolean;\r\n    rbcInfoAfterData: any[];\r\n    resetRbcArr: boolean;\r\n    selectedSampleId: string;\r\n    classInfoArr: any[];\r\n    rbcReDataCheck: boolean;\r\n    appAlertOpen: boolean;\r\n    dataBasePageReset: boolean;\r\n    resetAnalyzing: boolean;\r\n    testType: string;\r\n    isNsNbIntegration: string;\r\n    analysisType: string;\r\n    beforeSettingFormattedString: string;\r\n    afterSettingFormattedString: string;\r\n    settingChangedChecker: boolean;\r\n    dbListDataFirstNum: number;\r\n    dbListDataLastNum: number;\r\n    isTcpConnected: boolean;\r\n    initValData: boolean;\r\n    enteringRouterPath: string;\r\n    settingType: string;\r\n    isDownloadOrUploading: boolean;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setIaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceSerialNm: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n        setRbcReData: (state: CommonState, value: boolean) => void;\r\n        setRbcReDataClass: (state: CommonState, value: boolean) => void;\r\n        setRbcInfoAfterData: (state: CommonState, value: any[]) => void;\r\n        setResetRbcArr: (state: CommonState, value: boolean) => void;\r\n        setSelectedSampleId: (state: CommonState, value: string) => void;\r\n        setClassInfoArr: (state: CommonState, value: any[]) => void;\r\n        setRbcReDataCheck: (state: CommonState, value: boolean) => void;\r\n        setAppAlertOpen: (state: CommonState, value: boolean) => void;\r\n        setDataBasePageReset: (state: CommonState, value: boolean) => void;\r\n        setResetAnalyzing: (state: CommonState, value: boolean) => void;\r\n        setTestType: (state: CommonState, value: string) => void;\r\n        setIsNsNbIntegration: (state: CommonState, value: string) => void;\r\n        setAnalysisType: (state: CommonState, value: string) => void;\r\n        setBeforeSettingFormattedString: (state: CommonState, value: string) => void;\r\n        setAfterSettingFormattedString: (state: CommonState, value: string) => void;\r\n        setSettingChangedChecker: (state: CommonState, value: boolean) => void;\r\n        setDbListDataFirstNum: (state: CommonState, value: number) => void;\r\n        setDbListDataLastNum: (state: CommonState, value: number) => void;\r\n        setIsTcpConnected: (state: CommonState, value: boolean) => void;\r\n        setInitValData: (state: CommonState, value: boolean) => void;\r\n        setEnteringRouterPath: (state: CommonState, value: string) => void;\r\n        setSettingType: (state: CommonState, value: string) => void;\r\n        setIsDownloadOrUploading: (state: CommonState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        iaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceSerialNm: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n        rbcReData: false,\r\n        rbcReDataClass: false,\r\n        rbcInfoAfterData: [],\r\n        resetRbcArr: false,\r\n        selectedSampleId: '',\r\n        classInfoArr:[],\r\n        rbcReDataCheck: false,\r\n        appAlertOpen: false,\r\n        dataBasePageReset: false,\r\n        resetAnalyzing: false,\r\n        testType: '',\r\n        isNsNbIntegration: 'N',\r\n        analysisType: '',\r\n        beforeSettingFormattedString: '',\r\n        afterSettingFormattedString: '',\r\n        settingChangedChecker: false,\r\n        dbListDataFirstNum: 0,\r\n        dbListDataLastNum: 0,\r\n        isTcpConnected: false,\r\n        initValData: false,\r\n        enteringRouterPath: '',\r\n        settingType: '',\r\n        isDownloadOrUploading: false,\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsAlarm(state: CommonState, value: boolean): void {\r\n            state.isAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setIaRootPath(state: CommonState, value: string): void {\r\n            state.iaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceSerialNm(state: CommonState, value: string): void {\r\n            state.deviceSerialNm = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setSelectedSampleId(state: CommonState, value: string): void {\r\n            state.selectedSampleId = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n        setRbcReData(state: CommonState, value: boolean): void {\r\n            state.rbcReData = value;\r\n        },\r\n        setRbcReDataClass(state: CommonState, value: boolean): void {\r\n            state.rbcReDataClass = value;\r\n        },\r\n        setResetRbcArr(state: CommonState, value: boolean): void {\r\n            state.resetRbcArr = value;\r\n        },\r\n        setRbcInfoAfterData(state: CommonState, value: any[]): void {\r\n            state.rbcInfoAfterData = value;\r\n        },\r\n        // classInfoArr\r\n        setClassInfoArr(state: CommonState, value: any[]): void {\r\n            state.classInfoArr = value;\r\n        },\r\n        setRbcReDataCheck(state: CommonState, value: boolean): void {\r\n            state.rbcReDataCheck = value;\r\n        },\r\n        setAppAlertOpen(state: CommonState, value: boolean): void {\r\n            state.appAlertOpen = value;\r\n        },\r\n        setDataBasePageReset(state: CommonState, value: boolean): void {\r\n            state.dataBasePageReset = value;\r\n        },\r\n        setResetAnalyzing(state: CommonState, value: boolean): void {\r\n            state.resetAnalyzing = value;\r\n        },\r\n        setTestType(state: CommonState, value: string): void {\r\n            state.testType = value;\r\n        },\r\n        setIsNsNbIntegration(state: CommonState, value: string): void {\r\n            state.isNsNbIntegration = value;\r\n        },\r\n        setAnalysisType(state: CommonState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        setBeforeSettingFormattedString(state: CommonState, value: string): void {\r\n            state.beforeSettingFormattedString = value;\r\n        },\r\n        setAfterSettingFormattedString(state: CommonState, value: string): void {\r\n            state.afterSettingFormattedString = value;\r\n        },\r\n        setSettingChangedChecker(state: CommonState, value: boolean): void {\r\n            state.settingChangedChecker = value;\r\n        },\r\n        setDbListDataFirstNum(state: CommonState, value: number): void {\r\n            state.dbListDataFirstNum = value;\r\n        },\r\n        setDbListDataLastNum(state: CommonState, value: number): void {\r\n            state.dbListDataLastNum = value;\r\n        },\r\n        setIsTcpConnected(state: CommonState, value: boolean): void {\r\n            state.isTcpConnected = value;\r\n        },\r\n        setInitValData(state: CommonState, value: boolean): void {\r\n            state.initValData = value;\r\n        },\r\n        setEnteringRouterPath(state: CommonState, value: string): void {\r\n            state.enteringRouterPath = value;\r\n        },\r\n        setSettingType(state: CommonState, value: string): void {\r\n            state.settingType = value;\r\n        },\r\n        setIsDownloadOrUploading(state: CommonState, value: boolean): void {\r\n            state.isDownloadOrUploading = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isAlarm')) {\r\n                commit('setIsAlarm', payload.isAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('iaRootPath')) {\r\n                commit('setIaRootPath', payload.iaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceSerialNm')) {\r\n                commit('setDeviceSerialNm', payload.deviceSerialNm);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('selectedSampleId')) {\r\n                commit('setSelectedSampleId', payload.selectedSampleId)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReData')) {\r\n                commit('setRbcReData', payload.rbcReData)\r\n            }\r\n            if(payload.hasOwnProperty('rbcReDataClass')){\r\n                commit('setRbcReDataClass', payload.rbcReDataClass)\r\n            }\r\n            if (payload.hasOwnProperty('rbcInfoAfterData')) {\r\n                commit('setRbcInfoAfterData', payload.rbcInfoAfterData)\r\n            }\r\n            if(payload.hasOwnProperty('resetRbcArr')) {\r\n                commit('setResetRbcArr', payload.resetRbcArr)\r\n            }\r\n            if(payload.hasOwnProperty('classInfoArr')) {\r\n                commit('setClassInfoArr', payload.classInfoArr)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReDataCheck')){\r\n                commit('setRbcReDataCheck', payload.rbcReDataCheck)\r\n            }\r\n            if(payload.hasOwnProperty('appAlertOpen')){\r\n                commit('setAppAlertOpen', payload.appAlertOpen);\r\n            }\r\n            if (payload.hasOwnProperty('dataBasePageReset')){\r\n                commit('setDataBasePageReset', payload.dataBasePageReset);\r\n            }\r\n            if (payload.hasOwnProperty('resetAnalyzing')){\r\n                commit('setResetAnalyzing', payload.resetAnalyzing);\r\n            }\r\n            if (payload.hasOwnProperty('testType')){\r\n                commit('setTestType', payload.testType);\r\n            }\r\n            if (payload.hasOwnProperty('isNsNbIntegration')) {\r\n                commit('setIsNsNbIntegration', payload.isNsNbIntegration);\r\n            }\r\n            if (payload.hasOwnProperty('analysisType')) {\r\n                commit('setAnalysisType', payload.analysisType);\r\n            }\r\n            if (payload.hasOwnProperty('beforeSettingFormattedString')) {\r\n                commit('setBeforeSettingFormattedString', payload.beforeSettingFormattedString);\r\n            }\r\n            if (payload.hasOwnProperty('afterSettingFormattedString')) {\r\n                commit('setAfterSettingFormattedString', payload.afterSettingFormattedString);\r\n            }\r\n            if (payload.hasOwnProperty('settingChangedChecker')) {\r\n                commit('setSettingChangedChecker', payload.settingChangedChecker);\r\n            }\r\n            if (payload.hasOwnProperty('dbListDataFirstNum')) {\r\n                commit('setDbListDataFirstNum', payload.dbListDataFirstNum);\r\n            }\r\n            if (payload.hasOwnProperty('dbListDataLastNum')) {\r\n                commit('setDbListDataLastNum', payload.dbListDataLastNum);\r\n            }\r\n            if (payload.hasOwnProperty('isTcpConnected')) {\r\n                commit('setIsTcpConnected', payload.isTcpConnected);\r\n            }\r\n            if (payload.hasOwnProperty('initValData')) {\r\n                commit('setInitValData', payload.initValData);\r\n            }\r\n            if (payload.hasOwnProperty('enteringRouterPath')) {\r\n                commit('setEnteringRouterPath', payload.enteringRouterPath);\r\n            }\r\n            if (payload.hasOwnProperty('settingType')) {\r\n                commit('setSettingType', payload.settingType);\r\n            }\r\n            if (payload.hasOwnProperty('isDownloadOrUploading')) {\r\n                commit('setIsDownloadOrUploading', payload.isDownloadOrUploading);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {rbcClassificationModule} from '@/store/modules/analysis/rbcClassification';\r\nimport {wbcClassificationModule} from '@/store/modules/analysis/wbcclassification';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport { embeddedStatusModule } from '@/store/modules/embeddedStatusModule';\r\nimport { orderListModule } from '@/store/modules/analysis/orderListModule';\r\nimport { runningInfoModule } from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\n// import createPersistedState from 'vuex-persistedstate';\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        // rbcClassificationModule,\r\n        // wbcClassificationModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import { settingName } from \"@/common/defines/constFile/settings\";\r\nimport {\r\n    putCellImgApi,\r\n    putOrderClassApi,\r\n    putRbcDegreeApi,\r\n    updateBfHotKeysApi,\r\n    updateCbcCodeRbcApi,\r\n    updateFilePathSetApi,\r\n    updateImagePrintApi,\r\n    updateLisCodeRbcApi,\r\n    updateLisCodeWbcApi, updateMinCountApi,\r\n    updateNormalRangeApi,\r\n    updateRunInfoApi,\r\n    updateWbcCustomClassApi,\r\n    updateWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport store from \"@/store/index\";\r\n\r\nexport const settingUpdate = async (settingType: string, settingUpdatingData: any) => {\r\n    if (!settingType || !settingUpdatingData) return;\r\n\r\n    switch (settingType) {\r\n        case settingName.cellImageAnalyzed:\r\n            const cellImageObj = settingUpdatingData;\r\n            const cellImageId = cellImageObj.id;\r\n            if (cellImageObj?.id) {\r\n                delete cellImageObj.id;\r\n            }\r\n            try {\r\n                const result = await putCellImgApi(cellImageObj, cellImageId);\r\n                if (result) {\r\n                    const data: any = result?.data;\r\n                    await store.dispatch('commonModule/setCommonInfo', { isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N' });\r\n                    await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n                        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n                    });\r\n                    // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n                    sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n                    sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n                    sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n                    sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n                    sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n                    sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n                    sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n                    const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage': 'bmKeepPage';\r\n                    sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n                    await store.dispatch('commonModule/setCommonInfo', {resetAnalyzing: true});\r\n                }\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.rbcDegree:\r\n            try {\r\n                const rbcDegreeList: any = [];\r\n                settingUpdatingData.forEach((category: any) => {\r\n                    category.classInfo.forEach((classItem: any) => {\r\n                        rbcDegreeList.push({\r\n                            categoryId: category.categoryId,\r\n                            categoryNm: category.categoryNm,\r\n                            classId: classItem.classId,\r\n                            classNm: classItem.classNm,\r\n                            degree1: classItem.degree1,\r\n                            degree2: classItem.degree2,\r\n                            degree3: classItem.degree3,\r\n                        });\r\n                    });\r\n                });\r\n                await putRbcDegreeApi(rbcDegreeList);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcRunningCount:\r\n            try {\r\n                await updateRunInfoApi({ wbcRunCountItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcCustomClass:\r\n            try {\r\n                await updateWbcCustomClassApi({ classArr: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.wbcHotKeys:\r\n            try {\r\n                await updateWbcHotKeysApi({ wbcHotKeysItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.bfHotKeys:\r\n            try {\r\n                await updateBfHotKeysApi({ bfHotKeysItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.normalRange:\r\n            try {\r\n                await updateNormalRangeApi({ normalRangeItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.classOrder:\r\n            for (const index in settingUpdatingData) {\r\n                settingUpdatingData[index].orderIdx = index;\r\n            }\r\n            try {\r\n                await putOrderClassApi(settingUpdatingData);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.imagePrint:\r\n            try {\r\n                await updateImagePrintApi({ imagePrintItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.lisCode:\r\n            await updateLisCodeWbcApi({ lisCodeItems: settingUpdatingData.lisCodeWbcArr });\r\n            await updateLisCodeRbcApi({ lisCodeItems: settingUpdatingData.lisCodeRbcArr });\r\n            await updateMinCountApi({ minCountItems: settingUpdatingData.minCountArr });\r\n            break;\r\n\r\n        case settingName.cbcCode:\r\n            try {\r\n                await updateCbcCodeRbcApi({ cbcCodeItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        case settingName.filePathSet:\r\n            try {\r\n                await updateFilePathSetApi({ filePathSetItems: settingUpdatingData });\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n    await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n    await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\n\r\nconst movingTab = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nconst activateTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log(settingType.value);\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n          class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n        }, \"Cell Image Analyzed\", 2),\n        (viewerCheck.value !== 'viewer')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value === 'pb')\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 0,\n                    onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n                    class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n                  }, \"RBC Degree\", 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n              }, \"Device Controls\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n              }, \"WBC Running Count\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n              _createElementVNode(\"button\", {\n                onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n              (projectType.value === 'pb')\n                ? (_openBlock(), _createElementBlock(\"button\", {\n                    key: 1,\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n                    class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n                  }, \"BF Hot Keys\", 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"button\", {\n                onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n              }, \"Normal Range\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n                class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n              }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n      ])\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <template v-if=\"viewerCheck !== 'viewer'\">\r\n        <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n        <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n        <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n        <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n        </button>\r\n        <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n        </button>\r\n        <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n        <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n        <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n          {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n        </button>\r\n      </template>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\n\r\nconst store = useStore();\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\n\r\nconst movingTab = ref('');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\nconst activateTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log(settingType.value);\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertCloseButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, createCommentVNode as _createCommentVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt2\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"th\", null, \"No.\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"th\", null, \"User Type\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"User ID\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Date\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Latest Date\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Edit\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Delete\", -1)\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = [\"onClick\"]\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Edit Account\", -1)\nconst _hoisted_17 = { class: \"editModalContainer\" }\nconst _hoisted_18 = { class: \"userInputWrapper\" }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userType\",\n  style: {\"line-height\":\"0\"}\n}, \"User Type\", -1)\nconst _hoisted_20 = [\"value\"]\nconst _hoisted_21 = { class: \"userInputWrapper\" }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userId\"\n}, \"User ID\", -1)\nconst _hoisted_23 = { class: \"userInputWrapper\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"userName\"\n}, \"Name\", -1)\nconst _hoisted_25 = { class: \"userInputWrapper\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"employeeNo\"\n}, \"Employee\", -1)\nconst _hoisted_27 = { class: \"userInputWrapper\" }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"subscriptionDate\"\n}, \"Subscription Date\", -1)\nconst _hoisted_29 = { class: \"userInputWrapper\" }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"userLabel\",\n  for: \"latestDate\"\n}, \"Latest Date\", -1)\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n          class: \"searchSelect\"\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_3))\n          }), 128))\n        ], 512), [\n          [_vModelSelect, userSearchOption.value]\n        ]),\n        _withDirectives(_createElementVNode(\"input\", {\n          type: \"text\",\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n          class: \"searchInputBox\"\n        }, null, 512), [\n          [_vModelText, inputText.value]\n        ]),\n        _createVNode(_component_font_awesome_icon, {\n          icon: ['fas', 'search'],\n          class: \"searchBtn\",\n          onClick: onSearch\n        })\n      ]),\n      _createElementVNode(\"table\", _hoisted_4, [\n        _createElementVNode(\"thead\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_5,\n            _hoisted_6,\n            _hoisted_7,\n            _hoisted_8,\n            _hoisted_9,\n            _hoisted_10,\n            _hoisted_11,\n            (_unref(getStoredUser).userType.includes('admin'))\n              ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                  _hoisted_12,\n                  _hoisted_13\n                ], 64))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]),\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: user.id\n            }, [\n              _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n              _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1),\n              (_unref(getStoredUser).userType.includes('admin'))\n                ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (openLayer(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'pen-to-square'] })\n                    ], 8, _hoisted_14),\n                    _createElementVNode(\"td\", {\n                      class: \"cursorPointer hoverSizeAction\",\n                      onClick: ($event: any) => (handleDeleteUser(user.userId))\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'trash'] })\n                    ], 8, _hoisted_15)\n                  ], 64))\n                : _createCommentVNode(\"\", true)\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    (isModalVisible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_16\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_17, [\n              _createElementVNode(\"div\", _hoisted_18, [\n                _hoisted_19,\n                _withDirectives(_createElementVNode(\"select\", {\n                  id: \"userType\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((selectedUserData.value.userType) = $event)),\n                  class: \"searchSelect inputMiddleWrapper\",\n                  style: {\"width\":\"132px !important\"}\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userTypeOptions.value, (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_20))\n                  }), 128))\n                ], 512), [\n                  [_vModelSelect, selectedUserData.value.userType]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_21, [\n                _hoisted_22,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userId\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((selectedUserData.value.userId) = $event)),\n                  disabled: \"\",\n                  readonly: \"\"\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.userId]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_23, [\n                _hoisted_24,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"userName\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((selectedUserData.value.name) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.name]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_25, [\n                _hoisted_26,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"employeeNo\",\n                  class: \"inputMiddleWrapper\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((selectedUserData.value.employeeNo) = $event))\n                }, null, 512), [\n                  [_vModelText, selectedUserData.value.employeeNo]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_27, [\n                _hoisted_28,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"subscriptionDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((formattedSubscriptionDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedSubscriptionDate.value]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_29, [\n                _hoisted_30,\n                _withDirectives(_createElementVNode(\"input\", {\n                  id: \"latestDate\",\n                  class: \"inputMiddleWrapper disabledInput\",\n                  type: \"text\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((formattedLatestDate).value = $event)),\n                  disabled: \"\"\n                }, null, 512), [\n                  [_vModelText, formattedLatestDate.value]\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"modalBottom\" }, [\n              _createElementVNode(\"button\", {\n                type: \"button\",\n                class: \"alertButton\",\n                onClick: putSelectedUserData\n              }, \"Edit\")\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt2\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n          <template v-if=\"getStoredUser.userType.includes('admin')\">\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </template>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n          <template v-if=\"getStoredUser.userType.includes('admin')\">\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"openLayer(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'pen-to-square']\" />\r\n            </td>\r\n            <td class=\"cursorPointer hoverSizeAction\" @click=\"handleDeleteUser(user.userId)\">\r\n              <font-awesome-icon :icon=\"['fas', 'trash']\" />\r\n            </td>\r\n          </template>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <Modal v-if=\"isModalVisible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <template #header>\r\n      <h2>Edit Account</h2>\r\n    </template>\r\n\r\n    <template #content>\r\n      <div class=\"editModalContainer\">\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userType\" style=\"line-height: 0\">User Type</label>\r\n          <select id=\"userType\" v-model=\"selectedUserData.userType\" class=\"searchSelect inputMiddleWrapper\" style=\"width: 132px !important;\">\r\n            <option v-for=\"option in userTypeOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userId\">User ID</label>\r\n          <input id=\"userId\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"selectedUserData.userId\" disabled readonly />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"userName\">Name</label>\r\n          <input id=\"userName\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.name\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"employeeNo\">Employee</label>\r\n          <input id=\"employeeNo\" class=\"inputMiddleWrapper\" type=\"text\" v-model=\"selectedUserData.employeeNo\" />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"subscriptionDate\">Subscription Date</label>\r\n          <input id=\"subscriptionDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedSubscriptionDate\" disabled />\r\n        </div>\r\n\r\n        <div class=\"userInputWrapper\">\r\n          <label class=\"userLabel\" for=\"latestDate\">Latest Date</label>\r\n          <input id=\"latestDate\" class=\"inputMiddleWrapper disabledInput\" type=\"text\" v-model=\"formattedLatestDate\" disabled />\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div class=\"modalBottom\">\r\n        <button type=\"button\" class=\"alertButton\" @click=\"putSelectedUserData\">Edit</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {deleteUserApi, getAllUsersApi, getUserApi, putUserDataApi} from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport router from \"@/router\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst store = useStore()\r\nconst storedUser = computed(() => store.state.userModule)\r\nconst getStoredUser = storedUser.value;\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\nconst userTypeOptions = ref([\r\n  { value: 'normal', text: 'normal'},\r\n  { value: 'admin', text: 'admin'},\r\n])\r\n\r\nconst inputText = ref('');\r\nconst isModalVisible = ref(false);\r\nconst selectedUserData = ref<any>({});\r\nconst selectedUserId = ref('');\r\nconst formattedSubscriptionDate = computed(() => date(selectedUserData.value.subscriptionDate))\r\nconst formattedLatestDate = computed(() => date(selectedUserData.value.latestDate))\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.userId;\r\n  await getAllUsers();\r\n});\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst putSelectedUserData = async () => {\r\n  try {\r\n    await putUserDataApi(selectedUserData.value, selectedUserId.value);\r\n    await getAllUsers();\r\n    isModalVisible.value = false;\r\n\r\n    const currentUserData: any = allUsers.value.find((user) => user.userId === currentUserId.value)\r\n    await store.dispatch('userModule/setUserAction', {\r\n      id: currentUserData.id,\r\n      userId: currentUserData.userId,\r\n      employeeNo: currentUserData.employeeNo,\r\n      latestDate: currentUserData.latestDate,\r\n      password: currentUserData.password,\r\n      subscriptionDate: currentUserData.subscriptionDate,\r\n      userType: currentUserData.userType,\r\n      name: currentUserData.name,\r\n    })\r\n    sessionStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n    localStorage.setItem('user', JSON.stringify(allUsers.value.find((user) => user.userId === currentUserId.value)));\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getAllUsers = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getSelectedUser = async (selectedUserIdParam: string) => {\r\n  selectedUserId.value = selectedUserIdParam;\r\n  try {\r\n    const result: any = await getUserApi(selectedUserIdParam)\r\n    selectedUserData.value = result.data.user;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst openLayer = async (selectedUserId: string) => {\r\n  await getSelectedUser(selectedUserId);\r\n  if (selectedUserId === '') return;\r\n  isModalVisible.value = true;\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n}\r\n\r\nconst closeLayer = (isVisible: boolean) => {\r\n  isModalVisible.value = isVisible;\r\n  selectedUserData.value = {};\r\n  selectedUserId.value = '';\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n\r\n  try {\r\n    await deleteUserApi({ userId: selectedUserId.value })\r\n    await getAllUsers();\r\n\r\n    // 현재 User가 자기 자신을 삭제할 경우\r\n    if (selectedUserId.value === currentUserId.value) {\r\n      router.push('/user/login');\r\n      localStorage.removeItem('user');\r\n      sessionStorage.removeItem('user');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst handleDeleteUser = (selectedUserIdParam: string) => {\r\n  showConfirm.value = true;\r\n  selectedUserId.value = selectedUserIdParam;\r\n  confirmMessage.value = `Do you wish to proceed with deleting user ID ${selectedUserIdParam}?`\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt1\" }\n\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { imagePrintAndBm, imagePrintAndWbc, settingName } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { messages } from '@/common/defines/constFile/constantMessageText';\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst allChecked = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n});\r\n\r\nwatch(() => selectedItems.value, async (newItem) => {\r\n  imagePrintAndWbcArr.value.forEach((item) => {\r\n    item.checked = newItem.includes(item.classId);\r\n  });\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(imagePrintAndWbcArr.value) });\r\n  if (settingType.value !== settingName.imagePrint) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n        allChecked.value = selectedItems.value.length === imagePrintAndWbcArr.value.length ? true : false;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst toggleAllChecks = () => {\r\n  allChecked.value = !allChecked.value;\r\n  if (allChecked.value) {\r\n    selectedItems.value = imagePrintAndWbcArr.value.map(item => item.classId);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveImagePrint();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        class: \"imagePrintBtn mb2\",\n        type: \"button\",\n        onClick: toggleAllChecks\n      }, _toDisplayString(allChecked.value ? 'Uncheck All' : 'Check All'), 1),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.id\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.fullNm), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.classId,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <button class=\"imagePrintBtn mb2\" type=\"button\" @click=\"toggleAllChecks\">{{ allChecked ? 'Uncheck All' : 'Check All' }}</button>\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.id\">\r\n      <div>{{ item.fullNm }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.classId\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted, computed, watch } from 'vue';\r\nimport { imagePrintAndBm, imagePrintAndWbc, settingName } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { messages } from '@/common/defines/constFile/constantMessageText';\r\nimport { useStore } from \"vuex\";\r\nimport { useRouter } from \"vue-router\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst allChecked = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n});\r\n\r\nwatch(() => selectedItems.value, async (newItem) => {\r\n  imagePrintAndWbcArr.value.forEach((item) => {\r\n    item.checked = newItem.includes(item.classId);\r\n  });\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(imagePrintAndWbcArr.value) });\r\n  if (settingType.value !== settingName.imagePrint) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.imagePrint });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n        allChecked.value = selectedItems.value.length === imagePrintAndWbcArr.value.length ? true : false;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst toggleAllChecks = () => {\r\n  allChecked.value = !allChecked.value;\r\n  if (allChecked.value) {\r\n    selectedItems.value = imagePrintAndWbcArr.value.map(item => item.classId);\r\n  } else {\r\n    selectedItems.value = [];\r\n  }\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveImagePrint();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb4\" }, \" [ WBC ] \", -1)\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { class: \"alignDiv\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \" [ RBC ] \", -1)\nconst _hoisted_7 = { class: \"mb1\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = { class: \"alignDiv\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \" [ Min Count ] \", -1)\nconst _hoisted_11 = {\n  key: 0,\n  class: \"minCountWrapper\"\n}\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Giant Platelet\", -1)\nconst _hoisted_13 = {\n  key: 1,\n  class: \"minCountWrapper\"\n}\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Platelet Aggregation\", -1)\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisCodeWbcOption, lisCodeRbcOption, minRunCount, settingName} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n});\r\n\r\nwatch(() => [lisCodeWbcArr.value, lisCodeRbcArr.value, minCountArr.value], async () => {\r\n  const afterSetting = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(afterSetting) });\r\n  if (settingType.value !== settingName.lisCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n\r\n      const settingObj = {\r\n        lisCodeWbcArr: lisCodeWbcArr.value,\r\n        lisCodeRbcArr: lisCodeRbcArr.value,\r\n        minCountArr: minCountArr.value\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: settingObj });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: settingObj });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveLisCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classId\n        }, [\n          _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_4), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _hoisted_6,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.fullNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_7, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_8), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _hoisted_10,\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGPCount) = $event)),\n                onInput: _cache[1] || (_cache[1] = ($event: any) => (filterNumbersOnly($event, true))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minGPCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((minCountArr.value[0].minPACount) = $event)),\n                onInput: _cache[3] || (_cache[3] = ($event: any) => (filterNumbersOnly($event, false))),\n                class: \"form-control form-control-sm\"\n              }, null, 544), [\n                [_vModelText, minCountArr.value[0].minPACount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_15, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb4\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.classId\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt2 mb4\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.fullNm\">\r\n      <p class=\"mb1\">{{ item.categoryNm }} - {{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb2\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li class=\"minCountWrapper\" v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGPCount\" @input=\"filterNumbersOnly($event, true)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li class=\"minCountWrapper\" v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPACount\" @input=\"filterNumbersOnly($event, false)\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisCodeWbcOption, lisCodeRbcOption, minRunCount, settingName} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n});\r\n\r\nwatch(() => [lisCodeWbcArr.value, lisCodeRbcArr.value, minCountArr.value], async () => {\r\n  const afterSetting = {\r\n    lisCodeWbcArr: lisCodeWbcArr.value,\r\n    lisCodeRbcArr: lisCodeRbcArr.value,\r\n    minCountArr: minCountArr.value\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(afterSetting) });\r\n  if (settingType.value !== settingName.lisCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.lisCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst filterNumbersOnly = (event: Event, is: boolean) => {\r\n  const input = event.target as HTMLInputElement;\r\n  const filteredValue = input.value.replace(/[^0-9]/g, '');\r\n  if (is){\r\n    minCountArr.value[0].minGPCount = Number(filteredValue.trim());\r\n  }else {\r\n    minCountArr.value[0].minPACount = Number(filteredValue.trim());\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n\r\n      const settingObj = {\r\n        lisCodeWbcArr: lisCodeWbcArr.value,\r\n        lisCodeRbcArr: lisCodeRbcArr.value,\r\n        minCountArr: minCountArr.value\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: settingObj });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: settingObj });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveLisCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","interface hospitalSideCdState {\r\n    siteCd: string;\r\n    hospitalNm: string;\r\n}\r\n\r\nexport const hospitalSiteCd: hospitalSideCdState[] = [\r\n    {\r\n        siteCd: '0002',\r\n        hospitalNm: '서울성모병원',\r\n    },\r\n    {\r\n        siteCd: '0003',\r\n        hospitalNm: '스타고',\r\n    },\r\n    {\r\n        siteCd: '0004',\r\n        hospitalNm: '이원의료재단',\r\n    },\r\n    {\r\n        siteCd: '0006',\r\n        hospitalNm: '고대안암병원',\r\n    },\r\n    {\r\n        siteCd: '0007',\r\n        hospitalNm: '삼광의료재단',\r\n    },\r\n    {\r\n        siteCd: '0011',\r\n        hospitalNm: '인하대병원',\r\n    },\r\n    {\r\n        siteCd: '0019',\r\n        hospitalNm: '인천길병원',\r\n    },\r\n    {\r\n        siteCd: '0026',\r\n        hospitalNm: '건국대학교병원',\r\n    },\r\n    {\r\n        siteCd: '0000',\r\n        hospitalNm: '0000',\r\n    },\r\n    {\r\n        siteCd: '',\r\n        hospitalNm: '0000'\r\n    }\r\n\r\n]","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {defaultCbcList, defaultCbcList_0011, settingName} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst siteCd = ref('');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n});\r\n\r\nwatch(() => cbcCodeArr.value, async (cbcCodeArrAfterSetting) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArrAfterSetting) });\r\n  if (settingType.value !== settingName.cbcCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        const hospitalName = hospitalSiteCd.filter(hospitalObj => hospitalObj.siteCd === siteCd.value)[0].hospitalNm;\r\n        if (hospitalName === '인하대병원') {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveCbcCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.cd\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.classCd) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.classCd]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <label v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.classCd\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {defaultCbcList, defaultCbcList_0011, settingName} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {getDeviceInfoApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst siteCd = ref('');\r\n\r\nonMounted(async () => {\r\n  await getDeviceInfo();\r\n  await getImagePrintData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n});\r\n\r\nwatch(() => cbcCodeArr.value, async (cbcCodeArrAfterSetting) => {\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArrAfterSetting) });\r\n  if (settingType.value !== settingName.cbcCode) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.cbcCode });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n\r\n        const hospitalName = hospitalSiteCd.filter(hospitalObj => hospitalObj.siteCd === siteCd.value)[0].hospitalNm;\r\n        if (hospitalName === '인하대병원') {\r\n          cbcCodeArr.value = defaultCbcList_0011;\r\n        } else {\r\n          cbcCodeArr.value = defaultCbcList;\r\n        }\r\n\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(cbcCodeArr.value) });\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst getDeviceInfo = async () => {\r\n  try {\r\n    const deviceData = await getDeviceInfoApi();\r\n    siteCd.value = deviceData.data.siteCd;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveCbcCode();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \"LIS Hot Key\", -1)\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"LIS File Path\", -1)\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"CBC File Path\", -1)\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.filePathSet });\r\n});\r\n\r\nwatch(() => filePathSetArr.value, async (filePathSetArr) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr)});\r\n  if (settingType.value !== settingName.filePathSet) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.filePathSet });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(filePathSetArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(filePathSetArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveFilePathSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[0] || (_cache[0] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_4,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_5)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_6,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_7)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb2\">LIS Hot Key</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n               @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">LIS File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">CBC File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed, watch} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl, settingName} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRouter} from \"vue-router\";\r\n\r\nconst store = useStore();\r\nconst router = useRouter();\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst enteringRouterPath = computed(() => store.state.commonModule.enteringRouterPath);\r\nconst settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n  await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.filePathSet });\r\n});\r\n\r\nwatch(() => filePathSetArr.value, async (filePathSetArr) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: JSON.stringify(filePathSetArr)});\r\n  if (settingType.value !== settingName.filePathSet) {\r\n    await store.dispatch('commonModule/setCommonInfo', { settingType: settingName.filePathSet });\r\n  }\r\n}, { deep: true });\r\n\r\nwatch(() => settingChangedChecker.value, () => {\r\n  checkIsMovingWhenSettingNotSaved();\r\n})\r\n\r\nconst checkIsMovingWhenSettingNotSaved = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n}\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert(messages.settingUpdateFailure);\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert(messages.settingSaveSuccess);\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: JSON.stringify(filePathSetArr.value) });\r\n      await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: JSON.stringify(filePathSetArr.value) });\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n  await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n  showConfirm.value = false;\r\n  await router.push(enteringRouterPath.value);\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  await saveFilePathSet();\r\n  showConfirm.value = false;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"tab-content\" }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport { computed, ref, onBeforeMount } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst projectBm = ref(false);\r\nlet activeTab = ref('ImagePrint');\r\nconst movingTab = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nconst selectTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log(settingType.value);\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n          class: _normalizeClass({ 'active': _unref(activeTab) === 'ImagePrint' })\n        }, \"Image Print\", 2),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              _createElementVNode(\"button\", {\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'LisCode' })\n              }, \"LIS Code\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'CbcCode' })\n              }, \"CBC Code\", 2),\n              _createElementVNode(\"button\", {\n                onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n                class: _normalizeClass({ 'active': _unref(activeTab) === 'filePathSet' })\n              }, \"LIS(CBC) Hot Key & File Path\", 2)\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n      ])\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': activeTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': activeTab === 'LisCode' }\">LIS Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': activeTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': activeTab === 'filePathSet' }\">LIS(CBC) Hot Key & File Path</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport { computed, ref, onBeforeMount } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst store = useStore();\r\nconst projectBm = ref(false);\r\nlet activeTab = ref('ImagePrint');\r\nconst movingTab = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nconst selectTab = (tabName: string) => {\r\n  if (activeTab.value === tabName) return;\r\n  movingTab.value = tabName;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    activeTab.value = movingTab.value;\r\n  }\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  activeTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log(settingType.value);\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"QualityCheck\", -1)\n\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n      _createElementVNode(\"li\", { class: \"mt2\" }, [\n        _hoisted_1,\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          class: \"defaultBtn\",\n          onClick: qualityCheckOpen\n        }, \"Ok\")\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">QualityCheck</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"qualityCheckOpen\">Ok</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {qualityCheck} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst qualityCheckOpen = async () => {\r\n  await qualityCheck();\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readDziFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.dziReader.get, request);\r\n}\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request, '', false, sessionStorage.getItem('viewerCheck') || 'viewer');\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.Hl7Create.post, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"fs12 mb1\" }, \"SW\", -1)\nconst _hoisted_3 = { class: \"versionContainer\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"fs12 mb1\" }, \"Engine\", -1)\n\nimport {ref, onMounted, onBeforeMount} from \"vue\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst isProjectBm = ref(false);\r\nconst projectVersionArr = ref<{key: string, name: string}[]>();\r\nconst engineVersionArr = ref<{key: string, name: string}[]>();\r\nconst deepNetVersion = ref('');\r\nconst coreVersion = ref('');\r\nconst bmSegEngineVersion = ref('');\r\nconst bmCellEngineVersion = ref('');\r\nconst pbSegEngineVersion = ref('');\r\nconst pbWbcEngineVersion = ref('');\r\nconst pbRbcEngineVersion = ref('');\r\n\r\nonBeforeMount(() => {\r\n  isProjectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nonMounted(async () => {\r\n  await setVersions();\r\n  getEngineVersion();\r\n})\r\n\r\nconst getEngineVersion = () => {\r\n  // Project Versions\r\n  projectVersionArr.value = [\r\n    { key: 'Core Version', name: coreVersion.value },\r\n    { key: 'DeepNet Version', name: deepNetVersion.value },\r\n    { key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    { key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    { key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n\r\n  console.log(isProjectBm.value)\r\n  // Engine Versions\r\n  if (isProjectBm.value) {\r\n\r\n    engineVersionArr.value = [\r\n      { key: 'BM SEG Version', name: bmSegEngineVersion.value },\r\n      { key: 'BM CELL Version', name: bmCellEngineVersion.value },\r\n    ]\r\n  } else {\r\n    engineVersionArr.value = [\r\n      { key: 'PB SEG Version', name: pbSegEngineVersion.value },\r\n      { key: 'PB WBC Version', name: pbWbcEngineVersion.value },\r\n      { key: 'PB RBC Version', name: pbRbcEngineVersion.value },\r\n    ]\r\n  }\r\n}\r\n\r\nconst setVersions = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = 'SW_Config'\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const tcpVersionPattern = /TCP_VERSION\\s*=\\s*(.+)/;\r\n    const coreVersionPattern = /BACKEND\\s*=\\s*(.+)/;\r\n    const bmSegPattern = /BM_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const bmCellPattern = /BM_CELL_ENGINE\\s*=\\s*(.+)/;\r\n    const pbSegPattern = /PB_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const pbWbcPattern = /PB_WBC_ENGINE\\s*=\\s*(.+)/;\r\n    const pbRbcPattern = /PB_RBC_SHAPE_ENGINE\\s*=\\s*(.+)/;\r\n\r\n    deepNetVersion.value = iniFileData.match(tcpVersionPattern)[1] || '';\r\n    coreVersion.value = iniFileData.match(coreVersionPattern)[1] || '';\r\n    bmSegEngineVersion.value = iniFileData.match(bmSegPattern)[1] || '';\r\n    bmCellEngineVersion.value = iniFileData.match(bmCellPattern)[1] || '';\r\n    pbSegEngineVersion.value = iniFileData.match(pbSegPattern)[1] || '';\r\n    pbWbcEngineVersion.value = iniFileData.match(pbWbcPattern)[1] || '';\r\n    pbRbcEngineVersion.value = iniFileData.match(pbRbcPattern)[1] || '';\r\n  } catch (e) {\r\n    console.log(e);\r\n    deepNetVersion.value = '';\r\n    coreVersion.value = '';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersionArr.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n          ]))\n        }), 128))\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _hoisted_4,\n      _createElementVNode(\"ul\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(engineVersionArr.value, (item, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <h3 class=\"fs12 mb1\">SW</h3>\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersionArr\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"versionContainer\">\r\n    <h3 class=\"fs12 mb1\">Engine</h3>\r\n    <ul>\r\n      <li v-for=\"(item, index) in engineVersionArr\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeMount} from \"vue\";\r\nimport {readFileTxt} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\nconst isProjectBm = ref(false);\r\nconst projectVersionArr = ref<{key: string, name: string}[]>();\r\nconst engineVersionArr = ref<{key: string, name: string}[]>();\r\nconst deepNetVersion = ref('');\r\nconst coreVersion = ref('');\r\nconst bmSegEngineVersion = ref('');\r\nconst bmCellEngineVersion = ref('');\r\nconst pbSegEngineVersion = ref('');\r\nconst pbWbcEngineVersion = ref('');\r\nconst pbRbcEngineVersion = ref('');\r\n\r\nonBeforeMount(() => {\r\n  isProjectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\nonMounted(async () => {\r\n  await setVersions();\r\n  getEngineVersion();\r\n})\r\n\r\nconst getEngineVersion = () => {\r\n  // Project Versions\r\n  projectVersionArr.value = [\r\n    { key: 'Core Version', name: coreVersion.value },\r\n    { key: 'DeepNet Version', name: deepNetVersion.value },\r\n    { key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    { key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    { key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n\r\n  console.log(isProjectBm.value)\r\n  // Engine Versions\r\n  if (isProjectBm.value) {\r\n\r\n    engineVersionArr.value = [\r\n      { key: 'BM SEG Version', name: bmSegEngineVersion.value },\r\n      { key: 'BM CELL Version', name: bmCellEngineVersion.value },\r\n    ]\r\n  } else {\r\n    engineVersionArr.value = [\r\n      { key: 'PB SEG Version', name: pbSegEngineVersion.value },\r\n      { key: 'PB WBC Version', name: pbWbcEngineVersion.value },\r\n      { key: 'PB RBC Version', name: pbRbcEngineVersion.value },\r\n    ]\r\n  }\r\n}\r\n\r\nconst setVersions = async () => {\r\n  const filePath = 'D:\\\\UIMD_Data\\\\Backend_INI'\r\n  const fileName = 'SW_Config'\r\n  try {\r\n    const result: any = await readFileTxt(`path=${filePath}&filename=${fileName}`);\r\n    const iniFileData = result.data.data;\r\n    const tcpVersionPattern = /TCP_VERSION\\s*=\\s*(.+)/;\r\n    const coreVersionPattern = /BACKEND\\s*=\\s*(.+)/;\r\n    const bmSegPattern = /BM_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const bmCellPattern = /BM_CELL_ENGINE\\s*=\\s*(.+)/;\r\n    const pbSegPattern = /PB_SEG_ENGINE\\s*=\\s*(.+)/;\r\n    const pbWbcPattern = /PB_WBC_ENGINE\\s*=\\s*(.+)/;\r\n    const pbRbcPattern = /PB_RBC_SHAPE_ENGINE\\s*=\\s*(.+)/;\r\n\r\n    deepNetVersion.value = iniFileData.match(tcpVersionPattern)[1] || '';\r\n    coreVersion.value = iniFileData.match(coreVersionPattern)[1] || '';\r\n    bmSegEngineVersion.value = iniFileData.match(bmSegPattern)[1] || '';\r\n    bmCellEngineVersion.value = iniFileData.match(bmCellPattern)[1] || '';\r\n    pbSegEngineVersion.value = iniFileData.match(pbSegPattern)[1] || '';\r\n    pbWbcEngineVersion.value = iniFileData.match(pbWbcPattern)[1] || '';\r\n    pbRbcEngineVersion.value = iniFileData.match(pbRbcPattern)[1] || '';\r\n  } catch (e) {\r\n    console.log(e);\r\n    deepNetVersion.value = '';\r\n    coreVersion.value = '';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = [\"onClick\"]\n\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Analysis/Database', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst movingTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  if (currentTab.value === tab) return;\r\n\r\n  movingTab.value = tab;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    currentTab.value = movingTab.value;\r\n    sessionStorage.setItem('selectedTab', movingTab.value);\r\n  }\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version, 'Analysis/Database': AnalysisDatabase };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  currentTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log('seeting');\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", _hoisted_2, [\n        (viewerCheck.value === 'viewer')\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, _renderList(viewerTabs, (tab) => {\n              return _createElementVNode(\"li\", {\n                key: tab,\n                class: _normalizeClass({ activeTab: currentTab.value === tab }),\n                onClick: ($event: any) => (changeTab(tab))\n              }, _toDisplayString(tab), 11, _hoisted_3)\n            }), 64))\n          : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, _renderList(tabs, (tab) => {\n              return _createElementVNode(\"li\", {\n                key: tab,\n                class: _normalizeClass({ activeTab: currentTab.value === tab }),\n                onClick: ($event: any) => (changeTab(tab))\n              }, _toDisplayString(tab), 11, _hoisted_4)\n            }), 64))\n      ]),\n      (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n    ]),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 0,\n          \"is-visible\": showConfirm.value,\n          message: confirmMessage.value,\n          confirmText: _unref(messages).SAVE,\n          closeText: _unref(messages).LEAVE,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"message\", \"confirmText\", \"closeText\"]))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <template v-if=\"viewerCheck === 'viewer'\">\r\n        <li v-for=\"tab in viewerTabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n      <template v-else>\r\n        <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n      </template>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :message=\"confirmMessage\"\r\n      :confirmText=\"messages.SAVE\"\r\n      :closeText=\"messages.LEAVE\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed} from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LoginAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {settingUpdate} from \"@/common/lib/utils/settingSave\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\nconst store = useStore();\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst viewerTabs = ['Login/Account', 'Analysis/Database', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\nconst afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\nconst settingType = computed(() => store.state.commonModule.settingType);\r\nconst showConfirm = ref(false);\r\nconst confirmMessage = ref('');\r\nconst movingTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  if (currentTab.value === tab) return;\r\n\r\n  movingTab.value = tab;\r\n  if (beforeSettingFormattedString.value !== afterSettingFormattedString.value) {\r\n    showConfirm.value = true;\r\n    confirmMessage.value = `${settingType.value} ${messages.settingNotSaved}`;\r\n  } else {\r\n    currentTab.value = movingTab.value;\r\n    sessionStorage.setItem('selectedTab', movingTab.value);\r\n  }\r\n};\r\n\r\nconst components = { 'Login/Account': LoginAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\nconst viewerComponents: any = { 'Login/Account': LoginAccount, 'Version': Version, 'Analysis/Database': AnalysisDatabase };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    return viewerComponents[currentTab.value];\r\n  }\r\n  return components[currentTab.value];\r\n});\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\nconst hideConfirm = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {beforeSettingFormattedString: null});\r\n  await store.dispatch('commonModule/setCommonInfo', {afterSettingFormattedString: null});\r\n  currentTab.value = movingTab.value;\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  try {\r\n    console.log('seeting');\r\n    await settingUpdate(settingType.value, JSON.parse(afterSettingFormattedString.value));\r\n    await showSuccessAlert(messages.settingSaveSuccess);\r\n  } catch (e) {\r\n    await showErrorAlert(messages.settingSaveFailure);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport { RuningInfoApiRequest } from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any, dayQuery: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const classInfoDetailApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoDetail, `${request}`, false);\r\n};\r\n\r\nexport const classInfoDetailSelectQueryApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoDetailSelectQuery, `${request}`, false);\r\n};\r\n\r\nexport const classInfoMenuDetailSelectQueryApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.classInfoMenuDetailSelectQuery, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}\r\n\r\nexport const removePageAllDataApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.removePageAllData, ``, true)\r\n}","const disableScroll = () => {\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\nconst enableScroll = () => {\r\n    document.body.style.overflow = 'auto';\r\n}\r\n\r\nexport { disableScroll, enableScroll };","\r\n\r\nexport const calculateWbcPercentages = (\r\n    classList: any[],\r\n    siteCd: any\r\n) => {\r\n    const includesStr = siteCd === '0006' ? [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\"]:[\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\"];\r\n    const total = classList\r\n        .filter(\r\n            (category) =>\r\n                !includesStr.includes(category.title)\r\n        )\r\n        .reduce((acc, category) => {\r\n            const matchingWbcItem = classList.find(\r\n                (wbcItem) => category.id === wbcItem.id\r\n            );\r\n\r\n            if (matchingWbcItem) {\r\n                category.count = matchingWbcItem.count;\r\n                return acc + Number(matchingWbcItem.count);\r\n            }\r\n\r\n            return acc;\r\n        }, 0);\r\n\r\n    return total;\r\n};\r\n\r\nexport const percentWithNoError = (percent: number) => {\r\n    if (isNaN(percent)) {\r\n        return 0;\r\n    }\r\n    return percent;\r\n}\r\n\r\n// 인하대\r\nexport const inhaPercentChange = (runningInfoData: any, wbcInfo: any) => {\r\n    if (runningInfoData.testType !== '04') {\r\n        const excludedTitles = ['NR', 'AR', 'GP', 'PA', 'MC', 'MA'];\r\n\r\n        // wbcTotal 계산\r\n        let wbcTotal = 0;\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (Number(wbcItem.count) > 0 && !excludedTitles.includes(wbcItem.title)) {\r\n                wbcTotal += Number(wbcItem.count);\r\n            }\r\n        });\r\n        // console.log('wbcTotal : ' + wbcTotal);\r\n\r\n        let maxItem: any = null;\r\n        let percentTotal = 0;\r\n\r\n        // 퍼센트 계산 및 maxItem 결정\r\n        wbcInfo.forEach((wbcItem: any, index: any) => {\r\n            let percent = Number(((Number(wbcItem.count) / wbcTotal) * 100).toFixed(0));\r\n            const percentN2 = Number(((Number(wbcItem.count) / wbcTotal) * 100).toFixed(2));\r\n\r\n            // console.log(percentN2);\r\n\r\n            // 특정 조건에 따라 퍼센트 조정\r\n            if ((wbcItem.title === 'BL' || ['LA', 'IM', 'MB', 'AM'].includes(wbcItem.title)) &&\r\n                Number(wbcItem.count) > 0 &&\r\n                percentN2 >= 0 &&\r\n                percentN2 <= 1) {\r\n                percent = 1;\r\n            }\r\n\r\n            wbcItem.percent = percent;\r\n            // console.log(wbcItem.title + ':' + wbcItem.percent);\r\n\r\n            // 제외할 타이틀이 아닌 경우 percentTotal 및 maxItem 갱신\r\n            if (!excludedTitles.includes(wbcItem.title)) {\r\n                percentTotal += Number(wbcItem.percent);\r\n                if (maxItem === null || Number(maxItem.count) < Number(wbcItem.count)) {\r\n                    maxItem = wbcItem;\r\n                }\r\n            }\r\n\r\n            // console.log('maxItem : ' + (maxItem ? maxItem.title : 'null'));\r\n            // console.log(percentTotal);\r\n\r\n            // 마지막 항목일 때 백분율 오차 보정\r\n            if (maxItem !== null && (index + 1) === wbcInfo.length) {\r\n                // console.log(Number(maxItem.percent));\r\n                // console.log(100 - percentTotal);\r\n                maxItem.percent = Number(maxItem.percent) + (100 - percentTotal);\r\n                // console.log(maxItem.percent);\r\n            }\r\n        });\r\n\r\n        return wbcInfo;\r\n    }\r\n    return wbcInfo;\r\n}\r\n\r\n// 서울성모\r\nexport const seoulStMaryPercentChange = (originWbcInfo: any, changingWbcInfo: any) => {\r\n    // Neutrophil 빼고 totalCount 계산\r\n    const totalPercent = originWbcInfo.filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)) || 0)\r\n        .reduce((sum: any, percent: any) => sum + Number(percent), 0);\r\n\r\n    return changingWbcInfo.map((item: any) => item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercent}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { style: {\"font-size\":\"0.8rem\",\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\",\"z-index\":\"9999\"} }\nconst _hoisted_3 = { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }\nconst _hoisted_4 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_5 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n], -1)\nconst _hoisted_7 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)\nconst _hoisted_9 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_10 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)\nconst _hoisted_12 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_13 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)\nconst _hoisted_15 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_16 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)\nconst _hoisted_18 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_19 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)\nconst _hoisted_21 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_22 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)\nconst _hoisted_24 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_25 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)\nconst _hoisted_27 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_28 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)\nconst _hoisted_30 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_31 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"}\n}\nconst _hoisted_32 = {\n  key: 1,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)\nconst _hoisted_34 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"20%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"15%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"15%\"} })\n], -1)\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", { style: {\"margin-bottom\":\"15px\",\"font-size\":\"18px\",\"font-weight\":\"normal\",\"padding-bottom\":\"100px\"} }, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n  ])\n], -1)\nconst _hoisted_37 = [\"rowspan\"]\nconst _hoisted_38 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_39 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_40 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_41 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_42 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_43 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_44 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_45 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_46 = { key: 0 }\nconst _hoisted_47 = /*#__PURE__*/_createElementVNode(\"td\", null, null, -1)\nconst _hoisted_48 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"Others\", -1)\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"-\", -1)\nconst _hoisted_50 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_51 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_52 = { key: 1 }\nconst _hoisted_53 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"Malaria\", -1)\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, \"-\", -1)\nconst _hoisted_55 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_56 = { style: {\"text-align\":\"left\"} }\nconst _hoisted_57 = { key: 0 }\nconst _hoisted_58 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\"} }, null, -1)\nconst _hoisted_59 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }, \"Total\", -1)\nconst _hoisted_60 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_61 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_62 = { key: 1 }\nconst _hoisted_63 = /*#__PURE__*/_createElementVNode(\"td\", null, null, -1)\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"td\", null, null, -1)\nconst _hoisted_65 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }, \"Total\", -1)\nconst _hoisted_66 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_67 = { style: {\"text-align\":\"left\",\"font-weight\":\"bold\"} }\nconst _hoisted_68 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Others\", -1)\nconst _hoisted_69 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Platelets\", -1)\nconst _hoisted_70 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_71 = {\n  style: {\"text-align\":\"left\",\"padding\":\"15px 0\"},\n  colspan: \"2\"\n}\nconst _hoisted_72 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding-top\":\"15px\"} }, \"Comment\", -1)\nconst _hoisted_73 = {\n  style: {\"text-align\":\"left\",\"padding-top\":\"15px\"},\n  colspan: \"4\"\n}\nconst _hoisted_74 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_75 = { style: {\"margin-top\":\"150px\",\"margin-bottom\":\"50px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_76 = { style: {\"margin\":\"10px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }\nconst _hoisted_77 = { style: {\"width\":\"100%\",\"font-size\":\"0.8rem\"} }\nconst _hoisted_78 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_79 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", { style: {\"margin-bottom\":\"15px\",\"font-size\":\"18px\",\"font-weight\":\"normal\",\"padding-bottom\":\"100px\"} }, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n  ])\n], -1)\nconst _hoisted_80 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_81 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_82 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_83 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_84 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total\", -1)\nconst _hoisted_85 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_86 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1)\nconst _hoisted_87 = {\n  key: 0,\n  style: {\"text-align\":\"left\",\"padding-top\":\"30px\",\"font-weight\":\"bold\"}\n}\nconst _hoisted_88 = {\n  key: 0,\n  style: {\"padding-top\":\"5px\",\"padding-bottom\":\"15px\"}\n}\nconst _hoisted_89 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"30%\"} }\nconst _hoisted_90 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"45%\"} }\nconst _hoisted_91 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\",\"width\":\"25%\"} }, \"-\", -1)\nconst _hoisted_92 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_93 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"15px 0\"} }, \"Comment\", -1)\nconst _hoisted_94 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_95 = { style: {\"text-align\":\"left\",\"outline\":\"1px solid #252629\",\"padding\":\"4px\"} }\nconst _hoisted_96 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\",\"text-align\":\"center\",\"display\":\"flex\",\"flex-direction\":\"column\",\"align-items\":\"center\",\"justify-content\":\"center\"}\n}\nconst _hoisted_97 = { style: {\"font-weight\":\"bold\",\"font-size\":\"18px\",\"margin\":\"10px auto 20px\"} }\nconst _hoisted_98 = { style: {\"position\":\"relative\",\"text-align\":\"left\"} }\nconst _hoisted_99 = [\"src\", \"width\", \"height\", \"onError\"]\n\nimport { computed, onMounted, ref } from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'print',\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await getImagePrintData();\r\n  if (projectType !== 'bm') {\r\n    await rbcTotalAndReCount();\r\n    await calcShapeOthersCount();\r\n  }\r\n  await printPage();\r\n});\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\nconst hiddenImages = ref<Record<string, boolean>>({});\r\n\r\nconst handleImageError = (itemId: number, fileName: string) => {\r\n  hiddenImages.value[`${itemId}-${fileName}`] = true;\r\n};\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    wbcInfo.value = result.data.wbcInfoAfter;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = (wbcInfoArr: any, type: 'wbc' | 'nonWbc') => {\r\n  if (type === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => nonWbcIdList.includes(item.id) && item.count > 0);\r\n  }\r\n  return wbcInfoArr.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  const showImage = [...imagePrintAndWbcArr.value].find(item => item === String(id));\r\n  if (!showImage) {\r\n    return '';\r\n  }\r\n\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nconst noImageList = (wbcArr: any) => {\r\n  return wbcArr.filter((item: any) => [...imagePrintAndWbcArr.value].includes(String(item.id)));\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n\r\n  percentChangeBySiteCd();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, {level: 9});\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n      // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n      wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n      // wbcClassification Order 적용\r\n      const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcInfo.value = sortedWbcInfoData;\r\n      percentChangeBySiteCd();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst percentChangeBySiteCd = async () => {\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    wbcInfo.value = seoulStMaryPercentChange(wbcInfo.value, wbcInfo.value);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    wbcInfo.value = await inhaPercentChange(selectItems.value, wbcInfo.value);\r\n  }\r\n}\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Loading Print...\", 512), [\n      [_vShow, printReady.value]\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"button\", {\n        style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n        onClick: closePrint\n      }, \"Close \"),\n      _createElementVNode(\"div\", {\n        ref_key: \"printContent\",\n        ref: printContent,\n        style: {\"margin-top\":\"20px\"}\n      }, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"h3\", _hoisted_3, \"Analysis Report from UIMD \" + _toDisplayString(_unref(projectType) === 'bm' ? 'BM' : 'PB') + \" system\", 1)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"table\", _hoisted_5, [\n            _hoisted_6,\n            _createElementVNode(\"tbody\", null, [\n              _createElementVNode(\"tr\", _hoisted_7, [\n                _hoisted_8,\n                _createElementVNode(\"td\", _hoisted_9, _toDisplayString(selectItems.value?.slotId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_10, [\n                _hoisted_11,\n                _createElementVNode(\"td\", _hoisted_12, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_13, [\n                _hoisted_14,\n                _createElementVNode(\"td\", _hoisted_15, _toDisplayString(selectItems.value?.submitUserId), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_16, [\n                _hoisted_17,\n                _createElementVNode(\"td\", _hoisted_18, _toDisplayString(selectItems.value?.submitOfDate), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_19, [\n                _hoisted_20,\n                _createElementVNode(\"td\", _hoisted_21, _toDisplayString(_unref(projectType) === 'pb' ? _unref(getTestTypeText)(selectItems.value?.testType) : _unref(getBmTestTypeText)(selectItems.value?.testType)), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_22, [\n                _hoisted_23,\n                _createElementVNode(\"td\", _hoisted_24, _toDisplayString(selectItems.value?.patientName), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_25, [\n                _hoisted_26,\n                _createElementVNode(\"td\", _hoisted_27, _toDisplayString(selectItems.value?.birthDay), 1)\n              ]),\n              _createElementVNode(\"tr\", _hoisted_28, [\n                _hoisted_29,\n                _createElementVNode(\"td\", _hoisted_30, _toDisplayString(selectItems.value?.gender === '' ? '' : selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n              ])\n            ])\n          ]),\n          (selectItems.value?.testType === '04')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31))\n            : _createCommentVNode(\"\", true),\n          (selectItems.value?.testType === '04')\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n                _hoisted_33,\n                _createElementVNode(\"table\", _hoisted_34, [\n                  _hoisted_35,\n                  _hoisted_36,\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([selectItems.value.rbcInfoAfter], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n                            _createElementVNode(\"tr\", null, [\n                              _createElementVNode(\"td\", {\n                                rowspan: category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0),\n                                style: {\"text-align\":\"left\",\"vertical-align\":\"top\"}\n                              }, _toDisplayString(category.categoryNm), 9, _hoisted_37),\n                              _createElementVNode(\"td\", _hoisted_38, _toDisplayString(category.classInfo[0]?.classNm), 1),\n                              _createElementVNode(\"td\", _hoisted_39, _toDisplayString(category.classInfo[0]?.degree), 1),\n                              _createElementVNode(\"td\", _hoisted_40, _toDisplayString(category.classInfo[0]?.originalDegree), 1),\n                              _createElementVNode(\"td\", _hoisted_41, _toDisplayString(percentageChange(category.classInfo[0]?.originalDegree)), 1)\n                            ]),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo.slice(1), (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"tr\", null, [\n                                  _createElementVNode(\"td\", _hoisted_42, _toDisplayString(classInfo.classNm), 1),\n                                  _createElementVNode(\"td\", _hoisted_43, _toDisplayString(classInfo.degree), 1),\n                                  _createElementVNode(\"td\", _hoisted_44, _toDisplayString(classInfo.originalDegree), 1),\n                                  _createElementVNode(\"td\", _hoisted_45, _toDisplayString(percentageChange(classInfo.originalDegree)), 1)\n                                ]),\n                                (category.categoryNm === 'Shape' && classIndex === category.classInfo.slice(1).length - 1)\n                                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_46, [\n                                      _hoisted_47,\n                                      _hoisted_48,\n                                      _hoisted_49,\n                                      _createElementVNode(\"td\", _hoisted_50, _toDisplayString(shapeOthersCount.value), 1),\n                                      _createElementVNode(\"td\", _hoisted_51, _toDisplayString(percentageChange(shapeOthersCount.value)) + \" %\", 1)\n                                    ]))\n                                  : _createCommentVNode(\"\", true),\n                                (category.categoryNm === 'Inclusion Body' && classIndex === category.classInfo.slice(1).length - 1)\n                                  ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_52, [\n                                      _hoisted_53,\n                                      _hoisted_54,\n                                      _createElementVNode(\"td\", _hoisted_55, _toDisplayString(malariaCount.value), 1),\n                                      _createElementVNode(\"td\", _hoisted_56, _toDisplayString(percentageChange(malariaCount.value)), 1)\n                                    ]))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128)),\n                            (category.categoryNm !== 'Shape' && category.categoryNm !== 'Inclusion Body')\n                              ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_57, [\n                                  _hoisted_58,\n                                  _hoisted_59,\n                                  _createElementVNode(\"td\", _hoisted_60, _toDisplayString(sizeChromiaTotal.value), 1),\n                                  _createElementVNode(\"td\", _hoisted_61, _toDisplayString(percentageChange(sizeChromiaTotal.value)) + \" %\", 1)\n                                ]))\n                              : _createCommentVNode(\"\", true),\n                            (category.categoryNm == 'Inclusion Body')\n                              ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_62, [\n                                  _hoisted_63,\n                                  _hoisted_64,\n                                  _hoisted_65,\n                                  _createElementVNode(\"td\", _hoisted_66, _toDisplayString(shapeBodyTotal.value), 1),\n                                  _createElementVNode(\"td\", _hoisted_67, _toDisplayString(percentageChange(shapeBodyTotal.value)) + \" %\", 1)\n                                ]))\n                              : _createCommentVNode(\"\", true)\n                          ], 64))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", null, [\n                      _hoisted_68,\n                      _hoisted_69,\n                      _hoisted_70,\n                      _createElementVNode(\"th\", _hoisted_71, _toDisplayString(pltCount.value) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", null, [\n                      _hoisted_72,\n                      _withDirectives(_createElementVNode(\"th\", _hoisted_73, [\n                        _createElementVNode(\"pre\", _hoisted_74, _toDisplayString(selectItems.value?.rbcMemo), 1)\n                      ], 512), [\n                        [_vShow, selectItems.value?.rbcMemo]\n                      ])\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_75, [\n            _createElementVNode(\"h3\", _hoisted_76, _toDisplayString(_unref(projectType) === 'pb' ? 'WBC' : 'BM') + \" classification result\", 1),\n            _createElementVNode(\"table\", _hoisted_77, [\n              _hoisted_78,\n              _hoisted_79,\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo(wbcInfo.value, 'wbc'), (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_80, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_81, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_82, _toDisplayString(item?.percent) + \" %\", 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_83, [\n                  _hoisted_84,\n                  _createElementVNode(\"td\", _hoisted_85, _toDisplayString(selectItems.value?.wbcInfo?.totalCount), 1),\n                  _hoisted_86\n                ]),\n                (_unref(projectType) !== 'bm')\n                  ? (_openBlock(), _createElementBlock(\"th\", _hoisted_87, \"non-Wbc\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo(wbcInfo.value, 'nonWbc'), (item) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: item.id\n                  }, [\n                    (_unref(projectType) !== 'bm')\n                      ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_88, [\n                          _createElementVNode(\"td\", _hoisted_89, _toDisplayString(item.name), 1),\n                          _createElementVNode(\"td\", _hoisted_90, _toDisplayString(item.count), 1),\n                          _hoisted_91\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_92, [\n                  _hoisted_93,\n                  _withDirectives(_createElementVNode(\"td\", _hoisted_94, [\n                    _createElementVNode(\"pre\", _hoisted_95, _toDisplayString(selectItems.value?.wbcMemo), 1)\n                  ], 512), [\n                    [_vShow, selectItems.value?.wbcMemo]\n                  ])\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_96, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noImageList(wbcInfo.value), (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id,\n                  style: {}\n                }, [\n                  _createElementVNode(\"div\", _hoisted_97, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \") \", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\",\"text-align\":\"left\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"5px\",\"margin-top\":\"5px\",\"outline\":\"1px solid #2c2d2c\",\"cursor\":\"auto\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_98, [\n                          (!hiddenImages.value[`${item.id}-${image.fileName}`])\n                            ? (_openBlock(), _createElementBlock(\"img\", {\n                                key: 0,\n                                src: getImageUrl(image.fileName, item.id, item.title),\n                                width: image.width ? image.width : '150px',\n                                height: image.height ? image.height : '150px',\n                                onError: ($event: any) => (handleImageError(item.id, image.fileName)),\n                                style: _normalizeStyle({ filter: image.filter }),\n                                class: \"cellImg\",\n                                ref_for: true,\n                                ref: \"cellRef\"\n                              }, null, 44, _hoisted_99))\n                            : _createCommentVNode(\"\", true),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ], 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"printReady\" class=\"moveImgIsBool\"> Loading Print...</div>\r\n  <div\r\n      style=\"font-size: 0.8rem; width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px; z-index:9999;\">\r\n    <button\r\n        style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\"\r\n        @click=\"closePrint\">Close\r\n    </button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD\r\n          {{ projectType === 'bm' ? 'BM' : 'PB' }} system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%; font-size: 0.8rem;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{\r\n                projectType === 'pb' ? getTestTypeText(selectItems?.testType) : getBmTestTypeText(selectItems?.testType)\r\n              }}\r\n            </td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '' ? '' : selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n        <div v-if=\"selectItems?.testType === '04'\" style=\"margin-top: 20px; border-top: 2px dotted #696969\"></div>\r\n\r\n        <!-- RBC Classification -->\r\n        <div v-if=\"selectItems?.testType === '04'\" style=\"margin-top: 20px;\">\r\n          <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n          <table style=\"width: 100%; font-size: 0.8rem;\">\r\n            <colgroup>\r\n              <col style=\"width: 20%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n              <col style=\"width: 15%;\"/>\r\n              <col style=\"width: 15%;\"/>\r\n            </colgroup>\r\n            <thead>\r\n            <tr style=\"margin-bottom: 15px; font-size: 18px; font-weight: normal; padding-bottom: 100px;\">\r\n              <th style=\"text-align: left;\">Category</th>\r\n              <th style=\"text-align: left;\">Class</th>\r\n              <th style=\"text-align: left;\">Degree</th>\r\n              <th style=\"text-align: left;\">Count</th>\r\n              <th style=\"text-align: left;\">Percent</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <template v-for=\"(classList, outerIndex) in [selectItems.rbcInfoAfter]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <tr>\r\n                  <td :rowspan=\"category.classInfo.length + (category.categoryNm !== 'Shape' ? 1 : 0)\"\r\n                      style=\"text-align: left; vertical-align: top;\">{{ category.categoryNm }}\r\n                  </td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.classNm }}</td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.degree }}</td>\r\n                  <td style=\"text-align: left;\">{{ category.classInfo[0]?.originalDegree }}</td>\r\n                  <td style=\"text-align: left;\">{{ percentageChange(category.classInfo[0]?.originalDegree) }}</td>\r\n                </tr>\r\n\r\n                <template v-for=\"(classInfo, classIndex) in category.classInfo.slice(1)\" :key=\"classIndex\">\r\n                  <tr>\r\n                    <td style=\"text-align: left;\">{{ classInfo.classNm }}</td>\r\n                    <td style=\"text-align: left;\">{{ classInfo.degree }}</td>\r\n                    <td style=\"text-align: left;\">{{ classInfo.originalDegree }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(classInfo.originalDegree) }}</td>\r\n                  </tr>\r\n\r\n                  <!-- Shape Others -->\r\n                  <tr v-if=\"category.categoryNm === 'Shape' && classIndex === category.classInfo.slice(1).length - 1\">\r\n                    <td></td>\r\n                    <td style=\"text-align: left;\">Others</td>\r\n                    <td style=\"text-align: left;\">-</td>\r\n                    <td style=\"text-align: left;\">{{ shapeOthersCount }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(shapeOthersCount) }} %</td>\r\n                  </tr>\r\n\r\n                  <!-- Inclusion Body Malaria -->\r\n                  <tr v-if=\"category.categoryNm === 'Inclusion Body' && classIndex === category.classInfo.slice(1).length - 1\">\r\n                    <td style=\"text-align: left;\">Malaria</td>\r\n                    <td style=\"text-align: left;\">-</td>\r\n                    <td style=\"text-align: left;\">{{ malariaCount }}</td>\r\n                    <td style=\"text-align: left;\">{{ percentageChange(malariaCount) }}</td>\r\n                  </tr>\r\n                </template>\r\n                <tr v-if=\"category.categoryNm !== 'Shape' && category.categoryNm !== 'Inclusion Body'\">\r\n                  <td style=\"text-align: left;\"></td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">Total</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ sizeChromiaTotal }}</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ percentageChange(sizeChromiaTotal) }} %</td>\r\n                </tr>\r\n\r\n                <tr v-if=\"category.categoryNm == 'Inclusion Body'\">\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">Total</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ shapeBodyTotal }}</td>\r\n                  <td style=\"text-align: left; font-weight: bold;\">{{ percentageChange(shapeBodyTotal) }} %</td>\r\n                </tr>\r\n              </template>\r\n            </template>\r\n            <tr>\r\n              <th style=\"text-align: left; padding: 15px 0;\">Others</th>\r\n              <th style=\"text-align: left; padding: 15px 0;\">Platelets</th>\r\n              <th></th>\r\n              <th style=\"text-align: left; padding: 15px 0;\" colspan=\"2\">{{ pltCount }} PLT / 1000 RBC</th>\r\n            </tr>\r\n            <tr>\r\n              <th style=\"text-align: left; padding-top: 15px;\">Comment</th>\r\n              <th v-show=\"selectItems?.rbcMemo\" style=\"text-align: left; padding-top: 15px;\" colspan=\"4\">\r\n                <pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{\r\n                    selectItems?.rbcMemo\r\n                  }}</pre>\r\n              </th>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- WBC Classification -->\r\n        <div style=\"margin-top: 150px; margin-bottom: 50px; border-top: 2px dotted #696969\">\r\n          <h3 style=\"margin: 10px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">\r\n            {{ projectType === 'pb' ? 'WBC' : 'BM' }} classification result</h3>\r\n          <table style=\"width: 100%; font-size: 0.8rem;\">\r\n            <colgroup>\r\n              <col style=\"width: 30%;\"/>\r\n              <col style=\"width: 45%;\"/>\r\n              <col style=\"width: 25%;\"/>\r\n            </colgroup>\r\n            <thead>\r\n            <tr style=\"margin-bottom: 15px; font-size: 18px; font-weight: normal; padding-bottom: 100px;\">\r\n              <th style=\"text-align: left;\">Class</th>\r\n              <th style=\"text-align: left;\">Count</th>\r\n              <th style=\"text-align: left;\">Percent</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr v-for=\"item in filteredWbcInfo(wbcInfo, 'wbc')\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }} %</td>\r\n            </tr>\r\n            <tr style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total</th>\r\n              <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n              <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n            </tr>\r\n\r\n\r\n            <th style=\"text-align: left; padding-top: 30px; font-weight: bold;\" v-if=\"projectType !== 'bm'\">non-Wbc</th>\r\n\r\n              <template v-for=\"item in filteredWbcInfo(wbcInfo, 'nonWbc')\" :key=\"item.id\">\r\n                <tr style=\"padding-top: 5px; padding-bottom: 15px;\" v-if=\"projectType !== 'bm'\">\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 30%;\">{{ item.name }}</td>\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 45%;\">{{ item.count }}</td>\r\n                  <td style=\"text-align: left; padding: 5px 0; width: 25%;\">-</td>\r\n                </tr>\r\n              </template>\r\n            <tr style=\"padding-bottom: 5px;\">\r\n              <th style=\"text-align: left; padding: 15px 0;\">Comment</th>\r\n              <td v-show=\"selectItems?.wbcMemo\" colspan=\"2\" style=\"text-align: left; padding: 5px 0;\">\r\n                <pre style=\"text-align: left; outline: 1px solid #252629; padding: 4px;\">{{\r\n                    selectItems?.wbcMemo\r\n                  }}</pre>\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <!-- Print List -->\r\n          <ul class=\"print\"\r\n              style=\"list-style: none; padding-left: 0; margin-top: 20px; text-align: center; display:flex; flex-direction: column; align-items: center; justify-content: center;\">\r\n            <li v-for=\"(item) in noImageList(wbcInfo)\" :key=\"item.id\" style=\"\">\r\n              <div style=\"font-weight: bold; font-size: 18px; margin: 10px auto 20px;\">{{ item?.title }} ({{\r\n                  item?.count\r\n                }})\r\n              </div>\r\n              <ul :class=\"'wbcImgWrap ' + item?.title\"\r\n                  style=\"list-style: none; padding-left: 0; margin-top: 10px;text-align: left;\">\r\n                <li v-for=\"(image) in item.images\" :key=\"image.fileName\"\r\n                    style=\"display: inline-block; margin-right: 5px; margin-top: 5px; outline: 1px solid #2c2d2c; cursor: auto;\">\r\n                  <div style=\"position: relative; text-align: left;\">\r\n                    <img\r\n                        :src=\"getImageUrl(image.fileName, item.id, item.title)\"\r\n                        v-if=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                        :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\"\r\n                        @error=\"handleImageError(item.id, image.fileName)\"\r\n                        :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                    <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineEmits, onMounted, ref } from \"vue\";\r\nimport {getTestTypeText, getBmTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi, getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\n\r\nconst projectType = window.PROJECT_TYPE;\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectItems = ref<any>(null);\r\nconst orderClass = ref<any>({});\r\n\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst shapeOthersCount = ref(0);\r\n\r\nconst printReady = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await getImagePrintData();\r\n  if (projectType !== 'bm') {\r\n    await rbcTotalAndReCount();\r\n    await calcShapeOthersCount();\r\n  }\r\n  await printPage();\r\n});\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0 ? el.classInfo[el.classInfo.length - 1].index.replace(/[^\\d]/g, '') : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  selectItems.value.rbcInfoAfter.forEach((category: any) => {\r\n    category.classInfo.forEach((item: any) => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = selectItems.value.rbcInfoAfter.find((cat: any) => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach((pathClass: any) => {\r\n        const classInfo = category.classInfo.find((item: any) => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\nconst hiddenImages = ref<Record<string, boolean>>({});\r\n\r\nconst handleImageError = (itemId: number, fileName: string) => {\r\n  hiddenImages.value[`${itemId}-${fileName}`] = true;\r\n};\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    wbcInfo.value = result.data.wbcInfoAfter;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst filteredWbcInfo = (wbcInfoArr: any, type: 'wbc' | 'nonWbc') => {\r\n  if (type === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => nonWbcIdList.includes(item.id) && item.count > 0);\r\n  }\r\n  return wbcInfoArr.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  const showImage = [...imagePrintAndWbcArr.value].find(item => item === String(id));\r\n  if (!showImage) {\r\n    return '';\r\n  }\r\n\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const path = selectItems.value.img_drive_root_path !== '' && selectItems.value.img_drive_root_path ? selectItems.value.img_drive_root_path : iaRootPath.value;\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  const folderPath = projectType === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/print?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nconst noImageList = (wbcArr: any) => {\r\n  return wbcArr.filter((item: any) => [...imagePrintAndWbcArr.value].includes(String(item.id)));\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  printReady.value = true;\r\n  disableScroll();\r\n\r\n  percentChangeBySiteCd();\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, {level: 9});\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n    printReady.value = false;\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    printReady.value = false;\r\n  } finally {\r\n    enableScroll();\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n      // count가 없는 경우 print에서 보여줄 wbcInfo에서 제거\r\n      wbcInfo.value = wbcInfo.value.filter((item: any) => item.count !== '0');\r\n\r\n      // wbcClassification Order 적용\r\n      const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      const sortArr = orderClass.value.length !== 0 ? oArr : projectType === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const sortedWbcInfoData = await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcInfo.value = sortedWbcInfoData;\r\n      percentChangeBySiteCd();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  return wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\nconst percentChangeBySiteCd = async () => {\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    wbcInfo.value = seoulStMaryPercentChange(wbcInfo.value, wbcInfo.value);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    wbcInfo.value = await inhaPercentChange(selectItems.value, wbcInfo.value);\r\n  }\r\n}\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loadingDelay\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <table class='defaultTable mt2 dbDataTable' ref=\"scrollableDiv\">\r\n    <colgroup>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n    </colgroup>\r\n    <thead>\r\n    <tr>\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(S)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr\r\n          :class=\"{\r\n            selectedTr: selectedItemId === item.id,\r\n            submittedTr: item.submitState === 'Submit' || item.submitState === 'lis',\r\n            rock: item.lock_status && item.pcIp !== myIp,\r\n            checkFirst: item.submitState === 'checkFirst',\r\n          }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n          title=\"Double click the row\"\r\n      >\r\n        <td><font-awesome-icon class=\"red\" :icon=\"['fas', 'triangle-exclamation']\" v-if=\"item.isNormal === 'N'\" /> {{ idx + 1 }}</td>\r\n        <td @click=\"handleCheckboxChange(item)\">\r\n          <input type=\"checkbox\" v-model=\"item.checked\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon v-if=\"item?.submitState === 'checkFirst' || item?.submitState === ''\"\r\n                             :icon=\"['fas', 'pen-to-square']\"\r\n                             @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 30px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\"> NO Data</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 100) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"deleteRow\">Delete</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li class=\"flexColumn\">\r\n            <label for=\"testType\">PB/BF</label>\r\n            <input id=\"testType\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.testType\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"traySlot\">Tray Slot</label>\r\n            <input id=\"traySlot\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.traySlot\" readonly disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"barcode\">BARCODE ID</label>\r\n            <input id=\"barcode\" type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"patientId\">PATIENT ID</label>\r\n            <input id=\"patientId\" type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"patientName\">PATIENT NAME</label>\r\n            <input id=\"patientName\" type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"analyzedDate\">Analyzed date</label>\r\n            <input id=\"analyzedDate\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly\r\n                   disabled/>\r\n          </li>\r\n          <li class=\"flexColumn\">\r\n            <label for=\"signedState\">Signed state</label>\r\n            <input id=\"signedState\" class=\"inputDisabled\" type=\"text\" v-model=\"itemObj.submitState\" readonly disabled/>\r\n          </li>\r\n          <li v-if=\"!barCodeImageShowError\">\r\n            <p>Barcode Image</p>\r\n            <img class=\"mt1\" :src=\"barcodeImg\" @error=\"onImageError\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button class=\"alertButton\" @click=\"dbDataEditSet\">Save</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBarcodeDetailImageUrl, getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance, watch\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport moment from \"moment\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItemIdFalse', 'notStartLoading', 'loadingDelayParents']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst loadingDelay = ref(false);\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst barcodeImg = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst dataBasePageReset = computed(() => store.state.commonModule);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstShiftKeyStr = ref('');\r\nconst lastShiftKeyStr = ref('');\r\nlet socketTimeoutId = undefined; // 타이머 ID 저장\r\nconst scrollableDiv = ref(null);\r\nconst barCodeImageShowError = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  projectType.value = window.PROJECT_TYPE;\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n})\r\n\r\nasync function handleKeyDown(event) {\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event) {\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n}\r\n\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n});\r\n\r\nwatch(\r\n    () => props.loadingDelayParents,\r\n    (newVal) => {\r\n      if (newVal) {\r\n        loadingDelay.value = true;\r\n      } else {\r\n        loadingDelay.value = false;\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatchEffect(async () => {\r\n  if (props.dbData.length > 0) {\r\n    await nextTick();\r\n\r\n    if (props.selectedItemIdFalse) {\r\n      // selectedItemId.value = '0';\r\n      // const filteredItems = props.dbData[0].id\r\n      // const selectedRow = document.querySelector(`[data-row-id=\"${filteredItems}\"]`);\r\n      // selectedRow.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n    }\r\n    const filteredItems = props.dbData.filter(item => item.id === Number(selectedSampleId.value || 0));\r\n\r\n    // 첫 번째 행을 클릭\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.5,\r\n    });\r\n    if (loadMoreRef.value) {\r\n      observer.observe(loadMoreRef.value);\r\n    }\r\n\r\n    if (selectedItemId.value === '0' || !selectedItemId.value) {\r\n      loadingDelay.value = false;\r\n    }\r\n\r\n    if (dataBasePageReset.value.dataBasePageReset === true && filteredItems.length !== 0) {\r\n      // loadingDelay.value = true;\r\n      await selectItem(filteredItems[0]);\r\n      await store.dispatch('commonModule/setCommonInfo', {dataBasePageReset: false});\r\n      await removeCheckBox();\r\n      // 선택된 행이 화면에 보이도록 스크롤 조정\r\n      const selectedRow = document.querySelector(`[data-row-id=\"${filteredItems[0].id}\"]`);\r\n      if (selectedRow && selectedItemId.value !== '0') {\r\n        // selectedRow.scrollIntoView({ behavior: 'auto', block: 'center' });\r\n        loadingDelay.value = false;\r\n      }\r\n      return;\r\n    }\r\n\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst removeCheckBox = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = false;\r\n  });\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = async (item, event) => {\r\n  if (props.dbData.filter(data => data.id === item.id).lock_status === false) {\r\n    showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleShiftSelection = () => {\r\n  const startId = Math.min(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n  const endId = Math.max(Number(firstShiftKeyStr.value), Number(lastShiftKeyStr.value));\r\n\r\n  const items = props.dbData;\r\n\r\n  items.forEach((item) => {\r\n    const itemId = Number(item.id);\r\n    if (itemId >= startId && itemId <= endId) {\r\n      item.checked = !item.checked;\r\n    }\r\n  });\r\n\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item) return;\r\n  item.checked = !item.checked;\r\n  emits('checkListItem', props.dbData.filter(dbDataItem => dbDataItem.checked));\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = async (item) => {\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstShiftKeyStr.value) {\r\n      lastShiftKeyStr.value = item.id;\r\n      handleShiftSelection();\r\n    }\r\n  } else {\r\n    lastShiftKeyStr.value = '';\r\n  }\r\n  if (isCtrlKeyPressed.value) {\r\n    handleCheckboxChange(item);\r\n  }\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n\r\n  firstShiftKeyStr.value = item.id;\r\n\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(item.id)});\r\n};\r\n\r\nconst getIpAddress = async (item) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = result.data;\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress}&newEntityId=${item.id}&newPcIp=${ipAddress}&dayQuery=${dayQuery}`\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type, payload, delay) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status && item?.pcIp !== myIp.value) {\r\n    return;\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: item.id});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getIpAddress(item);\r\n  await router.push('/databaseDetail');\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['', 'Ready', 'checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType);\r\n  const path = item?.img_drive_root_path !== '' && item?.img_drive_root_path ? item?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, item.slotId, barcodeImgDir.barcodeDirName);\r\n\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async () => {\r\n  try {\r\n    let selectedItems = props.dbData.filter(item => item.checked);\r\n    if (selectedItems.length === 0 && selectedItemId.value === '') {\r\n      showErrorAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    } else if (selectedItems.length === 0 && selectedItemId.value !== '') {\r\n      selectedItems = props.dbData.find(item => item.id === selectedItemId.value);\r\n      if (selectedItems.lock_status) {\r\n        showErrorAlert(messages.lockRow);\r\n        return;\r\n      }\r\n      const idsToDelete = selectedItems\r\n      const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n      const rootArr = `${path}/${selectedItems.slotId}`;\r\n      const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n      const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n      const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n      const req = {\r\n        ids: [idsToDelete.id],\r\n        img_drive_root_path: [rootArr],\r\n        dayQuery: dayQuery\r\n      }\r\n      const response = await deleteRunningApi(req);\r\n\r\n      if (response.success) {\r\n        showSuccessAlert('Items deleted successfully');\r\n        emits('refresh'); // 데이터 다시 불러오기\r\n        resetContextMenu();\r\n      } else {\r\n        console.error('Failed to delete items');\r\n      }\r\n    } else {\r\n      const idsToDelete = selectedItems.map(item => item.id);\r\n      const idsToDeleteLock = selectedItems.map(item => item.lock_status);\r\n      if (idsToDeleteLock.includes(true)) {\r\n        showErrorAlert(messages.lockRow);\r\n        return\r\n      }\r\n      const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n      const rootArr = selectedItems.map(item => `${path}/${item.slotId}`);\r\n      const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n      const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n      const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n      const req = {\r\n        ids: idsToDelete,\r\n        img_drive_root_path: rootArr,\r\n        dayQuery: dayQuery,\r\n      }\r\n      const response = await deleteRunningApi(req);\r\n\r\n      if (response.success) {\r\n        showSuccessAlert('Items deleted successfully');\r\n        emits('refresh'); // 데이터 다시 불러오기\r\n        resetContextMenu();\r\n      } else {\r\n        console.error('Failed to delete items');\r\n      }\r\n    }\r\n\r\n\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n}\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <div class=\"orderListWrapper\" style=\"padding: 0;\">\r\n        <ul class=\"orderListUi\">\r\n          <li class=\"flexColumn\">\r\n            <span class=\"mb1\">Order ID:</span>\r\n            <span class=\"mb2\">{{ selectedItem?.slotId }}</span>\r\n          </li>\r\n          <li>NS, NB Integration: {{integrationFindNe(selectedItem.wbcInfoAfter)}}</li>\r\n        </ul>\r\n        <div>\r\n          <img v-show=\"!barCodeImageShowError\" @error=\"onImageError\" :src=\"pilePath\"\r\n               style=\"width: 200px; float:right;\"/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"resultInformationContainer\" style=\"padding-top: 0;\">\r\n      <h3 class=\"mt2 mb1 hh3title\">Result Information</h3>\r\n      <ul class=\"resInfoTopContainer\">\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04' || projectType === 'bm'\">\r\n          <div class=\"resInfoContainer\">\r\n            <li class=\"resInfoWrapper mb1\">\r\n              <p>Class</p>\r\n              <p>Count</p>\r\n              <p>Percent</p>\r\n            </li>\r\n            <template v-for=\"result in wbcInfoAfter\" :key=\"result.title\">\r\n              <li v-if=\"showClassificationResults(result.title) && result.count > 0\"\r\n                  class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>{{ percentWithNoError(result.percent) + '%' }}</p>\r\n              </li>\r\n            </template>\r\n            <li class=\"resInfoWrapper mt1 mb2\">\r\n              <p>Total</p>\r\n              <p>{{ wbcTotal }}</p>\r\n              <p>100%</p>\r\n            </li>\r\n\r\n            <template v-for=\"result in wbcInfoAfter\" :key=\"result.title\">\r\n              <li v-if=\"showClassificationNonWbcResults(result.title) && result.count > 0\"\r\n                  class=\"resInfoWrapper resInfoWrapperLine\">\r\n                <p>{{ result.title }}</p>\r\n                <p>{{ result.count }}</p>\r\n                <p>-</p>\r\n              </li>\r\n            </template>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, defineProps, onMounted, watch, computed, onBeforeMount} from 'vue';\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport moment from \"moment/moment\";\r\nimport {useStore} from \"vuex\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {\r\n  inhaPercentChange,\r\n  percentWithNoError,\r\n  seoulStMaryPercentChange\r\n} from \"@/common/lib/commonfunction/classFicationPercent\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectedItem']);\r\nconst iaRootPath = ref(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\nconst pilePath = ref('');\r\nconst barCodeImageShowError = ref(false);\r\nconst wbcTotal = ref(0);\r\nconst nonWbcTitles = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM', 'OT'];\r\nconst projectType = ref('');\r\nconst orderClass = ref({});\r\nconst wbcInfoAfter = ref({});\r\n\r\nonBeforeMount(() => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nonMounted(async () => {\r\n  await getClassOrder();\r\n  barCodeImageShowError.value = false;\r\n  // iaRootPath가 존재하면 getImageUrl 함수 호출\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n});\r\n\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  barCodeImageShowError.value = false;\r\n  setWbcTotalAndPercent();\r\n  sortClassOrder();\r\n\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst integrationFindNe = (wbcInfoAfter) => {\r\n  let returnText = '';\r\n  const neFindItem = wbcInfoAfter.find((el) => {\r\n    return el.title === 'NE'\r\n  });\r\n\r\n  if(neFindItem){\r\n    returnText = 'Y' ;\r\n  }else{\r\n    returnText = 'N';\r\n  }\r\n  return returnText;\r\n}\r\n\r\nconst sortClassOrder = async () => {\r\n  if (!orderClass.value || orderClass.value.length === 0 || !Array.isArray(orderClass.value)) {\r\n    wbcInfoAfter.value = props.selectedItem.wbcInfoAfter;\r\n    return;\r\n  }\r\n\r\n  const oArr = orderClass.value.sort((a, b) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : projectType.value === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoData = sortWbcInfo(props.selectedItem.wbcInfoAfter, sortArr);\r\n  wbcInfoAfter.value = sortedWbcInfoData;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo, basicWbcArr) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  return newSortArr.sort((a, b) => {\r\n    const nameA = basicWbcArr.findIndex((item) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n};\r\n\r\nconst getClassOrder = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a, b) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst setWbcTotalAndPercent = async () => {\r\n  wbcTotal.value = props.selectedItem.wbcInfoAfter.reduce((acc, item) => {\r\n    if (!nonWbcTitles.includes(item.title)) return acc + Number(item.count)\r\n    return acc\r\n  }, 0)\r\n  for (const item of props.selectedItem.wbcInfoAfter) {\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(wbcTotal.value)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n\r\n      // 인하대일 경우 Percent 로직이 다르므로 계산 X\r\n      const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n      const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n      if (isInhaHospitalSiteCd && props.selectedItem?.testType !== '04') {\r\n        wbcInfoAfter.value = await inhaPercentChange(props.selectedItem, props.selectedItem.wbcInfoAfter);\r\n      } else if (isSeoulStMaryHospitalSiteCd) {\r\n        wbcInfoAfter.value = seoulStMaryPercentChange(props.selectedItem.wbcInfoAfter, props.selectedItem.wbcInfoAfter);\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, props.selectedItem?.testType);\r\n        if (!targetArray.includes(item.title)) {\r\n          const percentage = ((Number(item.count) / Number(wbcTotal.value)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n          item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd, testType) => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !nonWbcTitles.includes(classificationResult)\r\n  );\r\n};\r\n\r\nconst showClassificationNonWbcResults = (classificationResult) => {\r\n  return (classificationResult && classificationResult.length > 0 && nonWbcTitles.includes(classificationResult))\r\n}\r\n\r\n\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nfunction getImageUrl(imageName) {\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + barcodeImgDir.barcodeDirName + '/'}&imageName=${imageName}`;\r\n}\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt1 listTableImageContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"WBC Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1 listTableImageContainer\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt3 listTableImageContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"BM Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3 listTableImageContainer\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { ApiResponse, useHttpClient } from \"@/common/api/httpClient\";\r\nimport { apiConstants } from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const executeExcelCreate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.excel.execute, request);\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, withKeys as _withKeys, unref as _unref, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, KeepAlive as _KeepAlive, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackgroundForLogin\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loaderForLogin\" }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingTextLogin\" }, \"Loading...\", -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"titleH3\" }\nconst _hoisted_6 = { class: \"listBoxTable\" }\nconst _hoisted_7 = { class: \"filterListDiv\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\nconst _hoisted_11 = [\n  _hoisted_8,\n  _hoisted_9,\n  _hoisted_10\n]\nconst _hoisted_12 = { class: \"settingDatePickers\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"excelDivList\"\n}\nconst _hoisted_14 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_15 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", null, \"NR count\", -1)\nconst _hoisted_17 = { class: \"wbcTotal\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Total\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"option\", null, \"DESC\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"option\", null, \"ASC\", -1)\nconst _hoisted_22 = [\n  _hoisted_19,\n  _hoisted_20,\n  _hoisted_21\n]\nconst _hoisted_23 = { class: \"wbcInfoFilter\" }\nconst _hoisted_24 = { class: \"wbcInfoFilter\" }\nconst _hoisted_25 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_26 = [\"for\"]\nconst _hoisted_27 = { class: \"lastTestType\" }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Test Type\", -1)\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"span\", null, \"ALL\", -1)\nconst _hoisted_31 = [\"checked\"]\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Diff\", -1)\nconst _hoisted_33 = [\"checked\"]\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"span\", null, \"PBS\", -1)\nconst _hoisted_35 = [\"checked\"]\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Wedge\", -1)\nconst _hoisted_37 = [\"checked\"]\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Biopsy\", -1)\nconst _hoisted_39 = [\"checked\"]\nconst _hoisted_40 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Squash\", -1)\nconst _hoisted_41 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  ref,\r\n} from \"vue\";\r\nimport {detailRunningApi, getRunningApi, removePageAllDataApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from \"pako\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport router from \"@/router\";\r\n\r\n\r\nconst bufferDelay = 100; // 입력 완료 감지 지연 시간 (ms)\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst store = useStore();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 29);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref<any>({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst nonWbcTitles = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nconst barcodeInput = ref<HTMLInputElement | null>(null);\r\nconst isPrintingExcel = ref(false);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst inputTimeout = ref<any>(null);\r\nconst inputBuffer = ref('');\r\nconst barcodePattern = /^[0-9A-Z]{8,}$/; // 바코드 패턴 (예: 8자리 이상의 숫자 및 대문자)\r\n\r\nconst isBarcodeInput = (value: any) => {\r\n  return barcodePattern.test(value);\r\n};\r\n\r\n\r\nasync function handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  await removePageAllDataApi();\r\n  await initDbData().then(() => {\r\n    // loadingDelayParents.value = false;\r\n  });\r\n}\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n\r\n  document.addEventListener('click', closeClassListBox);\r\n  if (barcodeInput.value) {\r\n    barcodeInput.value.focus();\r\n  }\r\n\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n  document.addEventListener('keydown', handleGlobalKeydown);\r\n\r\n});\r\n\r\nconst previousValue = ref('');\r\nlet lastInputTime = Date.now();\r\nconst isBarcodeScannerInput = { value: false };\r\n\r\n// 이벤트 핸들러 함수\r\nconst handleInput = (event: any) => {\r\n  if (!event.data) {\r\n    return;\r\n  }\r\n\r\n  // 현재 입력 시간\r\n  const currentTime = Date.now();\r\n\r\n  // 현재 입력과 마지막 입력 사이의 시간 차이 계산\r\n  const timeDiff = currentTime - lastInputTime;\r\n\r\n  // 바코드 리더기에서 입력된 것인지 확인 (시간 차이가 50ms 이하이면 바코드 리더기에서 입력된 것으로 간주)\r\n  if (timeDiff < 50) {\r\n    isBarcodeScannerInput.value = true;\r\n  } else {\r\n    isBarcodeScannerInput.value = false;\r\n  }\r\n\r\n  // 마지막 입력 시간을 현재 시간으로 업데이트\r\n  lastInputTime = currentTime;\r\n\r\n  // 바코드 리더기 입력이 아니면 이벤트 종료\r\n  if (!isBarcodeScannerInput.value) {\r\n    return;\r\n  }\r\n\r\n  // 입력 버퍼에 추가된 문자\r\n  inputBuffer.value += event.data;\r\n\r\n  // 이전 타이머가 설정되어 있으면 클리어\r\n  if (inputTimeout.value) {\r\n    clearTimeout(inputTimeout.value);\r\n  }\r\n\r\n  // 새로운 타이머 설정\r\n  inputTimeout.value = setTimeout(() => {\r\n    // 입력 완료로 간주\r\n    const trimmedValue = inputBuffer.value.trim();\r\n\r\n    // 입력된 값과 이전 값이 다를 때만 업데이트\r\n    if (trimmedValue !== previousValue.value) {\r\n      searchText.value = trimmedValue;\r\n      previousValue.value = trimmedValue;\r\n    }\r\n\r\n    // 버퍼 초기화\r\n    inputBuffer.value = '';\r\n    search();\r\n  }, bufferDelay);\r\n};\r\n\r\nconst handleGlobalKeydown = (event) => {\r\n  if (router.currentRoute.value.path === '/dataBase') {\r\n    if (event.key === 'Enter' || event.key === 'Tab') {\r\n      setTimeout(() => {\r\n        if (barcodeInput.value) {\r\n          barcodeInput.value.focus();\r\n          searchText.value = searchText.value.trim();\r\n          const trimmedValue = searchText.value.trim();\r\n          if (trimmedValue !== previousValue.value) {\r\n            // 입력된 값과 이전 값이 다를 때만 업데이트\r\n            previousValue.value = trimmedValue;\r\n          }\r\n        }\r\n      }, 10); // 아주 짧은 지연을 주어 바코드 리더기가 입력을 시작할 수 있도록 함\r\n\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst handleEnter = () => {\r\n  if (barcodeInput.value) {\r\n    search();\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  // instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n  document.removeEventListener('click', closeClassListBox);\r\n});\r\n\r\nconst closeClassListBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.filterDivBox');\r\n  const selectButton = document.querySelector('.classificationListBtn');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    classListToggle.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  // titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n    // if (Number(lastSearchParams.page) !== 1) {\r\n    //   const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    //   if (numberOfCalls >= 4) {\r\n    //     await getDbData('mounted', numberOfCalls - 3);\r\n    //     await getDbData('mounted', numberOfCalls - 2);\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 3\r\n    //   } else {\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 1\r\n    //   }\r\n    //   await getDbData('mounted', numberOfCalls);\r\n    // } else {\r\n    //   await getDbData('mounted', 1);\r\n    // }\r\n    // const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    // for (let i = 1; i <= numberOfCalls; i++) {\r\n    //   await getDbData('mounted', i);\r\n    // }\r\n    await getDbData('search');\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n    nrCount: nrCount.value,\r\n    wbcTotal: wbcCountOrder.value,\r\n    wbcInfo: titleItemArr.value,\r\n    testType: testType.value,\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n  localStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if (type === 'loadMoreData') {\r\n    pageChange = page.value;\r\n  } else if (type === 'loadPrevData') {\r\n    pageChange = prevPage.value;\r\n  } else {\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: searchText.value === '' ? formatDate(startDate.value) : '',\r\n    endDay: searchText.value === '' ? formatDate(endDate.value) : '',\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    saveLastSearchParams();\r\n    if (page.value === 1 && result.data.data.length === 0) {\r\n      loadingDelayParents.value = false;\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (titleItem.value.length === 0) {\r\n          titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        }\r\n\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n        //\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n    if (dbGetData.value.length > 0) {\r\n      await store.dispatch('commonModule/setCommonInfo', {dbListDataFirstNum: Number(dbGetData.value[0].id)})\r\n      await store.dispatch('commonModule/setCommonInfo', {dbListDataLastNum: Number(dbGetData.value[dbGetData.value.length - 1].id)})\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    await showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n  isPrintingExcel.value = true;\r\n\r\n  // RBC Print\r\n  await convertRbcData(checkedSelectedItems.value);\r\n\r\n  // WBC Print\r\n  await excecuteExcel();\r\n}\r\n\r\nconst excecuteExcel = async () => {\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${path}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    const result: any = await executeExcelCreate(body);\r\n    if (result.data.message === 'Application executed successfully') {\r\n      await showSuccessAlert('Excel created');\r\n    } else {\r\n      await showSuccessAlert('Excel create failed');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showSuccessAlert('Excel create failed');\r\n  } finally {\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst convertRbcData = async (dataList: any) => {\r\n  if (bmClassIsBoolen.value) {\r\n    return;\r\n  }\r\n\r\n  let beforeRbcData = {};\r\n  let afterRbcData = {};\r\n\r\n  for (const item of dataList) {\r\n    // PB & RBC일 경우\r\n    if (item.testType !== '04') {\r\n      continue;\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(item.id));\r\n    await getRbcDegreeData();\r\n    const data = result.data;\r\n    rbcInfoBeforeVal.value = data.rbcInfo.rbcClass;\r\n    rbcInfoAfterVal.value = data.rbcInfoAfter;\r\n    await rbcTotalAndReCount(data);\r\n    await countReAdd();\r\n    await reDegree(rbcInfoBeforeVal.value);\r\n    if (areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)) {\r\n      await reDegree(rbcInfoAfterVal.value);\r\n    }\r\n\r\n    const sendingItem = {before: {}, after: {}};\r\n    const shapeOthersCount: any = await getShapeOthers(data);\r\n\r\n    // Before\r\n    for (const classItem of rbcInfoBeforeVal.value) {\r\n      let beforeItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        beforeItem = {...beforeItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          beforeItem = {...beforeItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        beforeItem = {\r\n          ...beforeItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.doubleNormal + shapeOthersCount.artifact)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      beforeRbcData = {...beforeRbcData, ...{[classItem.categoryNm]: beforeItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        beforeRbcData = {...beforeRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n\r\n    }\r\n\r\n    // After\r\n    for (const classItem of rbcInfoAfterVal.value) {\r\n      let afterItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        afterItem = {...afterItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          afterItem = {...afterItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        afterItem = {\r\n          ...afterItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.doubleNormal + shapeOthersCount.artifact)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      afterRbcData = {...afterRbcData, ...{[classItem.categoryNm]: afterItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        afterRbcData = {...afterRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n    }\r\n    sendingItem.before = beforeRbcData;\r\n    sendingItem.after = afterRbcData;\r\n\r\n    await createRbcJson(data.slotId, sendingItem);\r\n  }\r\n}\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst createRbcJson = async (slotId: string, sendingData: any) => {\r\n  const jsonString = JSON.stringify(sendingData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `RBC.json`);\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${slotId}/RBC_Analysis.json`\r\n  try {\r\n    await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    showSuccessAlert('Excel print failed');\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async (selectItem: any) => {\r\n  const path = selectItem?.img_drive_root_path !== '' && selectItem?.img_drive_root_path ? selectItem?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItem?.slotId}/03_RBC_Classification/${selectItem?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItem?.slotId}/03_RBC_Classification/${selectItem?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if (el.categoryId === '03') {\r\n      for (const classItem of el.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          countArtifact.value += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          countDoubleNormal.value += 1\r\n        }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoAfterVal.value || !Array.isArray(rbcInfoAfterVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoAfterVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  /** TODO\r\n   * json 파일을 변경하기 때문에 초기 before 값을 저장하는 곳이 따로 필요하다.\r\n   * */\r\n      // for (const category of rbcInfoBeforeVal.value) {\r\n      //   for (const classItem of category.classInfo) {\r\n      //     let count = 0;\r\n      //\r\n      //     for (const afterCategory of rbcInfoPathAfter.value) {\r\n      //       for (const afterClassItem of afterCategory.classInfo) {\r\n      //         if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n      //           count++;\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //\r\n      //     classItem.originalDegree = count;\r\n      //   }\r\n      // }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\nconst getShapeOthers = async (selectItems: any) => {\r\n  const path = selectItems.img_drive_root_path !== '' && selectItems.img_drive_root_path ? selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.slotId}/03_RBC_Classification/${selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (bmClassIsBoolen.value) return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n  search();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (isPrintingExcel.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_5, [\n        _createTextVNode(\" Classification List \"),\n        _createElementVNode(\"button\", {\n          onClick: classListToggleEvent,\n          class: \"classificationListBtn\"\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'list-check'] })\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _hoisted_11, 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n              class: \"searchInputBox\",\n              onKeydown: _withKeys(handleEnter, [\"enter\"]),\n              ref_key: \"barcodeInput\",\n              ref: barcodeInput,\n              onInput: handleInput\n            }, null, 544), [\n              [_vModelText, searchText.value]\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: dateRefresh\n            }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'calendar-days'] }),\n              _createTextVNode(\" Refresh \")\n            ]),\n            _createElementVNode(\"div\", _hoisted_12, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\"),\n            (viewerCheck.value === 'main')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'file-csv'],\n                    onClick: exportToExcel\n                  })\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                      _hoisted_16,\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_17, [\n                  _hoisted_18,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _hoisted_22, 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _createElementVNode(\"span\", null, _toDisplayString(bmClassIsBoolen.value ? 'BM' : 'WBC') + \" Info Filter\", 1),\n                  _createElementVNode(\"ul\", _hoisted_24, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                        _withDirectives(_createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          id: 'checkbox_' + idx,\n                          \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                          onChange: updateFilter\n                        }, null, 40, _hoisted_25), [\n                          [_vModelCheckbox, item.checked]\n                        ]),\n                        _createElementVNode(\"label\", {\n                          for: 'checkbox_' + idx\n                        }, _toDisplayString(item.title), 9, _hoisted_26)\n                      ]))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_27, [\n                  _hoisted_28,\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_29),\n                      _hoisted_30\n                    ]),\n                    (!bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"01\",\n                              onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                              checked: testType.value === '01'\n                            }, null, 40, _hoisted_31),\n                            _hoisted_32\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_33),\n                            _hoisted_34\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true),\n                    (bmClassIsBoolen.value)\n                      ? (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"02\",\n                              onChange: _cache[9] || (_cache[9] = ($event: any) => (changeTestType('02'))),\n                              checked: testType.value === '02'\n                            }, null, 40, _hoisted_35),\n                            _hoisted_36\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"04\",\n                              onChange: _cache[10] || (_cache[10] = ($event: any) => (changeTestType('04'))),\n                              checked: testType.value === '04'\n                            }, null, 40, _hoisted_37),\n                            _hoisted_38\n                          ]),\n                          _createElementVNode(\"label\", null, [\n                            _createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: \"06\",\n                              onChange: _cache[11] || (_cache[11] = ($event: any) => (changeTestType('06'))),\n                              checked: testType.value === '06'\n                            }, null, 40, _hoisted_39),\n                            _hoisted_40\n                          ])\n                        ], 64))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (_openBlock(), _createBlock(_KeepAlive, null, [\n          _createVNode(ListTable, {\n            loadingDelayParents: loadingDelayParents.value,\n            dbData: dbGetData.value,\n            onLoadMoreData: loadMoreData,\n            onLoadPrevData: loadPrevData,\n            onInitData: initDbData,\n            onSelectItem: selectItem,\n            onRefresh: refresh,\n            onCheckListItem: checkListItem,\n            selectedItemIdFalse: selectedItemIdFalse.value,\n            notStartLoading: notStartLoading.value\n          }, null, 8, [\"loadingDelayParents\", \"dbData\", \"selectedItemIdFalse\", \"notStartLoading\"])\n        ], 1024))\n      ]),\n      _createElementVNode(\"div\", _hoisted_41, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackgroundForLogin\" v-if=\"isPrintingExcel\">\r\n    <div class=\"loaderForLogin\"></div>\r\n    <p class=\"loadingTextLogin\">Loading...</p>\r\n  </div>\r\n\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click=\"classListToggleEvent\" class=\"classificationListBtn\">\r\n        <font-awesome-icon :icon=\"['fas', 'list-check']\"/>\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <input type=\"text\" v-model='searchText' class=\"searchInputBox\" @keydown.enter=\"handleEnter\" ref=\"barcodeInput\"\r\n                 @input=\"handleInput\"/>\r\n          <button class=\"searchClass\" @click=\"dateRefresh\">\r\n            <font-awesome-icon :icon=\"['fas', 'calendar-days']\"/>\r\n            Refresh\r\n          </button>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n\r\n          <button type=\"button\" class=\"searchClass\" @click=\"search\">Search</button>\r\n          <div v-if=\"viewerCheck === 'main'\" class=\"excelDivList\">\r\n            <font-awesome-icon :icon=\"['fas', 'file-csv']\" @click=\"exportToExcel\"/>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <!-- Classification List Modal -->\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\">\r\n            <span>{{ bmClassIsBoolen ? 'BM' : 'WBC' }} Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label><input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/>\r\n                <span>ALL</span></label>\r\n              <template v-if=\"!bmClassIsBoolen\">\r\n                <label><input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                  <span>Diff</span></label>\r\n                <label><input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>PBS</span></label>\r\n              </template>\r\n\r\n              <template v-if=\"bmClassIsBoolen\">\r\n                <label><input type=\"checkbox\" value=\"02\" @change=\"changeTestType('02')\" :checked=\"testType === '02'\"/>\r\n                  <span>Wedge</span></label>\r\n                <label><input type=\"checkbox\" value=\"04\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                  <span>Biopsy</span></label>\r\n                <label><input type=\"checkbox\" value=\"06\" @change=\"changeTestType('06')\" :checked=\"testType === '06'\"/>\r\n                  <span>Squash</span></label>\r\n              </template>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <keep-alive>\r\n        <ListTable\r\n            :loadingDelayParents=\"loadingDelayParents\"\r\n            :dbData=\"dbGetData\"\r\n            @loadMoreData=\"loadMoreData\"\r\n            @loadPrevData=\"loadPrevData\"\r\n            @initData=\"initDbData\"\r\n            @selectItem=\"selectItem\"\r\n            @refresh=\"refresh\"\r\n            @checkListItem=\"checkListItem\"\r\n            :selectedItemIdFalse=\"selectedItemIdFalse\"\r\n            :notStartLoading='notStartLoading'\r\n        />\r\n      </keep-alive>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  ref,\r\n} from \"vue\";\r\nimport {detailRunningApi, getRunningApi, removePageAllDataApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {executeExcelCreate} from \"@/common/api/service/excel/excelApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from \"pako\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport router from \"@/router\";\r\n\r\n\r\nconst store = useStore();\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 29);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst prevPage = ref(1);\r\nconst selectedItem = ref<any>({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst prevDataPage = ref('');\r\nconst reqDataPrev = ref('');\r\nconst checkedSelectedItems = ref<any>([]);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst nonWbcTitles = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst eventTriggered = ref(false);\r\nconst loadingDelayParents = ref(false);\r\nconst selectedItemIdFalse = ref(false);\r\nconst notStartLoading = ref(false);\r\nconst barcodeInput = ref<HTMLInputElement | null>(null);\r\nconst isPrintingExcel = ref(false);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\n\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst inputTimeout = ref<any>(null);\r\nconst bufferDelay = 100; // 입력 완료 감지 지연 시간 (ms)\r\nconst inputBuffer = ref('');\r\nconst barcodePattern = /^[0-9A-Z]{8,}$/; // 바코드 패턴 (예: 8자리 이상의 숫자 및 대문자)\r\n\r\nconst isBarcodeInput = (value: any) => {\r\n  return barcodePattern.test(value);\r\n};\r\n\r\n\r\nasync function handleStateVal(data: any) {\r\n  eventTriggered.value = true;\r\n  notStartLoading.value = false;\r\n  await removePageAllDataApi();\r\n  await initDbData().then(() => {\r\n    // loadingDelayParents.value = false;\r\n  });\r\n}\r\n\r\nonBeforeMount(async () => {\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n\r\n})\r\n\r\nonMounted(async () => {\r\n  if (!eventTriggered.value) {\r\n    await initDbData();\r\n    // loadingDelayParents.value = true;\r\n  }\r\n\r\n  document.addEventListener('click', closeClassListBox);\r\n  if (barcodeInput.value) {\r\n    barcodeInput.value.focus();\r\n  }\r\n\r\n  notStartLoading.value = true;\r\n  instance?.appContext.config.globalProperties.$socket.on('stateVal', handleStateVal);\r\n  document.addEventListener('keydown', handleGlobalKeydown);\r\n\r\n});\r\n\r\nconst previousValue = ref('');\r\nlet lastInputTime = Date.now();\r\nconst isBarcodeScannerInput = { value: false };\r\n\r\n// 이벤트 핸들러 함수\r\nconst handleInput = (event: any) => {\r\n  if (!event.data) {\r\n    return;\r\n  }\r\n\r\n  // 현재 입력 시간\r\n  const currentTime = Date.now();\r\n\r\n  // 현재 입력과 마지막 입력 사이의 시간 차이 계산\r\n  const timeDiff = currentTime - lastInputTime;\r\n\r\n  // 바코드 리더기에서 입력된 것인지 확인 (시간 차이가 50ms 이하이면 바코드 리더기에서 입력된 것으로 간주)\r\n  if (timeDiff < 50) {\r\n    isBarcodeScannerInput.value = true;\r\n  } else {\r\n    isBarcodeScannerInput.value = false;\r\n  }\r\n\r\n  // 마지막 입력 시간을 현재 시간으로 업데이트\r\n  lastInputTime = currentTime;\r\n\r\n  // 바코드 리더기 입력이 아니면 이벤트 종료\r\n  if (!isBarcodeScannerInput.value) {\r\n    return;\r\n  }\r\n\r\n  // 입력 버퍼에 추가된 문자\r\n  inputBuffer.value += event.data;\r\n\r\n  // 이전 타이머가 설정되어 있으면 클리어\r\n  if (inputTimeout.value) {\r\n    clearTimeout(inputTimeout.value);\r\n  }\r\n\r\n  // 새로운 타이머 설정\r\n  inputTimeout.value = setTimeout(() => {\r\n    // 입력 완료로 간주\r\n    const trimmedValue = inputBuffer.value.trim();\r\n\r\n    // 입력된 값과 이전 값이 다를 때만 업데이트\r\n    if (trimmedValue !== previousValue.value) {\r\n      searchText.value = trimmedValue;\r\n      previousValue.value = trimmedValue;\r\n    }\r\n\r\n    // 버퍼 초기화\r\n    inputBuffer.value = '';\r\n    search();\r\n  }, bufferDelay);\r\n};\r\n\r\nconst handleGlobalKeydown = (event) => {\r\n  if (router.currentRoute.value.path === '/dataBase') {\r\n    if (event.key === 'Enter' || event.key === 'Tab') {\r\n      setTimeout(() => {\r\n        if (barcodeInput.value) {\r\n          barcodeInput.value.focus();\r\n          searchText.value = searchText.value.trim();\r\n          const trimmedValue = searchText.value.trim();\r\n          if (trimmedValue !== previousValue.value) {\r\n            // 입력된 값과 이전 값이 다를 때만 업데이트\r\n            previousValue.value = trimmedValue;\r\n          }\r\n        }\r\n      }, 10); // 아주 짧은 지연을 주어 바코드 리더기가 입력을 시작할 수 있도록 함\r\n\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst handleEnter = () => {\r\n  if (barcodeInput.value) {\r\n    search();\r\n  }\r\n};\r\n\r\nonBeforeUnmount(() => {\r\n  // instance?.appContext.config.globalProperties.$socket.off('stateVal', handleStateVal);\r\n  document.removeEventListener('click', closeClassListBox);\r\n});\r\n\r\nconst closeClassListBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.filterDivBox');\r\n  const selectButton = document.querySelector('.classificationListBtn');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    classListToggle.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter((item: any) => item.checked).map((item: any) => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  // titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  loadingDelayParents.value = true;\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n    // if (Number(lastSearchParams.page) !== 1) {\r\n    //   const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    //   if (numberOfCalls >= 4) {\r\n    //     await getDbData('mounted', numberOfCalls - 3);\r\n    //     await getDbData('mounted', numberOfCalls - 2);\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 3\r\n    //   } else {\r\n    //     await getDbData('mounted', numberOfCalls - 1);\r\n    //     prevPage.value = numberOfCalls - 1\r\n    //   }\r\n    //   await getDbData('mounted', numberOfCalls);\r\n    // } else {\r\n    //   await getDbData('mounted', 1);\r\n    // }\r\n    // const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    // for (let i = 1; i <= numberOfCalls; i++) {\r\n    //   await getDbData('mounted', i);\r\n    // }\r\n    await getDbData('search');\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    prevPage: prevPage.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n    nrCount: nrCount.value,\r\n    wbcTotal: wbcCountOrder.value,\r\n    wbcInfo: titleItemArr.value,\r\n    testType: testType.value,\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n  localStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n\r\n  if (type === 'search') {\r\n    checkedSelectedItems.value = [];\r\n    selectedItemIdFalse.value = true;\r\n    notStartLoading.value = true;\r\n    page.value = 1;\r\n  } else {\r\n    selectedItemIdFalse.value = false;\r\n    notStartLoading.value = false;\r\n  }\r\n  let pageChange = 0;\r\n  if (type === 'loadMoreData') {\r\n    pageChange = page.value;\r\n  } else if (type === 'loadPrevData') {\r\n    pageChange = prevPage.value;\r\n  } else {\r\n    pageChange = page.value;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? pageChange : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: searchText.value === '' ? formatDate(startDate.value) : '',\r\n    endDay: searchText.value === '' ? formatDate(endDate.value) : '',\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (prevDataPage.value === '') {\r\n    prevDataPage.value = requestData.page;\r\n  }\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    saveLastSearchParams();\r\n    if (page.value === 1 && result.data.data.length === 0) {\r\n      loadingDelayParents.value = false;\r\n      return;\r\n    }\r\n    if (result && result.data) {\r\n      prevDataPage.value = requestData.page;\r\n      reqDataPrev.value = requestData;\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach((item: any) => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        if (titleItem.value.length === 0) {\r\n          titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        }\r\n\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        if (dbGetData.value.length !== 0) {\r\n        //\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n\r\n      }\r\n    }\r\n    if (dbGetData.value.length > 0) {\r\n      await store.dispatch('commonModule/setCommonInfo', {dbListDataFirstNum: Number(dbGetData.value[0].id)})\r\n      await store.dispatch('commonModule/setCommonInfo', {dbListDataLastNum: Number(dbGetData.value[dbGetData.value.length - 1].id)})\r\n    }\r\n\r\n\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  dbGetData.value = [];\r\n  sessionStorage.removeItem('lastSearchParams');\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst loadPrevData = async () => {\r\n\r\n  prevPage.value = loadLastSearchParams().prevPage;\r\n  prevPage.value -= 1;\r\n  if (prevPage.value <= 0) {\r\n    return;\r\n  }\r\n  await getDbData('loadPrevData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst exportToExcel = async () => {\r\n  if (checkedSelectedItems.value.length === 0) {\r\n    await showSuccessAlert('Select an Item')\r\n    return;\r\n  }\r\n  isPrintingExcel.value = true;\r\n\r\n  // RBC Print\r\n  await convertRbcData(checkedSelectedItems.value);\r\n\r\n  // WBC Print\r\n  await excecuteExcel();\r\n}\r\n\r\nconst excecuteExcel = async () => {\r\n  const folderName = checkedSelectedItems.value[0].testType === '01' || checkedSelectedItems.value[0].testType === '04' ? '01_WBC_Classification' : '05_BF_Classification';\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const body = checkedSelectedItems.value.map((checkedItem: any) => {\r\n    return `${path}\\\\${checkedItem.slotId}\\\\${folderName}`\r\n  });\r\n\r\n  try {\r\n    const result: any = await executeExcelCreate(body);\r\n    if (result.data.message === 'Application executed successfully') {\r\n      await showSuccessAlert('Excel created');\r\n    } else {\r\n      await showSuccessAlert('Excel create failed');\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    await showSuccessAlert('Excel create failed');\r\n  } finally {\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst convertRbcData = async (dataList: any) => {\r\n  if (bmClassIsBoolen.value) {\r\n    return;\r\n  }\r\n\r\n  let beforeRbcData = {};\r\n  let afterRbcData = {};\r\n\r\n  for (const item of dataList) {\r\n    // PB & RBC일 경우\r\n    if (item.testType !== '04') {\r\n      continue;\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(item.id));\r\n    await getRbcDegreeData();\r\n    const data = result.data;\r\n    rbcInfoBeforeVal.value = data.rbcInfo.rbcClass;\r\n    rbcInfoAfterVal.value = data.rbcInfoAfter;\r\n    await rbcTotalAndReCount(data);\r\n    await countReAdd();\r\n    await reDegree(rbcInfoBeforeVal.value);\r\n    if (areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)) {\r\n      await reDegree(rbcInfoAfterVal.value);\r\n    }\r\n\r\n    const sendingItem = {before: {}, after: {}};\r\n    const shapeOthersCount: any = await getShapeOthers(data);\r\n\r\n    // Before\r\n    for (const classItem of rbcInfoBeforeVal.value) {\r\n      let beforeItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        beforeItem = {...beforeItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          beforeItem = {...beforeItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        beforeItem = {\r\n          ...beforeItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.doubleNormal + shapeOthersCount.artifact)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      beforeRbcData = {...beforeRbcData, ...{[classItem.categoryNm]: beforeItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        beforeRbcData = {...beforeRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n\r\n    }\r\n\r\n    // After\r\n    for (const classItem of rbcInfoAfterVal.value) {\r\n      let afterItem = {}\r\n      for (const classInfoItem of classItem.classInfo) {\r\n        const classInfoDetailItem = {\r\n          [classInfoItem.classNm]: {\r\n            degree: classInfoItem.degree,\r\n            count: Number(classInfoItem.originalDegree)\r\n          }\r\n        }\r\n        afterItem = {...afterItem, ...classInfoDetailItem}\r\n\r\n        // Add Malaria\r\n        if (classInfoItem.classNm === 'Basophilic Stippling') {\r\n          afterItem = {...afterItem, ...{Malaria: {degree: '-', count: Number(data.rbcInfo.malariaCount)}}}\r\n        }\r\n      }\r\n\r\n      if (classItem.categoryNm === 'Shape') {\r\n        afterItem = {\r\n          ...afterItem, ...{\r\n            Others: {\r\n              degree: '-',\r\n              count: Number(shapeOthersCount.doubleNormal + shapeOthersCount.artifact)\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      afterRbcData = {...afterRbcData, ...{[classItem.categoryNm]: afterItem}}\r\n\r\n      // Add Others\r\n      if (classItem.categoryNm === 'Inclusion Body') {\r\n        afterRbcData = {...afterRbcData, ...{Others: {Platelet: {degree: '-', count: Number(data.rbcInfo.pltCount)}}}}\r\n      }\r\n    }\r\n    sendingItem.before = beforeRbcData;\r\n    sendingItem.after = afterRbcData;\r\n\r\n    await createRbcJson(data.slotId, sendingItem);\r\n  }\r\n}\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst createRbcJson = async (slotId: string, sendingData: any) => {\r\n  const jsonString = JSON.stringify(sendingData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `RBC.json`);\r\n  const path = selectedItem.value?.img_drive_root_path !== '' && selectedItem.value?.img_drive_root_path ? selectedItem.value?.img_drive_root_path : iaRootPath.value;\r\n  const filePath = `${path}/${slotId}/RBC_Analysis.json`\r\n  try {\r\n    await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    showSuccessAlert('Excel print failed');\r\n    isPrintingExcel.value = false;\r\n  }\r\n}\r\n\r\nconst rbcTotalAndReCount = async (selectItem: any) => {\r\n  const path = selectItem?.img_drive_root_path !== '' && selectItem?.img_drive_root_path ? selectItem?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItem?.slotId}/03_RBC_Classification/${selectItem?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItem?.slotId}/03_RBC_Classification/${selectItem?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if (el.categoryId === '03') {\r\n      for (const classItem of el.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          countArtifact.value += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          countDoubleNormal.value += 1\r\n        }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoAfterVal.value || !Array.isArray(rbcInfoAfterVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoAfterVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  /** TODO\r\n   * json 파일을 변경하기 때문에 초기 before 값을 저장하는 곳이 따로 필요하다.\r\n   * */\r\n      // for (const category of rbcInfoBeforeVal.value) {\r\n      //   for (const classItem of category.classInfo) {\r\n      //     let count = 0;\r\n      //\r\n      //     for (const afterCategory of rbcInfoPathAfter.value) {\r\n      //       for (const afterClassItem of afterCategory.classInfo) {\r\n      //         if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n      //           count++;\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //\r\n      //     classItem.originalDegree = count;\r\n      //   }\r\n      // }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal;\r\n};\r\n\r\nconst getShapeOthers = async (selectItems: any) => {\r\n  const path = selectItems.img_drive_root_path !== '' && selectItems.img_drive_root_path ? selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.slotId}/03_RBC_Classification/${selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (bmClassIsBoolen.value) return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if (!Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst dateRefresh = () => {\r\n  startDate.value = thirtyDaysAgo\r\n  endDate.value = new Date();\r\n  search();\r\n}\r\n\r\nconst checkListItem = (items: any) => {\r\n  checkedSelectedItems.value = items;\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, normalizeStyle as _normalizeStyle, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"createdRbc\" }\nconst _hoisted_2 = { class: \"mt1 flexSpaceBetween\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1)\nconst _hoisted_4 = { class: \"leftWbcInfo rbcClass\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"categoryNm\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = { class: \"classNmRbc\" }\nconst _hoisted_10 = [\"onClick\"]\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = [\"value\"]\nconst _hoisted_13 = { key: 0 }\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = { key: 4 }\nconst _hoisted_16 = { class: \"rbcPercent\" }\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { key: 4 }\nconst _hoisted_19 = { class: \"rbcPercent mr1\" }\nconst _hoisted_20 = { key: 4 }\nconst _hoisted_21 = { class: \"categories rbcClass\" }\nconst _hoisted_22 = { class: \"categoryNm\" }\nconst _hoisted_23 = { class: \"classNmRbc\" }\nconst _hoisted_24 = { key: 0 }\nconst _hoisted_25 = { class: \"degree analysis\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1)\n\nimport {ref, watch, onMounted, computed, getCurrentInstance} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'selectItems', 'type', 'allCheckClear', 'isCommitChanged', 'notCanvasClickVal', 'currentRbcPageNumber'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = __props;\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst countArtifact = ref(0);\r\nconst countDoubleNormal = ref(0);\r\nconst rbcResponseOldArr: any = ref([]);\r\nconst rbcImagePageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  rbcImagePageNumber.value = 0;\r\n  const { path } = router.currentRoute.value;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo.maxRbcCount;\r\n  submitState.value = props.selectItems?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n});\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => props.currentRbcPageNumber, async (newRbcPageNumber) => {\r\n  rbcImagePageNumber.value = newRbcPageNumber;\r\n  await rbcTotalAndReCount(newRbcPageNumber)\r\n})\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  submitState.value = props.selectItems?.submitState;\r\n  await afterChange(newItem);\r\n  rightClickItemSet();\r\n  allCheckType.value = true;\r\n});\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  if (!props.selectItems?.rbcInfo) {\r\n    return;\r\n  }\r\n  const processItems = props.selectItems?.rbcInfo.rbcClass || props.selectItems?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(() => props.rbcInfo, async (newItem) => {\r\n  await afterChange(newItem);\r\n  await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n  await countReAdd();\r\n  await getRbcDegreeData();\r\n  await reDegree(rbcInfoBeforeVal.value);\r\n  if(areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)){\r\n    await reDegree(rbcInfoAfterVal.value);\r\n  }\r\n});\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n  allCheckType.value = true;\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n      await reDegree(rbcInfoBeforeVal.value);\r\n      if(areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)){\r\n        await reDegree(rbcInfoAfterVal.value);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst handleClick = (outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any, value: string) => {\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n  clickChangeSens(classInfo.classNm, 'Others', category.categoryId, classInfo.classId);\r\n};\r\n\r\nfunction handleLiClick(outerIndex: number, innerIndex: any, classIndex: any, classInfo: any, category: any) {\r\n  toggleCheckbox(outerIndex, innerIndex, classIndex, classInfo, category);\r\n  clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId);\r\n}\r\n\r\nfunction toggleCheckbox(outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any) {\r\n  const value = `${outerIndex}-${innerIndex}-${classIndex}`;\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async (pageNumber: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  rbcResponseOldArr.value = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    console.log('rbcResponseOldArr.value', rbcResponseOldArr.value);\r\n    for (const rbcItem of rbcResponseOldArr.value.data[pageNumber].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if (el.categoryId === '03') {\r\n      for (const classItem of el.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          countArtifact.value += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          countDoubleNormal.value += 1\r\n        }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value = Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage: any = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  if (isNaN(percentage)) {\r\n    return '-';\r\n  }\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = async () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  if (!Array.isArray(rbcData)) {\r\n    return;\r\n  }\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n  sliderValue.value = 50;\r\n};\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: props.selectItems?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') {\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, false);\r\n  }\r\n\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  let rbcData: any = {};\r\n  if (newItem) {\r\n    rbcData = newItem;\r\n  } else {\r\n    rbcData = props.selectItems;\r\n  }\r\n\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  rbcInfoAfterVal.value = props.selectItems?.rbcInfoAfter ? props.selectItems.rbcInfoAfter : rbcInfoBeforeVal.value;\r\n\r\n  // rbcInfoAfterVal.value = areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value) ? rbcInfoBeforeVal.value : rbcInfoAfterVal.value;\r\n\r\n\r\n  // Report 화면에서 RBC Classification 동기화 문제로 추가\r\n  if (props.type === 'report') {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    rbcInfoAfterVal.value = result.data.rbcInfoAfter;\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: result.data.rbcInfoAfter});\r\n  }\r\n  await classChange();\r\n}\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  if (props.notCanvasClickVal) {\r\n    return;\r\n  }\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n    if (item.categoryId === '05') {\r\n      allCheckboxes.push({\r\n        classNm: 'Malaria',\r\n        categoryId: '05',\r\n        classId: '03'\r\n      });\r\n    }\r\n  }\r\n  allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (props.notCanvasClickVal) {\r\n    return;\r\n  }\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await resRunningItem(updatedRuningInfo, false, 'degree');\r\n\r\n\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any, degree?: any) => {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n        const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if(degree === 'degree'){\r\n        await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n        await countReAdd();\r\n        await getRbcDegreeData();\r\n        // await reDegree(rbcInfoBeforeVal.value);\r\n        // await reDegree(rbcInfoAfterVal.value);\r\n        // rightClickItemSet();\r\n        // allCheckType.value = true;\r\n      }\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  if (submitState.value === 'Submit') {\r\n    return;\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if(!Array.isArray(rbcInfoBeforeVal.value)){\r\n    return;\r\n  }\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Creating a new RBC classification ...\", 512), [\n      [_vShow, jsonIsBool.value]\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"ul\", _hoisted_4, [\n          _createElementVNode(\"li\", _hoisted_5, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'comment-dots'],\n              onClick: memoOpen\n            }),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"memoModalBtn\",\n                    onClick: memoChange\n                  }, \"OK\"),\n                  _createElementVNode(\"button\", {\n                    class: \"memoModalBtn\",\n                    onClick: memoCancel\n                  }, \"CANCEL\")\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"li\", {\n            onClick: commitConfirmed,\n            class: _normalizeClass({'submitted': submitState.value === 'Submit'})\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoBeforeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories rbcClass\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_7, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", {\n                      key: 0,\n                      class: \"mb1 liTitle\",\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, \"Category\", 4))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", {\n                  style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                }, [\n                  _createElementVNode(\"span\", {\n                    style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                  }, _toDisplayString(getCategoryName(category)), 5),\n                  (getCategoryName(category) === 'Shape' && __props.type !== 'report')\n                    ? (_openBlock(), _createElementBlock(\"button\", {\n                        key: 0,\n                        class: \"degreeAllCheckBtn\",\n                        onClick: ($event: any) => (toggleAll(allCheckType.value, category))\n                      }, _toDisplayString(allCheckType.value ? 'All Check' : 'All Uncheck'), 9, _hoisted_8))\n                    : _createCommentVNode(\"\", true)\n                ], 4)\n              ]),\n              _createElementVNode(\"ul\", _hoisted_9, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", {\n                      key: 0,\n                      class: \"mb1 liTitle\",\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, \"Class\", 4))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    _createElementVNode(\"li\", {\n                      onClick: ($event: any) => (handleLiClick(outerIndex, innerIndex, classIndex, classInfo, category)),\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, [\n                      ((category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body') && __props.type !== 'report' && classInfo?.classNm !== 'Poikilocyte')\n                        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              value: `${outerIndex}-${innerIndex}-${classIndex}`,\n                              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkedClassIndices).value = $event))\n                            }, null, 8, _hoisted_12), [\n                              [_vShow, !except.value],\n                              [_vModelCheckbox, checkedClassIndices.value]\n                            ])\n                          ]))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"span\", {\n                        style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                      }, _toDisplayString(classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm), 5)\n                    ], 12, _hoisted_10),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 0,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, [\n                          _createElementVNode(\"span\", {\n                            style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                          }, \"Others\", 4)\n                        ], 4))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 1,\n                          onClick: _cache[4] || (_cache[4] = ($event: any) => (handleClick(0, 0, 2, { classNm: 'Malaria', classId: '03' }, { categoryId: '05' }, '9-9-2'))),\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, [\n                          (__props.type !== 'report')\n                            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n                                _withDirectives(_createElementVNode(\"input\", {\n                                  type: \"checkbox\",\n                                  value: \"9-9-2\",\n                                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((checkedClassIndices).value = $event)),\n                                  onChange: _cache[3] || (_cache[3] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                                }, null, 544), [\n                                  [_vShow, !except.value],\n                                  [_vModelCheckbox, checkedClassIndices.value]\n                                ])\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          _createElementVNode(\"span\", {\n                            style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                          }, \"Malaria\", 4)\n                        ], 4))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_14, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", {\n                      key: 0,\n                      class: \"mb1 liTitle\",\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, \"Degree\", 4))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    ((classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05'))\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 0,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, [\n                          (classInfo.classId !== '01' || category.categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", {\n                                key: 0,\n                                class: \"rbcSapn\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-up'],\n                                    key: degreeIndex,\n                                    class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ], 4))\n                            : _createCommentVNode(\"\", true),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", {\n                                key: 1,\n                                class: \"rbcSapnDown\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-down'],\n                                    key: degreeIndex + '-down',\n                                    class: _normalizeClass({\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ], 4))\n                            : _createCommentVNode(\"\", true)\n                        ], 4))\n                      : (_openBlock(), _createElementBlock(\"li\", {\n                          key: 1,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", {\n                                key: 0,\n                                class: \"rbcSapn\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                _createVNode(_component_font_awesome_icon, { icon: ['fac', 'half-circle-up'] })\n                              ], 4))\n                            : (_openBlock(), _createElementBlock(\"span\", {\n                                key: 1,\n                                class: \"rbcSapn\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fac', 'half-circle-up'],\n                                  class: \"degreeActive\"\n                                })\n                              ], 4)),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", {\n                                key: 2,\n                                class: \"rbcSapnDown\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex],'0', true)),\n                                  icon: ['fac', 'half-circle-down']\n                                }, null, 8, [\"onClick\"])\n                              ], 4))\n                            : (_openBlock(), _createElementBlock(\"span\", {\n                                key: 3,\n                                class: \"rbcSapnDown\",\n                                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                              }, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], '1', true) ),\n                                  icon: ['fac', 'half-circle-down'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ], 4))\n                        ], 4)),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 2,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, \" - \", 4))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 3,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, \" - \", 4))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\"\n                            }, \" Total \"), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_16, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", {\n                      key: 0,\n                      class: \"mb1 liTitle\",\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, \"count\", 4))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 0,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(Number(classInfo?.originalDegree) || 0), 5))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, \"-\")),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 2,\n                          class: \"defaultText\",\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(Number(countArtifact.value + countDoubleNormal.value) || 0), 5))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && category?.categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 3,\n                          class: \"defaultText\",\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(Number(malariaCount.value) || 0), 5))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\",\n                              style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                            }, _toDisplayString(Number(sizeChromiaTotal.value) || 0), 5), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"div\", {\n                          key: 5,\n                          class: \"underline\",\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(Number(shapeBodyTotal.value) || 0), 5))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_19, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", {\n                      key: 0,\n                      class: \"mb1 liTitle\",\n                      style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                    }, \"percent\", 4))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    (classInfo?.classNm !== 'Poikilocyte')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 0,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(percentageChange(Number(classInfo?.originalDegree)) || 0), 5))\n                      : (_openBlock(), _createElementBlock(\"li\", {\n                          key: 1,\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, \"-\", 4)),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '03')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 2,\n                          class: \"defaultText\",\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(percentageChange(countArtifact.value + countDoubleNormal.value) || 0), 5))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1 && rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                      ? (_openBlock(), _createElementBlock(\"li\", {\n                          key: 3,\n                          class: \"defaultText\",\n                          style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                        }, _toDisplayString(percentageChange(malariaCount.value) || 0), 5))\n                      : _createCommentVNode(\"\", true),\n                    (classIndex === category.classInfo.length - 1)\n                      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [\n                          (_openBlock(), _createElementBlock(_Fragment, null, _renderList(['01', '02', '05'], (categoryId) => {\n                            return _withDirectives(_createElementVNode(\"div\", {\n                              key: categoryId,\n                              class: \"underline\",\n                              style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n                            }, \" 100% \", 4), [\n                              [_vShow, rbcInfoAfterVal.value[innerIndex].categoryId === categoryId]\n                            ])\n                          }), 64))\n                        ]))\n                      : _createCommentVNode(\"\", true)\n                  ], 64))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_21, [\n          _createElementVNode(\"ul\", _hoisted_22, [\n            _createElementVNode(\"li\", {\n              style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n            }, \"Others\", 4)\n          ]),\n          _createElementVNode(\"ul\", _hoisted_23, [\n            _createElementVNode(\"li\", {\n              onClick: _cache[7] || (_cache[7] = ($event: any) => (handleClick(0, 0, 1, { classNm: 'Platelet', classId: '01' }, { categoryId: '04' }, '9-9-1'))),\n              style: {\"padding-top\":\"0\"}\n            }, [\n              (__props.type !== 'report')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      value: \"9-9-1\",\n                      \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((checkedClassIndices).value = $event)),\n                      onChange: _cache[6] || (_cache[6] = ($event: any) => (updateClassInfoArr('Platelet', $event.target.checked, '04', '01')))\n                    }, null, 544), [\n                      [_vShow, !except.value],\n                      [_vModelCheckbox, checkedClassIndices.value]\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"span\", {\n                style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n              }, \"Platelet\", 4)\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_25, [\n            _createElementVNode(\"li\", {\n              style: _normalizeStyle(__props.type === 'report' && 'cursor: default;')\n            }, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 5)\n          ]),\n          _hoisted_26,\n          _hoisted_27\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <!--  {{ jsonIsBool }}-->\r\n  <div v-show=\"jsonIsBool\" class=\"createdRbc\"> Creating a new RBC classification ...</div>\r\n  <div>\r\n    <div class=\"mt1 flexSpaceBetween\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo rbcClass\">\r\n        <li style=\"position: relative\">\r\n          <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button class=\"memoModalBtn\" @click=\"memoChange\">OK</button>\r\n            <button class=\"memoModalBtn\" @click=\"memoCancel\">CANCEL</button>\r\n          </div>\r\n        </li>\r\n        <li @click=\"commitConfirmed\" :class=\"{'submitted': submitState === 'Submit'}\">\r\n          <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoBeforeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories rbcClass\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" :style=\"type === 'report' && 'cursor: default;'\">Category</li>\r\n            <li  :style=\"type === 'report' && 'cursor: default;'\">\r\n              <span :style=\"type === 'report' && 'cursor: default;'\">{{ getCategoryName(category) }}</span>\r\n              <button class=\"degreeAllCheckBtn\" v-if=\"getCategoryName(category) === 'Shape' && type !== 'report'\"\r\n                      @click=\"toggleAll(allCheckType, category)\">\r\n                {{ allCheckType ? 'All Check' : 'All Uncheck' }}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" :style=\"type === 'report' && 'cursor: default;'\">Class</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"handleLiClick(outerIndex, innerIndex, classIndex, classInfo, category)\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                <div\r\n                    v-if=\"(category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body') && type !== 'report' && classInfo?.classNm !== 'Poikilocyte'\">\r\n                  <input type=\"checkbox\" :value=\"`${outerIndex}-${innerIndex}-${classIndex}`\"\r\n                         v-show=\"!except\"\r\n                         v-model=\"checkedClassIndices\">\r\n                </div>\r\n                <span :style=\"type === 'report' && 'cursor: default;'\">\r\n                  {{ classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm }}\r\n                </span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                <span :style=\"type === 'report' && 'cursor: default;'\">Others</span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '05'\"\r\n                  @click=\"handleClick(0, 0, 2, { classNm: 'Malaria', classId: '03' }, { categoryId: '05' }, '9-9-2')\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                <div v-if=\"type !== 'report'\">\r\n                  <input type=\"checkbox\"\r\n                         v-show=\"!except\"\r\n                         value=\"9-9-2\"\r\n                         v-model=\"checkedClassIndices\"\r\n                         @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\">\r\n                </div>\r\n                <span :style=\"type === 'report' && 'cursor: default;'\">Malaria</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" :style=\"type === 'report' && 'cursor: default;'\">Degree</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"(classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05')\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                <span v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\" class=\"rbcSapn\"\r\n                      :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n                <span\r\n                    v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                    class=\"rbcSapnDown\"\r\n                    :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex + '-down'\"\r\n                      :class=\"{\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n\r\n              </li>\r\n              <li v-else\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                <span v-if=\"classInfo.degree === '0'\" class=\"rbcSapn\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapn\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n                <span v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree === '0'\" class=\"rbcSapnDown\"\r\n                      :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex],'0', true)\"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapnDown\"\r\n                      :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], '1', true) \"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '03'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                -\r\n              </li>\r\n              <li v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                -\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\">\r\n                  Total\r\n                </div>\r\n              </div>\r\n            </template>\r\n\r\n          </ul>\r\n          <ul class=\"rbcPercent\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" :style=\"type === 'report' && 'cursor: default;'\">count</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                {{ Number(classInfo?.originalDegree) || 0 }}\r\n              </li>\r\n              <li v-else>-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                {{ Number(countArtifact + countDoubleNormal) || 0 }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '05'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                {{ Number(malariaCount) || 0 }}\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\"\r\n                     :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  {{ Number(sizeChromiaTotal) || 0 }}\r\n                </div>\r\n              </div>\r\n              <div class=\"underline\"\r\n                   v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                   :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                {{ Number(shapeBodyTotal) || 0 }}\r\n              </div>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"rbcPercent mr1\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" :style=\"type === 'report' && 'cursor: default;'\">percent</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo?.classNm !== 'Poikilocyte'\" :style=\"type === 'report' && 'cursor: default;'\">\r\n                {{ percentageChange(Number(classInfo?.originalDegree)) || 0 }}\r\n              </li>\r\n              <li v-else :style=\"type === 'report' && 'cursor: default;'\">-</li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '03'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                {{ percentageChange(countArtifact + countDoubleNormal) || 0 }}\r\n              </li>\r\n              <li class=\"defaultText\"\r\n                  v-if=\"classIndex === category.classInfo.length - 1 && rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                  :style=\"type === 'report' && 'cursor: default;'\"\r\n              >\r\n                {{ percentageChange(malariaCount) || 0 }}\r\n              </li>\r\n              <div v-if=\"classIndex === category.classInfo.length - 1\">\r\n                <div v-for=\"categoryId in ['01', '02', '05']\" :key=\"categoryId\" class=\"underline\"\r\n                     v-show=\"rbcInfoAfterVal[innerIndex].categoryId === categoryId\"\r\n                     :style=\"type === 'report' && 'cursor: default;'\"\r\n                >\r\n                  100%\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </ul>\r\n\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories rbcClass\">\r\n        <ul class=\"categoryNm\">\r\n          <li :style=\"type === 'report' && 'cursor: default;'\">Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"handleClick(0, 0, 1, { classNm: 'Platelet', classId: '01' }, { categoryId: '04' }, '9-9-1')\"\r\n              style=\"padding-top: 0;\">\r\n            <div v-if=\"type !== 'report'\">\r\n              <input type=\"checkbox\"\r\n                     value=\"9-9-1\"\r\n                     v-show=\"!except\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Platelet', $event.target.checked, '04', '01')\">\r\n            </div>\r\n            <span :style=\"type === 'report' && 'cursor: default;'\">Platelet</span>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li :style=\"type === 'report' && 'cursor: default;'\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n        </ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n      </div>\r\n    </div>\r\n    <!--  RBC 감도 조절 기능  -->\r\n    <!--    <div class=\"sensitivityDiv\" v-if=\"type !== 'report'\">-->\r\n    <!--      <select v-model=\"selectedClass\" @change=\"classChange\">-->\r\n    <!--        <option v-for=\"(item) in rightClickItem\" :key=\"item.classNm\">-->\r\n    <!--          {{ item.classNm }}-->\r\n    <!--        </option>-->\r\n    <!--      </select>-->\r\n    <!--      <SliderBar v-model=\"sliderValue\" :min=\"0\" :max=\"100\" leftText=\"less\" rightText=\"more\"/>-->\r\n    <!--      <button class=\"degreeBtn\" type=\"button\" @click=\"sensRbcReJsonSend\">Ok</button>-->\r\n    <!--    </div>-->\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits, getCurrentInstance} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'allCheckClear', 'isCommitChanged', 'notCanvasClickVal', 'currentRbcPageNumber']);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount: any = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst resetRbcArr = computed(() => store.state.commonModule.resetRbcArr);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst bodyTotal = ref(0);\r\nconst shapeTotal = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst rbcReDataCheck = computed(() => store.state.commonModule.rbcReDataCheck);\r\nconst rbcSendtimerId = ref<number | null>(null);\r\nlet timeoutId: any;\r\nconst submitState = ref('');\r\nconst projectType = ref(window.PROJECT_TYPE);\r\nconst countArtifact = ref(0);\r\nconst countDoubleNormal = ref(0);\r\nconst rbcResponseOldArr: any = ref([]);\r\nconst rbcImagePageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  rbcImagePageNumber.value = 0;\r\n  const { path } = router.currentRoute.value;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  pltCount.value = props.selectItems?.rbcInfo.pltCount;\r\n  malariaCount.value = props.selectItems?.rbcInfo.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  maxRbcCount.value = props.selectItems?.rbcInfo.maxRbcCount;\r\n  submitState.value = props.selectItems?.submitState;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n  rightClickItemSet();\r\n});\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  submitState.value = 'Submit';\r\n})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n}, {deep: true})\r\n\r\nwatch(() => props.currentRbcPageNumber, async (newRbcPageNumber) => {\r\n  rbcImagePageNumber.value = newRbcPageNumber;\r\n  await rbcTotalAndReCount(newRbcPageNumber)\r\n})\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n  memo.value = props.selectItems?.rbcMemo;\r\n  submitState.value = props.selectItems?.submitState;\r\n  await afterChange(newItem);\r\n  rightClickItemSet();\r\n  allCheckType.value = true;\r\n});\r\n\r\nconst rightClickItemSet = () => {\r\n  rightClickItem.value = [];\r\n  if (!props.selectItems?.rbcInfo) {\r\n    return;\r\n  }\r\n  const processItems = props.selectItems?.rbcInfo.rbcClass || props.selectItems?.rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if (classInfo.classNm !== 'Normal') {\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n}\r\n\r\n\r\nwatch(() => props.rbcInfo, async (newItem) => {\r\n  await afterChange(newItem);\r\n  await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n  await countReAdd();\r\n  await getRbcDegreeData();\r\n  await reDegree(rbcInfoBeforeVal.value);\r\n  if(areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)){\r\n    await reDegree(rbcInfoAfterVal.value);\r\n  }\r\n});\r\n\r\nwatch(() => resetRbcArr, async (newItem) => {\r\n  if (newItem) {\r\n    await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: false});\r\n    await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n    await countReAdd();\r\n  }\r\n}, {deep: true})\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n  allCheckType.value = true;\r\n}, {deep: true})\r\n\r\n\r\nwatch(() => rbcReData, async (newItem) => {\r\n  if (newItem) {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(async () => {\r\n      jsonIsBool.value = false;\r\n      // await afterChange();\r\n      await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n      await countReAdd();\r\n      await getRbcDegreeData();\r\n      await reDegree(rbcInfoBeforeVal.value);\r\n      if(areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value)){\r\n        await reDegree(rbcInfoAfterVal.value);\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n}, {deep: true});\r\n\r\nconst handleClick = (outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any, value: string) => {\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n  clickChangeSens(classInfo.classNm, 'Others', category.categoryId, classInfo.classId);\r\n};\r\n\r\nfunction handleLiClick(outerIndex: number, innerIndex: any, classIndex: any, classInfo: any, category: any) {\r\n  toggleCheckbox(outerIndex, innerIndex, classIndex, classInfo, category);\r\n  clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId);\r\n}\r\n\r\nfunction toggleCheckbox(outerIndex: number, innerIndex: number, classIndex: number, classInfo: any, category: any) {\r\n  const value = `${outerIndex}-${innerIndex}-${classIndex}`;\r\n  const isChecked = checkedClassIndices.value.includes(value);\r\n\r\n  if (isChecked) {\r\n    checkedClassIndices.value = checkedClassIndices.value.filter((item: any) => item !== value);\r\n  } else {\r\n    checkedClassIndices.value.push(value);\r\n  }\r\n\r\n  updateClassInfoArr(classInfo.classNm, !isChecked, category.categoryId, classInfo.classId);\r\n}\r\n\r\nconst rbcTotalAndReCount = async (pageNumber: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  rbcResponseOldArr.value = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    console.log('rbcResponseOldArr.value', rbcResponseOldArr.value);\r\n    for (const rbcItem of rbcResponseOldArr.value.data[pageNumber].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            el.index === newRbcData.index\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = rbcResponseOldArr.value?.data[pageNumber].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeTotalVal = 0;\r\n  let inclusionBody = 0;\r\n  countArtifact.value = 0;\r\n  countDoubleNormal.value = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    if (el.categoryId === '03') {\r\n      for (const classItem of el.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          countArtifact.value += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          countDoubleNormal.value += 1\r\n        }\r\n      }\r\n    }\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = el.classInfo.length;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = el.classInfo.length;\r\n        break;\r\n      case '03':\r\n        shapeTotalVal = el.classInfo.length;\r\n        break;\r\n      case '05':\r\n        inclusionBody = el.classInfo.length;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total);\r\n  sizeChromiaTotal.value = Number(total);\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  bodyTotal.value = Number(inclusionBody);\r\n  shapeTotal.value = Number(shapeTotalVal);\r\n  shapeBodyTotal.value = Number(shapeTotalVal) + Number(inclusionBody);\r\n}\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage: any = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  if (isNaN(percentage)) {\r\n    return '-';\r\n  }\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = async () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  if (!Array.isArray(rbcData)) {\r\n    return;\r\n  }\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n  sliderValue.value = 50;\r\n};\r\nconst resetTimer = () => {\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearTimeout(rbcSendtimerId.value);\r\n  }\r\n};\r\n\r\n\r\nwatch(rbcReDataCheck, (newVal) => {\r\n  resetTimer();\r\n\r\n  if (rbcSendtimerId.value !== null) {\r\n    clearInterval(rbcSendtimerId.value);\r\n  }\r\n\r\n  rbcSendtimerId.value = window.setInterval(() => {\r\n    if (newVal) {\r\n      sensRbcReJsonSend();\r\n    }\r\n  }, 800);\r\n}, {deep: true});\r\n\r\n\r\nconst sensRbcReJsonSend = async () => {\r\n  jsonIsBool.value = true;\r\n  await rbcInfoAfterSensitivity(selectedClass.value);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  const payload = {\r\n    jobCmd: 'RBC_RE_CLASSIFICATION',\r\n    sensitivity: Number(sliderValue.value),\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    reqUserId: userModuleDataGet.value.userId || '',\r\n    className: selectedClass.value.replace(/\\s/g, ''),\r\n    slotId: props.selectItems?.slotId,\r\n    anyWay: 'true',\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if (classNm === 'Normal') {\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\n\r\nconst areDegreesIdentical = (arr1: any[], arr2: any[]): boolean => {\r\n\r\n  // 배열 항목 비교\r\n  for (let i = 0; i < arr1.length; i++) {\r\n    const item1 = arr1[i];\r\n    const item2 = arr2[i];\r\n\r\n    for (let j = 0; j < item1.classInfo.length; j++) {\r\n      const classInfo1 = item1.classInfo[j];\r\n      const classInfo2 = item2.classInfo[j];\r\n\r\n      // degree 값 비교\r\n      if (String(classInfo1.degree) !== String(classInfo2.degree)) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n\r\nconst afterChange = async (newItem?: any) => {\r\n\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, false);\r\n  }\r\n\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  let rbcData: any = {};\r\n  if (newItem) {\r\n    rbcData = newItem;\r\n  } else {\r\n    rbcData = props.selectItems;\r\n  }\r\n\r\n\r\n  rbcInfoBeforeVal.value = rbcData.rbcInfo?.rbcClass ? rbcData.rbcInfo.rbcClass : rbcData;\r\n  rbcInfoAfterVal.value = props.selectItems?.rbcInfoAfter ? props.selectItems.rbcInfoAfter : rbcInfoBeforeVal.value;\r\n\r\n  // rbcInfoAfterVal.value = areDegreesIdentical(rbcInfoBeforeVal.value, rbcInfoAfterVal.value) ? rbcInfoBeforeVal.value : rbcInfoAfterVal.value;\r\n\r\n\r\n  // Report 화면에서 RBC Classification 동기화 문제로 추가\r\n  if (props.type === 'report') {\r\n    const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n    rbcInfoAfterVal.value = result.data.rbcInfoAfter;\r\n\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: result.data.rbcInfoAfter});\r\n  }\r\n  await classChange();\r\n}\r\nconst countReAdd = async () => {\r\n  // rbcInfoBeforeVal.value와 rbcInfoPathAfter.value가 정의되어 있는지 확인\r\n  if (!rbcInfoBeforeVal.value || !Array.isArray(rbcInfoBeforeVal.value)) {\r\n    return;\r\n  }\r\n\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    return;\r\n  }\r\n\r\n\r\n  for (const category of rbcInfoBeforeVal.value) {\r\n    for (const classItem of category.classInfo) {\r\n      let count = 0;\r\n\r\n      for (const afterCategory of rbcInfoPathAfter.value) {\r\n        for (const afterClassItem of afterCategory.classInfo) {\r\n          if (afterClassItem.classNm.replace(/\\s+/g, '') === classItem.classNm.replace(/\\s+/g, '') && afterCategory.categoryId === category.categoryId) {\r\n            count++;\r\n          }\r\n        }\r\n      }\r\n\r\n      classItem.originalDegree = count;\r\n    }\r\n  }\r\n\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  //\r\n\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfterData,\r\n  };\r\n\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  if (props.notCanvasClickVal) {\r\n    return;\r\n  }\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n    if (item.categoryId === '05') {\r\n      allCheckboxes.push({\r\n        classNm: 'Malaria',\r\n        categoryId: '05',\r\n        classId: '03'\r\n      });\r\n    }\r\n  }\r\n  allCheckboxes.push({\r\n    classNm: 'Platelet',\r\n    categoryId: '04',\r\n    classId: '01'\r\n  });\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (props.notCanvasClickVal) {\r\n    return;\r\n  }\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\nwatch(rbcReData, async (newItem, oldItem) => {\r\n  if (newItem) {\r\n    updataClassInfoaArr();\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\nconst updataClassInfoaArr = () => {\r\n  emits('classInfoArrUpdateRe', classInfoArr.value);\r\n}\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report') {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcInfoAfterData: rbcInfoAfter});\r\n  await resRunningItem(updatedRuningInfo, false, 'degree');\r\n\r\n\r\n};\r\n\r\nconst memoOpen = () => {\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n\r\n  const enterAppliedRbcMemo = memo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    rbcMemo: enterAppliedRbcMemo,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any, degree?: any) => {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n        const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if(degree === 'degree'){\r\n        await rbcTotalAndReCount(rbcImagePageNumber.value);\r\n        await countReAdd();\r\n        await getRbcDegreeData();\r\n        // await reDegree(rbcInfoBeforeVal.value);\r\n        // await reDegree(rbcInfoAfterVal.value);\r\n        // rightClickItemSet();\r\n        // allCheckType.value = true;\r\n      }\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  if (submitState.value === 'Submit') {\r\n    return;\r\n  }\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst reDegree = async (rbcInfoArray: any) => {\r\n  if (projectType.value === 'bm') return;\r\n\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n  if(!Array.isArray(rbcInfoBeforeVal.value)){\r\n    return;\r\n  }\r\n  rbcInfoArray.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) {\r\n            setDegree('0');\r\n            return;\r\n          }\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) {\r\n            setDegree('1');\r\n            return;\r\n          }\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) {\r\n            setDegree('2');\r\n            return;\r\n          }\r\n          // 3\r\n          else {\r\n            setDegree('3');\r\n            return;\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  rbcInfoArray.forEach((rbcCategory) => {\r\n    rbcCategory.classInfo.forEach((rbcClass) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request, '', false, window.VIEWER_CHECK);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"malariaTitle\" }, \"Malaria O\", -1)\nconst _hoisted_3 = [\"src\", \"onClick\", \"onDragstart\", \"onDblclick\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"malariaTitle\" }, \"Malaria X\", -1)\nconst _hoisted_5 = [\"src\", \"onClick\", \"onDragstart\", \"onDblclick\"]\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\nconst _hoisted_9 = { class: \"wbcModal\" }\nconst _hoisted_10 = { class: \"wbcModalImageContent\" }\nconst _hoisted_11 = [\"src\"]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst selectedImageSrc = ref('');\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\nconst modalOpen = ref(false);\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n}\r\n\r\nconst handleOpenModal = (type: string, malaria: any, index: number) => {\r\n  if (type === 'malaria') {\r\n    selectedImageSrc.value = malaria;\r\n    modalOpen.value = true;\r\n  }\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (imageExist.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", null, [\n            _hoisted_2,\n            _createElementVNode(\"div\", {\n              class: \"malariaWrapper\",\n              onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n              onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"]))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n                return (_openBlock(), _createElementBlock(\"img\", {\n                  key: 'malaria-' + index,\n                  src: malaria,\n                  class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                  alt: \"malaria-image\",\n                  onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                  onDragstart: ($event: any) => (onDragStart('malaria', malaria, index)),\n                  onDblclick: ($event: any) => (handleOpenModal('malaria', malaria, index))\n                }, null, 42, _hoisted_3))\n              }), 128))\n            ], 32)\n          ]),\n          _createElementVNode(\"div\", null, [\n            _hoisted_4,\n            _createElementVNode(\"div\", {\n              class: \"malariaWrapper\",\n              onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n              onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"]))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n                return (_openBlock(), _createElementBlock(\"img\", {\n                  key: 'noMalaria-' + index,\n                  src: noMalaria,\n                  class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                  alt: \"noMalaria-image\",\n                  onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                  onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index)),\n                  onDblclick: ($event: any) => (handleOpenModal('malaria', noMalaria, index))\n                }, null, 42, _hoisted_5))\n              }), 128))\n            ], 32)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, _hoisted_8)),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"div\", {\n        class: \"wbc-modal-content\",\n        onClick: outerClickCloseModal\n      }, [\n        _createElementVNode(\"span\", {\n          class: \"wbcClose\",\n          onClick: closeModal\n        }, \"×\"),\n        _createElementVNode(\"div\", _hoisted_10, [\n          _createElementVNode(\"img\", {\n            src: selectedImageSrc.value,\n            style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n            class: \"modal-image\"\n          }, null, 12, _hoisted_11)\n        ]),\n        _createElementVNode(\"div\", { class: \"buttons\" }, [\n          _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n          _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n        ])\n      ])\n    ], 512), [\n      [_vShow, modalOpen.value]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <h1 class=\"malariaTitle\">Malaria O</h1>\r\n      <div class=\"malariaWrapper\" @drop=\"onDrop('malaria')\" @dragover.prevent>\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n          @dblclick=\"handleOpenModal('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <h1 class=\"malariaTitle\">Malaria X</h1>\r\n      <div class=\"malariaWrapper\" @drop=\"onDrop('noMalaria')\" @dragover.prevent>\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n          @dblclick=\"handleOpenModal('malaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n\r\n\r\n  <!--  Modal -->\r\n  <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n    <div class=\"wbc-modal-content\" @click=\"outerClickCloseModal\">\r\n      <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n      <div class=\"wbcModalImageContent\">\r\n        <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n             class=\"modal-image\"/>\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <button @click=\"zoomIn\">+</button>\r\n        <button @click=\"zoomOut\">-</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst selectedImageSrc = ref('');\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\nconst modalOpen = ref(false);\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n}\r\n\r\nconst handleOpenModal = (type: string, malaria: any, index: number) => {\r\n  if (type === 'malaria') {\r\n    selectedImageSrc.value = malaria;\r\n    modalOpen.value = true;\r\n  }\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, vShow as _vShow, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"rbc-container imgList\" }\nconst _hoisted_2 = { class: \"btn-container_img_list\" }\nconst _hoisted_3 = {\n  class: \"btn-imgsetbox_img_list\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_4 = { class: \"imgSet_img_list\" }\nconst _hoisted_5 = { class: \"alignItemsCenter\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", null, \"R\", -1)\nconst _hoisted_7 = { class: \"alignItemsCenter\" }\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", null, \"G\", -1)\nconst _hoisted_9 = { class: \"alignItemsCenter\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"label\", null, \"B\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Grid\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Ruler\", -1)\nconst _hoisted_13 = { class: \"ruler_box_img_list\" }\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Zoom\", -1)\nconst _hoisted_16 = { class: \"tiling-viewer_img_list-box_img_list\" }\nconst _hoisted_17 = { key: 2 }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Tile does not exist.\", -1)\nconst _hoisted_19 = [\n  _hoisted_18\n]\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = { class: \"classNmRbc\" }\nconst _hoisted_22 = [\"onClick\"]\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1)\nconst _hoisted_24 = [\n  _hoisted_23\n]\nconst _hoisted_25 = { class: \"categories\" }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_27 = { class: \"classNmRbc\" }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1)\nconst _hoisted_29 = [\n  _hoisted_28\n]\n\nimport {computed, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst notCanvasClick = ref(false);\r\nconst rbcImagePageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  rbcImagePageNumber.value = 0;\r\n  await nextTick();\r\n  await initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n    return;\r\n  }\r\n\r\n  // 모든 <ol> 요소를 선택하고, data-class-nm 값을 배열로 수집\r\n  const olElements = document.querySelectorAll('ol.overlayElement');\r\n\r\n  // newData 배열에서 존재하는 data-class-nm 값을 수집\r\n  const validClassNmSet = new Set(newData.map((el: any) => el.classNm));\r\n\r\n  olElements.forEach(el => {\r\n    const classNm = el.getAttribute('data-class-nm');\r\n\r\n    // data-class-nm이 newData에 존재하지 않으면 해당 <ol> 요소를 제거\r\n    if (!validClassNmSet.has(classNm)) {\r\n      console.log('Removing <ol> with data-class-nm:', classNm);\r\n      viewer.value.removeOverlay(el);\r\n    }\r\n  });\r\n\r\n  // rbcMarker 함수 호출\r\n  rbcMarker(newData, rbcImagePageNumber.value);\r\n}, {deep: true});\r\n\r\n\r\nwatch(classInfoArrNewReData, async (nenenen, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (nenenen.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n      return;\r\n    }\r\n    await rbcMarker(nenenen, rbcImagePageNumber.value);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any, imgNum: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[imgNum].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[imgNum].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[imgNum].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Poikilocyte': 'orange',\r\n    'Target Cell': 'navy',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': '#1E90FF',\r\n    'Ovalocyte': '#800080',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': '#3CB371',\r\n    'Stomatocyte': '#FFFF00',\r\n    'TearDrop Cell': '#4682B4',\r\n    'Spherocyte': '#FF6347',\r\n    'Howell-Jolly Body': '#FF4500',\r\n    'Basophilic Stippling': '#DDA0DD',\r\n    'Malaria': 'black',\r\n    'Platelet': '#C71585',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm.replace(/\\s/g, '') === info.classNm.replace(/\\s/g, '') && category.categoryId === info.categoryId) {\r\n\r\n          ctx.lineWidth = 3;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  if (props.selectItems.slotId === undefined) {\r\n    return;\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15,\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerClick: 1.2, // 클릭 확대 비율 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n      // 마그니파이어 설정 - 동그라미 줌기능\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.width = magWidth;\r\n            magCanvas.height = magHeight;\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - magWidth / 2}px`;\r\n            magCanvas.style.top = `${event.position.y - magHeight / 2}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            // 줌을 위한 확대된 부분을 정확히 잘라내기 위해 drawImage 메서드 수정\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 2 / zoomLevel),\r\n                event.position.y - (magHeight / 2 / zoomLevel),\r\n                magWidth / zoomLevel,\r\n                magHeight / zoomLevel,\r\n                0,\r\n                0,\r\n                magWidth,\r\n                magHeight\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      viewer.value.addHandler('page', function (event: any) {\r\n        const notCanvasClick = !fileNameResultArr.value[event.page].includes('RBC_Image');\r\n        if (!notCanvasClick) {\r\n          rbcImagePageNumber.value = event.page;\r\n          emits('changeCurrentRbcImagePageNumber', event.page);\r\n        }\r\n        emits('notCanvasClick', notCanvasClick);\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') {\r\n          return;\r\n        }\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.ctrlKey) {\r\n          await removeDiv();\r\n        }\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                // 기존의 오버레이가 클릭된 위치에 있는지 확인\r\n                const existingOverlay = document.querySelector(`.overlayElement[data-class-posX=\"${itemPos.posX}\"][data-class-posY=\"${itemPos.posY}\"]`);\r\n                if (existingOverlay) {\r\n                  // 클릭된 위치에 이미 오버레이가 있으면 새로 추가하지 않음\r\n                  return;\r\n                }\r\n\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.setAttribute('data-class-posY', itemPos.posY);\r\n                element.setAttribute('data-class-posX', itemPos.posX);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          // 함수: 클릭 위치가 아이템 위치와 겹치는지 확인\r\n          const isItemSelected = (item: any) => {\r\n            const width = item.width;\r\n            const height = item.height;\r\n            return (\r\n                canvasPos.x >= Number(item.posX) && canvasPos.x <= (Number(item.posX) + width) &&\r\n                canvasPos.y >= Number(item.posY) && canvasPos.y <= (Number(item.posY) + height)\r\n            );\r\n          };\r\n\r\n          // 선택된 아이템의 classNm 저장\r\n          let selectItm = '';\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && isItemSelected(item)) {\r\n              selectItm = item.classNm;\r\n              break; // 하나의 아이템만 선택됨\r\n            }\r\n          }\r\n\r\n          // 선택된 아이템의 classNm에 해당하는 모든 아이템 처리\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && selectItm === item.classNm) {\r\n              console.log(item.classNm);\r\n              moveRbcClass.value.push(item);\r\n\r\n              const element = document.createElement('ol');\r\n              element.className = 'overlayElement';\r\n              element.id = 'overlayElement';\r\n              element.setAttribute('data-category-id', item.categoryId);\r\n              element.setAttribute('data-class-nm', item.classNm);\r\n              element.style.width = `${item.width}px`; // 픽셀 단위 추가\r\n              element.style.backgroundColor = 'lightgreen';\r\n              element.style.height = `${item.height}px`; // 픽셀 단위 추가\r\n              element.style.position = 'absolute';\r\n              element.style.opacity = '0.5';\r\n\r\n              const posX = parseFloat(item.posX);\r\n              const posY = parseFloat(item.posY);\r\n              const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height);\r\n              viewer.value.addOverlay({\r\n                element: element,\r\n                location: overlayRect\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n// const drawOverlays = () => {\r\n//   const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n//   overlays.forEach((item: any) => {\r\n//     const element = document.createElement('div');\r\n//     element.className = 'overlayElement';\r\n//     element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n//     viewer.value?.addOverlay({\r\n//       element: element,\r\n//       location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n//     });\r\n//   });\r\n// };\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n    emits('notCanvasClick', false);\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.width = rulerPos.value.width + 'px';\r\n    element.style.height = rulerPos.value.height + 'px';\r\n    element.style.zIndex = '9999999';\r\n\r\n    // Zoom level calculation\r\n    const zoom = viewer.value.viewport.getZoom(true);\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerPos.value.width / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left / zoom) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerPos.value.height / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top / zoom) + 'px';\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31;\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81;\r\n      }\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tilingViewer');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return;\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30 || rulerPos.value.top <= 80) {\r\n          return;\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft;\r\n        rulerPos.value.top = element.offsetTop;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn_img_list\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _withDirectives(_createElementVNode(\"button\", {\n            class: \"darkButton\",\n            onClick: imgSetOpen\n          }, \"IMG Setting\", 512), [\n            [_vShow, activeTab.value !== 'malaria']\n          ]),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n              _createElementVNode(\"span\", null, \"Brightness \" + _toDisplayString(imgBrightness.value), 1),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"120\",\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                onInput: changeImgBrightness\n              }, null, 544), [\n                [_vModelText, imgBrightness.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: brightnessReset\n              }, \"Brightness Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n              _createElementVNode(\"span\", null, \"RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ]\", 1),\n              _createElementVNode(\"div\", _hoisted_5, [\n                _hoisted_6,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_7, [\n                _hoisted_8,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ])\n              ]),\n              _createElementVNode(\"div\", _hoisted_9, [\n                _hoisted_10,\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: changeImageRgb\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ])\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn\",\n                onClick: rgbReset\n              }, \"RGB Reset\")\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n              _hoisted_11,\n              _createVNode(_component_font_awesome_icon, {\n                icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickGrid\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n              _hoisted_12,\n              _createElementVNode(\"div\", _hoisted_13, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                  return (_openBlock(), _createElementBlock(\"button\", {\n                    class: _normalizeClass([\"tab-ruler-btn_img_list\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                    onClick: ($event: any) => (onClickRuler(ruler)),\n                    key: ruler.id\n                  }, _toDisplayString(ruler.text), 11, _hoisted_14))\n                }), 128))\n              ])\n            ]),\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n              _hoisted_15,\n              _createVNode(_component_font_awesome_icon, {\n                icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                onClick: onClickZoom\n              }, null, 8, [\"icon\"])\n            ])\n          ], 512), [\n            [_vShow, imgSet_img_list.value]\n          ])\n        ], 512)\n      ]),\n      _createElementVNode(\"div\", _hoisted_16, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer_img_list\",\n                style: {\"width\":\"100%\"},\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, _hoisted_19))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rightClickItem.value], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_20, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_21, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`\n                      }, [\n                        (classInfo.classNm !== 'Poikilocyte')\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 0,\n                              onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                            }, [\n                              _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                            ], 8, _hoisted_22))\n                          : _createCommentVNode(\"\", true),\n                        (classInfo.classNm === 'Basophilic Stippling')\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 1,\n                              onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                            }, _hoisted_24))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_25, [\n                _hoisted_26,\n                _createElementVNode(\"ul\", _hoisted_27, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('04', '01', 'Platelet')))\n                  }, _hoisted_29)\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"rbc-container imgList\">\r\n    <div class=\"btn-container_img_list\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn_img_list\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox_img_list' ref=\"imgSetWrap\">\r\n        <button class=\"darkButton\" @click=\"imgSetOpen\" v-show=\"activeTab !== 'malaria'\">IMG Setting</button>\r\n        <div class=\"imgSet_img_list\" v-show=\"imgSet_img_list\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness {{ imgBrightness }}</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"120\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"brightnessReset\">Brightness Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]</span>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>R</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>G</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <div class=\"alignItemsCenter\">\r\n              <label>B</label>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb\"\r\n              />\r\n            </div>\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n            <span>Ruler</span>\r\n            <div class=\"ruler_box_img_list\">\r\n              <button\r\n                  class=\"tab-ruler-btn_img_list\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer_img_list-box_img_list\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\"\r\n           ref=\"tilingViewerLayer\"\r\n           id=\"tiling-viewer_img_list\" style=\"width: 100%;\"\r\n           @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [rightClickItem]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"classInfo.classNm !== 'Poikilocyte'\" @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n\r\n              <li v-if=\"classInfo.classNm === 'Basophilic Stippling'\" @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n                <span>Malaria</span>\r\n              </li>\r\n\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet_img_list = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst newItemClassInfoArr = ref<any>([]);\r\n\r\nconst store = useStore();\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\nconst rightClickItem = ref<any>([]);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nconst classInfoArrNewReData = computed(() => store.state.commonModule.classInfoArr);\r\nconst canvasCurrentHeight = ref('0');\r\nconst canvasCurrentWitdh = ref('0');\r\nconst fileNameResultArr = ref<any>([]);\r\nconst notCanvasClick = ref(false);\r\nconst rbcImagePageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  rbcImagePageNumber.value = 0;\r\n  await nextTick();\r\n  await initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/02_RBC_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\n\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  if (existingOverlays.length === 0) {\r\n    showErrorAlert('Nothing has been selected');\r\n    return;\r\n  }\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => String(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: String(moveRbcClassItem.index)\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: String(moveRbcClassItem.index)\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems?.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems?.slotId}/03_RBC_Classification/${props.selectItems?.slotId}_new.json`\r\n  try {\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\n\r\nwatch(() => props.classInfoArr, (newData) => {\r\n  newItemClassInfoArr.value = newData;\r\n\r\n  if (newData.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n    return;\r\n  }\r\n\r\n  // 모든 <ol> 요소를 선택하고, data-class-nm 값을 배열로 수집\r\n  const olElements = document.querySelectorAll('ol.overlayElement');\r\n\r\n  // newData 배열에서 존재하는 data-class-nm 값을 수집\r\n  const validClassNmSet = new Set(newData.map((el: any) => el.classNm));\r\n\r\n  olElements.forEach(el => {\r\n    const classNm = el.getAttribute('data-class-nm');\r\n\r\n    // data-class-nm이 newData에 존재하지 않으면 해당 <ol> 요소를 제거\r\n    if (!validClassNmSet.has(classNm)) {\r\n      console.log('Removing <ol> with data-class-nm:', classNm);\r\n      viewer.value.removeOverlay(el);\r\n    }\r\n  });\r\n\r\n  // rbcMarker 함수 호출\r\n  rbcMarker(newData, rbcImagePageNumber.value);\r\n}, {deep: true});\r\n\r\n\r\nwatch(classInfoArrNewReData, async (nenenen, oldItem) => {\r\n  if (rbcReData.value) {\r\n    if (nenenen.length === 0) {\r\n      removeDiv();\r\n      removeRbcMarker();\r\n      return;\r\n    }\r\n    await rbcMarker(nenenen, rbcImagePageNumber.value);\r\n    await store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n    await store.dispatch('commonModule/setCommonInfo', {classInfoArr: []});\r\n    return;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any, imgNum: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[imgNum].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            String(el.index) === String(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: String(newRbcData.index),\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[imgNum].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[imgNum].rbcClassList;\r\n  }\r\n  classInfoArr.value = newItem;\r\n\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\nwatch(() => props.selectItems, async (newItem) => {\r\n  await nextTick();\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer_img_list');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // OpenSeadragon 인스턴스가 존재하면 초기화하지 않고 캔버스만 업데이트\r\n    if (viewer.value) {\r\n      viewer.value.destroy(); // 기존 뷰어 인스턴스 파괴\r\n    }\r\n\r\n    activeTab.value = 'lowMag';\r\n    await initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  const canvas = canvasOverlay.value;\r\n  if (!canvas) {\r\n    console.error('Canvas element를 찾을 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    console.error('2D context를 가져올 수 없습니다.');\r\n    return null;\r\n  }\r\n\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n};\r\n\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    'Normal': 'red',\r\n    'Poikilocyte': 'orange',\r\n    'Target Cell': 'navy',\r\n    'Burr Cell': 'purple',\r\n    'Acanthocyte': '#1E90FF',\r\n    'Ovalocyte': '#800080',\r\n    'Schistocyte': 'magenta',\r\n    'Sickle Cell': '#3CB371',\r\n    'Stomatocyte': '#FFFF00',\r\n    'TearDrop Cell': '#4682B4',\r\n    'Spherocyte': '#FF6347',\r\n    'Howell-Jolly Body': '#FF4500',\r\n    'Basophilic Stippling': '#DDA0DD',\r\n    'Malaria': 'black',\r\n    'Platelet': '#C71585',\r\n  };\r\n\r\n  const ctx = removeRbcMarker(); // canvas 초기화\r\n  if (!ctx) {\r\n    console.error('Canvas context 초기화 실패');\r\n    return;\r\n  }\r\n\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm.replace(/\\s/g, '') === info.classNm.replace(/\\s/g, '') && category.categoryId === info.categoryId) {\r\n\r\n          ctx.lineWidth = 3;\r\n          ctx.strokeStyle = `${colors[info.classNm] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: number;\r\n          let height: number;\r\n          let classItemPosX: number;\r\n          let classItemPosY: number;\r\n\r\n          if (classItem?.width) {\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          } else {\r\n            width = Number(classItem.x2) - Number(classItem.x1);\r\n            height = Number(classItem.y2) - Number(classItem.y1);\r\n            classItemPosX = Number(classItem.x1);\r\n            classItemPosY = Number(classItem.y1);\r\n          }\r\n\r\n          let ddrr = {\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: String(classItem.index),\r\n          };\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          drawPath.value.push(ddrr);\r\n          ctx.stroke(rectPath);\r\n        }\r\n      });\r\n    });\r\n  });\r\n  await store.dispatch('commonModule/setCommonInfo', {resetRbcArr: true});\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  if (props.selectItems.slotId === undefined) {\r\n    return;\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  try {\r\n    const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer_img_list\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15,\r\n        minZoomLevel: 1, // 최소 확대 레벨 설정\r\n        zoomPerClick: 1.2, // 클릭 확대 비율 설정\r\n        zoomPerScroll: 1.2, // 스크롤 확대 비율 설정\r\n        viewportMargins: {top: 0, left: 0, bottom: 0, right: 0}, // 뷰포트 여백 설정\r\n        visibilityRatio: 1.0 // 이미지를 뷰포트에 맞추기 위한 비율 설정\r\n      });\r\n\r\n      // 마그니파이어 설정 - 동그라미 줌기능\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event) {\r\n          const existingMagCanvas = document.getElementById('magCanvas');\r\n          if (existingMagCanvas) {\r\n            viewer.value.element.removeChild(existingMagCanvas);\r\n          }\r\n\r\n          if (!isMagnifyingGlass.value) {\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas;\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.width = magWidth;\r\n            magCanvas.height = magHeight;\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - magWidth / 2}px`;\r\n            magCanvas.style.top = `${event.position.y - magHeight / 2}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            // 줌을 위한 확대된 부분을 정확히 잘라내기 위해 drawImage 메서드 수정\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 2 / zoomLevel),\r\n                event.position.y - (magHeight / 2 / zoomLevel),\r\n                magWidth / zoomLevel,\r\n                magHeight / zoomLevel,\r\n                0,\r\n                0,\r\n                magWidth,\r\n                magHeight\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n          }\r\n        },\r\n      });\r\n\r\n\r\n      // 캔버스 오버레이 생성 및 추가\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n      canvas.id = 'myCanvas';\r\n      canvasOverlay.value = canvas;\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        // 캔버스 크기를 조정\r\n        canvas.width = event.source.Image.Size.Width;\r\n        canvas.height = event.source.Image.Size.Height;\r\n      });\r\n\r\n      viewer.value.addHandler('page', function (event: any) {\r\n        const notCanvasClick = !fileNameResultArr.value[event.page].includes('RBC_Image');\r\n        if (!notCanvasClick) {\r\n          rbcImagePageNumber.value = event.page;\r\n          emits('changeCurrentRbcImagePageNumber', event.page);\r\n        }\r\n        emits('notCanvasClick', notCanvasClick);\r\n        // 페이지가 변경될 때 오버레이를 다시 추가\r\n        if (canvas.parentElement !== viewer.value.container) {\r\n          viewer.value.addOverlay({\r\n            element: canvas,\r\n            location: new OpenSeadragon.Rect(0, 0, 1, 1),\r\n          });\r\n        }\r\n        emits('unChecked');\r\n      });\r\n\r\n      viewer.value.addHandler('zoom', () => {\r\n        if (activeRuler.value === 'None') {\r\n          return;\r\n        }\r\n        drawRuler(activeRuler.value);\r\n      });\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        //\r\n        if (!event.originalEvent.ctrlKey) {\r\n          await removeDiv();\r\n        }\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            if (\r\n                canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                // 기존의 오버레이가 클릭된 위치에 있는지 확인\r\n                const existingOverlay = document.querySelector(`.overlayElement[data-class-posX=\"${itemPos.posX}\"][data-class-posY=\"${itemPos.posY}\"]`);\r\n                if (existingOverlay) {\r\n                  // 클릭된 위치에 이미 오버레이가 있으면 새로 추가하지 않음\r\n                  return;\r\n                }\r\n\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.setAttribute('data-class-posY', itemPos.posY);\r\n                element.setAttribute('data-class-posX', itemPos.posX);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n\r\n                if (\r\n                    canvasPos.x >= Number(itemPos.posX) && canvasPos.x <= (Number(itemPos.posX) + width) &&\r\n                    canvasPos.y >= Number(itemPos.posY) && canvasPos.y <= (Number(itemPos.posY) + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.index === item.index);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(Number(posX), Number(posY), Number(item.width), Number(item.height)); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n          // 함수: 클릭 위치가 아이템 위치와 겹치는지 확인\r\n          const isItemSelected = (item: any) => {\r\n            const width = item.width;\r\n            const height = item.height;\r\n            return (\r\n                canvasPos.x >= Number(item.posX) && canvasPos.x <= (Number(item.posX) + width) &&\r\n                canvasPos.y >= Number(item.posY) && canvasPos.y <= (Number(item.posY) + height)\r\n            );\r\n          };\r\n\r\n          // 선택된 아이템의 classNm 저장\r\n          let selectItm = '';\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && isItemSelected(item)) {\r\n              selectItm = item.classNm;\r\n              break; // 하나의 아이템만 선택됨\r\n            }\r\n          }\r\n\r\n          // 선택된 아이템의 classNm에 해당하는 모든 아이템 처리\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm !== \"Normal\" && selectItm === item.classNm) {\r\n              console.log(item.classNm);\r\n              moveRbcClass.value.push(item);\r\n\r\n              const element = document.createElement('ol');\r\n              element.className = 'overlayElement';\r\n              element.id = 'overlayElement';\r\n              element.setAttribute('data-category-id', item.categoryId);\r\n              element.setAttribute('data-class-nm', item.classNm);\r\n              element.style.width = `${item.width}px`; // 픽셀 단위 추가\r\n              element.style.backgroundColor = 'lightgreen';\r\n              element.style.height = `${item.height}px`; // 픽셀 단위 추가\r\n              element.style.position = 'absolute';\r\n              element.style.opacity = '0.5';\r\n\r\n              const posX = parseFloat(item.posX);\r\n              const posY = parseFloat(item.posY);\r\n              const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height);\r\n              viewer.value.addOverlay({\r\n                element: element,\r\n                location: overlayRect\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n// const drawOverlays = () => {\r\n//   const overlays = drawPath.value; // drawPath에 있는 아이템들을 오버레이로 추가\r\n//   overlays.forEach((item: any) => {\r\n//     const element = document.createElement('div');\r\n//     element.className = 'overlayElement';\r\n//     element.style.background = 'rgba(255, 0, 0, 0.5)'; // 예시 스타일\r\n//     viewer.value?.addOverlay({\r\n//       element: element,\r\n//       location: new OpenSeadragon.Rect(item.x, item.y, item.width, item.height)\r\n//     });\r\n//   });\r\n// };\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n    fileNameResultArr.value = [];\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n\r\n        const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n        fileNameResultArr.value.push(fileNameResult)\r\n        const {width, height, tileSize} = await dziWidthHeight(fileNameResult)\r\n\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: tileSize,\r\n            Size: {\r\n              Width: width,\r\n              Height: height\r\n            }\r\n          }\r\n        });\r\n\r\n        canvasCurrentWitdh.value = width;\r\n        canvasCurrentHeight.value = height;\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet_img_list.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n    emits('notCanvasClick', false);\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet_img_list.value = !imgSet_img_list.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  const brightness = imgBrightness.value;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer_img_list');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\nconst brightnessReset = () => {\r\n  imgBrightness.value = 100;\r\n  changeImageRgb();\r\n}\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer_img_list');\r\n\r\n  if (divtilingViewer instanceof HTMLElement) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay');\r\n    if (rulerOverlay instanceof HTMLElement) {\r\n      divtilingViewer.removeChild(rulerOverlay);\r\n    }\r\n\r\n    const element = document.createElement('div');\r\n    element.id = 'rulerOverlay';\r\n    element.style.position = 'absolute';\r\n    element.style.width = rulerPos.value.width + 'px';\r\n    element.style.height = rulerPos.value.height + 'px';\r\n    element.style.zIndex = '9999999';\r\n\r\n    // Zoom level calculation\r\n    const zoom = viewer.value.viewport.getZoom(true);\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.container.clientWidth / 2) - (rulerPos.value.width / 2) + 'px';\r\n    } else {\r\n      element.style.left = (rulerPos.value.left / zoom) + 'px';\r\n    }\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.container.clientHeight / 2) - (rulerPos.value.height / 2) + 'px';\r\n    } else {\r\n      element.style.top = (rulerPos.value.top / zoom) + 'px';\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element);\r\n\r\n    let isPress = false;\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX;\r\n      rulerPos.value.prevPosY = e.clientY;\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31;\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81;\r\n      }\r\n\r\n      isPress = true;\r\n    };\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false;\r\n    };\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler);\r\n        }\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler);\r\n        }\r\n      }\r\n    };\r\n\r\n    const parent = document.getElementById('tilingViewer');\r\n\r\n    if (parent instanceof HTMLElement) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return;\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30 || rulerPos.value.top <= 80) {\r\n          return;\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX;\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY;\r\n\r\n        rulerPos.value.prevPosX = e.clientX;\r\n        rulerPos.value.prevPosY = e.clientY;\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px';\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px';\r\n\r\n        rulerPos.value.left = element.offsetLeft;\r\n        rulerPos.value.top = element.offsetTop;\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n  if (ruler.id === 'line' || ruler === 'Line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross' || ruler === 'Cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle' || ruler === 'Circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"REPORT\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"LIS-CBC\", -1)\nconst _hoisted_7 = { class: \"wbcMenuBottom\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\n\nimport {\r\n  computed,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  classInfoMenuDetailSelectQueryApi,\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nconst keepPage = ref('');\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst testType = computed(() => store.state.commonModule.testType);\r\nconst dbListDataFirstNum = computed(() => store.state.commonModule.dbListDataFirstNum);\r\nconst dbListDataLastNum = computed(() => store.state.commonModule.dbListDataLastNum);\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonBeforeMount(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  const keepPageType = projectType.value === 'bm' ? 'bmKeepPage' : 'keepPage';\r\n  keepPage.value = JSON.parse(JSON.stringify(sessionStorage.getItem(keepPageType)));\r\n})\r\n\r\nonMounted(async () => {\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await classInfoMenuDetailSelectQueryApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    await store.dispatch('commonModule/setCommonInfo', {testType: selectItems.value.testType});\r\n\r\n    resData.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const req = `oldPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `id=${id}&step=${step}&type=${type}&dayQuery=${dayQuery}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res.data !== null) {\r\n      resData.value = res.data;\r\n      await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(res.data.id)});\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n  if (direction === 'up') {\r\n    if (dbListDataFirstNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the first page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  } else {\r\n    if (dbListDataLastNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the last page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  }\r\n\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(dbId)});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(selectItemsNewVal.id)});\r\n  if ((projectType.value === 'pb' && selectItems.value?.testType === '01' && isActive(\"/databaseRbc\")) || (!keepPage.value || keepPage.value === \"false\")) {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (testType.value === '04' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              (!isLoading.value)\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 1,\n                    class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                    onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_4, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                    ]),\n                    _hoisted_5\n                  ], 2))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _hoisted_6\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_8),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_9)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (testType === '04' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li v-if=\"!isLoading\" :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {\r\n  computed,\r\n  defineEmits,\r\n  defineProps,\r\n  getCurrentInstance,\r\n  onBeforeMount,\r\n  onMounted,\r\n  onUnmounted,\r\n  ref,\r\n  watch\r\n} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  classInfoMenuDetailSelectQueryApi,\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItems = ref<any>(null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext']);\r\nconst ipAddress = ref<any>('');\r\nconst isLoading = ref(true);\r\nconst keepPage = ref('');\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst testType = computed(() => store.state.commonModule.testType);\r\nconst dbListDataFirstNum = computed(() => store.state.commonModule.dbListDataFirstNum);\r\nconst dbListDataLastNum = computed(() => store.state.commonModule.dbListDataLastNum);\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonBeforeMount(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  const keepPageType = projectType.value === 'bm' ? 'bmKeepPage' : 'keepPage';\r\n  keepPage.value = JSON.parse(JSON.stringify(sessionStorage.getItem(keepPageType)));\r\n})\r\n\r\nonMounted(async () => {\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await classInfoMenuDetailSelectQueryApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    await store.dispatch('commonModule/setCommonInfo', {testType: selectItems.value.testType});\r\n\r\n    resData.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    resData.value = null;\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n  const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n  const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n  const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n  const req = `oldPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value?.id}&newPcIp=${ipAddress.value}&dayQuery=${dayQuery}`\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(resData.value?.id)});\r\n\r\n    await updatePcIpStateApi(req).then(response => {\r\n      delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const req = `id=${id}&step=${step}&type=${type}&dayQuery=${dayQuery}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res.data !== null) {\r\n      resData.value = res.data;\r\n      await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(res.data.id)});\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n  if (direction === 'up') {\r\n    if (dbListDataFirstNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the first page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  } else {\r\n    if (dbListDataLastNum.value === selectItems.value?.id) {\r\n      showAlert.value = true;\r\n      alertType.value = 'success';\r\n      alertMessage.value = 'This is the last page. Navigation to other pages is not possible.';\r\n      return;\r\n    }\r\n  }\r\n\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value?.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value?.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  if (!resData.value) return;\r\n  selectItems.value = resData.value;\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(dbId)});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(selectItemsNewVal.id)});\r\n  if ((projectType.value === 'pb' && selectItems.value?.testType === '01' && isActive(\"/databaseRbc\")) || (!keepPage.value || keepPage.value === \"false\")) {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const  fileReadJpg = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.readGetJpg, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};\r\n\r\nexport const createCbcFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.cbcSaveData, request, '');\r\n};\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loaderBackground cbc\"\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loader\" }, null, -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingText\" }, \"Loading...\", -1)\nconst _hoisted_5 = [\n  _hoisted_3,\n  _hoisted_4\n]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"titleCbc\" }, \"CBC + DIFF\", -1)\nconst _hoisted_7 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_8 = { class: \"cbcTable\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"50%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"50%\" })\n], -1)\nconst _hoisted_10 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_11 = { class: \"cbcTable\" }\nconst _hoisted_12 = { key: 0 }\nconst _hoisted_13 = {\n  key: 3,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_14 = { class: \"cbcTable\" }\nconst _hoisted_15 = { key: 4 }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {createCbcFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst loading = ref(false);\r\n\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n  EventBus.subscribe('classInfoCbcDataGet', inhaCbc);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  loading.value = true;\r\n  let hospitalName = hospitalSiteCd.find(hospital => hospital.siteCd === siteCd.value)?.hospitalNm;\r\n  if (siteCd.value === '') {\r\n    hospitalName = '0000';\r\n  }\r\n  switch (hospitalName) {\r\n      // 서울 성모 cbc - 외부 url 진행 - 파일 없음\r\n    case '서울성모병원':\r\n      await cmcSeoulCbc(newVal);\r\n      break;\r\n    case '고대안암병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '인천길병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '0000':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '삼광의료재단':\r\n      /** Todo 작업 필요 */\r\n      break;\r\n    case '인하대병원':\r\n      await inhaCbc();\r\n      break;\r\n      // CBC 공통\r\n    default:\r\n      await commonCbc();\r\n      break;\r\n  }\r\n\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedRuningInfo = {...result.data, ...req}\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst commonCbc = async () => {\r\n  if(cbcFilePathSetArr.value === ''){\r\n    showErrorAlert(messages.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n    const params = {\r\n      url: cbcFilePathSetArr.value,\r\n      barcodeNo: props.selectItems.barcodeNo,\r\n      userId: userModuleDataGet.value.userId,\r\n      deviceBarcode: deviceSerialNm.value\r\n    }\r\n    const url = params.url + '?' +\r\n        'barcodeNo=' + params.barcodeNo + '&' +\r\n        'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n        'userid=' + params.userId\r\n\r\n    await axios.get(url).then(async function (result) {\r\n      const msg: any = await readH7File(result.data);\r\n      cbcWorkList.value = [];\r\n      msg.data?.segments.forEach(function (cbcSegment: any) {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach(function (cbcCode: any) {\r\n            if (cbcCode.CBC_CD === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              var obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj)\r\n            }\r\n          })\r\n\r\n        } else if (cbcSegment.name.trim() === 'PID') {\r\n          cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n          cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n          cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n          cbcAge.value = cbcSegment.fields[7].value[0][0].value[0]\r\n        }\r\n      })\r\n      loading.value = false;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n      loading.value = false;\r\n    })\r\n  } else { // 파일\r\n    const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n    if (readFileTxtRes.data.success) {\r\n      const msg: any = await readH7File(readFileTxtRes.data.data);\r\n      cbcWorkList.value = [];\r\n      msg?.data?.segments.forEach((cbcSegment: any) => {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach((cbcCode: any) => {\r\n            //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n            if (cbcCode.cd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              const obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj);\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n      loading.value = false;\r\n    } else {\r\n      console.error(readFileTxtRes.data.message);\r\n      loading.value = false;\r\n    }\r\n  }\r\n  const parms = {\r\n    filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n    data: cbcWorkList.value,\r\n  };\r\n  await createCbcFile(parms);\r\n}\r\n\r\nconst inhaCbc = async () => {\r\n  console.log('inhaCbc cbcFilePathSetArr', cbcFilePathSetArr)\r\n  if(cbcFilePathSetArr.value === ''){\r\n    showErrorAlert(messages.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n    try {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n      const body = {\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo,\r\n        baseUrl: `${cbcFilePathSetArr.value}/api/MifMain/File`,\r\n        // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n      };\r\n      const response: any = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n      // 상태 초기화\r\n      cbcWorkList.value = [];\r\n      // 응답 데이터 가져오기\r\n      const res: any = response.data[0];\r\n\r\n      // 응답 코드가 '0'일 때만 처리\r\n      if (res?.returnCode === '0') {\r\n        // 환자 정보 설정\r\n        cbcPatientNo.value = res?.regNo;\r\n        cbcPatientNm.value = res?.name;\r\n        cbcSex.value = res?.sex;\r\n        cbcAge.value = res?.age;\r\n        inhaTestCode.value = res?.testCode;\r\n\r\n        // 공통 정보 설정\r\n        await store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res?.testCode});\r\n\r\n        // 테스트 코드 리스트 처리\r\n        const testCodeList = res.testCode.split(',');\r\n        testCodeList.forEach((codes: any) => {\r\n          const [code, value, unit] = codes.split('|');\r\n\r\n          // cbcCodeList에서 매칭되는 코드 찾기\r\n          const cbcCode = cbcCodeList.value.find((cbcCode: any) => cbcCode.cd === code);\r\n          if (cbcCode) {\r\n            // 작업 리스트에 추가\r\n            const obj = {\r\n              classNm: cbcCode.classCd,\r\n              count: value,\r\n              unit: unit || '' // unit이 없으면 빈 문자열로 설정\r\n            };\r\n            cbcWorkList.value.push(obj);\r\n          }\r\n        });\r\n      }else{\r\n        showErrorAlert(res?.returnCode);\r\n      }\r\n\r\n      const parms = {\r\n        filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n        data: cbcWorkList.value,\r\n      };\r\n      await createCbcFile(parms);\r\n      loading.value = false;\r\n      console.log('Response:', response.data);\r\n    } catch (error: any) {\r\n      console.log(error.message + ' : no CBC result');\r\n      loading.value = false;\r\n      showErrorAlert(error.message);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst cmcSeoulCbc = async (newVal: any) => {\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012',\r\n      bcno: newVal.barcodeNo\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(function (result) {\r\n    const xml = result.data?.data;\r\n    const json = JSON.parse(xml2json(xml, {compact: true}));\r\n    cbcWorkList.value = json.root.spcworklist.worklist;\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    createCbcFile(parms);\r\n    loading.value = false;\r\n  }).catch(function (err) {\r\n    console.log(err.message)\r\n    loading.value = false;\r\n  })\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  let readFileTxtRes: any;\r\n  if (siteCd.value === '0000' || siteCd.value === '') {\r\n    readFileTxtRes = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}`);\r\n  } else {\r\n    readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n  }\r\n  if (readFileTxtRes.data.success) {\r\n    const cbcData = readFileTxtRes.data.data.toString();\r\n    const cbcDataArray = cbcData.split('\\n');\r\n    // 검체번호, 검사일시, 환자번호, 환자명, 성별, 나이, 그래프 데이터 제외\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title.trim())) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    await createCbcFile(parms);\r\n  }\r\n  loading.value = false;\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      // console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    (loading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _hoisted_5))\n      : _createCommentVNode(\"\", true),\n    _hoisted_6,\n    (siteCd.value ==='0002' && cbcWorkList.value.length !== 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n          _createElementVNode(\"table\", _hoisted_8, [\n            _hoisted_9,\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (siteCd.value ==='0007' && cbcWorkList.value.length !== 0)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n            _createElementVNode(\"table\", _hoisted_11, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n                return (_openBlock(), _createElementBlock(\"tr\", {\n                  key: cbcItem.id\n                }, [\n                  _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                  _createElementVNode(\"td\", null, [\n                    _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                    (cbcItem.cham !=='')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                      : _createCommentVNode(\"\", true),\n                    _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                  ])\n                ]))\n              }), 128))\n            ])\n          ]))\n        : (cbcWorkList.value.length !== 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [\n              _createElementVNode(\"table\", _hoisted_14, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: cbcItem.id\n                  }, [\n                    _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                    _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n                  ]))\n                }), 128))\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n    (cbcWorkList.value.length === 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" No Data \"))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <div class=\"loaderBackground cbc\" v-if=\"loading\">\r\n      <div class=\"loader\"></div>\r\n      <p class=\"loadingText\">Loading...</p>\r\n    </div>\r\n    <h1 class=\"titleCbc\">CBC + DIFF</h1>\r\n    <div v-if=\"siteCd ==='0002' && cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <colgroup>\r\n          <col width=\"50%\"/>\r\n          <col width=\"50%\"/>\r\n        </colgroup>\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else-if=\"siteCd ==='0007' && cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else-if=\"cbcWorkList.length !== 0\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"cbcWorkList.length === 0\">\r\n      No Data\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {createCbcFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst loading = ref(false);\r\n\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n  EventBus.subscribe('classInfoCbcDataGet', inhaCbc);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  loading.value = true;\r\n  let hospitalName = hospitalSiteCd.find(hospital => hospital.siteCd === siteCd.value)?.hospitalNm;\r\n  if (siteCd.value === '') {\r\n    hospitalName = '0000';\r\n  }\r\n  switch (hospitalName) {\r\n      // 서울 성모 cbc - 외부 url 진행 - 파일 없음\r\n    case '서울성모병원':\r\n      await cmcSeoulCbc(newVal);\r\n      break;\r\n    case '고대안암병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '인천길병원':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '0000':\r\n      await kuahGilHosCbc();\r\n      break;\r\n    case '삼광의료재단':\r\n      /** Todo 작업 필요 */\r\n      break;\r\n    case '인하대병원':\r\n      await inhaCbc();\r\n      break;\r\n      // CBC 공통\r\n    default:\r\n      await commonCbc();\r\n      break;\r\n  }\r\n\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  const updatedRuningInfo = {...result.data, ...req}\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst commonCbc = async () => {\r\n  if(cbcFilePathSetArr.value === ''){\r\n    showErrorAlert(messages.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n    const params = {\r\n      url: cbcFilePathSetArr.value,\r\n      barcodeNo: props.selectItems.barcodeNo,\r\n      userId: userModuleDataGet.value.userId,\r\n      deviceBarcode: deviceSerialNm.value\r\n    }\r\n    const url = params.url + '?' +\r\n        'barcodeNo=' + params.barcodeNo + '&' +\r\n        'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n        'userid=' + params.userId\r\n\r\n    await axios.get(url).then(async function (result) {\r\n      const msg: any = await readH7File(result.data);\r\n      cbcWorkList.value = [];\r\n      msg.data?.segments.forEach(function (cbcSegment: any) {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach(function (cbcCode: any) {\r\n            if (cbcCode.CBC_CD === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              var obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj)\r\n            }\r\n          })\r\n\r\n        } else if (cbcSegment.name.trim() === 'PID') {\r\n          cbcPatientNo.value = cbcSegment.fields[1].value[0][0].value[0]\r\n          cbcPatientNm.value = cbcSegment.fields[4].value[0][0].value[0]\r\n          cbcSex.value = cbcSegment.fields[6].value[0][0].value[0]\r\n          cbcAge.value = cbcSegment.fields[7].value[0][0].value[0]\r\n        }\r\n      })\r\n      loading.value = false;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n      loading.value = false;\r\n    })\r\n  } else { // 파일\r\n    const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n    if (readFileTxtRes.data.success) {\r\n      const msg: any = await readH7File(readFileTxtRes.data.data);\r\n      cbcWorkList.value = [];\r\n      msg?.data?.segments.forEach((cbcSegment: any) => {\r\n        if (cbcSegment.name.trim() === 'OBX') {\r\n          cbcCodeList.value.forEach((cbcCode: any) => {\r\n            //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n            if (cbcCode.cd === cbcSegment.fields[3].value[0][0].value[0]) {\r\n              const obj = {\r\n                classNm: cbcCode.cd,\r\n                count: cbcSegment.fields[5].value[0][0].value[0],\r\n                unit: cbcSegment.fields[6].value[0][0].value[0]\r\n              }\r\n              cbcWorkList.value.push(obj);\r\n            }\r\n          })\r\n        }\r\n\r\n      })\r\n      loading.value = false;\r\n    } else {\r\n      console.error(readFileTxtRes.data.message);\r\n      loading.value = false;\r\n    }\r\n  }\r\n  const parms = {\r\n    filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n    data: cbcWorkList.value,\r\n  };\r\n  await createCbcFile(parms);\r\n}\r\n\r\nconst inhaCbc = async () => {\r\n  console.log('inhaCbc cbcFilePathSetArr', cbcFilePathSetArr)\r\n  if(cbcFilePathSetArr.value === ''){\r\n    showErrorAlert(messages.UPLOAD_PLEASE_CBC);\r\n    return;\r\n  }\r\n  if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n    try {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n      const body = {\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo,\r\n        baseUrl: `${cbcFilePathSetArr.value}/api/MifMain/File`,\r\n        // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n      };\r\n      const response: any = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n      // 상태 초기화\r\n      cbcWorkList.value = [];\r\n      // 응답 데이터 가져오기\r\n      const res: any = response.data[0];\r\n\r\n      // 응답 코드가 '0'일 때만 처리\r\n      if (res?.returnCode === '0') {\r\n        // 환자 정보 설정\r\n        cbcPatientNo.value = res?.regNo;\r\n        cbcPatientNm.value = res?.name;\r\n        cbcSex.value = res?.sex;\r\n        cbcAge.value = res?.age;\r\n        inhaTestCode.value = res?.testCode;\r\n\r\n        // 공통 정보 설정\r\n        await store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res?.testCode});\r\n\r\n        // 테스트 코드 리스트 처리\r\n        const testCodeList = res.testCode.split(',');\r\n        testCodeList.forEach((codes: any) => {\r\n          const [code, value, unit] = codes.split('|');\r\n\r\n          // cbcCodeList에서 매칭되는 코드 찾기\r\n          const cbcCode = cbcCodeList.value.find((cbcCode: any) => cbcCode.cd === code);\r\n          if (cbcCode) {\r\n            // 작업 리스트에 추가\r\n            const obj = {\r\n              classNm: cbcCode.classCd,\r\n              count: value,\r\n              unit: unit || '' // unit이 없으면 빈 문자열로 설정\r\n            };\r\n            cbcWorkList.value.push(obj);\r\n          }\r\n        });\r\n      }else{\r\n        showErrorAlert(res?.returnCode);\r\n      }\r\n\r\n      const parms = {\r\n        filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n        data: cbcWorkList.value,\r\n      };\r\n      await createCbcFile(parms);\r\n      loading.value = false;\r\n      console.log('Response:', response.data);\r\n    } catch (error: any) {\r\n      console.log(error.message + ' : no CBC result');\r\n      loading.value = false;\r\n      showErrorAlert(error.message);\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst cmcSeoulCbc = async (newVal: any) => {\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012',\r\n      bcno: newVal.barcodeNo\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(function (result) {\r\n    const xml = result.data?.data;\r\n    const json = JSON.parse(xml2json(xml, {compact: true}));\r\n    cbcWorkList.value = json.root.spcworklist.worklist;\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    createCbcFile(parms);\r\n    loading.value = false;\r\n  }).catch(function (err) {\r\n    console.log(err.message)\r\n    loading.value = false;\r\n  })\r\n}\r\n\r\nconst kuahGilHosCbc = async () => {\r\n  let readFileTxtRes: any;\r\n  if (siteCd.value === '0000' || siteCd.value === '') {\r\n    readFileTxtRes = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}`);\r\n  } else {\r\n    readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n  }\r\n  if (readFileTxtRes.data.success) {\r\n    const cbcData = readFileTxtRes.data.data.toString();\r\n    const cbcDataArray = cbcData.split('\\n');\r\n    // 검체번호, 검사일시, 환자번호, 환자명, 성별, 나이, 그래프 데이터 제외\r\n    const excludedTitles = [\r\n      'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n      'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n    ];\r\n    cbcDataArray.forEach((cbcData: any) => {\r\n      const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n      if (!excludedTitles.includes(title.trim())) {\r\n        const unit = title.includes('%') ? '%' : '';\r\n        cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n      } else {\r\n        switch (title) {\r\n          case 'PT_NO':\r\n            cbcPatientNo.value = value;\r\n            break;\r\n          case 'SEX':\r\n            cbcSex.value = value;\r\n            break;\r\n          case 'AGE':\r\n            cbcAge.value = value;\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    const parms = {\r\n      filePath: `D:\\\\UIMD_Data\\\\UI_Log\\\\CBC_IA\\\\${props.selectItems?.barcodeNo}.txt`,\r\n      data: cbcWorkList.value,\r\n    };\r\n    await createCbcFile(parms);\r\n  }\r\n  loading.value = false;\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      // console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"wbcContent\"\n}\nconst _hoisted_2 = { class: \"topClintInfo\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from '@/common/api/service/runningInfo/runningInfoApi';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst allUnCheck = ref(false);\r\nconst notCanvasClickVal = ref(false);\r\nconst currentRbcPageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n  currentRbcPageNumber.value = 0;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  selectItems.value = result.data;\r\n  rbcInfo.value = result.data;\r\n  let newData: any = [];\r\n  newData = data;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst notCanvasClick = (val: any) => {\r\n  notCanvasClickVal.value = val;\r\n}\r\n\r\nconst changeCurrentRbcImagePageNumber = (pageNumber: number) => {\r\n  currentRbcPageNumber.value = pageNumber;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    (isLoading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _createElementVNode(\"div\", _hoisted_2, [\n            _createElementVNode(\"ul\", null, [\n              _createElementVNode(\"li\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n              _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n            ])\n          ]),\n          (cbcLayer.value)\n            ? (_openBlock(), _createBlock(LisCbc, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcRight shadowBox' + (cbcLayer.value ? ' cbcLayer' : '') )\n          }, [\n            _createVNode(RbcClass, {\n              allUnCheck: allUnCheck.value,\n              onIsBeforeUpdate: isBeforeUpdate,\n              onClassInfoArrUpdate: classInfoArrUpdate,\n              onClassInfoArrUpdateRe: classInfoArrUpdateRe,\n              selectItems: selectItems.value,\n              type: \"listTable\",\n              allCheckClear: allCheckClear.value,\n              rbcInfo: rbcInfo.value,\n              notCanvasClickVal: notCanvasClickVal.value,\n              currentRbcPageNumber: currentRbcPageNumber.value\n            }, null, 8, [\"allUnCheck\", \"selectItems\", \"allCheckClear\", \"rbcInfo\", \"notCanvasClickVal\", \"currentRbcPageNumber\"])\n          ], 2),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n          }, [\n            _createVNode(RbcImageList, {\n              onNotCanvasClick: notCanvasClick,\n              onUnChecked: unChecked,\n              isBefore: isBefore.value,\n              onChangeCurrentRbcImagePageNumber: changeCurrentRbcImagePageNumber,\n              classInfoArr: classInfoArr.value,\n              selectItems: selectItems.value,\n              type: \"listTable\",\n              rbcInfo: rbcInfo.value\n            }, null, 8, [\"isBefore\", \"classInfoArr\", \"selectItems\", \"rbcInfo\"])\n          ], 2)\n        ]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\" v-if=\"isLoading\">\r\n\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>{{ getTestTypeText(selectItems?.testType) }}</li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox' + (cbcLayer ? ' cbcLayer' : '') \">\r\n      <RbcClass :allUnCheck=\"allUnCheck\" @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\"\r\n                @classInfoArrUpdateRe=\"classInfoArrUpdateRe\" :selectItems=\"selectItems\" type='listTable'\r\n                :allCheckClear=\"allCheckClear\" :rbcInfo=\"rbcInfo\"\r\n                :notCanvasClickVal=\"notCanvasClickVal\"\r\n                :currentRbcPageNumber=\"currentRbcPageNumber\"\r\n      />\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList @notCanvasClick=\"notCanvasClick\" @unChecked=\"unChecked\" :isBefore=\"isBefore\" @changeCurrentRbcImagePageNumber=\"changeCurrentRbcImagePageNumber\"\r\n                    :classInfoArr=\"classInfoArr\" :selectItems=\"selectItems\" type='listTable' :rbcInfo=\"rbcInfo\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from '@/common/api/service/runningInfo/runningInfoApi';\r\n\r\nconst selectItems = ref<any>({});\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst isLoading = ref(false);\r\nconst allUnCheck = ref(false);\r\nconst notCanvasClickVal = ref(false);\r\nconst currentRbcPageNumber = ref(0);\r\n\r\nonMounted(async () => {\r\n  isLoading.value = false;\r\n  await getDetailRunningInfo();\r\n  await initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n  }\r\n  isLoading.value = true;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n  currentRbcPageNumber.value = 0;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst classInfoArrUpdateRe = async (data: any) => {\r\n  const result: any = await detailRunningApi(String(selectedSampleId.value));\r\n  selectItems.value = result.data;\r\n  rbcInfo.value = result.data;\r\n  let newData: any = [];\r\n  newData = data;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoArr: newData});\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst notCanvasClick = (val: any) => {\r\n  notCanvasClickVal.value = val;\r\n}\r\n\r\nconst changeCurrentRbcImagePageNumber = (pageNumber: number) => {\r\n  currentRbcPageNumber.value = pageNumber;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const business_id = 'li'\r\n// 병원 코드\r\nexport const instcd = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const eqmtcd = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\n\r\n\r\n\r\n","export const removeDuplicatesById = (items: any) => {\r\n    const seenIds = new Set();\r\n    return items.filter((item: any) => {\r\n        if (!seenIds.has(item.id)) {\r\n            seenIds.add(String(item.id));\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vShow as _vShow, createStaticVNode as _createStaticVNode } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  key: 1,\n  class: \"mt1\",\n  style: {\"height\":\"209.5px\"}\n}\nconst _hoisted_3 = { class: \"mt1 mb2 flexSpaceBetween\" }\nconst _hoisted_4 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_5 = { class: \"leftWbcInfo\" }\nconst _hoisted_6 = { style: {\"position\":\"relative\"} }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_8 = { class: \"wbcClassScroll\" }\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<ul class=\\\"nth1Child classAttribute\\\"><li>Class</li><li class=\\\"wbcTitleText\\\"><p class=\\\"firstP\\\">Before</p><p>(Count | Percent)</p></li><li class=\\\"wbcTitleText\\\"><p class=\\\"firstP\\\">After</p><p>(Count | Percent)</p></li></ul>\", 1)\nconst _hoisted_10 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_13 = { class: \"grayText w20 textLeft\" }\nconst _hoisted_14 = { class: \"grayText w50 textLeft\" }\nconst _hoisted_15 = { style: {\"display\":\"flex\",\"justify-content\":\"space-evenly\"} }\nconst _hoisted_16 = { class: \"wbcClassDbDiv classTotalColor\" }\nconst _hoisted_17 = { class: \"nth1Child\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Total\", -1)\nconst _hoisted_19 = { class: \"classInfoWbc\" }\nconst _hoisted_20 = { class: \"w20 textLeft\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"w50 textLeft\" }, \"100%\", -1)\nconst _hoisted_22 = { class: \"classInfoWbc\" }\nconst _hoisted_23 = { class: \"w20 textLeft\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"w50 textLeft\" }, \"100%\", -1)\nconst _hoisted_25 = { key: 0 }\nconst _hoisted_26 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_27 = [\"onClick\"]\nconst _hoisted_28 = { class: \"grayText\" }\nconst _hoisted_29 = { key: 1 }\nconst _hoisted_30 = [\"onClick\"]\nconst _hoisted_31 = {\n  class: \"categoryNm\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_32 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_33 = {\n  class: \"wFit\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_34 = { style: {\"width\":\"29%\"} }\nconst _hoisted_35 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_36 = {\n  class: \"grayText\",\n  style: {\"cursor\":\"default\",\"padding-left\":\"-20px\"}\n}\nconst _hoisted_37 = { key: 0 }\nconst _hoisted_38 = {\n  class: \"degree\",\n  style: {\"width\":\"27%\"}\n}\nconst _hoisted_39 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_40 = { key: 0 }\n\nimport {computed, nextTick, onBeforeMount, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getWbcCustomClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  classInfoDetailSelectQueryApi,\r\n  detailRunningApi,\r\n  updateRunningApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createCbcFile, createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst inhaTestSendCode: any = ref<any>([]);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\n\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst customClassArr = ref<any>([]);\r\nconst barCodeImageShowError = ref(false);\r\nconst submittedScreen = ref(false);\r\nconst lisBtnColor = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  barCodeImageShowError.value = false;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getOrderClass();\r\n  await getCustomClass();\r\n  await mountedMethod();\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n  barCodeImageShowError.value = false;\r\n})\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n    store.dispatch('commonModule/setCommonInfo', {testType: props.selectItems.testType});\r\n    if (props.selectItems?.submitState === \"\") {\r\n      const result: any = detailRunningApi(String(props.selectItems?.id));\r\n      const updatedItem = {\r\n        submitState: 'checkFirst',\r\n      };\r\n      const updatedRuningInfo = {...result.data, ...updatedItem}\r\n      resRunningItem(updatedRuningInfo, true);\r\n    }\r\n  }\r\n});\r\n\r\nconst mountedMethod = async () => {\r\n  if (inhaTestCode.value === '' && siteCd.value === '0011') { // 인하대 cbc 데이터를 먼저 로드 시키기 위해서 이벤트 버스 사용\r\n    EventBus.publish('classInfoCbcDataGet', true);\r\n  }\r\n  EventBus.subscribe('appVueSlideDataSaveLisSave', lisInhaDataSend); // 인하대는 슬라이드를 검사 하고 나서 바로 최종보고를 함 그래서 사용하는 함수임\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  if (props.selectItems?.submitState) {\r\n    lisBtnColor.value = props.selectItems.submitState === 'lis';\r\n  }\r\n  // 첫 진입시\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst barcodeCopy = async () => {\r\n  const textarea = document.createElement('textarea');\r\n  textarea.value = props.selectItems.barcodeNo;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(textarea);\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  // if (props.selectItems?.submitState === 'Submit' || submittedScreen.value) {\r\n  //   return;\r\n  // }\r\n  submittedScreen.value = true;\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    cmcSeoulLisAndCbcDataGet();\r\n  } else if (siteCd.value === '' || siteCd.value === '0000') { // uimd LIS 테스트 하는 곳\r\n    // 서울 성모\r\n    uimdTestCbcLisDataGet();\r\n    // 인하대\r\n    // inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo);\r\n  } else {\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst uimdTestCbcLisDataGet = () => {\r\n  // 서울 성모 테스트 코드\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/liveTest`, {   // UIMD 백엔드 xml 테스트 코드 : http://192.168.0.131:3002/api/cbc/liveTest\r\n    params: {\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live',\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n            name: wbcItem.name,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n              name: wbcItem.name,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'lis',\r\n    };\r\n    lisBtnColor.value = true;\r\n    const updatedRuningInfo = {id: result.data.id, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n\r\n  }).catch(function (err) {\r\n    console.log('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst cmcSeoulLisAndCbcDataGet = () => {\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {barcodeNo, wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n      bcno: barcodeNo,\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n    // 뉴트로필 외 반올림 뉴트로필 100기준 정수로 재 계산\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg ANC 계산을 위해서 전체 다 뉴트로필로 변경 전체 개수를 측정 하기 위해서\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n    const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\CBCLookUP\\\\${barcodeNo}.txt`;\r\n    const paramsLisCopyLogData = {\r\n      filePath,\r\n      data: {\r\n        cbcJson,\r\n        cbcWorkList\r\n      },\r\n    };\r\n    await createCbcFile(paramsLisCopyLogData);\r\n    // 유저 체크\r\n    checkUserAuth(userModuleDataGet.value.employeeNo).then(function (isUserAuth) {\r\n      if (isUserAuth === 'succ') {\r\n        const params = {\r\n          empNo: userModuleDataGet.value.employeeNo,\r\n          barcodeNo: barcodeNo,\r\n          wbcInfo: wbcTemp\r\n        }\r\n        const now = new Date();\r\n        const year = `${now.getFullYear()}`;\r\n        let month = `${now.getMonth() + 1}`;\r\n        if (month.length === 1) {\r\n          month = `0${month}`;\r\n        }\r\n        let day = `${now.getDate()}`;\r\n        if (day.length === 1) {\r\n          day = `0${day}`;\r\n        }\r\n\r\n        const separator1 = String.fromCharCode(23); // '\\u0017'\r\n        const separator2 = String.fromCharCode(23, 23); // '\\u0017\\u0017'\r\n        const terminator = String.fromCharCode(3); // '\\u0003'\r\n        const paramsResult = params.wbcInfo\r\n            .filter((wbcItem: any) => wbcItem.testcd !== null && wbcItem.testcd !== '')\r\n            .map((wbcItem: any) => `${wbcItem.testcd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n            .join('');\r\n\r\n        // LIS 최종 업로드 Report\r\n        const newparams = {\r\n          submit_id: 'TXLII00101',\r\n          business_id: business_id,\r\n          ex_interface: `${params.empNo}|${instcd}`,\r\n          instcd: instcd,\r\n          userid: params.empNo,\r\n          eqmtcd: eqmtcd,\r\n          bcno: params.barcodeNo,\r\n          result: paramsResult,\r\n          testcont: 'MANUAL DIFFERENTIAL COUNT RESULT',\r\n          testcontcd: '01',\r\n          execdeptcd: 'H1',\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        }\r\n        axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n          params: newparams,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(async function (result) {\r\n          const xml = result.data.data;\r\n          const json = JSON.parse(xml2json(xml, {compact: true}));\r\n          const resultFlag = json.root.ResultFlag.resultflag._text;\r\n          const paramsDataCbcLisLog = {\r\n            empNo: userModuleDataGet.value.employeeNo,\r\n            barcodeNo,\r\n            wbcTemp,\r\n            frontendSendData: newparams,\r\n            processSendData: paramsResult,\r\n            uimdDefaultData: wbcInfoAfter,\r\n            nsPercentItem,\r\n            cbcJson,\r\n            cbcWorkList,\r\n          };\r\n          const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LISFinalReport\\\\${barcodeNo}.txt`;\r\n          const paramsLisCopyLogData = {\r\n            filePath,\r\n            data: {\r\n              frontendData: paramsDataCbcLisLog,\r\n              lisLastReportVal: result,\r\n            },\r\n          };\r\n          await createCbcFile(paramsLisCopyLogData);\r\n          if (resultFlag === 'Y') {\r\n            // lis 등록 후 list 테이블에서 로우 색상 변경 코드\r\n            const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n            const updatedItem = {\r\n              submitState: 'lis',\r\n            };\r\n            lisBtnColor.value = true;\r\n            const updatedRuningInfo = {...result.data, ...updatedItem}\r\n            await resRunningItem(updatedRuningInfo, true);\r\n            showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n          } else {\r\n            const index = json.root.ResultFlag.error2._text.indexOf('!');  // '!'의 위치를 찾음\r\n            const result = index !== -1 ? json.root.ResultFlag.error2._text.substring(0, index + 1) : json.root.ResultFlag.error2._text;\r\n            const errText = json.root.ResultFlag.error2._text === '1' ? 'LIS 전송이 실패 했습니다.' : result;\r\n            showErrorAlert(errText);\r\n          }\r\n        }).catch(function (err) {\r\n          showErrorAlert(err.message);\r\n        })\r\n      } else {\r\n        showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n      }\r\n    })\r\n  }).catch(function (err) {\r\n    console.log('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') { // 인천길병원\r\n    // 데이터 초기화\r\n    let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n    let seq = 0;\r\n    // 'wbcInfoAfter'와 'lisCodeWbcArr'를 순회하며 데이터 구성\r\n    const buildDataString = (lisCode: any) => {\r\n      if (lisCode.LIS_CD === '') return ''; // 빈 LIS_CD는 무시\r\n      return props.selectItems?.wbcInfoAfter\r\n          .filter((wbcItem: any) => lisCode.IA_CD === wbcItem.id && (Number(wbcItem.percent) > 0 || Number(wbcItem.count)))\r\n          .map((wbcItem: any) => {\r\n            const countLine = `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n            const percentLine = `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n            return countLine + percentLine;\r\n          })\r\n          .join(''); // 모든 줄을 합쳐서 반환\r\n    };\r\n    // 'lisCodeWbcArr'를 순회하며 데이터를 추가\r\n    data += lisCodeWbcArr.value.map(buildDataString).join('');\r\n    // 종료 데이터 추가\r\n    data += 'L|1|N';\r\n    // 파일 URL 생성 함수 호출\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = goDae();\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0011') { // 인하대\r\n    inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo);\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\nconst lisInhaDataSend = async (wbcInfoAfter: any, rbcInfoAfter: any, barcodeNo: any) => {\r\n  await getLisWbcRbcData();\r\n  await inhaDataSend(wbcInfoAfter, rbcInfoAfter, barcodeNo);\r\n}\r\n\r\nconst inhaDataSend = async (wbcInfoAfter: any, rbcInfoAfter: any, barcodeNo: any) => {\r\n  console.log('인하대 테스트 wbcInfoAfter', wbcInfoAfter)\r\n  console.log('인하대 테스트 rbcInfoAfter', rbcInfoAfter)\r\n  console.log('인하대 테스트 barcodeNo', barcodeNo)\r\n  if (lisFilePathSetArr.value === '') {\r\n    showErrorAlert(messages.UPLOAD_PLEASE_LIS);\r\n    return;\r\n  }\r\n  let resultStr = '';\r\n  // `inhaTestCode.value`를 콤마로 분리하여 배열 생성 inhaTestCode는 인하대 lis 업로드 하면 cbc 코드에서 받은 응답 값을 담는 부분\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  // 변환된 데이터를 저장할 리스트 초기화\r\n  const tmpList: string[] = [];\r\n  // `testCodeList` 배열을 순회하면서 각 코드에 대해 처리\r\n  testCodeList.forEach((codes: any) => {\r\n    if (codes.length > 0) {\r\n      // 코드 데이터를 '|'로 분리하여 배열 생성\r\n      const [code, value, unit, type] = codes.split('|');\r\n      let tmpStr = '';\r\n      if (code === 'L0210') {\r\n        // 'L0210' 코드는 값에 '5'를 추가\r\n        tmpStr = `${code}|${value}5|`;\r\n      } else if (code === 'H1151') {\r\n        tmpStr = `H9511|${value}|`;\r\n      } else if (code === 'H1152') {\r\n        tmpStr = `H9512|${value}|`;\r\n      } else if (code === 'H1153') {\r\n        tmpStr = `H9513|${value}|`;\r\n      } else if (code === 'H1154') {\r\n        tmpStr = `H9514|${value}|`;\r\n      } else if (code === 'H1155') {\r\n        tmpStr = `H9515|${value}|`;\r\n      } else if (code === 'H1165') {\r\n        tmpStr = `H9510|${value}|`;\r\n      } else if (code === 'H1162') {\r\n        tmpStr = `H9570|${value}|`;\r\n      } else if (\r\n          ['H1101', 'H1102', 'H1103', 'H1104', 'H1105', 'H1106', 'H1121', 'H1122', 'H1123'].includes(code)\r\n      ) {\r\n        tmpStr = `${code}|${value}|`;\r\n      }\r\n      // 변환된 문자열을 `tmpList`에 추가\r\n      if (tmpStr) {\r\n        tmpList.push(tmpStr);\r\n      }\r\n    }\r\n  });\r\n  // `inhaTestCode.value`를 빈 문자열로 초기화\r\n  inhaTestSendCode.value = '';\r\n  // `tmpList`의 항목을 콤마로 연결하여 `inhaTestCode.value`에 저장\r\n  inhaTestSendCode.value = tmpList.join(','); // tmpList.join(',') 결과는 'a,b,c' 이런식으로 만드려고 join 사용 함\r\n  // `resultStr`에 `inhaTestCode.value`를 추가\r\n  resultStr += inhaTestSendCode.value;\r\n  console.log('tmpList 가공 매칭 후', tmpList)\r\n  console.log('inhaTestSendCode.value cbc 값 얻어와서 매칭 시킨 후 변경된 배열', inhaTestSendCode.value)\r\n  console.log('inhaTestSendCode.value', inhaTestSendCode.value)\r\n  let rbcTmp = '';\r\n  // WBC 항목을 처리하는 함수 정의\r\n  const processWbcItem = (lisCode: any, wbcItem: any) => {\r\n    const lisCodeLIS_CD = lisCode.LIS_CD;\r\n    const count = Number(wbcItem.count);\r\n    const percent = wbcItem.percent;\r\n\r\n    // 특정 LIS_CD 값들에 대해 count가 0보다 큰 경우 '1'을, 그렇지 않으면 ' '를 추가\r\n    if (['H9600', 'H9365', 'H9366'].includes(lisCodeLIS_CD)) {\r\n      resultStr += lisCodeLIS_CD + '|' + (count > 0 ? '1' : ' ') + '|' + ',';\r\n    }\r\n    //  GP, PA IA_CD가 '13' 또는 '14'인 경우 count가 MIN_COUNT보다 큰지 확인\r\n    else if (['13', '14'].includes(lisCode.IA_CD)) {\r\n      resultStr += lisCodeLIS_CD + '|' + (count > Number(lisCode.MIN_COUNT) ? percent : ' ') + '|' + ',';\r\n    }\r\n    // 나머지 경우에는 percent가 0보다 큰지 확인\r\n    else {\r\n      resultStr += lisCodeLIS_CD + '|' + (percent > 0 ? percent : ' ') + '|' + ',';\r\n    }\r\n  };\r\n\r\n  // lisCodeWbcArr의 각 항목에 대해\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    // wbcInfoAfter의 각 항목을 확인\r\n    wbcInfoAfter.forEach((wbcItem: any) => {\r\n      // lisCode의 IA_CD가 wbcItem의 id와 같다면\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        // WBC 항목을 처리\r\n        processWbcItem(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.IA_CATEGORY_CD === rbcItem.IA_CATEGORY_CD) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.IA_CLASS_CD === rbcItemElement.IA_CLASS_CD) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.LIS_CD) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.LIS_CD}|${degree}|,`;\r\n              resultStr += `${lisCode.LIS_CD}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n  console.log('rbc wbc 중간 resultStr 값', resultStr);\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n  // 위에서 담은 rbcTmp 정규 표현식을 사용해서 문자열 코드 대체\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n  console.log('rbc wbc 최종 resultStr 값', resultStr);\r\n\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n    const body = {\r\n      machine: 'ADUIMD',\r\n      episode: barcodeNo,\r\n      result: resultStr,\r\n      baseUrl: `${lisFilePathSetArr.value}/api/MifMain/File`,\r\n      // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n    };\r\n    const response = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    const res = response.data[0];\r\n    console.log('res 최종값', response)\r\n    if (res?.returnCode === '0') {\r\n      const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n      const parmsLisCopy = { filePath, res };\r\n\r\n      // LIS 파일 생성\r\n      await createCbcFile(parmsLisCopy);\r\n      const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n      const updatedItem = {\r\n        submitState: 'lis',\r\n      };\r\n      lisBtnColor.value = true;\r\n      const updatedRuningInfo = {id: result.data.id, ...updatedItem}\r\n      await resRunningItem(updatedRuningInfo, true);\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res?.returnCode);\r\n    }\r\n  } catch (error: any) {\r\n    // 오류 처리;\r\n    showSuccessAlert(error.message);\r\n  }\r\n}\r\n\r\nconst goDae = (): string => {\r\n  let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n  // 누적 백분율 계산\r\n  props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n    if (['02', '03', '04', '10'].includes(wbcItem.id)) {\r\n      kumcMergePercent += Number(wbcItem.percent);\r\n    }\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent);\r\n    }\r\n  });\r\n\r\n  // 백분율 조정\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    const updateItem = (id: string, newPercent: string) => {\r\n      const item = props.selectItems?.wbcInfoAfter.find((item: any) => item.id === id);\r\n      if (item) {\r\n        item.percent = newPercent;\r\n      }\r\n    };\r\n\r\n    updateItem('71', (Number(props.selectItems?.wbcInfoAfter.find((item: any) => item.id === '71')?.percent) + kumcBandPercent).toString());\r\n    updateItem('72', '0');\r\n  }\r\n\r\n  // 데이터 생성\r\n  const appendData = (lisCode: any, wbcItem: any) => {\r\n    if (lisCode.LIS_CD !== '') {\r\n      if (['01', '71', '05', '07', '08', '09'].includes(wbcItem.id) || Number(wbcItem.percent) > 0) {\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n      }\r\n    }\r\n  };\r\n\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        appendData(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  return data += 'L|1|N';\r\n};\r\n\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  // 파일 경로와 파라미터 설정\r\n  const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n  const parmsLisCopy = {filePath, data};\r\n\r\n  // CBC 파일 생성\r\n  await createCbcFile(parmsLisCopy);\r\n\r\n  // URL이 아닌 경우, 로컬 파일 작업 수행\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n\r\n    // 디렉토리 생성\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const fileParams = {\r\n        path: url,\r\n        filename: `${url}/${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n\r\n      // 파일 생성\r\n      const fileRes = await createFile(fileParams);\r\n      if (fileRes) {\r\n        // 실행 정보 업데이트\r\n        const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n        const updatedItem = {submitState: 'lis'};\r\n        const updatedRunningInfo = {...result.data, ...updatedItem};\r\n\r\n        await resRunningItem(updatedRunningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n\r\n        // 알림이 없을 경우 다음 페이지로 이동\r\n        if (!showAlert.value) {\r\n          emits('nextPage');\r\n        }\r\n      } else {\r\n        // 파일 생성 오류 시 알림 표시\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {\r\n    // URL로 설정된 경우 메시지 전송\r\n    await sendLisMessage(data);\r\n  }\r\n};\r\n\r\nconst sendLisMessage = async (data: any) => {\r\n  const body = {\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.name,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data,\r\n    baseUrl: lisFilePathSetArr.value,\r\n  };\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    const result = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  } catch (err: any) {\r\n    showErrorAlert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        let newWbcDataArr = [];\r\n        for (const wbcDataItem of wbcData) {\r\n          newWbcDataArr.push({\r\n            CD_NM: wbcDataItem.fullNm,\r\n            IA_CD: wbcDataItem?.id,\r\n            LIS_CD: wbcDataItem?.key,\r\n            MIN_COUNT: 0,\r\n          })\r\n        }\r\n        lisCodeWbcArr.value = newWbcDataArr;\r\n      }\r\n      if (rbcData) {\r\n        let newRbcDataArr = [];\r\n        for (const rbcDataItem of rbcData) {\r\n          newRbcDataArr.push({\r\n            CATEGORY_NM: rbcDataItem.categoryNm,\r\n            CLASS_NM: rbcDataItem?.fullNm,\r\n            IA_CATEGORY_CD: rbcDataItem?.categoryId,\r\n            IA_CLASS_CD: rbcDataItem?.id,\r\n            LIS_CD: rbcDataItem?.key,\r\n          })\r\n        }\r\n        lisCodeRbcArr.value = newRbcDataArr;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n      axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n        params: {\r\n          submit_id: 'TRLII00104',\r\n          business_id: 'li',\r\n          instcd: '012', // 병원 코드\r\n          userid: empNo,\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  // wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems?.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = await classInfoDetailSelectQueryApi(String(selectedSampleId.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(filteredItems?.data?.id)});\r\n  selectItems.value = filteredItems.data;\r\n  const customClassItems = selectItems.value.wbcInfoAfter.filter((item: any) => 90 <= Number(item.id) && Number(item.id) <= 95);\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n\r\n  const availableCustomClassArr = customClassArr.value.filter((item: any) => item.abbreviation !== '' && item.fullNm !== '')\r\n  let wbcBeforeInfo = removeDuplicatesById(selectItems.value.wbcInfo.wbcInfo[0] || [])\r\n  let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || filteredItems.data.wbcInfo.wbcInfo[0] || []);\r\n\r\n  wbcBeforeInfo = removeDuplicatesById(wbcBeforeInfo);\r\n  wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n\r\n\r\n  // customClass가 있는 상태에서 첫 진입 시\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length === 0) {\r\n    for (const customClassItem of availableCustomClassArr) {\r\n      if (wbcAfterInfo.find((beforeItem: any) => beforeItem.id != customClassItem.customNum)) {\r\n        const customItem = {\r\n          id: String(customClassItem.customNum),\r\n          name: customClassItem.fullNm,\r\n          count: '0',\r\n          title: customClassItem.abbreviation,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customItem);\r\n      }\r\n    }\r\n  }\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length > 0) {\r\n    for (const customClassItem of customClassItems) {\r\n      if (wbcAfterInfo.find((item: any) => item.id != customClassItem.id)) {\r\n        const customItem = {\r\n          id: String(customClassItem.id),\r\n          name: customClassItem.name,\r\n          count: '0',\r\n          title: customClassItem.title,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customClassItem)\r\n      }\r\n    }\r\n  }\r\n\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n\r\n  wbcInfoAfterVal.value = wbcAfterInfo;\r\n  wbcInfoBeforeVal.value = wbcBeforeInfo;\r\n  const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n  const wbcInfoBeforeValForTotalCount = filterByTitle(wbcBeforeInfo, 'wbc');\r\n\r\n  totalCountSet('before', wbcInfoBeforeValForTotalCount);\r\n  totalCountSet('after', wbcInfoAfterValForTotalCount);\r\n\r\n  // totalCount, percent - 따로\r\n  for (const item of wbcInfoBeforeValForTotalCount) {\r\n    createPercent(item, totalBeforeCount.value)\r\n  }\r\n\r\n  for (const item of wbcInfoAfterValForTotalCount) {\r\n    createPercent(item, totalAfterCount.value)\r\n  }\r\n\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n    wbcInfoAfterVal.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcInfoAfterVal.value);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    wbcInfoAfterVal.value = await inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n  }\r\n\r\n  wbcInfoVal.value = [];\r\n\r\n  wbcInfoAfterVal.value = sortWbcInfo(wbcInfoAfterVal.value, wbcAfterArr);\r\n  wbcInfoBeforeVal.value = sortWbcInfo(wbcInfoBeforeVal.value, wbcBeforeArr);\r\n\r\n  for (const [index, beforeItem] of wbcInfoBeforeVal.value.entries()) {\r\n    const afterItem = wbcInfoAfterVal.value[index]\r\n\r\n    if (!afterItem) continue;\r\n    const isChanged = isBeforeAfterChanged(beforeItem, afterItem);\r\n    const item = {\r\n      id: beforeItem.id,\r\n      name: beforeItem.name,\r\n      title: beforeItem.title,\r\n      count: {before: beforeItem.count, after: afterItem.count},\r\n      images: {before: beforeItem.images, after: afterItem.images},\r\n      percent: {before: beforeItem.percent, after: afterItem.percent},\r\n      isChanged\r\n    }\r\n    wbcInfoVal.value.push(item);\r\n  }\r\n\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\n/** Before, After 이미지들이 같은지 비교 */\r\nconst isBeforeAfterChanged = (beforeItem: any, afterItem: any) => {\r\n  if (Number(beforeItem.count) !== Number(afterItem.count)) return true;\r\n\r\n  const sortedBeforeImages = beforeItem.images.slice().map((item: any) => item.fileName);\r\n  const sortedAfterImages = afterItem.images.slice().map((item: any) => item.fileName);\r\n\r\n  const beforeSet = new Set(sortedBeforeImages);\r\n  const afterSet = new Set(sortedAfterImages);\r\n\r\n  if (beforeSet.size !== afterSet.size) {\r\n    return true;\r\n  } else {\r\n    const areEqual = [...beforeSet].every(fileName => afterSet.has(fileName));\r\n    if (areEqual) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst createPercent = (item: any, totalCount: any) => {\r\n  if (projectBm.value && item.title !== 'OT') {\r\n    const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n    item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n  } else {\r\n    // 인하대일 경우 percent 재계산 X\r\n    const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n    if (isInhaHospitalSiteCd) return;\r\n\r\n    const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n    if (!targetArray.includes(item.title)) {\r\n      const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n      item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n    }\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n\r\n    createPercent(item, totalCount);\r\n\r\n    const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n    if (isSeoulStMaryHospitalSiteCd) {\r\n      wbcInfoAfterVal.value = seoulStMaryPercentChange(clonedWbcInfo, wbcInfoAfterVal.value);\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value]});\r\n\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectedSampleId.value));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userId.value),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery\r\n    })\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst getCustomClass = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    customClassArr.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report' && !barCodeImageShowError.value)\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          class: \"mt1\",\n          onError: onImageError,\n          src: barcodeImg.value\n        }, null, 40, _hoisted_1))\n      : (__props.type !== 'report' && barCodeImageShowError.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2))\n        : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"h3\", _hoisted_4, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_5, [\n        _createElementVNode(\"li\", { onClick: barcodeCopy }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'copy'] })\n        ]),\n        _createElementVNode(\"li\", _hoisted_6, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'comment-dots'],\n            class: \"memoOpenBtn\",\n            onClick: memoOpen\n          }),\n          (memoModal.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                _withDirectives(_createElementVNode(\"textarea\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((wbcMemo).value = $event))\n                }, null, 512), [\n                  [_vModelText, wbcMemo.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"memoModalBtn\",\n                  onClick: memoChange\n                }, \"OK\"),\n                _createElementVNode(\"button\", {\n                  class: \"memoModalBtn\",\n                  onClick: memoCancel\n                }, \"CANCEL\")\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass({'submitted': selectItems.value?.submitState === 'Submit',})\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n        ], 2),\n        _createElementVNode(\"li\", {\n          onClick: lisModalOpen,\n          class: _normalizeClass({'submitted': selectItems.value?.submitState === 'lis' || lisBtnColor.value,})\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n        ], 2),\n        _createElementVNode(\"li\", null, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _hoisted_9,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 0,\n                class: _normalizeClass({'nth1Child': true, 'cursorMove': toggleLock.value}),\n                onClick: ($event: any) => (goClass(item.id)),\n                title: \"BLUE text: changed element\"\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", _hoisted_12, [\n                  _createElementVNode(\"span\", _hoisted_13, _toDisplayString(Number(item.count.before) || 0), 1),\n                  _createElementVNode(\"span\", _hoisted_14, _toDisplayString(Number(item?.percent.before) ? item?.percent.before + '%' : '0'), 1)\n                ]),\n                _createElementVNode(\"li\", _hoisted_15, [\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['w20', 'textLeft', item.isChanged && 'blueText'])\n                  }, _toDisplayString(Number(item?.count.after) || 0), 3),\n                  _createElementVNode(\"span\", {\n                    class: _normalizeClass(['w50', 'textLeft', item.isChanged && 'blueText'])\n                  }, _toDisplayString(Number(item?.percent.after) ? item?.percent.after + '%' : '0'), 3)\n                ])\n              ], 10, _hoisted_11))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_10))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_16, [\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _hoisted_18,\n          _createElementVNode(\"li\", _hoisted_19, [\n            _createElementVNode(\"span\", _hoisted_20, _toDisplayString(Number(totalBeforeCount.value) || 0), 1),\n            _hoisted_21\n          ]),\n          _createElementVNode(\"li\", _hoisted_22, [\n            _createElementVNode(\"span\", _hoisted_23, _toDisplayString(Number(totalAfterCount.value) || 0), 1),\n            _hoisted_24\n          ])\n        ])\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb2\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", _hoisted_28, _toDisplayString(Number(item?.count.before) || 0), 1),\n                      _createElementVNode(\"li\", {\n                        class: _normalizeClass(item.isChanged && 'blueText')\n                      }, _toDisplayString(Number(item?.count.after) || 0), 3)\n                    ], 8, _hoisted_27))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_26))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_29, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filterByTitle(wbcInfoVal.value, 'nonWbc'), (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\",\n                onClick: ($event: any) => (goClass(nWbcItem.id))\n              }, [\n                _createElementVNode(\"ul\", _hoisted_31, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_32, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", _hoisted_33, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_34, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_35))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", _hoisted_36, [\n                    _createTextVNode(_toDisplayString(Number(nWbcItem?.count.before) || 0) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_37, \" / \" + _toDisplayString(Number(selectItems.value?.wbcInfo?.maxWbcCount) || 0) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", _hoisted_38, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", {\n                    class: _normalizeClass(nWbcItem.isChanged && 'blueText'),\n                    style: {\"cursor\":\"default\"}\n                  }, [\n                    _createTextVNode(_toDisplayString(Number(nWbcItem?.count.after) || 0) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_40, \" / \" + _toDisplayString(Number(selectItems.value?.wbcInfo?.maxWbcCount) || 0) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ], 2)\n                ])\n              ], 8, _hoisted_30)), [\n                [_vShow, selectItems.value?.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 2,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 3,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img class=\"mt1\" v-if=\"type !== 'report' && !barCodeImageShowError\" @error=\"onImageError\" :src=\"barcodeImg\"/>\r\n  <div class=\"mt1\" v-else-if=\"type !== 'report' && barCodeImageShowError\" style=\"height: 209.5px;\"></div>\r\n  <div class=\"mt1 mb2 flexSpaceBetween\">\r\n    <h3 class=\"wbcClassInfoLeft\">\r\n      {{ wbcClassTileChange() }}\r\n    </h3>\r\n\r\n    <ul class=\"leftWbcInfo\">\r\n      <li @click=\"barcodeCopy\">\r\n        <font-awesome-icon :icon=\"['fas', 'copy']\"/>\r\n      </li>\r\n      <li style=\"position: relative\">\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" class=\"memoOpenBtn\" @click=\"memoOpen\"/>\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button class=\"memoModalBtn\" @click=\"memoChange\">OK</button>\r\n          <button class=\"memoModalBtn\" @click=\"memoCancel\">CANCEL</button>\r\n        </div>\r\n      </li>\r\n      <li\r\n          @click=\"commitConfirmed\"\r\n          :class=\"{'submitted': selectItems?.submitState === 'Submit',}\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n      </li>\r\n      <li\r\n          @click=\"lisModalOpen\"\r\n          :class=\"{'submitted': selectItems?.submitState === 'lis' || lisBtnColor,}\"\r\n      >\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n      </li>\r\n      <li>\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\"/>\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <ul class=\"nth1Child classAttribute\">\r\n      <li>Class</li>\r\n      <li class=\"wbcTitleText\">\r\n        <p class=\"firstP\">Before</p>\r\n        <p>(Count | Percent)</p>\r\n      </li>\r\n      <li class=\"wbcTitleText\">\r\n        <p class=\"firstP\">After</p>\r\n        <p>(Count | Percent)</p>\r\n      </li>\r\n    </ul>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul :class=\"{'nth1Child': true, 'cursorMove': toggleLock}\" v-if=\"shouldRenderCategory(item.title)\"\r\n          @click=\"goClass(item.id)\" title=\"BLUE text: changed element\">\r\n        <li>{{ item?.name }}</li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span class=\"grayText w20 textLeft\">{{ Number(item.count.before) || 0 }}</span>\r\n          <span class=\"grayText w50 textLeft\">{{\r\n              Number(item?.percent.before) ? item?.percent.before + '%' : '0'\r\n            }}</span>\r\n        </li>\r\n        <li style=\"display: flex; justify-content: space-evenly;\">\r\n          <span :class=\"['w20', 'textLeft', item.isChanged && 'blueText']\">{{ Number(item?.count.after) || 0 }}</span>\r\n          <span :class=\"['w50', 'textLeft', item.isChanged && 'blueText']\">{{\r\n              Number(item?.percent.after) ? item?.percent.after + '%' : '0'\r\n            }}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"wbcClassDbDiv classTotalColor\">\r\n      <ul class=\"nth1Child\">\r\n        <li>Total</li>\r\n        <li class=\"classInfoWbc\">\r\n          <span class=\"w20 textLeft\">{{ Number(totalBeforeCount) || 0 }}</span>\r\n          <span class=\"w50 textLeft\">100%</span>\r\n        </li>\r\n        <li class=\"classInfoWbc\">\r\n          <span class=\"w20 textLeft\">{{ Number(totalAfterCount) || 0 }}</span>\r\n          <span class=\"w50 textLeft\">100%</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb2\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li class=\"grayText\">{{ Number(item?.count.before) || 0 }}</li>\r\n          <li :class=\"item.isChanged && 'blueText'\">{{ Number(item?.count.after) || 0 }}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in filterByTitle(wbcInfoVal, 'nonWbc')\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems?.siteCd !== '0006' && nWbcItem?.title !== 'SM'\"\r\n             @click=\"goClass(nWbcItem.id)\">\r\n          <ul class=\"categoryNm\" style=\"cursor: default;\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\" style=\"cursor: default;\">non-WBC</li>\r\n            <li class=\"wFit\" style=\"cursor: default;\">{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul style=\"width: 29%;\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li class=\"grayText\" style=\"cursor: default; padding-left: -20px;\">\r\n              {{ Number(nWbcItem?.count.before) || 0 }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ Number(selectItems?.wbcInfo?.maxWbcCount) || 0 }} WBC</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\" style=\"width: 27%\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li :class=\"nWbcItem.isChanged && 'blueText'\" style=\"cursor: default;\">\r\n              {{ Number(nWbcItem?.count.after) || 0 }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ Number(selectItems?.wbcInfo?.maxWbcCount) || 0 }} WBC</span></li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, nextTick, onBeforeMount, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getWbcCustomClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  classInfoDetailSelectQueryApi,\r\n  detailRunningApi,\r\n  updateRunningApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type', 'isCommitChanged', 'classCompareShow']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createCbcFile, createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\n\r\nconst selectItems = ref(props.selectItems);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst inhaTestSendCode: any = ref<any>([]);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoVal = ref<any>([]);\r\nconst wbcInfoAfterVal = ref<any>([]);\r\nconst wbcInfoBeforeVal = ref<any>([]);\r\n\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst totalBeforeCount = ref(0);\r\nconst totalAfterCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nconst customClassArr = ref<any>([]);\r\nconst barCodeImageShowError = ref(false);\r\nconst submittedScreen = ref(false);\r\nconst lisBtnColor = ref(false);\r\n\r\nonBeforeMount(async () => {\r\n  barCodeImageShowError.value = false;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await getOrderClass();\r\n  await getCustomClass();\r\n  await mountedMethod();\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n  barCodeImageShowError.value = false;\r\n})\r\n\r\nwatch(() => props.isCommitChanged, () => {\r\n  selectItems.value.submitState = 'Submit';\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  if (Object.keys(newItem).length !== 0) {\r\n    beforeAfterChange(newItem)\r\n    wbcMemo.value = props.selectItems?.wbcMemo;\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n    barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n    store.dispatch('commonModule/setCommonInfo', {testType: props.selectItems.testType});\r\n    if (props.selectItems?.submitState === \"\") {\r\n      const result: any = detailRunningApi(String(props.selectItems?.id));\r\n      const updatedItem = {\r\n        submitState: 'checkFirst',\r\n      };\r\n      const updatedRuningInfo = {...result.data, ...updatedItem}\r\n      resRunningItem(updatedRuningInfo, true);\r\n    }\r\n  }\r\n});\r\n\r\nconst mountedMethod = async () => {\r\n  if (inhaTestCode.value === '' && siteCd.value === '0011') { // 인하대 cbc 데이터를 먼저 로드 시키기 위해서 이벤트 버스 사용\r\n    EventBus.publish('classInfoCbcDataGet', true);\r\n  }\r\n  EventBus.subscribe('appVueSlideDataSaveLisSave', lisInhaDataSend); // 인하대는 슬라이드를 검사 하고 나서 바로 최종보고를 함 그래서 사용하는 함수임\r\n  wbcMemo.value = props.selectItems?.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems?.slotId, barcodeImgDir.barcodeDirName);\r\n  if (props.selectItems?.submitState) {\r\n    lisBtnColor.value = props.selectItems.submitState === 'lis';\r\n  }\r\n  // 첫 진입시\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst barcodeCopy = async () => {\r\n  const textarea = document.createElement('textarea');\r\n  textarea.value = props.selectItems.barcodeNo;\r\n  document.body.appendChild(textarea);\r\n  textarea.select();\r\n  document.execCommand('copy');\r\n  document.body.removeChild(textarea);\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  // if (props.selectItems?.submitState === 'Submit' || submittedScreen.value) {\r\n  //   return;\r\n  // }\r\n  submittedScreen.value = true;\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    cmcSeoulLisAndCbcDataGet();\r\n  } else if (siteCd.value === '' || siteCd.value === '0000') { // uimd LIS 테스트 하는 곳\r\n    // 서울 성모\r\n    uimdTestCbcLisDataGet();\r\n    // 인하대\r\n    // inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo);\r\n  } else {\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst uimdTestCbcLisDataGet = () => {\r\n  // 서울 성모 테스트 코드\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/liveTest`, {   // UIMD 백엔드 xml 테스트 코드 : http://192.168.0.131:3002/api/cbc/liveTest\r\n    params: {\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live',\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n            name: wbcItem.name,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n              name: wbcItem.name,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'lis',\r\n    };\r\n    lisBtnColor.value = true;\r\n    const updatedRuningInfo = {id: result.data.id, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n\r\n  }).catch(function (err) {\r\n    console.log('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\n\r\nconst cmcSeoulLisAndCbcDataGet = () => {\r\n  const codeList = CbcWbcTestCdList_0002;\r\n  const {barcodeNo, wbcInfoAfter} = props.selectItems ?? {};\r\n  let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n  // cbc 결과 조회\r\n  axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n    params: {\r\n      submit_id: 'TRLII00124',\r\n      business_id: 'li',\r\n      instcd: '012', // 병원 코드\r\n      bcno: barcodeNo,\r\n      baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n    },\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    }\r\n  }).then(async function (resultCbc) {\r\n    // 결과 처리 코드\r\n    const xml = resultCbc.data.data.trim(); // 불필요한 공백 제거\r\n    const cbcJson = JSON.parse(xml2json(xml, {compact: true}));\r\n    const cbcWorkList = cbcJson.root.spcworklist.worklist;\r\n    const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n    // LHR100는 WBC를 뜻함 -> 평화이즈 데이터를 WBC로 변경하는 과정\r\n    const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n      return item.testcd._cdata === 'LHR100'\r\n    })\r\n\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      wbcItem.testcd = ''\r\n      // testcd 없음 필드 자체에 추가 하는 로직\r\n      codeList.forEach(function (code) {\r\n        if (String(wbcItem.id) === String(code.id)) {\r\n          wbcItem.testcd = code.cd\r\n        }\r\n      })\r\n    })\r\n\r\n    // five diff push\r\n    let wbcTemp: any = [];\r\n    wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n        if (wbcItem.testcd === fiveDiffItem) {\r\n          wbcTemp.push({\r\n            testcd: wbcItem.testcd,\r\n            percent: wbcItem.percent,\r\n          })\r\n        } else {\r\n          if ((Number(wbcItem.count) > 0) && wbcItem.testcd !== '') {\r\n            wbcTemp.push({\r\n              testcd: wbcItem.testcd,\r\n              percent: wbcItem.percent,\r\n            })\r\n          }\r\n        }\r\n      })\r\n    })\r\n    // 중복제거\r\n    const uniqueItems = new Set(wbcTemp.map((item: any) => item.testcd));\r\n    wbcTemp = Array.from(uniqueItems).map(testcd => wbcTemp.find((item: any) => item.testcd === testcd));\r\n    // 뉴트로필 외 반올림 뉴트로필 100기준 정수로 재 계산\r\n    const totalPercentRounded = wbcTemp\r\n        .filter((item: any) => item.name !== \"Neutrophil\")\r\n        .map((item: any) => Math.round(parseFloat(item.percent)))\r\n        .reduce((sum: any, percent: any) => sum + percent, 0);\r\n    const updatedWbcTemp = wbcTemp.map((item: any) =>\r\n        item.name === \"Neutrophil\"\r\n            ? {...item, percent: 100 - totalPercentRounded}\r\n            : {...item, percent: Math.round(parseFloat(item.percent))}\r\n    );\r\n    wbcTemp = updatedWbcTemp;\r\n\r\n    // neutrophil-seg ANC 계산을 위해서 전체 다 뉴트로필로 변경 전체 개수를 측정 하기 위해서\r\n    const nsPercentItem = wbcTemp.filter((item: any) => item.testcd === 'LHR10501');\r\n\r\n    // ANC insert LHR10599=> ANC 계산\r\n    if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n      const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2);\r\n      wbcTemp.push({\r\n        testcd: 'LHR10599',\r\n        percent: ancResult,\r\n        name: 'ANC 계산'\r\n      })\r\n    }\r\n    const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\CBCLookUP\\\\${barcodeNo}.txt`;\r\n    const paramsLisCopyLogData = {\r\n      filePath,\r\n      data: {\r\n        cbcJson,\r\n        cbcWorkList\r\n      },\r\n    };\r\n    await createCbcFile(paramsLisCopyLogData);\r\n    // 유저 체크\r\n    checkUserAuth(userModuleDataGet.value.employeeNo).then(function (isUserAuth) {\r\n      if (isUserAuth === 'succ') {\r\n        const params = {\r\n          empNo: userModuleDataGet.value.employeeNo,\r\n          barcodeNo: barcodeNo,\r\n          wbcInfo: wbcTemp\r\n        }\r\n        const now = new Date();\r\n        const year = `${now.getFullYear()}`;\r\n        let month = `${now.getMonth() + 1}`;\r\n        if (month.length === 1) {\r\n          month = `0${month}`;\r\n        }\r\n        let day = `${now.getDate()}`;\r\n        if (day.length === 1) {\r\n          day = `0${day}`;\r\n        }\r\n\r\n        const separator1 = String.fromCharCode(23); // '\\u0017'\r\n        const separator2 = String.fromCharCode(23, 23); // '\\u0017\\u0017'\r\n        const terminator = String.fromCharCode(3); // '\\u0003'\r\n        const paramsResult = params.wbcInfo\r\n            .filter((wbcItem: any) => wbcItem.testcd !== null && wbcItem.testcd !== '')\r\n            .map((wbcItem: any) => `${wbcItem.testcd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n            .join('');\r\n\r\n        // LIS 최종 업로드 Report\r\n        const newparams = {\r\n          submit_id: 'TXLII00101',\r\n          business_id: business_id,\r\n          ex_interface: `${params.empNo}|${instcd}`,\r\n          instcd: instcd,\r\n          userid: params.empNo,\r\n          eqmtcd: eqmtcd,\r\n          bcno: params.barcodeNo,\r\n          result: paramsResult,\r\n          testcont: 'MANUAL DIFFERENTIAL COUNT RESULT',\r\n          testcontcd: '01',\r\n          execdeptcd: 'H1',\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        }\r\n        axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n          params: newparams,\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        }).then(async function (result) {\r\n          const xml = result.data.data;\r\n          const json = JSON.parse(xml2json(xml, {compact: true}));\r\n          const resultFlag = json.root.ResultFlag.resultflag._text;\r\n          const paramsDataCbcLisLog = {\r\n            empNo: userModuleDataGet.value.employeeNo,\r\n            barcodeNo,\r\n            wbcTemp,\r\n            frontendSendData: newparams,\r\n            processSendData: paramsResult,\r\n            uimdDefaultData: wbcInfoAfter,\r\n            nsPercentItem,\r\n            cbcJson,\r\n            cbcWorkList,\r\n          };\r\n          const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LISFinalReport\\\\${barcodeNo}.txt`;\r\n          const paramsLisCopyLogData = {\r\n            filePath,\r\n            data: {\r\n              frontendData: paramsDataCbcLisLog,\r\n              lisLastReportVal: result,\r\n            },\r\n          };\r\n          await createCbcFile(paramsLisCopyLogData);\r\n          if (resultFlag === 'Y') {\r\n            // lis 등록 후 list 테이블에서 로우 색상 변경 코드\r\n            const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n            const updatedItem = {\r\n              submitState: 'lis',\r\n            };\r\n            lisBtnColor.value = true;\r\n            const updatedRuningInfo = {...result.data, ...updatedItem}\r\n            await resRunningItem(updatedRuningInfo, true);\r\n            showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n          } else {\r\n            const index = json.root.ResultFlag.error2._text.indexOf('!');  // '!'의 위치를 찾음\r\n            const result = index !== -1 ? json.root.ResultFlag.error2._text.substring(0, index + 1) : json.root.ResultFlag.error2._text;\r\n            const errText = json.root.ResultFlag.error2._text === '1' ? 'LIS 전송이 실패 했습니다.' : result;\r\n            showErrorAlert(errText);\r\n          }\r\n        }).catch(function (err) {\r\n          showErrorAlert(err.message);\r\n        })\r\n      } else {\r\n        showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n      }\r\n    })\r\n  }).catch(function (err) {\r\n    console.log('error.config', err.config)\r\n    showErrorAlert(err.message);\r\n  });\r\n}\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') { // 인천길병원\r\n    // 데이터 초기화\r\n    let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n    let seq = 0;\r\n    // 'wbcInfoAfter'와 'lisCodeWbcArr'를 순회하며 데이터 구성\r\n    const buildDataString = (lisCode: any) => {\r\n      if (lisCode.LIS_CD === '') return ''; // 빈 LIS_CD는 무시\r\n      return props.selectItems?.wbcInfoAfter\r\n          .filter((wbcItem: any) => lisCode.IA_CD === wbcItem.id && (Number(wbcItem.percent) > 0 || Number(wbcItem.count)))\r\n          .map((wbcItem: any) => {\r\n            const countLine = `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n            const percentLine = `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n            return countLine + percentLine;\r\n          })\r\n          .join(''); // 모든 줄을 합쳐서 반환\r\n    };\r\n    // 'lisCodeWbcArr'를 순회하며 데이터를 추가\r\n    data += lisCodeWbcArr.value.map(buildDataString).join('');\r\n    // 종료 데이터 추가\r\n    data += 'L|1|N';\r\n    // 파일 URL 생성 함수 호출\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = goDae();\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0011') { // 인하대\r\n    inhaDataSend(props.selectItems?.wbcInfoAfter, props.selectItems?.rbcInfoAfter, props.selectItems?.barcodeNo);\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems?.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems?.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: `${lisFilePathSetArr.value}\\\\${props.selectItems.barcodeNo}.hl7`,\r\n          msg: res,\r\n        }\r\n        try {\r\n          await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data.message);\r\n        }\r\n      } else { // url\r\n        await sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\nconst lisInhaDataSend = async (wbcInfoAfter: any, rbcInfoAfter: any, barcodeNo: any) => {\r\n  await getLisWbcRbcData();\r\n  await inhaDataSend(wbcInfoAfter, rbcInfoAfter, barcodeNo);\r\n}\r\n\r\nconst inhaDataSend = async (wbcInfoAfter: any, rbcInfoAfter: any, barcodeNo: any) => {\r\n  console.log('인하대 테스트 wbcInfoAfter', wbcInfoAfter)\r\n  console.log('인하대 테스트 rbcInfoAfter', rbcInfoAfter)\r\n  console.log('인하대 테스트 barcodeNo', barcodeNo)\r\n  if (lisFilePathSetArr.value === '') {\r\n    showErrorAlert(messages.UPLOAD_PLEASE_LIS);\r\n    return;\r\n  }\r\n  let resultStr = '';\r\n  // `inhaTestCode.value`를 콤마로 분리하여 배열 생성 inhaTestCode는 인하대 lis 업로드 하면 cbc 코드에서 받은 응답 값을 담는 부분\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  // 변환된 데이터를 저장할 리스트 초기화\r\n  const tmpList: string[] = [];\r\n  // `testCodeList` 배열을 순회하면서 각 코드에 대해 처리\r\n  testCodeList.forEach((codes: any) => {\r\n    if (codes.length > 0) {\r\n      // 코드 데이터를 '|'로 분리하여 배열 생성\r\n      const [code, value, unit, type] = codes.split('|');\r\n      let tmpStr = '';\r\n      if (code === 'L0210') {\r\n        // 'L0210' 코드는 값에 '5'를 추가\r\n        tmpStr = `${code}|${value}5|`;\r\n      } else if (code === 'H1151') {\r\n        tmpStr = `H9511|${value}|`;\r\n      } else if (code === 'H1152') {\r\n        tmpStr = `H9512|${value}|`;\r\n      } else if (code === 'H1153') {\r\n        tmpStr = `H9513|${value}|`;\r\n      } else if (code === 'H1154') {\r\n        tmpStr = `H9514|${value}|`;\r\n      } else if (code === 'H1155') {\r\n        tmpStr = `H9515|${value}|`;\r\n      } else if (code === 'H1165') {\r\n        tmpStr = `H9510|${value}|`;\r\n      } else if (code === 'H1162') {\r\n        tmpStr = `H9570|${value}|`;\r\n      } else if (\r\n          ['H1101', 'H1102', 'H1103', 'H1104', 'H1105', 'H1106', 'H1121', 'H1122', 'H1123'].includes(code)\r\n      ) {\r\n        tmpStr = `${code}|${value}|`;\r\n      }\r\n      // 변환된 문자열을 `tmpList`에 추가\r\n      if (tmpStr) {\r\n        tmpList.push(tmpStr);\r\n      }\r\n    }\r\n  });\r\n  // `inhaTestCode.value`를 빈 문자열로 초기화\r\n  inhaTestSendCode.value = '';\r\n  // `tmpList`의 항목을 콤마로 연결하여 `inhaTestCode.value`에 저장\r\n  inhaTestSendCode.value = tmpList.join(','); // tmpList.join(',') 결과는 'a,b,c' 이런식으로 만드려고 join 사용 함\r\n  // `resultStr`에 `inhaTestCode.value`를 추가\r\n  resultStr += inhaTestSendCode.value;\r\n  console.log('tmpList 가공 매칭 후', tmpList)\r\n  console.log('inhaTestSendCode.value cbc 값 얻어와서 매칭 시킨 후 변경된 배열', inhaTestSendCode.value)\r\n  console.log('inhaTestSendCode.value', inhaTestSendCode.value)\r\n  let rbcTmp = '';\r\n  // WBC 항목을 처리하는 함수 정의\r\n  const processWbcItem = (lisCode: any, wbcItem: any) => {\r\n    const lisCodeLIS_CD = lisCode.LIS_CD;\r\n    const count = Number(wbcItem.count);\r\n    const percent = wbcItem.percent;\r\n\r\n    // 특정 LIS_CD 값들에 대해 count가 0보다 큰 경우 '1'을, 그렇지 않으면 ' '를 추가\r\n    if (['H9600', 'H9365', 'H9366'].includes(lisCodeLIS_CD)) {\r\n      resultStr += lisCodeLIS_CD + '|' + (count > 0 ? '1' : ' ') + '|' + ',';\r\n    }\r\n    //  GP, PA IA_CD가 '13' 또는 '14'인 경우 count가 MIN_COUNT보다 큰지 확인\r\n    else if (['13', '14'].includes(lisCode.IA_CD)) {\r\n      resultStr += lisCodeLIS_CD + '|' + (count > Number(lisCode.MIN_COUNT) ? percent : ' ') + '|' + ',';\r\n    }\r\n    // 나머지 경우에는 percent가 0보다 큰지 확인\r\n    else {\r\n      resultStr += lisCodeLIS_CD + '|' + (percent > 0 ? percent : ' ') + '|' + ',';\r\n    }\r\n  };\r\n\r\n  // lisCodeWbcArr의 각 항목에 대해\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    // wbcInfoAfter의 각 항목을 확인\r\n    wbcInfoAfter.forEach((wbcItem: any) => {\r\n      // lisCode의 IA_CD가 wbcItem의 id와 같다면\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        // WBC 항목을 처리\r\n        processWbcItem(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.LIS_CD !== '') {\r\n      rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.IA_CATEGORY_CD === rbcItem.IA_CATEGORY_CD) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.IA_CLASS_CD === rbcItemElement.IA_CLASS_CD) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.LIS_CD) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.LIS_CD}|${degree}|,`;\r\n              resultStr += `${lisCode.LIS_CD}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n  console.log('rbc wbc 중간 resultStr 값', resultStr);\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n  // 위에서 담은 rbcTmp 정규 표현식을 사용해서 문자열 코드 대체\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n  console.log('rbc wbc 최종 resultStr 값', resultStr);\r\n\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n    const body = {\r\n      machine: 'ADUIMD',\r\n      episode: barcodeNo,\r\n      result: resultStr,\r\n      baseUrl: `${lisFilePathSetArr.value}/api/MifMain/File`,\r\n      // baseUrl: `${apiBaseUrl}/cbc/executePostCurltest`,\r\n    };\r\n    const response = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    const res = response.data[0];\r\n    console.log('res 최종값', response)\r\n    if (res?.returnCode === '0') {\r\n      const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n      const parmsLisCopy = { filePath, res };\r\n\r\n      // LIS 파일 생성\r\n      await createCbcFile(parmsLisCopy);\r\n      const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n      const updatedItem = {\r\n        submitState: 'lis',\r\n      };\r\n      lisBtnColor.value = true;\r\n      const updatedRuningInfo = {id: result.data.id, ...updatedItem}\r\n      await resRunningItem(updatedRuningInfo, true);\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res?.returnCode);\r\n    }\r\n  } catch (error: any) {\r\n    // 오류 처리;\r\n    showSuccessAlert(error.message);\r\n  }\r\n}\r\n\r\nconst goDae = (): string => {\r\n  let data = `H|\\\\^&||||||||||P||${props.selectItems?.barcodeNo}\\n`;\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n  // 누적 백분율 계산\r\n  props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n    if (['02', '03', '04', '10'].includes(wbcItem.id)) {\r\n      kumcMergePercent += Number(wbcItem.percent);\r\n    }\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent);\r\n    }\r\n  });\r\n\r\n  // 백분율 조정\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    const updateItem = (id: string, newPercent: string) => {\r\n      const item = props.selectItems?.wbcInfoAfter.find((item: any) => item.id === id);\r\n      if (item) {\r\n        item.percent = newPercent;\r\n      }\r\n    };\r\n\r\n    updateItem('71', (Number(props.selectItems?.wbcInfoAfter.find((item: any) => item.id === '71')?.percent) + kumcBandPercent).toString());\r\n    updateItem('72', '0');\r\n  }\r\n\r\n  // 데이터 생성\r\n  const appendData = (lisCode: any, wbcItem: any) => {\r\n    if (lisCode.LIS_CD !== '') {\r\n      if (['01', '71', '05', '07', '08', '09'].includes(wbcItem.id) || Number(wbcItem.percent) > 0) {\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}|${wbcItem.count}|||||||^${userModuleDataGet.value.name}\\n`;\r\n        data += `R|${++seq}|^^^^${lisCode.LIS_CD}%|${wbcItem.percent}|%||||||^${userModuleDataGet.value.name}\\n`;\r\n      }\r\n    }\r\n  };\r\n\r\n  lisCodeWbcArr.value.forEach((lisCode: any) => {\r\n    props.selectItems?.wbcInfoAfter.forEach((wbcItem: any) => {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        appendData(lisCode, wbcItem);\r\n      }\r\n    });\r\n  });\r\n\r\n  return data += 'L|1|N';\r\n};\r\n\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  // 파일 경로와 파라미터 설정\r\n  const filePath = `D:\\\\UIMD_Data\\\\UI_Log\\\\LIS_IA\\\\${props.selectItems?.barcodeNo}.txt`;\r\n  const parmsLisCopy = {filePath, data};\r\n\r\n  // CBC 파일 생성\r\n  await createCbcFile(parmsLisCopy);\r\n\r\n  // URL이 아닌 경우, 로컬 파일 작업 수행\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n\r\n    // 디렉토리 생성\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const fileParams = {\r\n        path: url,\r\n        filename: `${url}/${props.selectItems?.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n\r\n      // 파일 생성\r\n      const fileRes = await createFile(fileParams);\r\n      if (fileRes) {\r\n        // 실행 정보 업데이트\r\n        const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n        const updatedItem = {submitState: 'lis'};\r\n        const updatedRunningInfo = {...result.data, ...updatedItem};\r\n\r\n        await resRunningItem(updatedRunningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n\r\n        // 알림이 없을 경우 다음 페이지로 이동\r\n        if (!showAlert.value) {\r\n          emits('nextPage');\r\n        }\r\n      } else {\r\n        // 파일 생성 오류 시 알림 표시\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {\r\n    // URL로 설정된 경우 메시지 전송\r\n    await sendLisMessage(data);\r\n  }\r\n};\r\n\r\nconst sendLisMessage = async (data: any) => {\r\n  const body = {\r\n    barcodeNo: props.selectItems?.barcodeNo,\r\n    userId: userModuleDataGet.value.name,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data,\r\n    baseUrl: lisFilePathSetArr.value,\r\n  };\r\n  try {\r\n    let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    const result = await axios.post(`${apiBaseUrl}/cbc/executePostCurl`, body);\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  } catch (err: any) {\r\n    showErrorAlert(err.message);\r\n  }\r\n};\r\n\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        let newWbcDataArr = [];\r\n        for (const wbcDataItem of wbcData) {\r\n          newWbcDataArr.push({\r\n            CD_NM: wbcDataItem.fullNm,\r\n            IA_CD: wbcDataItem?.id,\r\n            LIS_CD: wbcDataItem?.key,\r\n            MIN_COUNT: 0,\r\n          })\r\n        }\r\n        lisCodeWbcArr.value = newWbcDataArr;\r\n      }\r\n      if (rbcData) {\r\n        let newRbcDataArr = [];\r\n        for (const rbcDataItem of rbcData) {\r\n          newRbcDataArr.push({\r\n            CATEGORY_NM: rbcDataItem.categoryNm,\r\n            CLASS_NM: rbcDataItem?.fullNm,\r\n            IA_CATEGORY_CD: rbcDataItem?.categoryId,\r\n            IA_CLASS_CD: rbcDataItem?.id,\r\n            LIS_CD: rbcDataItem?.key,\r\n          })\r\n        }\r\n        lisCodeRbcArr.value = newRbcDataArr;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      let apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n      axios.get(`${apiBaseUrl}/cbc/lisCbcMarys`, {\r\n        params: {\r\n          submit_id: 'TRLII00104',\r\n          business_id: 'li',\r\n          instcd: '012', // 병원 코드\r\n          userid: empNo,\r\n          baseUrl: 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\n        },\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        }\r\n      }).then(function (result) {\r\n        const xml = result.data.data;\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n\r\n  selectItems.value.submitState = 'Submit';\r\n  emits('submitStateChanged', 'Submit');\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const enterAppliedWbcMemo = wbcMemo.value.replaceAll('\\r\\n', '<br>');\r\n  const updatedItem = {\r\n    wbcMemo: enterAppliedWbcMemo\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  // wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems?.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo],\r\n      dayQuery: dayQuery,\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeAfterChange = async (newItem: any) => {\r\n  await getOrderClass();\r\n  const filteredItems: any = await classInfoDetailSelectQueryApi(String(selectedSampleId.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: String(filteredItems?.data?.id)});\r\n  selectItems.value = filteredItems.data;\r\n  const customClassItems = selectItems.value.wbcInfoAfter.filter((item: any) => 90 <= Number(item.id) && Number(item.id) <= 95);\r\n  selectItems.value.wbcInfoAfter = newItem;\r\n\r\n  const availableCustomClassArr = customClassArr.value.filter((item: any) => item.abbreviation !== '' && item.fullNm !== '')\r\n  let wbcBeforeInfo = removeDuplicatesById(selectItems.value.wbcInfo.wbcInfo[0] || [])\r\n  let wbcAfterInfo = removeDuplicatesById(selectItems.value?.wbcInfoAfter || filteredItems.data.wbcInfo.wbcInfo[0] || []);\r\n\r\n  wbcBeforeInfo = removeDuplicatesById(wbcBeforeInfo);\r\n  wbcAfterInfo = removeDuplicatesById(wbcAfterInfo);\r\n\r\n\r\n  // customClass가 있는 상태에서 첫 진입 시\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length === 0) {\r\n    for (const customClassItem of availableCustomClassArr) {\r\n      if (wbcAfterInfo.find((beforeItem: any) => beforeItem.id != customClassItem.customNum)) {\r\n        const customItem = {\r\n          id: String(customClassItem.customNum),\r\n          name: customClassItem.fullNm,\r\n          count: '0',\r\n          title: customClassItem.abbreviation,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customItem);\r\n      }\r\n    }\r\n  }\r\n  if (availableCustomClassArr.length > 0 && customClassItems.length > 0) {\r\n    for (const customClassItem of customClassItems) {\r\n      if (wbcAfterInfo.find((item: any) => item.id != customClassItem.id)) {\r\n        const customItem = {\r\n          id: String(customClassItem.id),\r\n          name: customClassItem.name,\r\n          count: '0',\r\n          title: customClassItem.title,\r\n          images: [],\r\n        }\r\n        wbcBeforeInfo.push(customItem)\r\n        wbcAfterInfo.push(customClassItem)\r\n      }\r\n    }\r\n  }\r\n\r\n  const wbcBeforeArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const wbcAfterArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n\r\n  wbcInfoAfterVal.value = wbcAfterInfo;\r\n  wbcInfoBeforeVal.value = wbcBeforeInfo;\r\n  const wbcInfoAfterValForTotalCount = filterByTitle(wbcAfterInfo, 'wbc');\r\n  const wbcInfoBeforeValForTotalCount = filterByTitle(wbcBeforeInfo, 'wbc');\r\n\r\n  totalCountSet('before', wbcInfoBeforeValForTotalCount);\r\n  totalCountSet('after', wbcInfoAfterValForTotalCount);\r\n\r\n  // totalCount, percent - 따로\r\n  for (const item of wbcInfoBeforeValForTotalCount) {\r\n    createPercent(item, totalBeforeCount.value)\r\n  }\r\n\r\n  for (const item of wbcInfoAfterValForTotalCount) {\r\n    createPercent(item, totalAfterCount.value)\r\n  }\r\n\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n    wbcInfoAfterVal.value = seoulStMaryPercentChange(wbcInfoAfterValForTotalCount, wbcInfoAfterVal.value);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    wbcInfoAfterVal.value = await inhaPercentChange(selectItems.value, wbcInfoAfterVal.value);\r\n    wbcInfoBeforeVal.value = seoulStMaryPercentChange(wbcInfoBeforeValForTotalCount, wbcInfoBeforeVal.value);\r\n  }\r\n\r\n  wbcInfoVal.value = [];\r\n\r\n  wbcInfoAfterVal.value = sortWbcInfo(wbcInfoAfterVal.value, wbcAfterArr);\r\n  wbcInfoBeforeVal.value = sortWbcInfo(wbcInfoBeforeVal.value, wbcBeforeArr);\r\n\r\n  for (const [index, beforeItem] of wbcInfoBeforeVal.value.entries()) {\r\n    const afterItem = wbcInfoAfterVal.value[index]\r\n\r\n    if (!afterItem) continue;\r\n    const isChanged = isBeforeAfterChanged(beforeItem, afterItem);\r\n    const item = {\r\n      id: beforeItem.id,\r\n      name: beforeItem.name,\r\n      title: beforeItem.title,\r\n      count: {before: beforeItem.count, after: afterItem.count},\r\n      images: {before: beforeItem.images, after: afterItem.images},\r\n      percent: {before: beforeItem.percent, after: afterItem.percent},\r\n      isChanged\r\n    }\r\n    wbcInfoVal.value.push(item);\r\n  }\r\n\r\n  if (props.selectItems?.submitState === \"\" || !props.selectItems?.submitState) {\r\n    const result: any = await detailRunningApi(String(props.selectItems?.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n\r\n    const updatedRuningInfo = {...result.data, ...updatedItem}\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n}\r\n\r\n/** Before, After 이미지들이 같은지 비교 */\r\nconst isBeforeAfterChanged = (beforeItem: any, afterItem: any) => {\r\n  if (Number(beforeItem.count) !== Number(afterItem.count)) return true;\r\n\r\n  const sortedBeforeImages = beforeItem.images.slice().map((item: any) => item.fileName);\r\n  const sortedAfterImages = afterItem.images.slice().map((item: any) => item.fileName);\r\n\r\n  const beforeSet = new Set(sortedBeforeImages);\r\n  const afterSet = new Set(sortedAfterImages);\r\n\r\n  if (beforeSet.size !== afterSet.size) {\r\n    return true;\r\n  } else {\r\n    const areEqual = [...beforeSet].every(fileName => afterSet.has(fileName));\r\n    if (areEqual) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nconst filterByTitle = (wbcInfoArr: any, isNonWbc: 'wbc' | 'nonWbc') => {\r\n  const titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\n  if (isNonWbc === 'nonWbc') {\r\n    return wbcInfoArr.filter((item: any) => titleArr.includes(item.title));\r\n  }\r\n\r\n  return wbcInfoArr.filter((item: any) => !titleArr.includes(item.title));\r\n}\r\n\r\nconst createPercent = (item: any, totalCount: any) => {\r\n  if (projectBm.value && item.title !== 'OT') {\r\n    const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n    item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n  } else {\r\n    // 인하대일 경우 percent 재계산 X\r\n    const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n    if (isInhaHospitalSiteCd) return;\r\n\r\n    const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n    if (!targetArray.includes(item.title)) {\r\n      const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n      item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n    }\r\n  }\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (showType: string, wbcInfoChangeVal: any) => {\r\n  if (showType === 'before') {\r\n    totalBeforeCount.value = 0;\r\n  } else if (showType === 'after') {\r\n    totalAfterCount.value = 0;\r\n  }\r\n\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        showType === 'before' ? totalBeforeCount.value += Number(item.count) : totalAfterCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoAfterVal.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n\r\n    createPercent(item, totalCount);\r\n\r\n    const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n    if (isSeoulStMaryHospitalSiteCd) {\r\n      wbcInfoAfterVal.value = seoulStMaryPercentChange(clonedWbcInfo, wbcInfoAfterVal.value);\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoAfterVal.value]});\r\n\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectedSampleId.value));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  emits('classOrderChanged')\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n    const {startDate, endDate, page, searchText, nrCount, testType, wbcInfo, wbcTotal} = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response = await updateRunningApi({\r\n      userId: Number(userId.value),\r\n      runingInfoDtoItems: originalDb,\r\n      dayQuery: dayQuery\r\n    })\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst getCustomClass = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    customClassArr.value = result.data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst onImageError = () => {\r\n  barCodeImageShowError.value = true;\r\n}\r\n\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"reportDiv\" }\nconst _hoisted_2 = { class: \"wbcDiv shadowBox\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"rbcDiv shadowBox\"\n}\nconst _hoisted_4 = { class: \"reportDetail shadowBox\" }\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"[Hospital]\", -1)\nconst _hoisted_7 = { class: \"reportDivTop\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_10 = { class: \"reportTable\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Slot ID\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered date\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed by ID\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed date\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient ID\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered Classification\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Birth\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gender\", -1)\nconst _hoisted_20 = { class: \"reportH3 mb1 pl0\" }\nconst _hoisted_21 = { class: \"tableClass mt22\" }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", { class: \"reportWbcclassificationSmallTitle\" }, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Percent\")\n  ])\n], -1)\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"td\", null, \"Total\", -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"td\", null, \"100.00\", -1)\nconst _hoisted_26 = {\n  key: 0,\n  class: \"reportH3 mb1 pl0\"\n}\nconst _hoisted_27 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_29 = { key: 0 }\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"td\", null, \"-\", -1)\nconst _hoisted_31 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"reportH3 pl0\" }, \"RBC classification result\", -1)\nconst _hoisted_33 = { class: \"printRbcCategory\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_35 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_36 = { class: \"printRbcClass\" }\nconst _hoisted_37 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_38 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_39 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_40 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_41 = { class: \"printRbcDegree\" }\nconst _hoisted_42 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_43 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_44 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_45 = { key: 1 }\nconst _hoisted_46 = {\n  class: \"printTotalText\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_47 = { class: \"printRbcCount\" }\nconst _hoisted_48 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_49 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_50 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_51 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_52 = { class: \"printRbcPercent\" }\nconst _hoisted_53 = {\n  key: 0,\n  class: \"mb1 liTitle\",\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_54 = { style: {\"cursor\":\"default\"} }\nconst _hoisted_55 = {\n  key: 0,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_56 = {\n  key: 1,\n  style: {\"cursor\":\"default\"}\n}\nconst _hoisted_57 = { style: {\"cursor\":\"default\"} }\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId)\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.commonModule.rbcInfoAfterData);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\nconst printContent = ref<HTMLElement | null>(null);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst shapeOthersCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nconst handleClickOutside = (event: MouseEvent) => {\r\n  if (printContent.value && !printContent.value.contains(event.target as Node) && printOnOff.value) {\r\n    printClose();\r\n  }\r\n};\r\n\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  if (!projectBm.value) {\r\n    await rbcTotalAndReCount();\r\n    await getRbcDegreeData();\r\n    await reDegree();\r\n    await calcShapeOthersCount();\r\n  }\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside);\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    rbcInfo.value = result.data;\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst percentChangeBySiteCd = () => {\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    selectItems.value.wbcInfoAfter =  seoulStMaryPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfoAfter);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    selectItems.value.wbcInfoAfter = inhaPercentChange(selectItems.value, selectItems.value?.wbcInfoAfter);\r\n  }\r\n\r\n  wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n}\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0\r\n        ? (el.classInfo[el.classInfo.length - 1].index || '').replace(/[^\\d]/g, '')\r\n        : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  if (!projectBm.value) {\r\n    await rbcTotalAndReCount();\r\n  }\r\n}\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = (event: MouseEvent) => {\r\n  event.stopPropagation(); // 이벤트 전파를 막아 handleClickOutside 실행 방지\r\n  printOnOff.value = true;\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfoAfter, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n\r\n    if (!nonWbcClassList.value || nonWbcClassList.value.length === 0) {\r\n      const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n      nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      // wbcInfo.value = sortedWbcInfo;\r\n    }\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n  }\r\n\r\n  await percentChangeBySiteCd();\r\n\r\n  rbcInfo.value = selectItems.value?.rbcInfoAfter && selectItems.value?.rbcInfoAfter.length !== 0 ? selectItems.value?.rbcInfoAfter : selectItems.value?.rbcInfo.rbcClass;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n    }, [\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(WbcClass, {\n                key: 0,\n                wbcInfo: wbcInfo.value,\n                selectItems: selectItems.value,\n                type: \"report\",\n                onClassOrderChanged: classOrderChanged,\n                onSubmitStateChanged: submitStateChanged,\n                isCommitChanged: isCommitChanged.value\n              }, null, 8, [\"wbcInfo\", \"selectItems\", \"isCommitChanged\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (!projectBm.value && selectItems.value.testType === '04')\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              (!isLoading.value)\n                ? (_openBlock(), _createBlock(RbcClass, {\n                    key: 0,\n                    rbcInfo: rbcInfo.value,\n                    selectItems: selectItems.value,\n                    type: \"report\",\n                    onSubmitStateChanged: submitStateChanged,\n                    isCommitChanged: isCommitChanged.value\n                  }, null, 8, [\"rbcInfo\", \"selectItems\", \"isCommitChanged\"]))\n                : _createCommentVNode(\"\", true)\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _hoisted_6,\n            _createTextVNode(),\n            _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'print'],\n              onClick: printStart,\n              class: \"printStart\"\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD PB system\"))\n              : _createCommentVNode(\"\", true),\n            (projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_9, \"Analysis Report from UIMD BM system\"))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"table\", _hoisted_10, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_11,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_12,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_13,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_14,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_16,\n                  _createElementVNode(\"td\", null, _toDisplayString(projectBm.value ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_17,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_18,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_19,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '' ? '' : selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", {\n            class: _normalizeClass(['reportDivBottom', selectItems.value.testType !== '04' && 'reportDiff'])\n          }, [\n            _createElementVNode(\"div\", {\n              class: _normalizeClass(['wbcLeft', projectBm.value && 'wbcLeftBm'])\n            }, [\n              _createElementVNode(\"h3\", _hoisted_20, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n              _createElementVNode(\"table\", _hoisted_21, [\n                _hoisted_22,\n                _hoisted_23,\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectItems.value.wbcInfoAfter, (item) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: item.id,\n                      class: \"wbcClassDbDiv\"\n                    }, [\n                      (shouldRenderCategory(item.title))\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(Number(item?.percent) || '0'), 1)\n                          ], 64))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", null, [\n                    _hoisted_24,\n                    _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                    _hoisted_25\n                  ])\n                ])\n              ]),\n              (!selectItems.value?.wbcInfo?.nonRbcClassList && !projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_26, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              (!projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"table\", _hoisted_27, [\n                    _hoisted_28,\n                    _createElementVNode(\"tbody\", null, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                          _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                          _createElementVNode(\"td\", null, [\n                            _createTextVNode(_toDisplayString(Number(nWbcItem?.count) || 0) + \" \", 1),\n                            (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_29, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _hoisted_30\n                        ], 512)), [\n                          [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                        ])\n                      }), 128))\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 2),\n            (!projectBm.value && selectItems.value.testType === '04')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                  _hoisted_32,\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoAfterData.value], (classList, outerIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: innerIndex,\n                          class: \"categories\"\n                        }, [\n                          _createElementVNode(\"ul\", _hoisted_33, [\n                            _createTextVNode(_toDisplayString(_ctx.type) + \" \", 1),\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34, \"Category\"))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"li\", _hoisted_35, _toDisplayString(category?.categoryNm), 1)\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_36, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_37, \"Class\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"li\", _hoisted_38, _toDisplayString(classInfo?.classNm), 1),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_39, \" Others \"))\n                                  : _createCommentVNode(\"\", true),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_40, \" Malaria \"))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128))\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_41, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_42, \"Degree\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"li\", _hoisted_43, _toDisplayString(Number(classInfo?.degree) || 0), 1),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_44, \" - \"))\n                                  : _createCommentVNode(\"\", true),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_45, \" - \"))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", _hoisted_46, \"Total\", 512), [\n                              [_vShow, category.categoryNm !== 'Shape']\n                            ])\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_47, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_48, \"Count\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"li\", _hoisted_49, _toDisplayString(Number(classInfo?.originalDegree) || 0), 1),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_50, _toDisplayString(Number(shapeOthersCount.value) || 0), 1))\n                                  : _createCommentVNode(\"\", true),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_51, _toDisplayString(Number(malariaCount.value) || 0), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, _toDisplayString(Number(sizeChromiaTotal.value) || 0), 513), [\n                              [_vShow, category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia']\n                            ]),\n                            _withDirectives(_createElementVNode(\"li\", { style: {\"cursor\":\"default\"} }, _toDisplayString(Number(shapeBodyTotal.value) || 0), 513), [\n                              [_vShow, category?.categoryNm === 'Inclusion Body']\n                            ])\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_52, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_53, \"Percent\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                _createElementVNode(\"li\", _hoisted_54, _toDisplayString(percentageChange(Number(classInfo?.originalDegree)) || 0), 1),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryId === '03')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_55, _toDisplayString(percentageChange(shapeOthersCount.value) || 0), 1))\n                                  : _createCommentVNode(\"\", true),\n                                (classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_56, _toDisplayString(percentageChange(malariaCount.value) || 0), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128)),\n                            _withDirectives(_createElementVNode(\"li\", _hoisted_57, \"100%\", 512), [\n                              [_vShow, category.categoryNm !== 'Shape']\n                            ])\n                          ])\n                        ]))\n                      }), 128))\n                    ], 64))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ], 2)\n        ])\n      ])\n    ], 2),\n    _createElementVNode(\"div\", {\n      ref_key: \"printContent\",\n      ref: printContent\n    }, [\n      (printOnOff.value)\n        ? (_openBlock(), _createBlock(Print, {\n            key: 0,\n            onPrintClose: printClose\n          }))\n        : _createCommentVNode(\"\", true)\n    ], 512)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\">\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div class=\"reportDiv\">\r\n      <div class=\"wbcDiv shadowBox\">\r\n        <WbcClass v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report'\r\n                  @classOrderChanged=\"classOrderChanged\" @submitStateChanged=\"submitStateChanged\"\r\n                  :isCommitChanged=\"isCommitChanged\"/>\r\n      </div>\r\n      <div class=\"rbcDiv shadowBox\" v-if=\"!projectBm && selectItems.testType === '04'\">\r\n        <RbcClass v-if=\"!isLoading\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='report'\r\n                  @submitStateChanged=\"submitStateChanged\" :isCommitChanged=\"isCommitChanged\"/>\r\n      </div>\r\n      <div class=\"reportDetail shadowBox\">\r\n        <div class=\"reportTitle\">\r\n          <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n          <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n        </div>\r\n        <div class=\"reportDivTop\">\r\n          <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n          <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n          <table class=\"reportTable\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Slot ID</th>\r\n              <td>{{ selectItems?.slotId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered date</th>\r\n              <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed by ID</th>\r\n              <td>{{ selectItems?.submitUserId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed date</th>\r\n              <td>{{ selectItems?.submitOfDate }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Patient ID</th>\r\n              <td>{{ selectItems?.patientId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered Classification</th>\r\n              <td>{{\r\n                  projectBm ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType)\r\n                }}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{{ selectItems?.patientName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Birth</th>\r\n              <td>{{ selectItems?.birthDay }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Gender</th>\r\n              <td>{{ selectItems?.gender === '' ? '' : selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div :class=\"['reportDivBottom', selectItems.testType !== '04' && 'reportDiff']\">\r\n          <div :class=\"['wbcLeft', projectBm && 'wbcLeftBm']\">\r\n            <h3 class=\"reportH3 mb1 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n            <table class=\"tableClass mt22\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <thead>\r\n              <tr class=\"reportWbcclassificationSmallTitle\">\r\n                <th>Class</th>\r\n                <th>Count</th>\r\n                <th>Percent</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item) in selectItems.wbcInfoAfter\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                <template v-if=\"shouldRenderCategory(item.title)\">\r\n                  <td>{{ item?.name }}</td>\r\n                  <td>{{ item?.count }}</td>\r\n                  <td> {{ Number(item?.percent) || '0' }}</td>\r\n                </template>\r\n              </tr>\r\n              <tr>\r\n                <td>Total</td>\r\n                <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                <td>100.00</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList && !projectBm\" class=\"reportH3 mb1 pl0\">non-WBC</h3>\r\n            <table class=\"tableClass\" v-if=\"!projectBm\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <tbody>\r\n              <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n                <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                  <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                  <td>\r\n                    {{ Number(nWbcItem?.count) || 0 }}\r\n                    <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                        selectItems?.wbcInfo?.maxWbcCount\r\n                      }} WBC</span>\r\n                  </td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </template>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div class=\"rbcRight\" v-if=\"!projectBm && selectItems.testType === '04'\">\r\n            <h3 class=\"reportH3 pl0\">RBC classification result</h3>\r\n            <template v-for=\"(classList, outerIndex) in [rbcInfoAfterData]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <div class=\"categories\">\r\n                  <ul class=\"printRbcCategory\">\r\n                    {{ type }}\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Category</li>\r\n                    <li style=\"cursor: default;\">{{ category?.categoryNm }}</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcClass\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Class</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li style=\"cursor: default;\">{{ classInfo?.classNm }}</li>\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        Others\r\n                      </li>\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        Malaria\r\n                      </li>\r\n                    </template>\r\n                  </ul>\r\n                  <ul class=\"printRbcDegree\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Degree</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li style=\"cursor: default;\">\r\n                        {{ Number(classInfo?.degree) || 0 }}\r\n                      </li>\r\n\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        -\r\n                      </li>\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\">\r\n                        -\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li class=\"printTotalText\" v-show=\"category.categoryNm !== 'Shape'\"\r\n                        style=\"cursor: default;\"\r\n                    >Total</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcCount\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Count</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li style=\"cursor: default;\">\r\n                        {{ Number(classInfo?.originalDegree) || 0 }}\r\n                      </li>\r\n\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        {{ Number(shapeOthersCount) || 0 }}\r\n                      </li>\r\n\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        {{ Number(malariaCount) || 0 }}\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li v-show=\"category?.categoryNm === 'Size' || category?.categoryNm === 'Chromia'\" style=\"cursor: default;\">\r\n                      {{ Number(sizeChromiaTotal) || 0 }}\r\n                    </li>\r\n                    <li v-show=\"category?.categoryNm === 'Inclusion Body'\" style=\"cursor: default;\">{{ Number(shapeBodyTotal) || 0 }}</li>\r\n                  </ul>\r\n                  <ul class=\"printRbcPercent\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\" style=\"cursor: default;\">Percent</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li style=\"cursor: default;\">\r\n                        {{ percentageChange(Number(classInfo?.originalDegree)) || 0 }}\r\n                      </li>\r\n\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryId === '03'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        {{ percentageChange(shapeOthersCount) || 0 }}\r\n                      </li>\r\n\r\n                      <li v-if=\"classIndex === category.classInfo.length - 1 && category?.categoryNm === 'Inclusion Body'\"\r\n                          style=\"cursor: default;\"\r\n                      >\r\n                        {{ percentageChange(malariaCount) || 0 }}\r\n                      </li>\r\n                    </template>\r\n\r\n                    <li v-show=\"category.categoryNm !== 'Shape'\" style=\"cursor: default;\">100%</li>\r\n                  </ul>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div ref=\"printContent\">\r\n    <Print v-if=\"printOnOff\" @printClose=\"printClose\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi, getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport {detailRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {hospitalSiteCd} from \"@/common/siteCd/siteCd\";\r\nimport {inhaPercentChange, seoulStMaryPercentChange} from \"@/common/lib/commonfunction/classFicationPercent\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItems = ref<any>([]);\r\nconst wbcInfo = ref<any>(null);\r\nconst printOnOff = ref(false);\r\nconst rbcInfo = ref<any>([]);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId)\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoAfterData = computed(() => store.state.commonModule.rbcInfoAfterData);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst orderClass = ref<any>([]);\r\nconst isLoading = ref(true);\r\nconst nonWbcTitleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst nonWbcClassList = ref<any[]>([]);\r\nconst printContent = ref<HTMLElement | null>(null);\r\n\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst sizeChromiaTotal = ref(0);\r\nconst chromiaTotalTwo = ref(0);\r\nconst shapeBodyTotal = ref(0);\r\nconst shapeOthersCount = ref(0);\r\nconst malariaCount = ref(0);\r\nconst maxRbcCount = ref(0);\r\nconst pltCount = ref(0);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst isCommitChanged = ref(false);\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n})\r\n\r\nconst handleClickOutside = (event: MouseEvent) => {\r\n  if (printContent.value && !printContent.value.contains(event.target as Node) && printOnOff.value) {\r\n    printClose();\r\n  }\r\n};\r\n\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  isLoading.value = false;\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  if (!projectBm.value) {\r\n    await rbcTotalAndReCount();\r\n    await getRbcDegreeData();\r\n    await reDegree();\r\n    await calcShapeOthersCount();\r\n  }\r\n  document.addEventListener('click', handleClickOutside);\r\n\r\n});\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleClickOutside);\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    rbcInfo.value = result.data;\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst percentChangeBySiteCd = () => {\r\n  const isSeoulStMaryHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '서울성모병원')?.siteCd === siteCd.value;\r\n  const isInhaHospitalSiteCd = hospitalSiteCd.find((item) => item.hospitalNm === '인하대병원')?.siteCd === siteCd.value;\r\n  if (isSeoulStMaryHospitalSiteCd) {\r\n    selectItems.value.wbcInfoAfter =  seoulStMaryPercentChange(selectItems.value?.wbcInfoAfter, selectItems.value?.wbcInfoAfter);\r\n  } else if (isInhaHospitalSiteCd) {\r\n    selectItems.value.wbcInfoAfter = inhaPercentChange(selectItems.value, selectItems.value?.wbcInfoAfter);\r\n  }\r\n\r\n  wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n}\r\n\r\nconst calcShapeOthersCount = async () => {\r\n  const shapeOthers: any = await getShapeOthers();\r\n  shapeOthersCount.value = shapeOthers?.artifact + shapeOthers?.doubleNormal;\r\n}\r\n\r\nconst getShapeOthers = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  const rbcInfoPathAfter = response_old.data[0].rbcClassList;\r\n  const otherCount = {artifact: 0, doubleNormal: 0};\r\n  if (!rbcInfoPathAfter) {\r\n    return;\r\n  }\r\n  rbcInfoPathAfter.forEach((item: any) => {\r\n    if (item.categoryId === '03') {\r\n      for (const classItem of item.classInfo) {\r\n        if (classItem.classNm === 'Artifact') {\r\n          otherCount.artifact += 1\r\n        } else if (classItem.classNm === 'DoubleNormal') {\r\n          otherCount.doubleNormal += 1\r\n        }\r\n      }\r\n    }\r\n  })\r\n\r\n  return otherCount;\r\n}\r\n\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${selectItems.value?.slotId}/03_RBC_Classification/${selectItems.value?.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let newRbcDataObj = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(newRbcDataObj);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  if (!rbcInfoPathAfter.value || !Array.isArray(rbcInfoPathAfter.value)) {\r\n    // console.error('rbcInfoPathAfter.value is not iterable');\r\n    return;\r\n  }\r\n  let total = 0;\r\n  let chromiaTotalval = 0;\r\n  let shapeBodyTotalVal = 0;\r\n  let shapeBodyTotalVal2 = 0;\r\n  rbcInfoPathAfter.value.forEach(el => {\r\n    const lastIndex = el.classInfo.length > 0\r\n        ? (el.classInfo[el.classInfo.length - 1].index || '').replace(/[^\\d]/g, '')\r\n        : '';\r\n\r\n    switch (el.categoryId) {\r\n      case '01':\r\n        total = lastIndex;\r\n        break;\r\n      case '02':\r\n        chromiaTotalval = lastIndex;\r\n        break;\r\n      case '03':\r\n        shapeBodyTotalVal = lastIndex;\r\n        break;\r\n      case '05':\r\n        shapeBodyTotalVal2 = lastIndex;\r\n        break;\r\n      default:\r\n        // Handle unexpected categoryId if needed\r\n        break;\r\n    }\r\n  });\r\n\r\n  rbcTotalVal.value = Number(total) + 1;\r\n  sizeChromiaTotal.value = Number(total) + 1;\r\n  chromiaTotalTwo.value = chromiaTotalval;\r\n  shapeBodyTotal.value = Number(shapeBodyTotalVal) + Number(shapeBodyTotalVal2) + 2;\r\n\r\n\r\n  // selectItems의 originalDegree 초기화\r\n  rbcInfoAfterData.value.forEach(category => {\r\n    category.classInfo.forEach(item => {\r\n      item.originalDegree = 0;\r\n    });\r\n  });\r\n\r\n  // rbcInfoPathAfter에서 아이템들 classId와 categoryId를 비교하여 originalDegree 증가시키기\r\n  rbcInfoPathAfter.value.forEach(pathCategory => {\r\n    const category = rbcInfoAfterData.value.find(cat => cat.categoryId === pathCategory.categoryId);\r\n    if (category) {\r\n      pathCategory.classInfo.forEach(pathClass => {\r\n        const classInfo = category.classInfo.find(item => item.classId === pathClass.classId);\r\n        if (classInfo) {\r\n          classInfo.originalDegree++;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  await countReAdd();\r\n}\r\n\r\nconst countReAdd = async () => {\r\n  let totalPLT = 0;\r\n  let malariaTotal = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    if (el.categoryId === '01') {\r\n      const lastElement = el.classInfo[el.classInfo.length - 1].index; // 마지막 요소 가져오기\r\n      maxRbcCount.value = Number(lastElement.replace('S', '')) + 1;\r\n    }\r\n    if (el.categoryId === '04') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Platelet') {\r\n          totalPLT += 1;\r\n        }\r\n      }\r\n    } else if (el.categoryId === '05') {\r\n      for (const xel of el.classInfo) {\r\n        if (xel.classNm === 'Malaria') {\r\n          malariaTotal += 1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  pltCount.value = Math.floor((totalPLT / parseFloat(maxRbcCount.value)) * 1000);\r\n  malariaCount.value = malariaTotal\r\n};\r\n\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\n// WbC Classification 쪽에서 Order Class 바꿀 시 Print 영역에도 바로 적용시키기 위한 코드\r\nconst classOrderChanged = async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n}\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  await getDetailRunningInfo();\r\n  await getOrderClass();\r\n  await initData();\r\n\r\n  if (!projectBm.value) {\r\n    await rbcTotalAndReCount();\r\n  }\r\n}\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = (event: MouseEvent) => {\r\n  event.stopPropagation(); // 이벤트 전파를 막아 handleClickOutside 실행 방지\r\n  printOnOff.value = true;\r\n};\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value?.wbcInfoAfter && selectItems.value?.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfoAfter, wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n\r\n    if (!nonWbcClassList.value || nonWbcClassList.value.length === 0) {\r\n      const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n      nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n      // wbcInfo.value = sortedWbcInfo;\r\n    }\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value?.wbcInfo.wbcInfo[0], wbcArrs);\r\n    nonWbcClassList.value = sortedWbcInfo.filter((item: any) => nonWbcTitleArr.includes(item.title));\r\n    selectItems.value.wbcInfoAfter = sortedWbcInfo;\r\n    wbcInfo.value = sortedWbcInfo;\r\n  }\r\n\r\n  await percentChangeBySiteCd();\r\n\r\n  rbcInfo.value = selectItems.value?.rbcInfoAfter && selectItems.value?.rbcInfoAfter.length !== 0 ? selectItems.value?.rbcInfoAfter : selectItems.value?.rbcInfo.rbcClass;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst reDegree = async () => {\r\n  let totalCount = rbcTotalVal.value;\r\n  let sizeTotal = sizeChromiaTotal.value;\r\n  let chromiaTotal = chromiaTotalTwo.value;\r\n\r\n  selectItems.value?.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if (!rbcDegreeStandard.value) {\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        // rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.originalDegree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  selectItems.value.rbcInfoAfter.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst submitStateChanged = (changedSubmitState: string) => {\r\n  if (changedSubmitState) {\r\n    isCommitChanged.value = !isCommitChanged.value;\r\n  }\r\n};\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass, vModelSelect as _vModelSelect } from \"vue\"\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"loaderBackground\"\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"loader\" }, null, -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loadingText\" }, \"Loading...\", -1)\nconst _hoisted_4 = [\n  _hoisted_2,\n  _hoisted_3\n]\nconst _hoisted_5 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_6 = [\"onClick\", \"onDrop\"]\nconst _hoisted_7 = { class: \"circle\" }\nconst _hoisted_8 = {\n  key: 1,\n  class: \"cellImgBox\"\n}\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = { class: \"mt1\" }\nconst _hoisted_11 = [\"onInput\", \"checked\"]\nconst _hoisted_12 = [\"onDrop\"]\nconst _hoisted_13 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_14 = { style: {\"position\":\"relative\"} }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_16 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\", \"onLoad\"]\nconst _hoisted_17 = {\n  key: 2,\n  class: \"divCompare\"\n}\nconst _hoisted_18 = { class: \"divCompareChild\" }\nconst _hoisted_19 = [\"value\"]\nconst _hoisted_20 = { class: \"cellImgBox\" }\nconst _hoisted_21 = { class: \"mt1\" }\nconst _hoisted_22 = [\"checked\"]\nconst _hoisted_23 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_24 = { style: {\"position\":\"relative\"} }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_26 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_27 = { class: \"divCompareChild\" }\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = { class: \"cellImgBox\" }\nconst _hoisted_30 = { class: \"mt1\" }\nconst _hoisted_31 = [\"checked\"]\nconst _hoisted_32 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_33 = { style: {\"position\":\"relative\"} }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"titleImg\"\n}\nconst _hoisted_35 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\n\nimport {computed, ref, watch, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {debounce} from \"lodash\";\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ntype WbcInfo = Item[];\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImageGallery',\n  props: {\n    wbcInfo: {},\n    updateWbcInfo: { type: Function },\n    classCompareShow: { type: Boolean },\n    selectedTitle: {},\n    hiddenImages: {},\n    setRef: { type: Function },\n    replaceFileNamePrefix: { type: Function },\n    onDragOver: { type: Function },\n    isBorderChanged: { type: Function },\n    isSelected: { type: Function },\n    totalCount: {},\n    wbcReset: { type: Boolean },\n    slotId: {},\n    iaRootPath: {},\n    projectTypeReturn: {},\n    projectType: {},\n    apiBaseUrl: {},\n    wbcInfoRefresh: {},\n    imageSize: {}\n  },\n  setup(__props: any, { expose: __expose, emit: __emit }) {\n\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClass = ref('Neutrophil-Segmented');\r\nconst firstClassObj = ref<any>({});\r\nconst lastClass = ref('Neutrophil-Band');\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst previousFirstClass = ref('Neutrophil-Segmented');\r\nconst previousLastClass = ref('Neutrophil-Band');\r\nconst loading = ref(true);\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n__expose({\r\n  scrollToElement,\r\n});\r\n\r\nconst props = __props;\r\nconst emits = __emit;\r\nconst wbcInfoArrChild = ref<any>([]);\r\nconst {wbcInfo, wbcReset} = toRefs(props);\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  loading.value = false;\r\n});\r\n\r\nconst debouncedUpdate = debounce(async (newVal) => {\r\n  const timestamp = Date.now();\r\n  loading.value = false;\r\n  wbcInfoArrChild.value = [];\r\n  wbcInfoArrChild.value = removeDuplicatesById(newVal).map((item: any, index: number) => ({\r\n    ...item,\r\n    uniqueKey: `item_${index}_${timestamp}`,\r\n    images: item.images.map((image: any, imgIndex: number) => ({\r\n      ...image,\r\n      uniqueKey: `image_${index}_${imgIndex}_${timestamp}`\r\n    })) || []\r\n  }));\r\n  if (wbcInfoArrChild.value?.some((el: any) => el.title === 'NE')) {\r\n    firstClass.value = previousFirstClass.value = 'Metamyelocyte';\r\n    lastClass.value = previousLastClass.value = 'Myelocyte';\r\n  }\r\n  await classImgChange('first', null);\r\n  await classImgChange('last', null);\r\n}, 10); //디바운스 적용\r\n\r\nwatch(wbcInfo, debouncedUpdate, { deep: true });\r\n\r\n\r\n\r\nwatch(\r\n    () => props.wbcReset,\r\n    async (newVal) => {\r\n      if (newVal) {\r\n        if (props.wbcInfoRefresh) {\r\n          return;\r\n        }\r\n        wbcInfoArrChild.value = [];\r\n        await nextTick(); // DOM 업데이트 후 실행\r\n        wbcInfoArrChild.value = props.wbcInfo.map((item, index) => ({\r\n          ...item,\r\n          uniqueKey: `item_${index}_${Date.now()}`,\r\n          images: item.images.map((image, imgIndex) => ({\r\n            ...image,\r\n            uniqueKey: `image_${index}_${imgIndex}_${Date.now()}`\r\n          })) || []\r\n        }));\r\n\r\n        await nextTick(); // 상태 업데이트 후 강제 렌더링\r\n        classImgChange('first', null);\r\n        classImgChange('last', null);\r\n      }\r\n    }\r\n);\r\n\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  } else {\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${props.iaRootPath}/${slotId}/${props.projectTypeReturn}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || props.projectType === 'pb') {\r\n    url = `${props.apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${props.apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = async (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0') {\r\n    loading.value = false\r\n  }\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (loading.value)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _hoisted_4))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"ul\", _hoisted_5, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoArrChild.value, (item) => {\n        return (_openBlock(), _createElementBlock(_Fragment, {\n          key: item.id\n        }, [\n          (siteCd.value !== '0006' && item?.title !== 'SM')\n            ? (_openBlock(), _createElementBlock(\"li\", {\n                key: 0,\n                onClick: ($event: any) => (scrollToElement(item.id)),\n                onDragover: _cache[0] || (_cache[0] = _withModifiers(($event: any) => (_ctx.$emit('onDragOverCircle')), [\"prevent\"])),\n                onDrop: ($event: any) => (_ctx.$emit('onDropCircle', item))\n              }, [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n                ])\n              ], 40, _hoisted_6))\n            : _createCommentVNode(\"\", true)\n        ], 64))\n      }), 128))\n    ]),\n    (!_ctx.classCompareShow)\n      ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_8, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoArrChild.value, (item, itemIndex) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: item.id,\n              ref_for: true,\n              ref: setRef(item.id)\n            }, [\n              (item?.count !== '0' && item?.count !== 0)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                    _createElementVNode(\"p\", _hoisted_10, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        onInput: ($event: any) => (_ctx.$emit('allCheckChange', $event, item.title)),\n                        checked: _ctx.selectedTitle === item.title\n                      }, null, 40, _hoisted_11),\n                      _createTextVNode(\" \" + _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \") \", 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true),\n              (item?.count !== '0' && item?.count !== 0 && item.images)\n                ? (_openBlock(), _createElementBlock(\"ul\", {\n                    key: 1,\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    onDragover: _cache[1] || (_cache[1] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                    onDrop: () => _ctx.$emit('onDrop', itemIndex)\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, {\n                        key: image.uniqueKey\n                      }, [\n                        (image.uniqueKey && !hiddenImages.value[`${item.id}-${image.fileName}`])\n                          ? (_openBlock(), _createElementBlock(\"li\", {\n                              key: 0,\n                              class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                              onClick: () => _ctx.$emit('selectImage', itemIndex, imageIndex, item),\n                              onDblclick: () => _ctx.$emit('openModal', image, item),\n                              onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, item), [\"prevent\"])\n                            }, [\n                              _createElementVNode(\"div\", _hoisted_14, [\n                                image\n                                  ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_15, [\n                                      _createElementVNode(\"div\", {\n                                        class: \"fileTitle\",\n                                        style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                      }, [\n                                        _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                        _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                      ], 4)\n                                    ], 512)), [\n                                      [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== item?.title]\n                                    ])\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.fileName && !hiddenImages.value[`${item.id}-${image.fileName}`])\n                                  ? (_openBlock(), _createElementBlock(\"img\", {\n                                      key: image.uniqueKey,\n                                      src: getImageUrl(image.fileName, item.id, item.title, ''),\n                                      width: _ctx.imageSize,\n                                      height: _ctx.imageSize,\n                                      style: _normalizeStyle({ filter: image.filter }),\n                                      onDragstart: () => _ctx.$emit('onDragStart', itemIndex, imageIndex),\n                                      draggable: \"true\",\n                                      class: \"cellImg\",\n                                      ref_for: true,\n                                      ref_key: \"cellRef\",\n                                      ref: cellRef,\n                                      onError: () => _ctx.$emit('hideImage', item.id, image.fileName, item.title),\n                                      onLoad: ($event: any) => (handleImageLoad(itemIndex))\n                                    }, null, 44, _hoisted_16))\n                                  : _createCommentVNode(\"\", true),\n                                (image && image.coordinates)\n                                  ? (_openBlock(), _createElementBlock(\"div\", {\n                                      key: 2,\n                                      class: \"center-point\",\n                                      style: _normalizeStyle(image.coordinates)\n                                    }, null, 4))\n                                  : _createCommentVNode(\"\", true)\n                              ])\n                            ], 42, _hoisted_13))\n                          : _createCommentVNode(\"\", true)\n                      ], 64))\n                    }), 128))\n                  ], 42, _hoisted_12))\n                : _createCommentVNode(\"\", true)\n            ]))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [\n          _createElementVNode(\"div\", _hoisted_18, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((firstClass).value = $event)),\n              onChange: _cache[3] || (_cache[3] = ($event: any) => (classImgChange('first' , $event)))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: option.id,\n                  value: option.name\n                }, _toDisplayString(option?.name), 9, _hoisted_19))\n              }), 128))\n            ], 544), [\n              [_vModelSelect, firstClass.value]\n            ]),\n            _createElementVNode(\"ul\", _hoisted_20, [\n              _createElementVNode(\"li\", null, [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"p\", _hoisted_21, [\n                    _createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      onInput: _cache[4] || (_cache[4] = ($event: any) => (_ctx.$emit('allCheckChange', $event, firstClassObj.value?.title))),\n                      checked: _ctx.selectedTitle === firstClassObj.value?.title\n                    }, null, 40, _hoisted_22),\n                    _createElementVNode(\"label\", null, _toDisplayString(firstClassObj.value?.title) + \" (\" + _toDisplayString(firstClassObj.value?.count) + \") \", 1)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass('wbcImgWrap ' + firstClassObj.value?.title),\n                  onDragover: _cache[6] || (_cache[6] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                  onDrop: _cache[7] || (_cache[7] = () => _ctx.$emit('onDrop', firstItemIndex.value))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(firstClassObj.value.images, (image, imageIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, {\n                      key: image?.fileName\n                    }, [\n                      (image && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`])\n                        ? (_openBlock(), _createElementBlock(\"li\", {\n                            key: 0,\n                            class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                            onClick: () => _ctx.$emit('selectImage', firstItemIndex.value, imageIndex, firstClassObj.value),\n                            onDblclick: () => _ctx.$emit('openModal', image, firstClassObj.value),\n                            onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, firstClassObj.value), [\"prevent\"])\n                          }, [\n                            _createElementVNode(\"div\", _hoisted_24, [\n                              image\n                                ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_25, [\n                                    _createElementVNode(\"div\", {\n                                      class: \"fileTitle\",\n                                      style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                    }, [\n                                      _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                      _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                    ], 4)\n                                  ], 512)), [\n                                    [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== firstClassObj.value?.title]\n                                  ])\n                                : _createCommentVNode(\"\", true),\n                              (image && image.fileName && !hiddenImages.value[`${firstClassObj.value.id}-${image.fileName}`])\n                                ? (_openBlock(), _createElementBlock(\"img\", {\n                                    key: 1,\n                                    src: getImageUrl(image.fileName, firstClassObj.value.id, firstClassObj.value.title, ''),\n                                    width: _ctx.imageSize,\n                                    height: _ctx.imageSize,\n                                    style: _normalizeStyle({ filter: image.filter }),\n                                    onDragstart: () => _ctx.$emit('onDragStart', firstItemIndex.value, imageIndex),\n                                    draggable: \"true\",\n                                    class: \"cellImg\",\n                                    ref_for: true,\n                                    ref_key: \"cellRef\",\n                                    ref: cellRef,\n                                    onError: () => _ctx.$emit('hideImage', firstClassObj.value.id, image.fileName, firstClassObj.value.title),\n                                    onLoad: _cache[5] || (_cache[5] = ($event: any) => (handleImageLoad(firstItemIndex.value)))\n                                  }, null, 44, _hoisted_26))\n                                : _createCommentVNode(\"\", true),\n                              (image && image.coordinates)\n                                ? (_openBlock(), _createElementBlock(\"div\", {\n                                    key: 2,\n                                    class: \"center-point\",\n                                    style: _normalizeStyle(image.coordinates)\n                                  }, null, 4))\n                                : _createCommentVNode(\"\", true)\n                            ])\n                          ], 42, _hoisted_23))\n                        : _createCommentVNode(\"\", true)\n                    ], 64))\n                  }), 128))\n                ], 34)\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_27, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((lastClass).value = $event)),\n              onChange: _cache[9] || (_cache[9] = ($event: any) => (classImgChange('last', $event)))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList.value, (option) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: option.id,\n                  value: option.name\n                }, _toDisplayString(option?.name), 9, _hoisted_28))\n              }), 128))\n            ], 544), [\n              [_vModelSelect, lastClass.value]\n            ]),\n            _createElementVNode(\"ul\", _hoisted_29, [\n              _createElementVNode(\"li\", null, [\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"p\", _hoisted_30, [\n                    _createElementVNode(\"input\", {\n                      type: \"checkbox\",\n                      onInput: _cache[10] || (_cache[10] = ($event: any) => (_ctx.$emit('allCheckChange', $event, lastClassObj.value?.title))),\n                      checked: _ctx.selectedTitle === lastClassObj.value?.title\n                    }, null, 40, _hoisted_31),\n                    _createTextVNode(\" \" + _toDisplayString(lastClassObj.value?.title) + \" (\" + _toDisplayString(lastClassObj.value?.count) + \") \", 1)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", {\n                  class: _normalizeClass('wbcImgWrap ' + lastClassObj.value?.title),\n                  onDragover: _cache[12] || (_cache[12] = _withModifiers(\n//@ts-ignore\n(...args) => (_ctx.onDragOver && _ctx.onDragOver(...args)), [\"prevent\"])),\n                  onDrop: _cache[13] || (_cache[13] = () => _ctx.$emit('onDrop', lastItemIndex.value))\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lastClassObj.value.images, (image, imageIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, {\n                      key: image?.fileName\n                    }, [\n                      (image && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`])\n                        ? (_openBlock(), _createElementBlock(\"li\", {\n                            key: 0,\n                            class: _normalizeClass({\r\n              'border-changed': _ctx.isBorderChanged(image),\r\n              'selected-image': _ctx.isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }),\n                            onClick: () => _ctx.$emit('selectImage', lastItemIndex.value, imageIndex, lastClassObj.value),\n                            onDblclick: () => _ctx.$emit('openModal', image, lastClassObj.value),\n                            onContextmenu: _withModifiers((event) => _ctx.$emit('handleRightClick', event, image, lastClassObj.value), [\"prevent\"])\n                          }, [\n                            _createElementVNode(\"div\", _hoisted_33, [\n                              image\n                                ? _withDirectives((_openBlock(), _createElementBlock(\"div\", _hoisted_34, [\n                                    _createElementVNode(\"div\", {\n                                      class: \"fileTitle\",\n                                      style: _normalizeStyle({ fontSize: _ctx.imageSize ? (parseInt(_ctx.imageSize) / 6) + 'px' : '15px' })\n                                    }, [\n                                      _createTextVNode(_toDisplayString(_ctx.replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                      _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                                    ], 4)\n                                  ], 512)), [\n                                    [_vShow, _ctx.replaceFileNamePrefix(image.fileName) !== lastClassObj.value?.title]\n                                  ])\n                                : _createCommentVNode(\"\", true),\n                              (image && image.fileName && !hiddenImages.value[`${lastClassObj.value.id}-${image.fileName}`])\n                                ? (_openBlock(), _createElementBlock(\"img\", {\n                                    key: 1,\n                                    src: getImageUrl(image.fileName, lastClassObj.value.id, lastClassObj.value.title, ''),\n                                    width: _ctx.imageSize,\n                                    height: _ctx.imageSize,\n                                    style: _normalizeStyle({ filter: image.filter }),\n                                    onDragstart: () => _ctx.$emit('onDragStart', lastItemIndex.value, imageIndex),\n                                    draggable: \"true\",\n                                    class: \"cellImg\",\n                                    ref_for: true,\n                                    ref_key: \"cellRef\",\n                                    ref: cellRef,\n                                    onError: () => _ctx.$emit('hideImage', lastClassObj.value.id, image.fileName, lastClassObj.value.title),\n                                    onLoad: _cache[11] || (_cache[11] = ($event: any) => (handleImageLoad(lastItemIndex.value)))\n                                  }, null, 44, _hoisted_35))\n                                : _createCommentVNode(\"\", true),\n                              (image && image.coordinates)\n                                ? (_openBlock(), _createElementBlock(\"div\", {\n                                    key: 2,\n                                    class: \"center-point\",\n                                    style: _normalizeStyle(image.coordinates)\n                                  }, null, 4))\n                                : _createCommentVNode(\"\", true)\n                            ])\n                          ], 42, _hoisted_32))\n                        : _createCommentVNode(\"\", true)\n                    ], 64))\n                  }), 128))\n                ], 34)\n              ])\n            ])\n          ])\n        ]))\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"loaderBackground\" v-if=\"loading\">\r\n    <div class=\"loader\"></div>\r\n    <p class=\"loadingText\">Loading...</p>\r\n  </div>\r\n  <ul class=\"wbcInfoDbUl\">\r\n    <template v-for=\"(item) in wbcInfoArrChild\" :key=\"item.id\">\r\n      <li @click=\"scrollToElement(item.id)\" v-if=\"siteCd !== '0006' && item?.title !== 'SM'\"\r\n          @dragover.prevent=\"$emit('onDragOverCircle')\" @drop=\"$emit('onDropCircle', item)\">\r\n        <div class=\"circle\">\r\n          <p>{{ item?.title }}</p>\r\n          <p>{{ item?.count }}</p>\r\n        </div>\r\n      </li>\r\n    </template>\r\n  </ul>\r\n  <ul class=\"cellImgBox\" v-if=\"!classCompareShow\">\r\n    <li v-for=\"(item, itemIndex) in wbcInfoArrChild\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n      <div v-if=\"item?.count !== '0' && item?.count !== 0\">\r\n        <p class=\"mt1\">\r\n          <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, item.title)\"\r\n                 :checked=\"selectedTitle === item.title\">\r\n          {{ item?.title }}\r\n          ({{ item?.count }})\r\n        </p>\r\n      </div>\r\n      <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver\" @drop=\"() => $emit('onDrop', itemIndex)\"\r\n          v-if=\"item?.count !== '0' && item?.count !== 0 && item.images\">\r\n        <template v-for=\"(image, imageIndex) in item.images\" :key=\"image.uniqueKey\">\r\n          <li\r\n              :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n              @click=\"() => $emit('selectImage', itemIndex, imageIndex, item)\"\r\n              @dblclick=\"() => $emit('openModal', image, item)\"\r\n              v-if=\"image.uniqueKey && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n              @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, item)\"\r\n          >\r\n            <div style=\"position: relative;\">\r\n              <div v-if=\"image\" class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                <div class=\"fileTitle\" :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                  {{ replaceFileNamePrefix(image.fileName) }}\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'arrow-right']\"/>\r\n                  {{ image.title }}\r\n                </div>\r\n              </div>\r\n              <img\r\n                  v-if=\"image && image.fileName && !hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                  :key=\"image.uniqueKey\"\r\n                  :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                  :width=\"imageSize\"\r\n                  :height=\"imageSize\"\r\n                  :style=\"{ filter: image.filter }\"\r\n                  @dragstart=\"() => $emit('onDragStart', itemIndex, imageIndex)\"\r\n                  draggable=\"true\"\r\n                  class=\"cellImg\"\r\n                  ref=\"cellRef\"\r\n                  @error=\"() => $emit('hideImage', item.id, image.fileName, item.title)\"\r\n                  @load=\"handleImageLoad(itemIndex)\"\r\n              />\r\n              <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n            </div>\r\n          </li>\r\n        </template>\r\n      </ul>\r\n    </li>\r\n  </ul>\r\n  <!--  클래스 단일 비교 부분 -->\r\n  <div v-else class=\"divCompare\">\r\n    <div class=\"divCompareChild\">\r\n<!--      ssss-->\r\n      <select v-model=\"firstClass\" @change=\"classImgChange('first' , $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt1\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, firstClassObj?.title)\"\r\n                     :checked=\"selectedTitle === firstClassObj?.title\">\r\n              <label>\r\n                {{ firstClassObj?.title }}\r\n                ({{ firstClassObj?.count }})\r\n              </label>\r\n\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + firstClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', firstItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in firstClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                  @click=\"() => $emit('selectImage', firstItemIndex, imageIndex, firstClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, firstClassObj)\"\r\n                  v-if=\"image && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, firstClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== firstClassObj?.title\">\r\n                    <div class=\"fileTitle\"\r\n                         :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                      {{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img\r\n                      v-if=\"image && image.fileName && !hiddenImages[`${firstClassObj.id}-${image.fileName}`]\"\r\n                      :src=\"getImageUrl(image.fileName, firstClassObj.id, firstClassObj.title, '')\"\r\n                      :width=\"imageSize\"\r\n                      :height=\"imageSize\"\r\n                      :style=\"{ filter: image.filter }\"\r\n                      @dragstart=\"() => $emit('onDragStart', firstItemIndex, imageIndex)\"\r\n                      draggable=\"true\"\r\n                      class=\"cellImg\"\r\n                      ref=\"cellRef\"\r\n                      @error=\"() => $emit('hideImage', firstClassObj.id, image.fileName, firstClassObj.title)\"\r\n                      @load=\"handleImageLoad(firstItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"divCompareChild\">\r\n      <select v-model=\"lastClass\" @change=\"classImgChange('last', $event)\">\r\n        <option v-for=\"option in classList\" :key=\"option.id\" :value=\"option.name\">{{ option?.name }}</option>\r\n      </select>\r\n      <ul class=\"cellImgBox\">\r\n        <li>\r\n          <div>\r\n            <p class=\"mt1\">\r\n              <input type=\"checkbox\" @input=\"$emit('allCheckChange', $event, lastClassObj?.title)\"\r\n                     :checked=\"selectedTitle === lastClassObj?.title\">\r\n              {{ lastClassObj?.title }}\r\n              ({{ lastClassObj?.count }})\r\n            </p>\r\n          </div>\r\n          <ul :class=\"'wbcImgWrap ' + lastClassObj?.title\" @dragover.prevent=\"onDragOver\"\r\n              @drop=\"() => $emit('onDrop', lastItemIndex)\">\r\n            <template v-for=\"(image, imageIndex) in lastClassObj.images\" :key=\"image?.fileName\">\r\n              <li\r\n                  :class=\"{\r\n              'border-changed': isBorderChanged(image),\r\n              'selected-image': isSelected(image),\r\n              'wbcImgWrapLi': true\r\n            }\"\r\n                  @click=\"() => $emit('selectImage', lastItemIndex, imageIndex, lastClassObj)\"\r\n                  @dblclick=\"() => $emit('openModal', image, lastClassObj)\"\r\n                  v-if=\"image && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                  @contextmenu.prevent=\"(event) => $emit('handleRightClick', event, image, lastClassObj)\"\r\n              >\r\n                <div style=\"position: relative;\">\r\n                  <div v-if=\"image\" class=\"titleImg\"\r\n                       v-show=\"replaceFileNamePrefix(image.fileName) !== lastClassObj?.title\">\r\n                    <div class=\"fileTitle\"\r\n                         :style=\"{ fontSize: imageSize ? (parseInt(imageSize) / 6) + 'px' : '15px' }\">\r\n                      {{ replaceFileNamePrefix(image.fileName) }}\r\n                      <font-awesome-icon\r\n                          :icon=\"['fas', 'arrow-right']\"/>\r\n                      {{ image.title }}\r\n                    </div>\r\n                  </div>\r\n                  <img\r\n                      v-if=\"image && image.fileName && !hiddenImages[`${lastClassObj.id}-${image.fileName}`]\"\r\n                      :src=\"getImageUrl(image.fileName, lastClassObj.id, lastClassObj.title, '')\"\r\n                       :width=\"imageSize\"\r\n                       :height=\"imageSize\"\r\n                       :style=\"{ filter: image.filter }\"\r\n                       @dragstart=\"() => $emit('onDragStart', lastItemIndex, imageIndex)\"\r\n                       draggable=\"true\"\r\n                       class=\"cellImg\"\r\n                       ref=\"cellRef\"\r\n                       @error=\"() => $emit('hideImage', lastClassObj.id, image.fileName, lastClassObj.title)\"\r\n                       @load=\"handleImageLoad(lastItemIndex)\"\r\n                  />\r\n                  <div v-if=\"image && image.coordinates\" class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                </div>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {computed, ref, watch, defineExpose, toRefs, onMounted, nextTick} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {removeDuplicatesById} from \"@/common/lib/utils/removeDuplicateIds\";\r\nimport {debounce} from \"lodash\";\r\n\r\nconst refsArray = ref<any[]>([]);\r\nconst store = useStore();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cellRef = ref<HTMLElement | null>(null);\r\nconst firstClass = ref('Neutrophil-Segmented');\r\nconst firstClassObj = ref<any>({});\r\nconst lastClass = ref('Neutrophil-Band');\r\nconst firstItemIndex = ref(0);\r\nconst lastItemIndex = ref(0);\r\nconst lastClassObj = ref<any>({});\r\nconst classList = ref<any>([]);\r\nconst previousFirstClass = ref('Neutrophil-Segmented');\r\nconst previousLastClass = ref('Neutrophil-Band');\r\nconst loading = ref(true);\r\nconst scrollToElement = (itemId: any) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\ndefineExpose({\r\n  scrollToElement,\r\n});\r\n\r\ninterface Image {\r\n  fileName: string;\r\n  width?: string;\r\n  height?: string;\r\n  filter?: string;\r\n  coordinates?: string;\r\n  title?: string;\r\n}\r\n\r\ninterface Item {\r\n  id: string;\r\n  title: string;\r\n  count: string | number;\r\n  images: Image[];\r\n}\r\n\r\ntype WbcInfo = Item[];\r\n\r\n\r\nconst props = defineProps<{\r\n  wbcInfo: WbcInfo;\r\n  updateWbcInfo: (newInfo: any) => void;\r\n  classCompareShow: boolean;\r\n  selectedTitle: string;\r\n  hiddenImages: { [key: string]: boolean };\r\n  setRef: (el: any, id: string) => void;\r\n  replaceFileNamePrefix: (fileName: string) => string;\r\n  onDragOver: () => void;\r\n  isBorderChanged: (image: Image) => boolean;\r\n  isSelected: (image: Image) => boolean;\r\n  totalCount: string;\r\n  wbcReset: boolean;\r\n  slotId: any;\r\n  iaRootPath: any;\r\n  projectTypeReturn: any;\r\n  projectType: any;\r\n  apiBaseUrl: any;\r\n  wbcInfoRefresh: any;\r\n  imageSize: number;\r\n}>();\r\nconst emits = defineEmits();\r\nconst wbcInfoArrChild = ref<any>([]);\r\nconst {wbcInfo, wbcReset} = toRefs(props);\r\n\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({...props.hiddenImages});\r\n\r\nwatch(props.hiddenImages, (newVal) => {\r\n  hiddenImages.value = {...newVal};\r\n  loading.value = false;\r\n});\r\n\r\nconst debouncedUpdate = debounce(async (newVal) => {\r\n  const timestamp = Date.now();\r\n  loading.value = false;\r\n  wbcInfoArrChild.value = [];\r\n  wbcInfoArrChild.value = removeDuplicatesById(newVal).map((item: any, index: number) => ({\r\n    ...item,\r\n    uniqueKey: `item_${index}_${timestamp}`,\r\n    images: item.images.map((image: any, imgIndex: number) => ({\r\n      ...image,\r\n      uniqueKey: `image_${index}_${imgIndex}_${timestamp}`\r\n    })) || []\r\n  }));\r\n  if (wbcInfoArrChild.value?.some((el: any) => el.title === 'NE')) {\r\n    firstClass.value = previousFirstClass.value = 'Metamyelocyte';\r\n    lastClass.value = previousLastClass.value = 'Myelocyte';\r\n  }\r\n  await classImgChange('first', null);\r\n  await classImgChange('last', null);\r\n}, 10); //디바운스 적용\r\n\r\nwatch(wbcInfo, debouncedUpdate, { deep: true });\r\n\r\n\r\n\r\nwatch(\r\n    () => props.wbcReset,\r\n    async (newVal) => {\r\n      if (newVal) {\r\n        if (props.wbcInfoRefresh) {\r\n          return;\r\n        }\r\n        wbcInfoArrChild.value = [];\r\n        await nextTick(); // DOM 업데이트 후 실행\r\n        wbcInfoArrChild.value = props.wbcInfo.map((item, index) => ({\r\n          ...item,\r\n          uniqueKey: `item_${index}_${Date.now()}`,\r\n          images: item.images.map((image, imgIndex) => ({\r\n            ...image,\r\n            uniqueKey: `image_${index}_${imgIndex}_${Date.now()}`\r\n          })) || []\r\n        }));\r\n\r\n        await nextTick(); // 상태 업데이트 후 강제 렌더링\r\n        classImgChange('first', null);\r\n        classImgChange('last', null);\r\n      }\r\n    }\r\n);\r\n\r\nconst handleImageLoad = (itemIndex: any) => {\r\n  emits('update:cellRef', cellRef);\r\n  classImgChange('first', null);\r\n  classImgChange('last', null);\r\n  classList.value = props.wbcInfo.filter((item: any) => siteCd.value !== '0006' && item?.title !== 'SM');\r\n\r\n  if (itemIndex === props.wbcInfo.length - 1 || itemIndex < props.wbcInfo.length - 1) {\r\n    loading.value = false;\r\n  } else {\r\n    loading.value = true;\r\n  }\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = props.slotId || '';\r\n  const folderPath = `${props.iaRootPath}/${slotId}/${props.projectTypeReturn}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || props.projectType === 'pb') {\r\n    url = `${props.apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${props.apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\nconst classImgChange = async (type: string, event: any) => {\r\n  const updateClassValue = (currentClass: any, previousClass: any, classObj: any, itemIndex: any) => {\r\n    if (firstClass.value === lastClass.value) {\r\n      currentClass.value = previousClass.value;\r\n      return;\r\n    } else {\r\n      previousClass.value = event ? event.target.value : currentClass.value;\r\n    }\r\n    classObj.value = props.wbcInfo.find((option: any) => option?.name === currentClass.value);\r\n    itemIndex.value = props.wbcInfo.findIndex((option: any) => option?.name === currentClass.value);\r\n  };\r\n\r\n  if (type === 'first') {\r\n    updateClassValue(firstClass, previousFirstClass, firstClassObj, firstItemIndex);\r\n  } else {\r\n    updateClassValue(lastClass, previousLastClass, lastClassObj, lastItemIndex);\r\n  }\r\n  if (props.totalCount === '0') {\r\n    loading.value = false\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImageGallery.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"topClintInfo\" }\nconst _hoisted_4 = { class: \"imgMenuSetDiv\" }\nconst _hoisted_5 = { class: \"sizeContainer\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"sizeTitle\" }, \"Size\", -1)\nconst _hoisted_7 = { class: \"customImgSet size\" }\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_10 = { class: \"imgSet\" }\nconst _hoisted_11 = { class: \"customImgSet\" }\nconst _hoisted_12 = { class: \"customImgSet rgb\" }\nconst _hoisted_13 = { class: \"alignItemsCenter\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"label\", null, \"R\", -1)\nconst _hoisted_15 = { class: \"alignItemsCenter\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"label\", null, \"G\", -1)\nconst _hoisted_17 = { class: \"alignItemsCenter\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"label\", null, \"B\", -1)\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = { class: \"wbcModalImageContent\" }\nconst _hoisted_21 = [\"src\"]\nconst _hoisted_22 = { class: \"buttons\" }\nconst _hoisted_23 = { class: \"rangeBox\" }\n\nimport {computed, getCurrentInstance, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {classInfoDetailApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst wbcInfoRefresh = ref(false);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('200px');\r\nconst modalImageHeight = ref('200px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\nconst zoomValue = ref(200);\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst wbcReset = ref(false);\r\nconst showImageGallery = ref(true);\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  wbcInfo.value = [];\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  wbcInfoRefresh.value = true;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n\r\n  cellMarkerIcon.value = false;\r\n  await drawCellMarker(true);\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\nconst handleZoom = () => {\r\n  const newSize = zoomValue.value;\r\n  modalImageWidth.value = `${newSize}px`;\r\n  modalImageHeight.value = `${newSize}px`;\r\n};\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await classInfoDetailApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n\r\n    const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path !== null && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n    iaRootPath.value = path;\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\nconst percentConvertToPixel = (percent: number): number => {\r\n  return Math.floor((percent - 30) * 240 / 170 + 50);\r\n}\r\n\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id == wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    // await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\n\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst handleWheel = (event: WheelEvent) => {\r\n  if (event.deltaY < 0) {\r\n    zoomIn();\r\n  } else {\r\n    zoomOut();\r\n  }\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 600);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 600);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 200);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 200);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  wbcInfoRefresh.value = true;\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  showImageGallery.value = false;\r\n\r\n  cellMarkerIcon.value = false;\r\n  await getDetailRunningInfo();\r\n  showImageGallery.value = true;\r\n  await drawCellMarker(true);\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n\r\n\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  const newSize = Number(event?.target?.value);\r\n\r\n  for (const item of wbcInfo.value) {\r\n    for (const image of item.images) {\r\n      image.width = newSize;\r\n      image.height = newSize;\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\n\r\nconst updateImageSize = (event: Event) => {\r\n  const target = event.target as HTMLInputElement;\r\n  const newPercentValue = parseFloat(target.value);\r\n  if (!isNaN(newPercentValue)) {\r\n    imageSize.value = percentConvertToPixel(newPercentValue + 1);\r\n  }\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\nconst displayValue = computed(() => {\r\n  return imgPixelConvertToPercent(imageSize.value).replace('%', '');\r\n});\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nasync function addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const updatedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n\r\n    const matchingItemIndex = updatedWbcInfo.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      updatedWbcInfo[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], wbcInfo.value[draggedCircleIndex.value], updatedWbcInfo[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  if (event.key === 'Escape' && modalOpen) {\r\n    modalOpen.value = false;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  await addToRollbackHistory();\r\n\r\n  const selectedImagesToMove = [];\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      selectedImagesToMove.push({\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      });\r\n    }\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetIndex, selectedImagesToMove, selectedImages, targetItem, true, 'keyMove');\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // UIMD web 팀에서만 사용하는 코드\r\n  await handleMoveImages();\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img.fileName === selectedImage.fileName);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n\r\n  const selectedImagesToMove = [];\r\n  const draggedItems = [];\r\n  const targetItems = [];\r\n  let type = false;\r\n  let keyMove = '';\r\n\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) =>\r\n        item.images.some((img: any) => img.fileName === fileName)\r\n    );\r\n\r\n    if (draggedItemIndex === -1) {\r\n      console.error(`Dragged item with image ${fileName} not found`);\r\n      continue;\r\n    }\r\n\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    selectedImagesToMove.push({fileName: selectedImage.fileName});\r\n    draggedItems.push(draggedItem);\r\n    targetItems.push(wbcInfo.value[targetItemIndex]);\r\n\r\n    keyMove = keyMove || (selectedImage.keyMove || '');\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetItemIndex, selectedImagesToMove, draggedItems, targetItems[0], type, keyMove);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  wbcInfoRefresh.value = false;\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n  let idx = 0;\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName);\r\n    try {\r\n      if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n        const formattedTargetItemId = targetItem.id < 10 ? `0${targetItem.id}` : targetItem.id;\r\n\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem[idx].title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${formattedTargetItemId}_${targetItem.abbreviation}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      } else if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n        let newArr: any;\r\n        if (!draggedItem[idx]) {\r\n          newArr = draggedItem;\r\n        } else {\r\n          newArr = draggedItem[idx];\r\n        }\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${newArr.id}_${newArr.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during image move:', error);\r\n    }\r\n    idx++;\r\n  }\r\n\r\n  // 최종적으로 백엔드로 데이터 전송\r\n  const data = {\r\n    sourceFolders,\r\n    destinationFolders,\r\n    fileNames\r\n  };\r\n  try {\r\n\r\n    const res = await moveClassImagePost(data);\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    if (res) {\r\n      // console.log('wbc 옮기기');\r\n      let idx = 0;\r\n      for (const selectedImage of arrType) {\r\n        const fileName = selectedImage.fileName;\r\n\r\n        if (keyMove === 'keyMove') {\r\n          // 이미지를 타겟 아이템으로 이동\r\n          const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n          const sourceItem = wbcInfo.value[sourceItemIndex];\r\n          const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === fileName);\r\n          if (imageIndex !== -1) {\r\n            const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n            image.title = wbcInfo.value[targetItemIndex].title;\r\n            image.width = imageSize.value;\r\n            image.height = imageSize.value;\r\n            wbcInfo.value[targetItemIndex].images.push(image);\r\n            // 카운트 업데이트\r\n            sourceItem.count--;\r\n            wbcInfo.value[targetItemIndex].count++;\r\n          }\r\n        } else {\r\n          let newArr: any = [];\r\n          if (!draggedItem[idx]) {\r\n            newArr = draggedItem;\r\n          } else {\r\n            newArr = draggedItem[idx];\r\n          }\r\n          // 드래그된 이미지를 원래 위치에서 제거\r\n          const draggedImageIndex = newArr.images.findIndex((img: any) => img.fileName === fileName);\r\n          if (draggedImageIndex !== -1) {\r\n            newArr.images.splice(draggedImageIndex, 1);\r\n          }\r\n          const newArrIdx = wbcInfo.value.findIndex((item: any) => item.title === newArr.title);\r\n          wbcInfo.value[newArrIdx] = newArr;\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n          };\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              });\r\n            }\r\n          });\r\n        }\r\n        idx++;\r\n      }\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      shiftClickImages.value = [];\r\n      await updateOriginalDb();\r\n    } else {\r\n      console.error('이미지 옮기기 실패.');\r\n    }\r\n  } catch (error) {\r\n    console.error('이미지 옮기는 작업 서버 실패:', error);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  }\r\n\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    try {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      for (const seItem of selectItemImageArr.value) {\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n        const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n        const targetItem = wbcInfo.value[targetItemIndex];\r\n        for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n          const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n          targetItem.images.push(...findImage);\r\n          targetItem.count = targetItem.images.length;\r\n          const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n          if (draggedItemIdx !== -1) {\r\n            const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n            const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n            const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n            // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n            draggedItemObj.images = filteredImages;\r\n            draggedItemObj.count = draggedItemObj.images.length;\r\n          }\r\n        }\r\n        for (const images of selectedImagesToMove) {\r\n          images.title = wbcInfo.value[targetItemIndex].title;\r\n          images.width = imageSize.value;\r\n          images.height = imageSize.value;\r\n        }\r\n      } else {\r\n        console.error('이미지 움직임 실패.');\r\n      }\r\n    } catch (error) {\r\n      console.error('서버 이미지 옮기기 실패:', error);\r\n    } finally {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: selectItems.value?.id})\r\n    wbcInfo.value = clonedWbcInfo;\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await classInfoDetailApi(String(selectItems.value?.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n        const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb, dayQuery:dayQuery})\r\n    if (response && response?.data.length !== 0) {\r\n\r\n      // getWbcCustomClasses(false, null);\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n      wbcInfo.value = [];\r\n      wbcInfo.value = response.data[0].wbcInfoAfter;\r\n\r\n      const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n      await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcReset.value = true;\r\n      await nextTick();\r\n      wbcReset.value = false;\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst handleMoveImages = async () => {\r\n  try {\r\n    const folderPath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}`;\r\n    const response = await fetch(`${apiBaseUrl}/folders/check-and-move-images`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({folderPath, wbcInfo: wbcInfo.value}),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse\n    }, null, 8, [\"isNext\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight shadowBox' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        (!isLoading.value)\n          ? (_openBlock(), _createBlock(ClassInfo, {\n              key: 0,\n              wbcInfo: wbcInfo.value,\n              selectItems: selectItems.value,\n              classCompareShow: classCompareShow.value,\n              type: \"listTable\",\n              onNextPage: nextPage,\n              onScrollEvent: scrollToElement\n            }, null, 8, [\"wbcInfo\", \"selectItems\", \"classCompareShow\"]))\n          : _createCommentVNode(\"\", true)\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _createTextVNode(\" Cell Marking \")\n          ]),\n          _createElementVNode(\"button\", {\n            onClick: showSizeControl,\n            class: \"sizeButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _createTextVNode(\" Size \")\n          ]),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"div\", null, [\n              _hoisted_6,\n              _createElementVNode(\"div\", _hoisted_7, [\n                _createElementVNode(\"input\", {\n                  type: \"number\",\n                  value: displayValue.value,\n                  onInput: updateImageSize\n                }, null, 40, _hoisted_8)\n              ]),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"50\",\n                max: \"290\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ]),\n              _createElementVNode(\"button\", {\n                class: \"resetBtn mb1\",\n                onClick: imgSizeReset\n              }, \"Size Reset\")\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_9, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _createTextVNode(\" IMG Setting \")\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_10, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _createTextVNode(\" Brightness \"),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                    onInput: changeImgBrightness\n                  }, null, 544), [\n                    [_vModelText, imgBrightness.value]\n                  ])\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"120\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb2\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _createTextVNode(\" RGB \"),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _createTextVNode(\" [ \"),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: _cache[5] || (_cache[5] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ]),\n                  _createTextVNode(\", \"),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: _cache[7] || (_cache[7] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ]),\n                  _createTextVNode(\", \"),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"number\",\n                    \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: _cache[9] || (_cache[9] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ]),\n                  _createTextVNode(\" ] \")\n                ]),\n                _createElementVNode(\"div\", _hoisted_13, [\n                  _hoisted_14,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: _cache[11] || (_cache[11] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_15, [\n                  _hoisted_16,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: _cache[13] || (_cache[13] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_17, [\n                  _hoisted_18,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[14] || (_cache[14] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: _cache[15] || (_cache[15] = ($event: any) => (changeImageRgb('')))\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ])\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          _createElementVNode(\"button\", { onClick: classCompare }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'code-compare'] }),\n            _createTextVNode(\" Class Compare \")\n          ]),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _createTextVNode(\" Rollback \")\n          ])\n        ]),\n        _createElementVNode(\"div\", null, [\n          (showImageGallery.value)\n            ? (_openBlock(), _createBlock(ImageGallery, {\n                key: 0,\n                ref_key: \"$imageGalleryRef\",\n                ref: $imageGalleryRef,\n                wbcInfoRefresh: wbcInfoRefresh.value,\n                wbcInfo: wbcInfo.value,\n                wbcReset: wbcReset.value,\n                totalCount: selectItems.value?.wbcInfo?.totalCount,\n                slotId: selectItems.value?.slotId,\n                iaRootPath: iaRootPath.value,\n                projectTypeReturn: projectTypeReturn(projectType.value),\n                projectType: projectType.value,\n                apiBaseUrl: _unref(apiBaseUrl),\n                classCompareShow: classCompareShow.value,\n                selectedTitle: selectedTitle.value,\n                hiddenImages: hiddenImages.value,\n                replaceFileNamePrefix: replaceFileNamePrefix,\n                onDragOver: onDragOver,\n                isBorderChanged: isBorderChanged,\n                isSelected: isSelected,\n                imageSize: imageSize.value,\n                updateWbcInfo: updateWbcInfo.value,\n                onAllCheckChange: allCheckChange,\n                onSelectImage: selectImage,\n                onOpenModal: openModal,\n                onHideImage: hideImage,\n                onHandleRightClick: handleRightClick,\n                onOnDrop: onDrop,\n                onOnDragStart: onDragStart,\n                onOnDropCircle: onDropCircle,\n                onOnDragOverCircle: onDragOverCircle,\n                onScrollToElement: scrollToElement,\n                cellRef: cellRef.value,\n                \"onUpdate:cellRef\": handleUpdateCellRef\n              }, null, 8, [\"wbcInfoRefresh\", \"wbcInfo\", \"wbcReset\", \"totalCount\", \"slotId\", \"iaRootPath\", \"projectTypeReturn\", \"projectType\", \"apiBaseUrl\", \"classCompareShow\", \"selectedTitle\", \"hiddenImages\", \"imageSize\", \"updateWbcInfo\", \"cellRef\"]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(item.name), 9, _hoisted_19))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", {\n          class: \"wbcModal\",\n          onWheel: handleWheel\n        }, [\n          _createElementVNode(\"div\", {\n            class: \"wbc-modal-content\",\n            onClick: outerClickCloseModal\n          }, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_20, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\",\n                ref: \"modalImage\"\n              }, null, 12, _hoisted_21)\n            ]),\n            _createElementVNode(\"div\", _hoisted_22, [\n              _createElementVNode(\"div\", _hoisted_23, [\n                _createElementVNode(\"p\", null, _toDisplayString(((zoomValue.value - 200) / 400 * 100).toFixed(0)) + \" %\", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"200\",\n                  max: \"600\",\n                  \"onUpdate:modelValue\": _cache[16] || (_cache[16] = ($event: any) => ((zoomValue).value = $event)),\n                  onInput: handleZoom\n                }, null, 544), [\n                  [_vModelText, zoomValue.value]\n                ])\n              ])\n            ])\n          ])\n        ], 544), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>\r\n          {{ projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}\r\n        </li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight shadowBox' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo v-if=\"!isLoading\" :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" :classCompareShow=\"classCompareShow\"\r\n                 type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <!--size-->\r\n        <button @click=\"showSizeControl\" class=\"sizeButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            <div class=\"sizeTitle\">Size</div>\r\n            <div class=\"customImgSet size\">\r\n              <!--              {{ imgPixelConvertToPercent(imageSize) }}-->\r\n              <input\r\n                  type=\"number\"\r\n                  :value=\"displayValue\"\r\n                  @input=\"updateImageSize\"\r\n              />\r\n            </div>\r\n            <!--            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>-->\r\n            <input\r\n                type=\"range\"\r\n                min=\"50\"\r\n                max=\"290\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <button class=\"resetBtn mb1\" @click=\"imgSizeReset\">Size Reset</button>\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness\r\n              <div class=\"customImgSet\"><input type=\"number\" v-model=\"imgBrightness\" @input=\"changeImgBrightness\"/>\r\n              </div>\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"120\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb2\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB\r\n              <div class=\"customImgSet rgb\">\r\n                [\r\n                <input type=\"number\" v-model=\"imageRgb[0]\" @input=\"changeImageRgb('')\"/>,\r\n                <input type=\"number\" v-model=\"imageRgb[1]\" @input=\"changeImageRgb('')\"/>,\r\n                <input type=\"number\" v-model=\"imageRgb[2]\" @input=\"changeImageRgb('')\"/>\r\n                ]\r\n              </div>\r\n              <div class=\"alignItemsCenter\">\r\n                <label>R</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[0]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"alignItemsCenter\">\r\n                <label>G</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[1]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <div class=\"alignItemsCenter\">\r\n                <label>B</label>\r\n                <input\r\n                    type=\"range\"\r\n                    min=\"0\"\r\n                    max=\"255\"\r\n                    v-model=\"imageRgb[2]\"\r\n                    @input=\"changeImageRgb('')\"\r\n                />\r\n              </div>\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button @click=\"classCompare\">\r\n          <font-awesome-icon :icon=\"['fas', 'code-compare']\"/>\r\n          Class Compare\r\n        </button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n      <div>\r\n        <ImageGallery\r\n            v-if=\"showImageGallery\"\r\n            ref=\"$imageGalleryRef\"\r\n            :wbcInfoRefresh=\"wbcInfoRefresh\"\r\n            :wbcInfo=\"wbcInfo\"\r\n            :wbcReset=\"wbcReset\"\r\n            :totalCount=\"selectItems?.wbcInfo?.totalCount\"\r\n            :slotId=\"selectItems?.slotId\"\r\n            :iaRootPath=\"iaRootPath\"\r\n            :projectTypeReturn=\"projectTypeReturn(projectType)\"\r\n            :projectType=\"projectType\"\r\n            :apiBaseUrl=\"apiBaseUrl\"\r\n            :classCompareShow=\"classCompareShow\"\r\n            :selectedTitle=\"selectedTitle\"\r\n            :hiddenImages=\"hiddenImages\"\r\n            :replaceFileNamePrefix=\"replaceFileNamePrefix\"\r\n            :onDragOver=\"onDragOver\"\r\n            :isBorderChanged=\"isBorderChanged\"\r\n            :isSelected=\"isSelected\"\r\n            :imageSize=\"imageSize\"\r\n            :updateWbcInfo=\"updateWbcInfo\"\r\n            @allCheckChange=\"allCheckChange\"\r\n            @selectImage=\"selectImage\"\r\n            @openModal=\"openModal\"\r\n            @hideImage=\"hideImage\"\r\n            @handleRightClick=\"handleRightClick\"\r\n            @onDrop=\"onDrop\"\r\n            @onDragStart=\"onDragStart\"\r\n            @onDropCircle=\"onDropCircle\"\r\n            @onDragOverCircle=\"onDragOverCircle\"\r\n            @scrollToElement=\"scrollToElement\"\r\n            :cellRef=\"cellRef\"\r\n            @update:cellRef=\"handleUpdateCellRef\"\r\n        />\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\" @wheel=\"handleWheel\">\r\n        <div class=\"wbc-modal-content\" @click=\"outerClickCloseModal\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\" ref=\"modalImage\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <div class=\"rangeBox\">\r\n              <p>{{ ((zoomValue - 200) / 400 * 100).toFixed(0) }} %</p>\r\n              <input type=\"range\" min=\"200\" max=\"600\" v-model=\"zoomValue\" @input=\"handleZoom\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, getCurrentInstance, nextTick, onBeforeMount, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {classInfoDetailApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nimport ImageGallery from '@/views/datebase/commponent/detail/classInfo/ImageGallery.vue';\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {disableScroll, enableScroll} from \"@/common/lib/utils/scrollBlock\";\r\n\r\nconst selectedTitle = ref('');\r\nconst wbcInfo = ref<any>(null);\r\nconst updateWbcInfo = ref<any>(null)\r\n\r\nconst selectItems = ref<any>(null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst wbcInfoRefresh = ref(false);\r\n\r\nconst draggedCircleIndex = ref<any>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<any>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('200px');\r\nconst modalImageHeight = ref('200px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = sessionStorage.getItem('viewerCheck') === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\nconst zoomValue = ref(200);\r\n\r\nconst selectItemImageArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst isLoading = ref(true);\r\nconst $imageGalleryRef = ref<any>(null);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst wbcReset = ref(false);\r\nconst showImageGallery = ref(true);\r\n\r\nonBeforeMount(async () => {\r\n  isLoading.value = false;\r\n  projectType.value = window.PROJECT_TYPE;\r\n})\r\n\r\nonMounted(async () => {\r\n  await getDetailRunningInfo();\r\n  wbcInfo.value = [];\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  wbcInfoRefresh.value = true;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n\r\n  cellMarkerIcon.value = false;\r\n  await drawCellMarker(true);\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nwatch(() => moveImgIsBool.value, (currentMoveImgIsBool) => {\r\n  if (currentMoveImgIsBool) {\r\n    disableScroll();\r\n  } else {\r\n    enableScroll();\r\n  }\r\n})\r\nconst handleZoom = () => {\r\n  const newSize = zoomValue.value;\r\n  modalImageWidth.value = `${newSize}px`;\r\n  modalImageHeight.value = `${newSize}px`;\r\n};\r\n\r\nconst getDetailRunningInfo = async () => {\r\n  try {\r\n    const result = await classInfoDetailApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n\r\n    const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path !== null && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n    iaRootPath.value = path;\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\nconst handleUpdateCellRef = (refValue: any) => {\r\n  cellRef.value = refValue.value;\r\n};\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgPixelConvertToPercent = (imageSize: number) => {\r\n  return Math.floor(((imageSize - 50) / 240) * 170 + 30) + '%';\r\n}\r\nconst percentConvertToPixel = (percent: number): number => {\r\n  return Math.floor((percent - 30) * 240 / 170 + 50);\r\n}\r\n\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = !showSize.value;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  if (!event.target.closest('.sizeContainer, .sizeButton')) {\r\n    showSize.value = false;\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  const menuHeight = 506;\r\n\r\n  // 화면의 높이와 마우스 클릭 위치를 기준으로 기본 위치 설정\r\n  const screenHeight = window.innerHeight;\r\n  const mouseX = event.clientX;\r\n  const mouseY = event.clientY;\r\n\r\n  contextMenuVisible.value = true;\r\n\r\n  let menuX = mouseX;\r\n  let menuY = mouseY;\r\n\r\n  // 메뉴가 화면을 벗어나지 않도록 조정\r\n  if (mouseY + menuHeight > screenHeight) {\r\n    // 메뉴를 마우스 커서 위쪽에 띄움\r\n    menuY = mouseY - menuHeight;\r\n  } else {\r\n    // 메뉴를 마우스 커서 아래쪽에 띄움\r\n    menuY = mouseY;\r\n  }\r\n\r\n  // X 위치 조정 (화면을 벗어나지 않도록)\r\n  const menuWidth = 200;\r\n  if (menuX + menuWidth > window.innerWidth) {\r\n    menuX = window.innerWidth - menuWidth;\r\n  }\r\n\r\n  contextMenuX.value = menuX;\r\n  contextMenuY.value = menuY;\r\n  targetItem.value = item;\r\n};\r\n\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  // 사진 선택 하지 않고 우클릭 후 이미지 변경 하였을 경우\r\n\r\n  if (!selectedClickImages.value || Object.entries(selectedClickImages.value).length === 0) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Please select an image`;\r\n    return;\r\n  }\r\n  const matchingItemFind = wbcInfo.value.find((infoItem: any) => infoItem.id === item.id);\r\n\r\n  if (targetItem.value.title === matchingItemFind.title) {\r\n    showAlert.value = true;\r\n    alertType.value = 'error';\r\n    alertMessage.value = `Transfer to different classes is the only option available.`;\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item.customNum}_${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    let wbcinfo = selectItems.value?.wbcInfoAfter.length !== 0 ? selectItems.value?.wbcInfoAfter : selectItems.value?.wbcInfo.wbcInfo[0];\r\n    if (newData.length !== 0) {\r\n      for (const item of newData) { // 커스텀클래스 폴더 생성\r\n        const {fullNm, abbreviation, customNum} = item;\r\n        const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n        await fileSysPost({path: filePath});\r\n\r\n        const wbcPush = {\r\n          id: customNum,\r\n          name: fullNm,\r\n          count: '0',\r\n          images: [],\r\n          title: abbreviation,\r\n        };\r\n\r\n        const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id == wbcPush.id && wbcItem.name === wbcPush.name);\r\n        if (!foundObject) {\r\n          wbcinfo.push(wbcPush);\r\n          wbcInfo.value = wbcinfo;\r\n          await updateOriginalDb('notWbcAfterSave');\r\n        }\r\n      }\r\n    } else {\r\n      const itemsToDelete: any = [];\r\n      const sortArr = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      wbcinfo.forEach((item: any) => {\r\n        const findDelData = sortArr.find((dataItems: any) => dataItems.id === item.id);\r\n        if (!findDelData) {\r\n          const filePath = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${item}_${item?.title}`;\r\n          deleteRunningApi({path: filePath});\r\n          itemsToDelete.push(item);\r\n        }\r\n      });\r\n      // 수집한 아이템을 wbcinfo 배열에서 삭제\r\n      itemsToDelete.forEach((item: any) => {\r\n        const index = wbcinfo.indexOf(item);\r\n        if (index > -1) {\r\n          wbcinfo.splice(index, 1);\r\n        }\r\n      });\r\n      selectItems.value.wbcInfoAfter = wbcinfo\r\n      wbcInfo.value = selectItems.value.wbcInfoAfter;\r\n      await updateOriginalDb();\r\n\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    // await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\n\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const isNsNbIntegration = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n    return el.title === 'NE'\r\n  })\r\n\r\n  const replacements: any = {\r\n    'NES': isNsNbIntegration ? 'NE' : 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst outerClickCloseModal = (e: any) => {\r\n  if (e.target.classList.contains('wbc-modal-content')) {\r\n    modalOpen.value = false;\r\n  }\r\n}\r\n\r\nconst handleWheel = (event: WheelEvent) => {\r\n  if (event.deltaY < 0) {\r\n    zoomIn();\r\n  } else {\r\n    zoomOut();\r\n  }\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 600);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 600);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 200);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 200);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n  zoomValue.value = Number(newWidth);\r\n\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  wbcInfoRefresh.value = true;\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  showImageGallery.value = false;\r\n\r\n  cellMarkerIcon.value = false;\r\n  await getDetailRunningInfo();\r\n  showImageGallery.value = true;\r\n  await drawCellMarker(true);\r\n  classCompareShow.value = false;\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.img_drive_root_path !== '' && selectItems.value?.img_drive_root_path ? selectItems.value?.img_drive_root_path : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n\r\n  await getWbcCustomClasses(true, data);\r\n  await imgSetLocalStorage();\r\n\r\n\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value?.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value?.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value?.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event?.target?.checked ? title : '';\r\n  if (event?.target?.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemImageArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  if ($imageGalleryRef.value) {\r\n    $imageGalleryRef.value.scrollToElement(itemId);\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  const newSize = Number(event?.target?.value);\r\n\r\n  for (const item of wbcInfo.value) {\r\n    for (const image of item.images) {\r\n      image.width = newSize;\r\n      image.height = newSize;\r\n    }\r\n  }\r\n\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\n\r\nconst updateImageSize = (event: Event) => {\r\n  const target = event.target as HTMLInputElement;\r\n  const newPercentValue = parseFloat(target.value);\r\n  if (!isNaN(newPercentValue)) {\r\n    imageSize.value = percentConvertToPixel(newPercentValue + 1);\r\n  }\r\n  requestAnimationFrame(() => drawCellMarker(true));\r\n}\r\nconst displayValue = computed(() => {\r\n  return imgPixelConvertToPercent(imageSize.value).replace('%', '');\r\n});\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nasync function addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const updatedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n\r\n    const matchingItemIndex = updatedWbcInfo.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      updatedWbcInfo[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], wbcInfo.value[draggedCircleIndex.value], updatedWbcInfo[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemImageArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  if (event.key === 'Escape' && modalOpen) {\r\n    modalOpen.value = false;\r\n  }\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value?.testType === '01' || selectItems.value?.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  await addToRollbackHistory();\r\n\r\n  const selectedImagesToMove = [];\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      selectedImagesToMove.push({\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      });\r\n    }\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetIndex, selectedImagesToMove, selectedImages, targetItem, true, 'keyMove');\r\n  }\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n  const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n  wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // UIMD web 팀에서만 사용하는 코드\r\n  await handleMoveImages();\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemImageArr.value.push(classInfoitem);\r\n      }\r\n\r\n      /** TODO 모두 선택할 경우 check 표시 활성화 - Shift 클릭 및 하나의 아이템도 클릭했을 때 check 표시 뜨게 구현해야 함 */\r\n      if (selectItemImageArr.value.length === end - start + 1) {\r\n        selectedTitle.value = wbcInfo.value[0].title;\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img.fileName === selectedImage.fileName);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemImageArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemImageArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  await addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n\r\n  const selectedImagesToMove = [];\r\n  const draggedItems = [];\r\n  const targetItems = [];\r\n  let type = false;\r\n  let keyMove = '';\r\n\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) =>\r\n        item.images.some((img: any) => img.fileName === fileName)\r\n    );\r\n\r\n    if (draggedItemIndex === -1) {\r\n      console.error(`Dragged item with image ${fileName} not found`);\r\n      continue;\r\n    }\r\n\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n\r\n    if (draggedItem.id === wbcInfo.value[targetItemIndex].id) {\r\n      selectedTitle.value = '';\r\n      continue;\r\n    }\r\n\r\n    selectedImagesToMove.push({fileName: selectedImage.fileName});\r\n    draggedItems.push(draggedItem);\r\n    targetItems.push(wbcInfo.value[targetItemIndex]);\r\n\r\n    keyMove = keyMove || (selectedImage.keyMove || '');\r\n  }\r\n\r\n  if (selectedImagesToMove.length > 0) {\r\n    await moveImage(targetItemIndex, selectedImagesToMove, draggedItems, targetItems[0], type, keyMove);\r\n  }\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  wbcInfoRefresh.value = false;\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n  let idx = 0;\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName);\r\n    try {\r\n      if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n        const formattedTargetItemId = targetItem.id < 10 ? `0${targetItem.id}` : targetItem.id;\r\n\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem[idx].title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${formattedTargetItemId}_${targetItem.abbreviation}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      } else if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n        let newArr: any;\r\n        if (!draggedItem[idx]) {\r\n          newArr = draggedItem;\r\n        } else {\r\n          newArr = draggedItem[idx];\r\n        }\r\n        const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n            `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${newArr.id}_${newArr.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during image move:', error);\r\n    }\r\n    idx++;\r\n  }\r\n\r\n  // 최종적으로 백엔드로 데이터 전송\r\n  const data = {\r\n    sourceFolders,\r\n    destinationFolders,\r\n    fileNames\r\n  };\r\n  try {\r\n\r\n    const res = await moveClassImagePost(data);\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    if (res) {\r\n      // console.log('wbc 옮기기');\r\n      let idx = 0;\r\n      for (const selectedImage of arrType) {\r\n        const fileName = selectedImage.fileName;\r\n\r\n        if (keyMove === 'keyMove') {\r\n          // 이미지를 타겟 아이템으로 이동\r\n          const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title === (selectedImage.title || selectedImage.abbreviation));\r\n          const sourceItem = wbcInfo.value[sourceItemIndex];\r\n          const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === fileName);\r\n          if (imageIndex !== -1) {\r\n            const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n            image.title = wbcInfo.value[targetItemIndex].title;\r\n            image.width = imageSize.value;\r\n            image.height = imageSize.value;\r\n            wbcInfo.value[targetItemIndex].images.push(image);\r\n            // 카운트 업데이트\r\n            sourceItem.count--;\r\n            wbcInfo.value[targetItemIndex].count++;\r\n          }\r\n        } else {\r\n          let newArr: any = [];\r\n          if (!draggedItem[idx]) {\r\n            newArr = draggedItem;\r\n          } else {\r\n            newArr = draggedItem[idx];\r\n          }\r\n          // 드래그된 이미지를 원래 위치에서 제거\r\n          const draggedImageIndex = newArr.images.findIndex((img: any) => img.fileName === fileName);\r\n          if (draggedImageIndex !== -1) {\r\n            newArr.images.splice(draggedImageIndex, 1);\r\n          }\r\n          const newArrIdx = wbcInfo.value.findIndex((item: any) => item.title === newArr.title);\r\n          wbcInfo.value[newArrIdx] = newArr;\r\n          const imgAttr = {\r\n            width: imageSize.value,\r\n            height: imageSize.value,\r\n          };\r\n          // 드롭된 위치에 이미지를 삽입\r\n          wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n          wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n          wbcInfo.value.forEach((item: any) => {\r\n            item.count = item.images.length;\r\n            if (item.images.length > 0) {\r\n              item.images.forEach((itemImg: any) => {\r\n                itemImg.title = item.title;\r\n              });\r\n            }\r\n          });\r\n        }\r\n        idx++;\r\n      }\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemImageArr.value = [];\r\n      shiftClickImages.value = [];\r\n      await updateOriginalDb();\r\n    } else {\r\n      console.error('이미지 옮기기 실패.');\r\n    }\r\n  } catch (error) {\r\n    console.error('이미지 옮기는 작업 서버 실패:', error);\r\n  } finally {\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  }\r\n\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    try {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      for (const seItem of selectItemImageArr.value) {\r\n        const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n        const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n        const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n        const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n        destinationFolders.push(destinationFolder);\r\n        sourceFolders.push(sourceFolder);\r\n      }\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n        const targetItem = wbcInfo.value[targetItemIndex];\r\n        for (const seItem of removeDuplicatesByProperty(selectItemImageArr.value, 'title')) {\r\n          const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n          targetItem.images.push(...findImage);\r\n          targetItem.count = targetItem.images.length;\r\n          const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n          if (draggedItemIdx !== -1) {\r\n            const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n            const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n            const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n            // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n            draggedItemObj.images = filteredImages;\r\n            draggedItemObj.count = draggedItemObj.images.length;\r\n          }\r\n        }\r\n        for (const images of selectedImagesToMove) {\r\n          images.title = wbcInfo.value[targetItemIndex].title;\r\n          images.width = imageSize.value;\r\n          images.height = imageSize.value;\r\n        }\r\n      } else {\r\n        console.error('이미지 움직임 실패.');\r\n      }\r\n    } catch (error) {\r\n      console.error('서버 이미지 옮기기 실패:', error);\r\n    } finally {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    await store.dispatch('commonModule/setCommonInfo', {selectedSampleId: selectItems.value?.id})\r\n    wbcInfo.value = clonedWbcInfo;\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await classInfoDetailApi(String(selectItems.value?.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n            const day = sessionStorage.getItem('lastSearchParams') || localStorage.getItem('lastSearchParams') || '';\r\n        const {startDate, endDate , page, searchText, nrCount, testType, wbcInfo, wbcTotal}  = JSON.parse(day);\r\n    const dayQuery = startDate + endDate + page + searchText + nrCount + testType + wbcInfo + wbcTotal;\r\n    const response: any = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb, dayQuery:dayQuery})\r\n    if (response && response?.data.length !== 0) {\r\n\r\n      // getWbcCustomClasses(false, null);\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n      wbcInfo.value = [];\r\n      wbcInfo.value = response.data[0].wbcInfoAfter;\r\n\r\n      const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n      await sortWbcInfo(wbcInfo.value, sortArr);\r\n      wbcReset.value = true;\r\n      await nextTick();\r\n      wbcReset.value = false;\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const slotId = selectItems.value?.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n\r\n  // 타임스탬프 추가\r\n\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n\r\n\r\n  return url;\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length <= 0) return;\r\n\r\n  // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n  const prevWbcInfo = rollbackHistory.pop();\r\n\r\n  // 롤백 후 초기화\r\n  draggedItemIndex.value = null;\r\n  draggedImageIndex.value = null;\r\n  draggedCircleIndex.value = null;\r\n  draggedCircleIndexArr.value = [];\r\n  draggedCircleImgIndex.value = null;\r\n  selectedClickImages.value = [];\r\n  selectItemImageArr.value = [];\r\n  shiftClickImages.value = [];\r\n\r\n  // 현재 상태에서 이전 상태로 이미지 롤백\r\n  await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n  // wbcInfo 업데이트\r\n  wbcInfo.value = prevWbcInfo;\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value?.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  updateWbcInfo.value = wbcInfo.value;\r\n  // Rollback 후 현재 Class List로 정렬\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst handleMoveImages = async () => {\r\n  try {\r\n    const folderPath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}`;\r\n    const response = await fetch(`${apiBaseUrl}/folders/check-and-move-images`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({folderPath, wbcInfo: wbcInfo.value}),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1)\nconst _hoisted_2 = { class: \"leftImgList\" }\nconst _hoisted_3 = { class: \"leftImgUl\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Partical Image\", -1)\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"leftImgUl\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Zone\", -1)\nconst _hoisted_8 = [\"src\", \"onDblclick\"]\nconst _hoisted_9 = { class: \"leftImgUl\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Stitch\", -1)\nconst _hoisted_11 = [\"src\", \"onDblclick\"]\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Megakaryocyte\", -1)\nconst _hoisted_13 = [\"src\", \"onDblclick\"]\n\nimport { computed, onMounted, ref, watch } from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport { fileReadJpg } from \"@/common/api/service/fileSys/fileSysApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\n\r\nconst particleImageUrls: any = ref([]);\r\nconst idealZoneImageUrls: any = ref([]);\r\nconst idealStitchImageUrls: any = ref([]);\r\nconst megaImageUrls: any = ref([]);\r\n\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst bmOldDataDivision = async (folderName: string): Promise<boolean> => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n  const fileNames = await response.json();\r\n  return fileNames.some((fileName: any) => fileName.endsWith('_files'));\r\n}\r\n\r\nconst getImageUrlsSmallImg = async (imageName: string, type: string) => {\r\n  let folderName;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  let returnVal = '';\r\n\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = `02_Particle_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('02_Particle_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '02_Particle_Image/Thumb';\r\n      break;\r\n    case 'idealZone':\r\n      returnVal = await bmOldDataDivision('03_Cell_Ideal_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/03_Cell_Ideal_Image/${imageName}`\r\n          : '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = `04_Cell_Ideal_Stitch_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      returnVal = await bmOldDataDivision('05_Mega_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/05_Mega_Image/${imageName}`\r\n          : '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return returnVal.includes(apiBaseUrl)\r\n      ? returnVal\r\n      : `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${returnVal}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = async () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    try {\r\n      const response = await axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`);\r\n      switch (item) {\r\n        case '02_Particle_Image':\r\n          paImages.value = await bmOldDataDivision('02_Particle_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n          particleImageUrls.value = await Promise.all(paImages.value.map((image: string) => getImageUrlsSmallImg(image, 'particle')));\r\n          break;\r\n        case '03_Cell_Ideal_Image':\r\n          idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n          idealZoneImageUrls.value = await Promise.all(idealZoneImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealZone')));\r\n          break;\r\n        case '04_Cell_Ideal_Stitch_Image':\r\n          idealStitchImages.value = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb');\r\n          idealStitchImageUrls.value = await Promise.all(idealStitchImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealStitch')));\r\n          break;\r\n        case '05_Mega_Image':\r\n          megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n          megaImageUrls.value = await Promise.all(megaImages.value.map((image: string) => getImageUrlsSmallImg(image, 'mega')));\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = async (imageUrl: string, type: string, bmOldData: any, index: any) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n  let urlTileSources: any = {};\r\n  if (type === '03_Cell_Ideal_Image' || !await bmOldData) {\r\n    urlTileSources = {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    }\r\n  } else {\r\n    const slotId = props.selectItems?.slotId || \"\";\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n    const folderPath = `${path}/${slotId}/${type}`;\r\n    const newVal = await fetchTilesInfo(folderPath);\r\n    urlTileSources = newVal[index];\r\n  }\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: urlTileSources,\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    minZoomLevel: 0.2,\r\n    maxZoomLevel: 2,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n    const aspectRatio = imageHeight / imageWidth;\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n  });\r\n\r\n  viewerSmall.addHandler('canvas-click', (event: any) => {\r\n    event.preventDefaultAction = true;\r\n  })\r\n\r\n};\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const { width, height, tileSize } = await dziWidthHeight(fileNameResult, folderPath);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\nconst dziWidthHeight = async (imageFileName: any, folderPath: string): Promise<any> => {\r\n  const urlImage = `${folderPath}/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({ filePath: urlImage });\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return { fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize) }\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (buttonOfen.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"closeViewer\",\n          onClick: closeViewer\n        }, \"x\"))\n      : _createCommentVNode(\"\", true),\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\"\n          }, [\n            _createElementVNode(\"img\", {\n              src: particleImageUrls.value[index],\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(particleImageUrls.value[index], '02_Particle_Image', bmOldDataDivision('02_Particle_Image'), index))\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _hoisted_7,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            class: \"leftImgLi\",\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: idealZoneImageUrls.value[index],\n              onDblclick: ($event: any) => (openInViewer(idealZoneImageUrls.value[index], '03_Cell_Ideal_Image',bmOldDataDivision('03_Cell_Ideal_Image'), index))\n            }, null, 40, _hoisted_8)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"div\", null, [\n          _hoisted_10,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: index,\n              class: \"leftImgLi\"\n            }, [\n              _createElementVNode(\"img\", {\n                src: idealStitchImageUrls.value[index],\n                onDblclick: ($event: any) => (openInViewer(idealStitchImageUrls.value[index], '04_Cell_Ideal_Stitch_Image',bmOldDataDivision('04_Cell_Ideal_Stitch_Image'), index))\n              }, null, 40, _hoisted_11)\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_12,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", {\n              key: index,\n              class: \"leftImgLi\"\n            }, [\n              _createElementVNode(\"img\", {\n                src: megaImageUrls.value[index],\n                onDblclick: ($event: any) => (openInViewer(megaImageUrls.value[index], '05_Mega_Image',bmOldDataDivision('05_Mega_Image'), index))\n              }, null, 40, _hoisted_13)\n            ]))\n          }), 128))\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"closeViewer\" @click=\"closeViewer\" v-if=\"buttonOfen\">x</div>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <ul class=\"leftImgUl\">\r\n      <p>Partical Image</p>\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\" class=\"leftImgLi\">\r\n        <img :src=\"particleImageUrls[index]\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(particleImageUrls[index], '02_Particle_Image', bmOldDataDivision('02_Particle_Image'), index)\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"leftImgUl\">\r\n      <p>Ideal Zone</p>\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" class=\"leftImgLi\" style=\"width:100px\">\r\n        <img :src=\"idealZoneImageUrls[index]\"\r\n             @dblclick=\"openInViewer(idealZoneImageUrls[index], '03_Cell_Ideal_Image',bmOldDataDivision('03_Cell_Ideal_Image'), index)\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"leftImgUl\">\r\n      <div>\r\n        <p>Ideal Stitch</p>\r\n        <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\" class=\"leftImgLi\">\r\n          <img :src=\"idealStitchImageUrls[index]\"\r\n               @dblclick=\"openInViewer(idealStitchImageUrls[index], '04_Cell_Ideal_Stitch_Image',bmOldDataDivision('04_Cell_Ideal_Stitch_Image'), index)\">\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <p>Megakaryocyte</p>\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\" class=\"leftImgLi\">\r\n          <img :src=\"megaImageUrls[index]\"\r\n               @dblclick=\"openInViewer(megaImageUrls[index], '05_Mega_Image',bmOldDataDivision('05_Mega_Image'), index)\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, defineProps, onMounted, ref, watch } from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport { useStore } from \"vuex\";\r\nimport { readDziFile } from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport { fileReadJpg } from \"@/common/api/service/fileSys/fileSysApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\n\r\nconst particleImageUrls: any = ref([]);\r\nconst idealZoneImageUrls: any = ref([]);\r\nconst idealStitchImageUrls: any = ref([]);\r\nconst megaImageUrls: any = ref([]);\r\n\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nwatch(() => props.selectItems, async () => {\r\n  await getImgUrl();\r\n});\r\n\r\nconst bmOldDataDivision = async (folderName: string): Promise<boolean> => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n  const fileNames = await response.json();\r\n  return fileNames.some((fileName: any) => fileName.endsWith('_files'));\r\n}\r\n\r\nconst getImageUrlsSmallImg = async (imageName: string, type: string) => {\r\n  let folderName;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  let returnVal = '';\r\n\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = `02_Particle_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('02_Particle_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '02_Particle_Image/Thumb';\r\n      break;\r\n    case 'idealZone':\r\n      returnVal = await bmOldDataDivision('03_Cell_Ideal_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/03_Cell_Ideal_Image/${imageName}`\r\n          : '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = `04_Cell_Ideal_Stitch_Image/${imageName}/10`;\r\n      returnVal = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${folderName}/0_0.jpg`\r\n          : '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      returnVal = await bmOldDataDivision('05_Mega_Image')\r\n          ? `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/05_Mega_Image/${imageName}`\r\n          : '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return returnVal.includes(apiBaseUrl)\r\n      ? returnVal\r\n      : `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${path}/${slotId}/${returnVal}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = async () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    try {\r\n      const response = await axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`);\r\n      switch (item) {\r\n        case '02_Particle_Image':\r\n          paImages.value = await bmOldDataDivision('02_Particle_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n          particleImageUrls.value = await Promise.all(paImages.value.map((image: string) => getImageUrlsSmallImg(image, 'particle')));\r\n          break;\r\n        case '03_Cell_Ideal_Image':\r\n          idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n          idealZoneImageUrls.value = await Promise.all(idealZoneImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealZone')));\r\n          break;\r\n        case '04_Cell_Ideal_Stitch_Image':\r\n          idealStitchImages.value = await bmOldDataDivision('04_Cell_Ideal_Stitch_Image')\r\n              ? response.data.filter((resp: any) => !resp.includes('.dzi')).slice(0, 7)\r\n              : response.data.filter((resp: any) => resp !== 'Thumb');\r\n          idealStitchImageUrls.value = await Promise.all(idealStitchImages.value.map((image: string) => getImageUrlsSmallImg(image, 'idealStitch')));\r\n          break;\r\n        case '05_Mega_Image':\r\n          megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n          megaImageUrls.value = await Promise.all(megaImages.value.map((image: string) => getImageUrlsSmallImg(image, 'mega')));\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n    }\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = async (imageUrl: string, type: string, bmOldData: any, index: any) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n  let urlTileSources: any = {};\r\n  if (type === '03_Cell_Ideal_Image' || !await bmOldData) {\r\n    urlTileSources = {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    }\r\n  } else {\r\n    const slotId = props.selectItems?.slotId || \"\";\r\n    const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n\r\n    const folderPath = `${path}/${slotId}/${type}`;\r\n    const newVal = await fetchTilesInfo(folderPath);\r\n    urlTileSources = newVal[index];\r\n  }\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: urlTileSources,\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    minZoomLevel: 0.2,\r\n    maxZoomLevel: 2,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n    const aspectRatio = imageHeight / imageWidth;\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n  });\r\n\r\n  viewerSmall.addHandler('canvas-click', (event: any) => {\r\n    event.preventDefaultAction = true;\r\n  })\r\n\r\n};\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const { width, height, tileSize } = await dziWidthHeight(fileNameResult, folderPath);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\nconst dziWidthHeight = async (imageFileName: any, folderPath: string): Promise<any> => {\r\n  const urlImage = `${folderPath}/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({ filePath: urlImage });\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return { fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize) }\r\n}\r\n</script>\r\n","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport {onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst viewerHeight = ref('85vh'); // 기본값 설정\r\n\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  viewerHeight.value = `${Math.min((height / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n  await initElement(height, false);});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  // await onImageLoad(false);\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  await initElement(height, false);\r\n});\r\n\r\nwatch(\r\n    () => window.innerHeight,\r\n    () => {\r\n      viewerHeight.value = `${Math.min((Number(newImgHeight.value) / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n    }\r\n);\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/01_Stitching_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", {\n      ref_key: \"tilingViewerLayer\",\n      ref: tilingViewerLayer,\n      id: \"tiling-viewer\",\n      style: _normalizeStyle({ height: viewerHeight.value })\n    }, null, 4)\n  ]))\n}\n}\n\n})","<template>\r\n<!--  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />-->\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" :style=\"{ height: viewerHeight }\">\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {defineProps, onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\nimport {readDziFile, readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst apiBaseUrl = viewerCheck.value === 'viewer' ? window.MAIN_API_IP : window.APP_API_BASE_URL;\r\nconst tilingViewerLayer = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst viewerHeight = ref('85vh'); // 기본값 설정\r\n\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  viewerHeight.value = `${Math.min((height / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n  await initElement(height, false);});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  // await onImageLoad(false);\r\n  const urlImage = `PMC_Result`;\r\n  const {width, height} = await dziWidthHeight(urlImage)\r\n  newImgHeight.value = height;\r\n  newImgWidth.value = width;\r\n  await initElement(height, false);\r\n});\r\n\r\nwatch(\r\n    () => window.innerHeight,\r\n    () => {\r\n      viewerHeight.value = `${Math.min((Number(newImgHeight.value) / window.innerHeight) * 100, 85)}vh`; // 최대 80vh로 제한\r\n    }\r\n);\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n\r\n      const fileNameResult = extractSubStringBeforeFiles(fileName);\r\n      const {width, height, tileSize} = await dziWidthHeight(fileNameResult);\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: tileSize,\r\n          Size: {\r\n            Width: width,\r\n            Height: height\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\nconst dziWidthHeight = async (imageFileName: any): Promise<any> => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const urlImage = `${path}/${props.selectItems.slotId}/01_Stitching_Image/${imageFileName}.dzi`;\r\n  const imageResponse = await readDziFile({filePath: urlImage});\r\n  return await extractWidthHeightFromDzi(`${imageFileName}`, imageResponse);\r\n}\r\n\r\nconst extractWidthHeightFromDzi = (fileName: string, xmlString: any): any => {\r\n  const parser = new DOMParser();\r\n  const xmlDoc = parser.parseFromString(xmlString, \"application/xml\");\r\n  const sizeElement = xmlDoc.getElementsByTagName(\"Size\")[0];\r\n  const tileSizeEl = xmlDoc.getElementsByTagName('Image')[0];\r\n  const tileSize = tileSizeEl.getAttribute(\"TileSize\");\r\n  const width = sizeElement.getAttribute(\"Width\");\r\n  const height = sizeElement.getAttribute(\"Height\");\r\n  return {fileName, width: Number(width), height: Number(height), tileSize: Number(tileSize)}\r\n}\r\n\r\nconst extractSubStringBeforeFiles = (str: string) => {\r\n  const searchString = '_files';\r\n  const endIndex = str.indexOf(searchString);\r\n\r\n  if (endIndex !== -1) {\r\n    return str.substring(0, endIndex);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport { computed, ref, onMounted, onBeforeMount } from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { detailRunningApi } from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore()\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(TilingViewer, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          (!isLoading.value)\n            ? (_openBlock(), _createBlock(LeftImgList, {\n                key: 0,\n                selectItems: selectItems.value\n              }, null, 8, [\"selectItems\"]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList v-if=\"!isLoading\" :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { computed, ref, onMounted, onBeforeMount } from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { detailRunningApi } from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\nconst store = useStore()\r\nconst selectedSampleId = computed(() => store.state.commonModule.selectedSampleId);\r\nconst selectItems = ref(null);\r\nconst isLoading = ref(false);\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\n\r\nonBeforeMount(async () => {\r\n  await getDetailRunningInfo()\r\n})\r\n\r\nonMounted(async () => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst getDetailRunningInfo = async () => {\r\n\r\n  try {\r\n    isLoading.value = true;\r\n    const result = await detailRunningApi(String(selectedSampleId.value));\r\n    selectItems.value = result.data;\r\n    isLoading.value = false;\r\n  } catch (e) {\r\n    console.log(e);\r\n    selectItems.value = null;\r\n    isLoading.value = false;\r\n  }\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport DatabaseWbc from '@/views/datebase/commponent/detail/wbc/listDetailWbc.vue';\r\nimport Report from '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {computed} from \"vue\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach(async (to, from, next)  => {\r\n    // 페이지 이동 전에 setInterval 정리\r\n    // clearIntervalIfExists();\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n// 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const settingChangedChecker = computed(() => store.state.commonModule.settingChangedChecker);\r\n    const currentUser = store.state.userModule;\r\n\r\n    if (from.path === '/setting') {\r\n        const beforeSettingFormattedString = computed(() => store.state.commonModule.beforeSettingFormattedString);\r\n        const afterSettingFormattedString = computed(() => store.state.commonModule.afterSettingFormattedString);\r\n        if (beforeSettingFormattedString.value === afterSettingFormattedString.value) {\r\n            await store.dispatch('commonModule/setCommonInfo', { beforeSettingFormattedString: null });\r\n            await store.dispatch('commonModule/setCommonInfo', { afterSettingFormattedString: null });\r\n            await store.dispatch('commonModule/setCommonInfo', { enteringRouterPath: '' });\r\n            await store.dispatch('commonModule/setCommonInfo', { settingType: '' });\r\n            next();\r\n        } else {\r\n            await store.dispatch('commonModule/setCommonInfo', { settingChangedChecker: !settingChangedChecker.value });\r\n            await store.dispatch('commonModule/setCommonInfo', { enteringRouterPath: to.path });\r\n            next(false);\r\n        }\r\n    }\r\n\r\n    if ((to.name !== 'login' && to.name !== 'join') && (!getStoredUser.userId && !currentUser.userId)) {\r\n        // 로그인이 필요한 페이지에 접근하려고 할 때 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    }\r\n    else if (to.name === \"database\") {\r\n        store.dispatch('commonModule/setCommonInfo', {dataBasePageReset: true});\r\n        next();\r\n    } else {\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, vShow as _vShow, withModifiers as _withModifiers, withDirectives as _withDirectives, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = { class: \"borderLine\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  class: \"headerLogo\"\n}, null, -1)\nconst _hoisted_4 = { class: \"logoProjectTitle\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1)\nconst _hoisted_8 = { class: \"small-icon-menu\" }\nconst _hoisted_9 = { class: \"lastMenu\" }\nconst _hoisted_10 = { class: \"lastLiM\" }\nconst _hoisted_11 = { class: \"iconHeaderMenu\" }\nconst _hoisted_12 = { class: \"alarm\" }\nconst _hoisted_13 = [\"title\"]\nconst _hoisted_14 = [\"title\"]\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\nconst _hoisted_16 = { class: \"immersionOilContainer\" }\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle mb1\" }, \"Immersion Oil count Reset\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"grayText\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)\nconst _hoisted_19 = { class: \"flexSpaceBetween alignItemsCenter mt1\" }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)\nconst _hoisted_21 = { class: \"f18\" }\nconst _hoisted_22 = { class: \"flexColumnAlignEnd\" }\nconst _hoisted_23 = { class: \"mt2\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle mb1\" }, \"Prime Immersion Oil\", -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"grayText mt1\" }, \"Prime oil to remove air from the oil hose\", -1)\nconst _hoisted_26 = { class: \"flexColumnAlignEnd\" }\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)\n\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {getBrowserExit} from \"@/common/api/service/browserExit/browserExitApi\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport axios from \"axios\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst oilVisible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref(sessionStorage.getItem('isNsNbIntegration') || '');\r\nconst analysisType = computed(() => store.state.commonModule.analysisType);\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst clickType = ref('');\r\nconst userSetOutUl = ref(false);\r\nconst isStartCountUpdated = ref(false);\r\n\r\nconst keydownHandler = (e: KeyboardEvent) => {\r\n  if (e.ctrlKey && ['61', '107', '173', '109', '187', '189'].includes(String(e.which))) {\r\n    e.preventDefault();\r\n  }\r\n}\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst userSetOutToggle = () => {\r\n  userSetOutUl.value = !userSetOutUl.value;\r\n}\r\n\r\nconst userSetOutOff = () => {\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  await logoutApi({userId: userId.value});\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      const result = await getDeviceIpApi();\r\n      const ipAddress = `ip=${result.data}`\r\n      const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n      await axios.get(url);\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst fullScreen = () => {\r\n  if (!document.fullscreenElement) {\r\n    document.documentElement.requestFullscreen();\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n\r\n  document.addEventListener('click', closeUserSetBox);\r\n  window.addEventListener('wheel', preventScroll, {passive: false});\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('click', closeUserSetBox);\r\n  window.removeEventListener('wheel', preventScroll);\r\n})\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storageSize);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n\r\n  if (!isStartCountUpdated.value) {\r\n    searchCardCount();\r\n  }\r\n\r\n});\r\n\r\nconst preventScroll = (event: any) => {\r\n  if (event.ctrlKey) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst searchCardCount = async () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const payload = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n  isStartCountUpdated.value = true;\r\n}\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\nconst closeUserSetBox = (event: any) => {\r\n  const selectBox = document.querySelector('.userSetOutUl');\r\n  const selectButton = document.querySelector('.cursorPointer');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    userSetOutUl.value = false;\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = messages.exit;\r\n  showConfirm.value = true;\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  oilVisible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  oilVisible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value || '',\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data.isNsNbIntegration ? 'Y' : 'N'});\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _createElementVNode(\"div\", _hoisted_2, [\n                _hoisted_3,\n                _createElementVNode(\"p\", _hoisted_4, _toDisplayString(projectBm.value ? 'BM' : 'PB'), 1)\n              ]),\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheck.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _hoisted_6\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") || isActive(\"/databaseWhole\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_7\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              _createElementVNode(\"div\", _hoisted_8, [\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_10, [\n                      _createElementVNode(\"div\", {\n                        class: \"cursorPointer userBox\",\n                        onClick: userSetOutToggle\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _withDirectives(_createElementVNode(\"ul\", {\n                        class: \"userSetOutUl\",\n                        onClick: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"stop\"]))\n                      }, [\n                        _createElementVNode(\"li\", { onClick: logout }, \"LOGOUT\")\n                      ], 512), [\n                        [_vShow, userSetOutUl.value]\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: exit\n                      }, \" EXIT \"),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: fullScreen\n                      }, \"FULL SCREEN\")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_11, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", _hoisted_12, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking': isAlarm.value })\n                      }, null, 8, [\"class\"])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open']\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount\",\n                      onClick: openLayer,\n                      title: 'oilCount: ' + (oilCountData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'droplet'] })\n                    ], 8, _hoisted_13),\n                    _createElementVNode(\"li\", {\n                      class: \"storage\",\n                      title: 'storage: ' + (storagePercentData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'database'] })\n                    ], 8, _hoisted_14)\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (oilVisible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_15\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_16, [\n              _hoisted_17,\n              _hoisted_18,\n              _createElementVNode(\"div\", _hoisted_19, [\n                _hoisted_20,\n                _createElementVNode(\"span\", _hoisted_21, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", _hoisted_22, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"Reset\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", _hoisted_23, [\n              _hoisted_24,\n              _hoisted_25,\n              _createElementVNode(\"div\", _hoisted_26, [\n                _hoisted_27,\n                _createElementVNode(\"button\", {\n                  type: \"button\",\n                  onClick: onPrime,\n                  class: _normalizeClass({'alertButton': true, 'blinkGripper': isBlinkingPrime.value})\n                }, \"Prime \", 2)\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav>\r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"@/assets/celli.png\" class=\"headerLogo\"/>\r\n          <p class=\"logoProjectTitle\">{{ projectBm ? 'BM' : 'PB' }}</p>\r\n        </div>\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n        <router-link to=\"/\"\r\n                     v-if=\"viewerCheck === 'main'\"\r\n                     :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/dataBase\"\r\n                     :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") || isActive(\"/databaseWhole\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div class=\"cursorPointer userBox\" @click=\"userSetOutToggle\">\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/>\r\n                  {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <ul v-show=\"userSetOutUl\" class=\"userSetOutUl\" @click.stop>\r\n                  <li @click=\"logout\">LOGOUT</li>\r\n                </ul>\r\n                <div class=\"logOutBox\" @click=\"exit\">\r\n                  EXIT\r\n                </div>\r\n                <div class=\"logOutBox\" @click='fullScreen'>FULL SCREEN</div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n            <ul>\r\n              <li class=\"alarm\">\r\n                <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking': isAlarm }\"/>\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n                <font-awesome-icon v-else :icon=\"['fas', 'door-open']\"/>\r\n              </li>\r\n              <li>\r\n                <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n              </li>\r\n              <li class=\"oliCount\" @click=\"openLayer\" :title=\"'oilCount: ' + (oilCountData || 0)\">\r\n                <font-awesome-icon :icon=\"['fas', 'droplet']\"/>\r\n              </li>\r\n              <li class=\"storage\" :title=\"'storage: ' + (storagePercentData || 0)\">\r\n                <font-awesome-icon :icon=\"['fas', 'database']\"/>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n\r\n  <Modal v-if=\"oilVisible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle mb1\">Immersion Oil count Reset</h5>\r\n        <span class=\"grayText\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"flexSpaceBetween alignItemsCenter mt1\">\r\n          <span>Estimated number of slides left</span>\r\n          <span class=\"f18\">{{ oilCount }}</span>\r\n        </div>\r\n\r\n        <div class=\"flexColumnAlignEnd\">\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">Reset</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt2'>\r\n        <h5 class=\"modalTitle mb1\">Prime Immersion Oil</h5>\r\n        <span class=\"grayText mt1\">Prime oil to remove air from the oil hose</span>\r\n        <div class=\"flexColumnAlignEnd\">\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button type=\"button\" @click='onPrime' :class=\"{'alertButton': true, 'blinkGripper': isBlinkingPrime}\">Prime\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {getBrowserExit} from \"@/common/api/service/browserExit/browserExitApi\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport axios from \"axios\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst viewerCheck = computed(() => store.state.commonModule.viewerCheck);\r\nconst isBlinkingPrime = ref(false);\r\nlet blinkTimeout: ReturnType<typeof setTimeout> | null = null;\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst oilVisible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref(sessionStorage.getItem('isNsNbIntegration') || '');\r\nconst analysisType = computed(() => store.state.commonModule.analysisType);\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\nconst clickType = ref('');\r\nconst userSetOutUl = ref(false);\r\nconst isStartCountUpdated = ref(false);\r\n\r\nconst keydownHandler = (e: KeyboardEvent) => {\r\n  if (e.ctrlKey && ['61', '107', '173', '109', '187', '189'].includes(String(e.which))) {\r\n    e.preventDefault();\r\n  }\r\n}\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst userSetOutToggle = () => {\r\n  userSetOutUl.value = !userSetOutUl.value;\r\n}\r\n\r\nconst userSetOutOff = () => {\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\n\r\nconst handleOkConfirm = async () => {\r\n  showConfirm.value = false;\r\n  await logoutApi({userId: userId.value});\r\n  if (clickType.value === 'exit') {\r\n    if (viewerCheck.value === 'main') {\r\n      EventBus.publish('childEmitSocketData', tcpReq().embedStatus.exit);\r\n    } else {\r\n      const result = await getDeviceIpApi();\r\n      const ipAddress = `ip=${result.data}`\r\n      const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n      await axios.get(url);\r\n    }\r\n  } else {\r\n    sessionStorage.clear();\r\n    await router.push('user/login');\r\n    if (document.fullscreenElement) {\r\n      await document.exitFullscreen();\r\n    }\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst fullScreen = () => {\r\n  if (!document.fullscreenElement) {\r\n    document.documentElement.requestFullscreen();\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n\r\n  document.addEventListener('click', closeUserSetBox);\r\n  window.addEventListener('wheel', preventScroll, {passive: false});\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  document.removeEventListener('click', closeUserSetBox);\r\n  window.removeEventListener('wheel', preventScroll);\r\n})\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storageSize);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n\r\n  if (!isStartCountUpdated.value) {\r\n    searchCardCount();\r\n  }\r\n\r\n});\r\n\r\nconst preventScroll = (event: any) => {\r\n  if (event.ctrlKey) {\r\n    event.preventDefault();\r\n  }\r\n};\r\n\r\nconst searchCardCount = async () => {\r\n  const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n  const payload = {\r\n    jobCmd: 'SEARCH_CARD_COUNT',\r\n    reqUserId: userId.value,\r\n    reqDttm: reqDttm,\r\n    testType: analysisType.value,\r\n  };\r\n  EventBus.publish('childEmitSocketData', payload);\r\n  isStartCountUpdated.value = true;\r\n}\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\nconst closeUserSetBox = (event: any) => {\r\n  const selectBox = document.querySelector('.userSetOutUl');\r\n  const selectButton = document.querySelector('.cursorPointer');\r\n  if (selectButton && selectButton.contains(event.target as Node)) return;\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    userSetOutUl.value = false;\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logout = () => {\r\n  clickType.value = 'logout';\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst exit = async () => {\r\n  clickType.value = 'exit';\r\n  confirmMessage.value = messages.exit;\r\n  showConfirm.value = true;\r\n  userSetOutUl.value = false;\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  if (viewerCheck.value === 'viewer') {\r\n    showErrorAlert('Access is only available from the main PC.');\r\n    return;\r\n  }\r\n\r\n  oilVisible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  oilVisible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value || '',\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  if (blinkTimeout !== null) {\r\n    clearTimeout(blinkTimeout);\r\n  }\r\n\r\n  isBlinkingPrime.value = true;\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  EventBus.publish('childEmitSocketData', tcpReq().embedStatus.oilPrime);\r\n\r\n  blinkTimeout = setTimeout(() => {\r\n    isBlinkingPrime.value = false;\r\n    blinkTimeout = null;\r\n  }, 1500);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data.isNsNbIntegration ? 'Y' : 'N'});\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import store from '@/store/index';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any): Promise<any> => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceSerialNm: data.deviceBarcode\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n        return null;\r\n    }else {\r\n        await store.dispatch('commonModule/setCommonInfo', {'appAlertOpen': true});\r\n        return data?.resultMsg;\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'class': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            console.log(`SET [NE] Abnormal : ${wbcItem.title}`);\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.class.push(`[NE] : [${percent.toFixed(2)}]%`);\r\n                        } else {\r\n                            console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${wbcItem.count}]Count`);\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n                            if (percent < range.min || percent > range.max) {\r\n                                console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${percent.toFixed(2)}]%`);\r\n                            } else {\r\n                                console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n\r\nexport function parseXMLToJSON(xml: any): any {\r\n    let obj: any = {};\r\n\r\n    if (xml.nodeType === 1) { // element\r\n        if (xml.attributes.length > 0) {\r\n            obj[\"@attributes\"] = {};\r\n            for (let j = 0; j < xml.attributes.length; j++) {\r\n                const attribute = xml.attributes.item(j);\r\n                if (attribute) {\r\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                }\r\n            }\r\n        }\r\n    } else if (xml.nodeType === 3) { // text\r\n        obj = xml.nodeValue;\r\n    }\r\n\r\n    // 자식 노드들을 반복하면서 JSON으로 변환\r\n    if (xml.hasChildNodes()) {\r\n        for (let i = 0; i < xml.childNodes.length; i++) {\r\n            const item = xml.childNodes.item(i);\r\n            const nodeName = item.nodeName;\r\n\r\n            if (typeof obj[nodeName] === \"undefined\") {\r\n                obj[nodeName] = parseXMLToJSON(item);\r\n            } else {\r\n                if (typeof obj[nodeName].push === \"undefined\") {\r\n                    const old = obj[nodeName];\r\n                    obj[nodeName] = [];\r\n                    obj[nodeName].push(old);\r\n                }\r\n                obj[nodeName].push(parseXMLToJSON(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\n","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {\r\n  getCurrentInstance,\r\n  ref,\r\n  computed,\r\n  watch,\r\n  onMounted,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  onBeforeMount,\r\n} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport { inhaPercentChange } from \"@/common/lib/commonfunction/classFicationPercent\";\r\nimport axios from \"axios\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst isDownloadOrUploading = computed(() => store.state.commonModule.isDownloadOrUploading);\r\n\r\nconst isNsNbIntegrationLocal = ref('N');\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst isFullscreen = ref<boolean>(false);\r\nlet intervalId: any;\r\nconst stataasdasd = ref(false);\r\nconst ipMatches = ref(false);\r\nconst barcodeNum = ref('');\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('isTcpConnected', async (isTcpConnected) => {\r\n  console.log('isTcpConnected', isTcpConnected);\r\n  if (isTcpConnected) {\r\n    setTimeout(async () => {\r\n      await store.dispatch('commonModule/setCommonInfo', {isTcpConnected: true});\r\n    }, 1500)\r\n  }\r\n})\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n});\r\n\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction checkFullscreenStatus() {\r\n  const {path} = router.currentRoute.value;\r\n  if (path === '/user/login') {\r\n    return;\r\n  }\r\n  isFullscreen.value = window.matchMedia('(display-mode: fullscreen)').matches;\r\n  if (!isFullscreen.value) {\r\n    showErrorAlert('Please click the full screen button.');\r\n  } else {\r\n    if (alertMessage.value === 'Please click the full screen button.') {\r\n      hideAlert();\r\n    }\r\n  }\r\n}\r\n\r\nfunction startChecking() {\r\n  // 화면 상태를 즉시 업데이트\r\n  checkFullscreenStatus();\r\n  // 1분(60000ms)마다 체크를 수행\r\n  intervalId = setInterval(checkFullscreenStatus, 60000);\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (isDownloadOrUploading.value) {\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\n\r\nwindow.addEventListener('beforeunload', async function (event: any) {\r\n  await logoutApi({userId: userId.value});\r\n  await store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\n\r\nwindow.addEventListener('unload', async () => {\r\n  if (!ipMatches.value) return;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: {\r\n      jobCmd: 'clientExit',\r\n      reqUserId: '',\r\n      reqDttm: '',\r\n    }\r\n  });\r\n})\r\n\r\nconst leave = async (event: any) => {\r\n  event.preventDefault();\r\n  if (!ipMatches.value) {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = `ip=${result.data}`\r\n    const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n    await axios.get(url);\r\n  }\r\n};\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  pbVersion.value = window.PB_VERSION;\r\n})\r\nconst isIpMatching = (url: any, ip: any) => {\r\n  // URL에서 IP 주소 추출\r\n  const urlPattern = /http:\\/\\/([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):/;\r\n  const match = url.match(urlPattern);\r\n  if (match && match[1]) {\r\n    // 추출된 IP 주소와 주어진 IP 주소 비교\r\n    return match[1] === ip;\r\n  }\r\n  return false;\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  startChecking();\r\n  const result = await getDeviceIpApi();\r\n  ipMatches.value = isIpMatching(window.APP_API_BASE_URL, result.data);\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading && ipMatches.value && window.FORCE_VIEWER === 'main') {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(async () => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  await socketData(data);\r\n});\r\n\r\nasync function socketData(data: any) {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n\r\n    if (alertMessage.value === messages.TCP_DiSCONNECTED) {\r\n      hideAlert();\r\n    }\r\n\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if (res !== null) {\r\n          showErrorAlert(res);\r\n        }\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {initValData: false});\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        barcodeNum.value = '';\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        barcodeNum.value = '';\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        barcodeNum.value = '';\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n      case 'SEARCH_CARD_COUNT':\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        completeSlot.isNormal = 'Y' // PB 비정상 클래스 체크\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n        let wbcInfoAfter: any = [];\r\n        let wbcInfoNewVal: any = [];\r\n        const getDefaultWbcInfo = () => !projectBm.value ? { wbcInfo: [basicWbcArr] } : { wbcInfo: [basicBmClassList] };\r\n        const getDefaultWbcInfoAfter = () => !projectBm.value ? [basicWbcArr] : [basicBmClassList];\r\n        const updateWbcInfo = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfo() : newWbcInfo;\r\n        const updateWbcInfoAfter = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfoAfter() : newWbcInfo?.wbcInfo[0];\r\n        const rbcInfoAfter = !projectBm.value ? rbcArrElements[0].rbcInfo : [];\r\n        if (siteCd.value === '0011' || siteCd.value === '' || siteCd.value === '0000') {\r\n          // 인하대 WBC 정보를 저장\r\n          if(completeSlot.testType !== '04'){\r\n            newWbcInfo.wbcInfo[0] = await inhaPercentChange(completeSlot, updateWbcInfoAfter());\r\n          }\r\n\r\n          // WBC 정보 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          // 바코드 번호가 다를 경우 이벤트 버스에 저장\r\n          if (barcodeNum.value !== completeSlot.barcodeNo) {\r\n            EventBus.publish('appVueSlideDataSaveLisSave', wbcInfoAfter, rbcInfoAfter, completeSlot.barcodeNo);\r\n            barcodeNum.value = completeSlot?.barcodeNo;\r\n          }\r\n        } else {\r\n          // 기본 WBC 정보로 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n        }\r\n\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          wbcInfo: wbcInfoNewVal,\r\n          wbcInfoAfter: wbcInfoAfter,\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: rbcInfoAfter,\r\n          bminfo: completeSlot.bminfo,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          isNsNbIntegration: isNsNbIntegrationLocal.value || '',\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', {siteCd: parseDataWarp.siteCd})\r\n        localStorage.setItem('siteCd', parseDataWarp.siteCd);\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        console.log('저장 전 runingInfoDtoItems', runningInfo);\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegrationLocal.value,\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        isNsNbIntegrationLocal.value = data?.isNsNbIntegration ? 'Y' : 'N';\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'});\r\n        sessionStorage.setItem('isNsNbIntegration', data?.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage' : 'bmKeepPage';\r\n        sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value,\n        stataasdasd: stataasdasd.value\n      }, null, 8, [\"parsedData\", \"isClass\", \"startStatus\", \"pb100aCassette\", \"stataasdasd\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n                :stataasdasd=\"stataasdasd\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {\r\n  getCurrentInstance,\r\n  ref,\r\n  computed,\r\n  watch,\r\n  onMounted,\r\n  nextTick,\r\n  onBeforeUnmount,\r\n  onBeforeMount,\r\n} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\nimport {logoutApi} from \"@/common/api/service/user/userApi\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport { inhaPercentChange } from \"@/common/lib/commonfunction/classFicationPercent\";\r\nimport axios from \"axios\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst isDownloadOrUploading = computed(() => store.state.commonModule.isDownloadOrUploading);\r\n\r\nconst isNsNbIntegrationLocal = ref('N');\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\nlet socketTimeoutId: number | undefined = undefined; // 타이머 ID 저장\r\nconst isFullscreen = ref<boolean>(false);\r\nlet intervalId: any;\r\nconst stataasdasd = ref(false);\r\nconst ipMatches = ref(false);\r\nconst barcodeNum = ref('');\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('isTcpConnected', async (isTcpConnected) => {\r\n  console.log('isTcpConnected', isTcpConnected);\r\n  if (isTcpConnected) {\r\n    setTimeout(async () => {\r\n      await store.dispatch('commonModule/setCommonInfo', {isTcpConnected: true});\r\n    }, 1500)\r\n  }\r\n})\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n});\r\n\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction checkFullscreenStatus() {\r\n  const {path} = router.currentRoute.value;\r\n  if (path === '/user/login') {\r\n    return;\r\n  }\r\n  isFullscreen.value = window.matchMedia('(display-mode: fullscreen)').matches;\r\n  if (!isFullscreen.value) {\r\n    showErrorAlert('Please click the full screen button.');\r\n  } else {\r\n    if (alertMessage.value === 'Please click the full screen button.') {\r\n      hideAlert();\r\n    }\r\n  }\r\n}\r\n\r\nfunction startChecking() {\r\n  // 화면 상태를 즉시 업데이트\r\n  checkFullscreenStatus();\r\n  // 1분(60000ms)마다 체크를 수행\r\n  intervalId = setInterval(checkFullscreenStatus, 60000);\r\n}\r\n\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  if (isDownloadOrUploading.value) {\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return;\r\n  }\r\n\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\n\r\nwindow.addEventListener('beforeunload', async function (event: any) {\r\n  await logoutApi({userId: userId.value});\r\n  await store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\n\r\nwindow.addEventListener('unload', async () => {\r\n  if (!ipMatches.value) return;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: {\r\n      jobCmd: 'clientExit',\r\n      reqUserId: '',\r\n      reqDttm: '',\r\n    }\r\n  });\r\n})\r\n\r\nconst leave = async (event: any) => {\r\n  event.preventDefault();\r\n  if (!ipMatches.value) {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = `ip=${result.data}`\r\n    const url = `http://${result.data}:3000/close?${ipAddress}`;\r\n    await axios.get(url);\r\n  }\r\n};\r\n\r\nonBeforeMount(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  pbVersion.value = window.PB_VERSION;\r\n})\r\nconst isIpMatching = (url: any, ip: any) => {\r\n  // URL에서 IP 주소 추출\r\n  const urlPattern = /http:\\/\\/([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+):/;\r\n  const match = url.match(urlPattern);\r\n  if (match && match[1]) {\r\n    // 추출된 IP 주소와 주어진 IP 주소 비교\r\n    return match[1] === ip;\r\n  }\r\n  return false;\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  startChecking();\r\n  const result = await getDeviceIpApi();\r\n  ipMatches.value = isIpMatching(window.APP_API_BASE_URL, result.data);\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading && ipMatches.value && window.FORCE_VIEWER === 'main') {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n  }\r\n  EventBus.subscribe('childEmitSocketData', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(async () => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  await socketData(data);\r\n});\r\n\r\nasync function socketData(data: any) {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n\r\n    if (alertMessage.value === messages.TCP_DiSCONNECTED) {\r\n      hideAlert();\r\n    }\r\n\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataClass: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: false});\r\n        break;\r\n      case 'SYSINFO':\r\n        const res = await sysInfoStore(parseDataWarp);\r\n        if (res !== null) {\r\n          showErrorAlert(res);\r\n        }\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {initValData: false});\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        barcodeNum.value = '';\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        barcodeNum.value = '';\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        barcodeNum.value = '';\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        barcodeNum.value = '';\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        barcodeNum.value = '';\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n      case 'SEARCH_CARD_COUNT':\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        completeSlot.isNormal = 'Y' // PB 비정상 클래스 체크\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n        let wbcInfoAfter: any = [];\r\n        let wbcInfoNewVal: any = [];\r\n        const getDefaultWbcInfo = () => !projectBm.value ? { wbcInfo: [basicWbcArr] } : { wbcInfo: [basicBmClassList] };\r\n        const getDefaultWbcInfoAfter = () => !projectBm.value ? [basicWbcArr] : [basicBmClassList];\r\n        const updateWbcInfo = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfo() : newWbcInfo;\r\n        const updateWbcInfoAfter = () => Object.keys(newWbcInfo).length === 0 ? getDefaultWbcInfoAfter() : newWbcInfo?.wbcInfo[0];\r\n        const rbcInfoAfter = !projectBm.value ? rbcArrElements[0].rbcInfo : [];\r\n        if (siteCd.value === '0011' || siteCd.value === '' || siteCd.value === '0000') {\r\n          // 인하대 WBC 정보를 저장\r\n          if(completeSlot.testType !== '04'){\r\n            newWbcInfo.wbcInfo[0] = await inhaPercentChange(completeSlot, updateWbcInfoAfter());\r\n          }\r\n\r\n          // WBC 정보 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n          // 바코드 번호가 다를 경우 이벤트 버스에 저장\r\n          if (barcodeNum.value !== completeSlot.barcodeNo) {\r\n            EventBus.publish('appVueSlideDataSaveLisSave', wbcInfoAfter, rbcInfoAfter, completeSlot.barcodeNo);\r\n            barcodeNum.value = completeSlot?.barcodeNo;\r\n          }\r\n        } else {\r\n          // 기본 WBC 정보로 업데이트\r\n          wbcInfoNewVal = updateWbcInfo();\r\n          wbcInfoAfter = updateWbcInfoAfter();\r\n        }\r\n\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          wbcInfo: wbcInfoNewVal,\r\n          wbcInfoAfter: wbcInfoAfter,\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: rbcInfoAfter,\r\n          bminfo: completeSlot.bminfo,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          isNsNbIntegration: isNsNbIntegrationLocal.value || '',\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', {siteCd: parseDataWarp.siteCd})\r\n        localStorage.setItem('siteCd', parseDataWarp.siteCd);\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        console.log('저장 전 runingInfoDtoItems', runningInfo);\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          delayedEmit('SEND_DATA', 'refreshDb', 300);\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nconst delayedEmit = (type: string, payload: string, delay: number) => {\r\n  if (socketTimeoutId !== undefined) {\r\n    clearTimeout(socketTimeoutId); // 이전 타이머 클리어\r\n  }\r\n\r\n  socketTimeoutId = window.setTimeout(() => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n      type: 'SEND_DATA',\r\n      payload: 'refreshDb'\r\n    });\r\n  }, delay);\r\n};\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: any) => {\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n  await store.dispatch('commonModule/setCommonInfo', {rbcReDataCheck: true});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegrationLocal.value,\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        isNsNbIntegrationLocal.value = data?.isNsNbIntegration ? 'Y' : 'N';\r\n        await store.dispatch('commonModule/setCommonInfo', {isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'});\r\n        sessionStorage.setItem('isNsNbIntegration', data?.isNsNbIntegration ? 'Y' : 'N');\r\n        sessionStorage.setItem('wbcPositionMargin', data?.diffWbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.diffRbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.diffPltPositionMargin);\r\n        const keepPageType = window.PROJECT_TYPE === 'pb' ? 'keepPage' : 'bmKeepPage';\r\n        sessionStorage.setItem(keepPageType, String(data?.keepPage));\r\n        sessionStorage.setItem('edgeShotType', String(data?.edgeShotType));\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1644fb28&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n        $socketError: boolean;\r\n    }\r\n}\r\n\r\nconst apiBaseUrl = window.MAIN_WEBSOCKET_IP || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, {\r\n            transports: ['websocket'],\r\n            withCredentials: true,\r\n            reconnection: true,            // 자동 재연결 활성화\r\n            reconnectionAttempts: 15,      // 재연결 시도 횟수\r\n            reconnectionDelay: 3000,       // 재연결 시도 간격 (3초)\r\n            timeout: 30000,                // 서버 응답 대기 시간 (30초)\r\n        });\r\n\r\n        // 다음 ping 전송을 위한 타이머를 저장할 변수\r\n        let pingTimeout: NodeJS.Timeout | null = null;\r\n\r\n        // 연결이 성공했을 때 실행되는 핸들러\r\n        socket.on('connect', () => {\r\n            console.log('WebSocket connected');\r\n            app.config.globalProperties.$socketError = false;\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n        });\r\n\r\n        // 연결이 끊어졌을 때 실행되는 핸들러\r\n        socket.on('disconnect', () => {\r\n            console.log('WebSocket disconnected');\r\n            app.config.globalProperties.$socketError = true;\r\n            console.log('연결이 끊어졌습니다. 재연결을 시도합니다.');\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n        });\r\n\r\n        // 연결 오류가 발생했을 때 실행되는 핸들러\r\n        socket.on('connect_error', (error) => {\r\n            console.error('WebSocket connection error:', error);\r\n            app.config.globalProperties.$socketError = true;\r\n            sendPing();\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout);\r\n                pingTimeout = null;\r\n            }\r\n            console.log('서버와의 연결에 문제가 발생했습니다. 재연결을 시도합니다.');\r\n        });\r\n\r\n        socket.on('pong', (latency) => {\r\n            console.log(`Pong received with latency: ${latency}ms`);\r\n        });\r\n\r\n        function sendPing() {\r\n            if (socket.connected) {\r\n                socket.emit('ping');  // 서버에 ping 메시지를 전송\r\n                console.log('Ping sent to server');\r\n            }\r\n\r\n            // 다음 ping 전송 예약\r\n            pingTimeout = setTimeout(sendPing, 10000); // 10초 후에 다시 ping 전송\r\n        }\r\n\r\n        // 전역 속성에 소켓 인스턴스 등록\r\n        app.config.globalProperties.$socket = socket;\r\n        app.config.globalProperties.$socketError = false; // 연결 상태 확인용 추가 속성\r\n\r\n        // Vue 컴포넌트가 해제될 때 소켓 연결을 정리\r\n        const originalUnmount = app.unmount.bind(app);\r\n\r\n        app.unmount = () => {\r\n            socket.disconnect(); // 소켓 연결 해제\r\n            if (pingTimeout) {\r\n                clearTimeout(pingTimeout); // 컴포넌트가 해제될 때 pingTimeout 제거\r\n            }\r\n            originalUnmount(); // 기존 unmount 호출\r\n        };\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// src/icons/customIcons.ts\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst faHalfCircleUp: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-up',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e002', // unicode\r\n        'M256 0c141.385 0 256 114.615 256 256H0C0 114.615 114.615 0 256 0z' // SVG path data for top half circle\r\n    ]\r\n};\r\n\r\nconst faHalfCircleDown: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-down',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e003', // unicode\r\n        'M256 512c-141.385 0-256-114.615-256-256h512c0 141.385-114.615 256-256 256z' // SVG path data for bottom half circle\r\n    ]\r\n};\r\n\r\nexport { faHalfCircleUp, faHalfCircleDown };\r\n","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/color.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/layoutExtraWide.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHalfCircleUp, faHalfCircleDown } from './icons/customIcons'; // 커스텀 아이콘 불러오기\r\n/// <reference path=\"../types/webapi.d.ts\" />\r\n\r\nlibrary.add(fas);\r\nlibrary.add(faCircle);\r\nlibrary.add(faHalfCircleUp);\r\nlibrary.add(faHalfCircleDown); // 커스텀 아이콘 추가\r\n\r\nconst app = createApp(App);\r\n\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\napp.mount('#app');","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(2708); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","commonCodeList","grpCd","grpNm","cd","cdNm","testType","value","text","bmTestType","getCommonCode","foundCode","find","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","iaRootPath","slotId","barcodeDirName","apiBaseUrl","window","APP_API_BASE_URL","_hoisted_1","_createElementVNode","class","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","currentCardCount","currentCardName","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_toDisplayString","wbcCount","__exports__","wbcCountOptions","bmCountOptions","stitchCountOptions","slideCard","input","slotNo","slotState","output","slideCard100a","messages","Logout","GET_POSITION_LIST","GET_LOGIN_HISTORY","SET_USER","IS_REGIST_USER","UPDATE_LOGIN_DTTM","UPDATE_USER_AVAILABLE","GET_WBC_CLASS_LIST","GET_WBC_CLASS_LIST_ALL","GET_WBC_TOTAL_COUNT","UPDATE_WBC_COUNT","GET_WBC_COUNT","GET_TEST_TYPE","GET_MODIFIED_TEST_TYPE","GET_STITCH_COUNT","GET_RBC_COUNT","GET_RBC_COUNT_HIST","GET_RBC_COUNT_SKMC","UPDATE_DEGREE","INIT_WBC_COUNT","INIT_RBC_DEGREE","GET_WBC_INFO","SET_WBC_IMAGE_HIST","GET_WBC_IMAGE_HIST","INIT_WBC_IMAGE_HIST","INSERT_WBC_CLASSIFICATION","SET_WBC_CUSTOM_LIST","UPDATE_HOT_KEYS","UPDATE_BF_HOT_KEYS","UPDATE_ORDER","UPDATE_ORDER_BF","UPDATE_IMAGE_HIST","SET_CURRENT_WBC_RESULTS","GET_CURRENT_WBC_RESULTS","SET_BEFORE_WBC_RESULTS","GET_BEFORE_WBC_RESULTS","GET_WBC_MODIFY_LIST","GET_WBC_MODIFY_LIST_ALL","GET_BF_MODIFY_LIST","GET_RBC_CLASS_LIST","GET_MALARIA_COUNT","UPDATE_MALARIA_COUNT","SET_CURRENT_RBC_RESULTS","GET_CURRENT_RBC_RESULTS","SET_CLASSIFICATION","GET_CLASSIFICATION_ITEM","SET_CLASSIFICATION_ITEM","UPDATE_RBC_CLASSIFICATION","UPDATE_RBC_CLASSIFICATION_SKMC","INSERT_WBC_SUCCESS","SELECT_RBC_DEGREE","UPDATE_RBC_DEGREE","SET_TEST_LIST","GET_TEST_LIST","GET_TEST_RESULT","GET_RBC_FIELDS","GET_WBC_FIELDS","GET_RBC_ITEMS","GET_WBC_ITEMS","INIT_OIL_COUNT","UPDATE_RESULT","UPDATE_RUNNING_STATE","GET_ORDER_LIST","SET_ORDER_LIST","UPDATE_ORDER_LIST","INIT_ORDER_LIST","GET_TEST_RESULT_ALL","GET_SEARCH_OPTIONS","UPDATE_SEARCH_OPTIONS","SET_TEST_HISTORY","GET_TEST_HISTORY_LIST","ALL_TEST_HISTORY_LIST","SEARCH_TEST_HISTORY_LIST","UPDATE_TEST_HISTORY","GET_TEST_HISTORY","DELETE_TEST_HISTORY","UPDATE_SIGNED_STATE","UPDATE_TEST_HISTORY_WBC_INFO","GET_RBC_COMMENT","GET_WBC_COMMENT","GET_RUNNING_INTERVAL_ID","SET_RUNNING_INTERVAL_ID","UPDATE_TIMER","GET_TIMER","SET_TIMER","SET_WORKING_INTERVAL_ID","GET_WORKING_INTERVAL_ID","GET_RUNNING_STATE","SET_SLIDE_TIMER","UPDATE_SLIDE_TIMER","GET_SLIDE_TIME_COUNT","SET_USER_STOP","GET_USER_STOP","SET_WBC_CELL_POSITION","GET_WBC_CELL_POSITION","GET_TEST_HISTORY_PREV","GET_TEST_HISTORY_NEXT","SET_IS_RECOVERY_RUN","GET_IS_RECOVERY_RUN","SET_WORK_LIST","GET_WORK_LIST","INIT_WORK_LIST","DELETE_WORK_LIST","UPDATE_WORK_LIST","UPDATE_WORK_LIST_BM","UPDATE_SIGNED_WORK_LIST","UPDATE_RBC_COMMENT","UPDATE_WBC_COMMENT","UPDATE_BM_COMMENT","UPDATE_SELECT_ORDER_ID","GET_SELECT_ORDER_ID","ADD_WORK_LIST","GET_TEST_BARCODES","ADD_DSP_LIST","GET_DSP_LIST","SET_LIS_HOT_KEY","UPDATE_NEW_TEST_SET","UPDATE_EXEC_TEST_TYPE","INITIALIZE_MOUNT_CNT","UPDATE_MOUNT_CNT","GET_CURRENT_USER","GET_SETTINGS","UPDATE_RUNNING_PATH","UPDATE_RESULT_PATH_WBC","UPDATE_RESULT_PATH_RBC","UPDATE_BARCODE_PATH","GET_SYSTEM_TIME_ID","SET_SYSTEM_TIME_ID","GET_USER","UPDATE_REMEMBER_STATE","SET_CURRENT_USER","UPDATE_ROOT_PATH","GET_FILE_FILTER","GET_USER_LIST","UPDATE_ANALYSIS_TYPE","UPDATE_TEST_TYPE","UPDATE_RUNNING_MODE","UPDATE_USER","DELETE_USER","UPDATE_MARKER_STATE","GET_MARKER_STATE","SET_PAUSE_STATE","GET_PAUSE_STATE","GET_BF_WHOLE_SLIDE_PATH","GET_BF_WBC_CLASS_LIST","GET_SIZE_SLIDE_VALUE","UPDATE_LIS_CODE","SELECT_LIS_CODE","SELECT_LIS_CODE_RBC","UPDATE_CBC_CODE","SELECT_CBC_CODE","UPDATE_LIS_CONN_PATH","SELECT_LIS_CONN_PATH","GET_BACKUP_LIST","RESTORE_BACKUP_DATA","DELETE_BACKUP_DATA","RESET_RBC_DEGREE","GET_DEFAULT_RBC_DEGREE","UPDATE_CHECKED_CELL","SET_LOCK_SLIDE","SET_HOST_IP","GET_HOST_IP","GET_NORMAL_RANGE","UPDATE_NORMAL_RANGE","GET_LOCK_STATE","GET_KUMC_CBC_PATH","SET_WBC_NORMAL_RANGE","GET_WBC_NORMAL_RANGE","GET_SKMC_RESULT_CD","SET_SKMC_RESULT_CD","REMOVE_SKMC_RESULT_CD","GET_SKMC_REMARK","SET_SKMC_REMARK","REMOVE_SKMC_REMARK","SET_SKMC_FAVORITE","GET_SKMC_FAVORITE","GET_SKMC_LIS_RESULTS","SET_SKMC_LIS_RESULTS","SET_ALARM_COUNT","SET_SORT_TYPE","GET_SORT_TYPE","SET_CUSTOM_CLASS","GET_CUSTOM_CLASS","SET_SYS_INFO","GET_SYS_INFO","SET_BACKEND_DATA","GET_BACKEND_DATA","SELECT_CBC_CODE_INHA","SELECT_LIS_CODE_INHA","SELECT_LIS_CODE_RBC_INHA","SELECT_LIS_CONN_PATH_INHA","GET_RBC_COUNT_INHA","SELECT_WBC_RUNNING_COUNT","GET_BRIGHTNESS_SLIDE_VALUE","GET_RED_VALUE","GET_GREEN_VALUE","GET_BLUE_VALUE","GET_RGB_VALUE","SET_SIZE_SLIDE_VALUE","SET_BRIGHTNESS_SLIDE_VALUE","SET_RED_VALUE","SET_GREEN_VALUE","SET_BLUE_VALUE","SET_RGB_VALUE","SET_ROLLBACK_LIST","GET_ROLLBACK_LIST","GET_IMAGE_ROLLBACK_LIST","SET_CLONED_WBC_INFO","GET_RBC_BRIGHTNESS_SLIDE_VALUE","GET_RBC_RED_VALUE","GET_RBC_GREEN_VALUE","GET_RBC_BLUE_VALUE","SET_RBC_BRIGHTNESS_SLIDE_VALUE","SET_RBC_RED_VALUE","SET_RBC_GREEN_VALUE","SET_RBC_BLUE_VALUE","SET_CLONED_RBC_INFO","UPDATE_OIL_COUNT","SET_RESULT_LIST","CLEAR_RESULT_LIST","GET_RESULT_LIST","SET_WBC_REPORT_PRINT","GET_WBC_REPORT_PRINT","SET_RBC_REPORT_PRINT","GET_RBC_REPORT_PRINT","SET_RBC_SIZE","GET_RBC_SIZE","SET_RBC_CHROMIA","GET_RBC_CHROMIA","SET_RBC_SHAPE","GET_RBC_SHAPE","PUSH_RBC_SHAPE","POP_RBC_SHAPE","SET_RBC_PLATELET","GET_RBC_PLATELET","PUSH_RBC_PLATELET","POP_RBC_PLATELET","SET_RBC_INCLUSION","GET_RBC_INCLUSION","POP_RBC_INCLUSION","PUSH_RBC_INCLUSION","SET_IS_SHOW_MODAL_BARCODE","GET_IS_SHOW_MODAL_BARCODE","SET_IS_NS_NB_INTEGRATION","GET_IS_NS_NB_INTEGRATION","SET_IS_ALARM","GET_IS_ALARM","SET_IS_CBC_SHOW","GET_IS_CBC_SHOW","SET_SITE_CD","GET_SITE_CD","SET_DEVICE_SERIALNUM","GET_DEVICE_SERIALNUM","SELECT_BF_HOT_KEY","SELECT_WBC_HOT_KEY","SELECT_WBC_CUSTOM_CLASS","SELECT_EMP_NO","INSERT_WBC_MODIFY_HIST","GET_WBC_MODIFY_HIST","UPDATE_WBC_HIST_LIST","GET_WBC_HIST_LIST","GET_COMMON_CODE_LIST","GET_COMMON_CODE","GET_CODE_LIST_USER_POSITION","GET_CODE_LIST_USER_AUTHORIZATION","GET_CODE_LIST_USER_CASSETE_STATE","GET_CODE_LIST_PROCESSING_STATE","GET_CODE_LIST_ANALYSIS_TYPE","GET_CODE_LIST_CELL_COUNT","GET_CODE_LIST_GENERAL_STAIN","GET_CODE_LIST_SPECIAL_STAIN","GET_CODE_LIST_IMMUNO_STAIN","GET_CODE_LIST_SAMPLING_STAIN","GET_CODE_LIST_GENDER","GET_CODE_LIST_TEST_TYPE","GET_CODE_SIGNED_STATE","GET_CODE_LOG_TYPE","GET_CODE_SLOT_STATE","EVENT_TYPE_USER","EVENT_TYPE_SYSTEM","SET_EVENT_LOG","GET_EVENT_LOG","REMOVE_EVENT_LOG","REMEMBER_PWD_KEY","REMEMBER_PWD_IV","RECEIVE_DATA_BROADCAST_CHAN","GET_PB_CLASSIFICATIONS","GET_CLASSIFICATION_IMAGES","GET_MARKER_POSITION","GET_PB_HOT_KEYS","UPDATE_CLASSIFICATION","PB_IA_MOVE_IMAGE","SET_WBC_IMAGE_LIST","GET_PB_WBC_IMAGES","SET_SELECTED_ITEM","GET_SELECTED_ITEM","IA_SET_CUSTOM_CLASS","IA_GET_CUSTOM_CLASS","IDS_MSG_SUCCESS","IDS_MSG_FAILED","IDS_MSG_OIL_REMAIN_COUNTER","IDS_MSG_POWEROFF","IDS_MSG_INITALIZE","IDS_MSG_SIGNING_COMPLETE","IDS_MSG_DELETE_THE_SELECTED_ITEMS","IDS_MSG_ACCOUNT_CHANGED","IDS_MSG_DELETE_ACCOUNT","IDS_MSG_LOGOUT","IDS_MSG_DUPLICATE_KEY","IDS_MSG_HOTKEY_IN_ENGLISH","IDS_ERROR_CHECK_ID","IDS_ERROR_CHECK_PASSWORD","IDS_ERROR_NOT_MATCHED_PASSWORD","IDS_ERROR_SIGINUP","IDS_ERROR_SIGINUP_ALREADY_ID","IDS_ERROR_LOGIN_ERROR","IDS_ERROR_LOGIN_ID","IDS_ERROR_ALREADY_RUNNING","IDS_ERROR_STOP_PROCESS","IDS_ERROR_INIT_ERROR","IDS_ERROR_CHECK_REQUIRED_FIELDS","IDS_ERROR_CHECK_SLOT_NO","IDS_ERROR_FAVORITE_MAX_REGIST","IDS_ERROR_FAVORITE_MAX_REGIST2","IDS_ERROR_ENTER_YOUR_ORDER_DETAILS","IDS_ERROR_SELECT_A_TARGET_ITEM","IDS_ERROR_PLEASE_SELECT_AN_IMAGE","IDS_ERROR_ALREADY_ADDED","IDS_ERROR_ADD_A_WORKLIST","IDS_ERROR_NO_TEST_RESULTS","IDS_ERROR_FILE_CLISSIFICATION","IDS_ERROR_ENTER_CLASS_INFO","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","IDS_DOWNLOAD_COMPLETE","IDS_SELECT_SLIDE","IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED","IDS_RECOVER_GRIPPER_CONDITION","IDS_PLEASE_ENTER_END_DATE","IDS_PLEASE_ENTER_START_DATE","IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS","IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE","IDS_RESTART_SYSTEM","IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER","IDS_BARCODE_REGISTRATION_SUCCESSFUL","IDS_THIS_IS_A_DUPLICATION_ABBREVIATION","IDS_THIS_CARD_HAS_ALREADY_BEEN_USED","IDS_MSG_UPLOAD_LIS","IDS_MSG_SUBMIT_SLIDE","IDS_MSG_CONFIRM_SLIDE","IDS_PLEASE_SELECT_A_CLASS","IDS_PLEASE_SELECT_A_BACKUP_DATE","IDS_PLEASE_SELECT_A_BACKUP_PATH","IDS_PLEASE_SELECT_A_BACKUP_FILE","IDS_NO_DATA_FOUND","IDS_MSG_DATA_BACKUP","IDS_MSG_DATA_RESTORE","IDS_MSG_SIZE_CHROMIA_LINKED_LIS","UPLOAD_PLEASE_LIS","UPLOAD_PLEASE_CBC","UPDATE_SUCCESSFULLY","TCP_DiSCONNECTED","alreadyInitialized","lockRow","exit","settingSaveSuccess","settingSaveFailure","settingUpdateSuccess","settingUpdateFailure","settingNotSaved","SAVE","LEAVE","CANCEL","CLOSE","COPY","MOVE","DELETE","UPLOAD","OK","SETTING_INFO_DOWNLOAD_SAVE_PATH_EN","SETTING_INFO_DOWNLOAD_SAVE_PATH_KO","SETTING_INFO_UPLOAD_EN","SETTING_INFO_UPLOAD_KO","SETTING_INFO_DOWNLOAD_EN","SETTING_INFO_DOWNLOAD_KO","SETTING_INFO_KEEP_PAGE_EN","SETTING_INFO_KEEP_PAGE_KO","SETTING_INFO_ALARM_TIME_EN","SETTING_INFO_ALARM_TIME_KO","SETTING_INFO_NS_NB_INTEGRATION_EN","SETTING_INFO_NS_NB_INTEGRATION_KO","SETTING_INFO_IA_ROOT_PATH_EN","SETTING_INFO_IA_ROOT_PATH_KO","SETTING_INFO_COMMON","SETTING_INFO_BF_ANALYSIS_VALUES","SETTING_INFO_PBS_ANALYSIS_VALUES","SETTING_INFO_WBC_DIFF_ANALYSIS_VALUES","SETTING_INFO_ANALYSIS_TYPE","getDateTimeStr","now","moment","formattedTime","format","formatDateString","dateString","momentObj","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","searchCardCount","useHttpClient","httpGet","url","parameters","type","callImg","httpGetAct","endpoint","options","headers","axios","defaults","withCredentials","slush","MAIN_API_IP","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","auth","refresh","requiresToken","processInfo","list","rbcclassification","wbcclassification","user","register","login","logout","userCheck","getUsers","userDataPut","deleteUser","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","classInfoDetail","classInfoDetailSelectQuery","classInfoMenuDetailSelectQuery","pageUpDown","updatePcIpState","clearPcIpState","removePageAllData","folder","folders","classOrder","remainingCount","qualityCheck","images","move","moveClassImage","jsonReader","jsonCreate","dziReader","pdf","filesystem","readGetJpg","createDirectory","fileCreate","cbcSaveData","fileTxtRead","H7Read","H7Message","Hl7Create","device","getDeviceInfo","ip","download","backUpDate","checkIsPossibleToBackup","openDrive","upload","restoreData","checkDuplicated","checkPossibleUploadFile","excel","execute","browser","img","checkImageExists","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","forEach","unsubscribe","filter","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","edgeShotTypeList","PositionMarginList","WbcPositionMarginList","defaultCbcList_0011","classCd","fullNm","isSelected","defaultCbcList","rbcClassList","categoryId","categoryNm","classInfo","classId","classNm","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","abbreviation","key","orderIdx","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","lisCodeRbcOption","minRunCount","minGPCount","minPACount","wbcRunningCount","wbcTargetCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","barcodeImgDir","dirName","howellJollyDirName","malariaDirName","noMalariaDirName","rbcClassDirName","rbcImageDirName","wbcClassDirName","bfDirName","bfHighDirName","bfClassDirName","settingName","cellImageAnalyzed","hideConfirm","okConfirm","createDeviceInfoApi","getDeviceInfoApi","getDeviceIpApi","userModuleDataGet","userModule","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","emits","showConfirm","confirmType","confirmMessage","filteredWbcCount","newUserId","oldUserId","initDataExecute","nextTick","setWbcRunningCount","initData","loginSetData","dispatch","resetAnalyzing","newRunInfo","newVals","newIsRunningState","newBfSelectFiles","newEmbeddedStatusJobCmd","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","emitSocketData","sendSearchCardCount","toggleStartStop","action","showSuccessAlert","rbcPositionMargin","sessionStorage","getItem","edgeShotType","assign","InfoData","startEmbedded","message","handleOkConfirm","sendInit","newObj","runInfoObj","result","diffCellAnalyzingCount","pbsCellAnalyzingCount","bfCellAnalyzingCount","console","log","runCountResult","runCountData","filteredRunCountData","deviceData","_component_font_awesome_icon","_resolveComponent","_Fragment","_withDirectives","$event","disabled","onChange","_renderList","_vModelSelect","onClick","_createVNode","icon","_normalizeClass","_unref","style","_createBlock","Alert","onHide","_createCommentVNode","Confirm","onOkConfirm","width","height","runningInfoModule","initValData","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","isBm","fixEqStatCd","pbVersion","iCasExist","oCasExist","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","Number","percentage","setInterval","pb100aCassette","onBeforeMount","PB_VERSION","item","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","casExistChangeText","val","cx","cy","r","stroke","fill","reverse","colspan","dspOrderList","startStatus","existingItemIndex","findIndex","slot","basicWbcArr","basicBmClassList","defaultWbcClassList","defaultBmClassList","basicWbcArrClint","title","name","count","percent","order","basicBmClassListClint","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","storeEm","dspWbcClassList","dspBfClassList","totalCount","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","allCountsAreZero","flat","updateCounts","iCasStatArr","lastIndexOf","selectNonWbc","wbcArray","includes","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","formattedPercent","getCategoryName","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","folderPath","match","fileName","imageUrl","runningPath","pathItem","image","unshift","_Transition","mode","default","_withCtx","alt","_","viewerCheck","router","rbcUpdate","classInfoUpdate","initDataChangeText","Execute","onInitDataChangeText","ProcessInfo","orderList","_vShow","isClass","workingView","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","logoutApi","getAllUsersApi","getUserApi","putUserDataApi","deleteUserApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","createAccount","currentDate","Date","showErrorAlert","subscriptionDate","_vModelText","rbcClassListArr","reactive","defaultCellImgData","testTypeCd","diffWbcPositionMargin","diffRbcPositionMargin","diffPltPositionMargin","isAlarm","alarmCount","keepPage","backupPath","backupStartDate","backupEndDate","settingsConstant","initializeAllSettings","firstGetSettings","getRequest","initializeType","sendingFormStr","sendingForm","defaultItem","createRequest","anotherDefaultValue","defaultComputedValueForCreateRequest","afterResponse","cellImgSet","toISOString","split","autoBackUpMonth","autoBackUpStartDate","combindDegree","rbcDegreeList","classItem","defaultDegree","isAutoLoginEnabled","isTcpConnected","isViewer","forceViewer","FORCE_VIEWER","checkIsViewer","isAutoLogginable","getStoredUser","localStorage","loginUser","goJoinPage","getIpAddress","updateAccount","document","documentElement","requestFullscreen","resFlag","placeholder","backUpDateApi","downloadPossibleApi","openDriveApi","uploadBackupApi","uploadPossibleApi","checkPossibleUploadFileApi","rowspan","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","instance","useRouter","showUploadModal","analysisVal","downloadRootPath","uploadRootPath","local","toDate","saveHttpType","drive","backupDrive","cellimgId","uploadSlotIdObj","duplicated","nonDuplicated","possibleUploadCount","impossibleUploadCount","enteringRouterPath","settingChangedChecker","settingType","isRestoring","isDownloading","isLoadingProgressBar","showDownloadConfirm","downloadConfirmMessage","downloadDto","totalFileCount","successFileCount","downloadUploadType","intervalId","deletableDownloadFiles","loadingState","showUploadSelectModal","possibleUploadFileNames","selectedUploadFile","driveGet","cellAfterSettingObj","afterSettingFormattedString","checkIsMovingWhenSettingNotSaved","filterNumbersOnly","filteredValue","replace","trim","saveData","backUpData","savePlace","backupPlace","dataKey","cellBeforeSettingObj","beforeSettingFormattedString","add","keepPageType","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","uploadConfirm","startDate","endDate","page","searchText","nrCount","wbcTotal","dayQuery","uploadDto","destinationUploadPath","originUploadPath","uploadType","isDownloadOrUploading","downloadUploadStopWebSocket","handlePolling","updateFileCounts","uploadCancel","handleDownloadClose","duration","appContext","config","globalProperties","$socket","handleDownload","downloadDtoObj","downloadType","setTimeout","sendingDownloadStartDate","sendingDownloadEndDate","originDownloadPath","destinationDownloadPath","createBackup","isSameOrBefore","isPossibleToBackup","handleSelectUploadFile","error","openSourceDrive","handleUploadSelectFile","totalMove","successMove","handleUploadSelectModalClose","_normalizeStyle","onInput","Datepicker","modelValue","folderName","_vModelRadio","confirmText","closeText","rbcClassListArrAfterSettingObj","onResetDegree","createRbcDegreeData","processData","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","from","values","isBlinkingGripper","isBlinkCameraReset","blinkTimeout","cameraResetTimeOut","onScan","onGripperOpen","clearTimeout","onCameraReset","wbcCustomParm","customNum","wbcCustomItems","getWbcCustomClasses","validateCustomClass","wbcCustomItemsAfterSettingObj","saveWbcCustomClass","updateResult","classArr","filterEnglishAndNumbers","field","existingClassFullNmArr","existingClassAbbreivationArr","wbcCustomItem","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","wbcHotKeysItemsAfterSettingObj","bfHotKeysItems","getBfHotKeyClasses","bfHotKeysAfterSettingObj","saveBfCustomClass","normalItems","getNormalRange","normalItemsAfterSettingObj","saveNormalRange","normalRangeItems","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","classOrderAfterSettingObj","classOrderBeforeSettingObj","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","top","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","wbcRunInfoCountArrAfterSettingObj","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","namespaced","latestDate","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","isDoorOpen","storageSize","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","toUpperCase","embeddedNumber","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","deviceSerialNm","clonedWbcInfo","clonedRbcInfo","moveImgIsBool","classInfoSort","chatRunningData","cbcLayer","inhaTestCode","rbcReData","rbcReDataClass","rbcInfoAfterData","resetRbcArr","selectedSampleId","classInfoArr","rbcReDataCheck","appAlertOpen","dataBasePageReset","dbListDataFirstNum","dbListDataLastNum","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setIaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceSerialNm","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setSelectedSampleId","setCbcLayer","setInhaTestCode","setRbcReData","setRbcReDataClass","setResetRbcArr","setRbcInfoAfterData","setClassInfoArr","setRbcReDataCheck","setAppAlertOpen","setDataBasePageReset","setResetAnalyzing","setTestType","setIsNsNbIntegration","setBeforeSettingFormattedString","setAfterSettingFormattedString","setSettingChangedChecker","setDbListDataFirstNum","setDbListDataLastNum","setIsTcpConnected","setInitValData","setEnteringRouterPath","setSettingType","setIsDownloadOrUploading","setCommonInfo","hasOwnProperty","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","resultMsg","errorLevel","processingCode","cassetId","existingSlot","existing","setTimeInfo","createStore","modules","settingUpdate","settingUpdatingData","cellImageObj","cellImageId","imagePrintItems","lisCodeItems","lisCodeWbcArr","lisCodeRbcArr","minCountItems","minCountArr","cbcCodeItems","filePathSetItems","activeTab","movingTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","visible","closeLayer","for","storedUser","currentUserId","allUsers","userSearchOption","userSearchOptions","userTypeOptions","inputText","isModalVisible","selectedUserData","selectedUserId","formattedSubscriptionDate","formattedLatestDate","getAllUsers","filterUsers","users","searchOption","searchQuery","toLowerCase","searchField","onSearch","filteredUsers","putSelectedUserData","currentUserData","getSelectedUser","selectedUserIdParam","openLayer","onModalOpen","isVisible","handleDeleteUser","Modal","onAfterOpen","header","content","readonly","imagePrintAndWbcArr","selectedItems","allChecked","getImagePrintData","newItem","saveImagePrint","toggleAllChecks","_vModelCheckbox","afterSetting","saveLisCode","rbcResult","minCountResult","updateRbcResult","updateMinCountResult","is","wbcResult","wbcData","rbcData","minCountData","settingObj","hospitalSiteCd","hospitalNm","cbcCodeArr","cbcCodeArrAfterSetting","saveCbcCode","hospitalName","hospitalObj","filePathSetArr","getFilePathSetData","saveFilePathSet","updateHotKey","updateFilePath","updateCbcFilePath","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","qualityCheckOpen","readJsonFile","readDziFile","readFileTxt","readH7File","readH7Message","createH17","isProjectBm","projectVersionArr","engineVersionArr","deepNetVersion","coreVersion","bmSegEngineVersion","bmCellEngineVersion","pbSegEngineVersion","pbWbcEngineVersion","pbRbcEngineVersion","setVersions","getEngineVersion","WEB_FRONTEND_VERSION","WEB_BACKEND_VERSION","filePath","iniFileData","tcpVersionPattern","coreVersionPattern","bmSegPattern","bmCellPattern","pbSegPattern","pbWbcPattern","pbRbcPattern","tabs","viewerTabs","currentTab","changeTab","tab","components","LoginAccount","AnalysisDatabase","Report","QualityCheck","Version","viewerComponents","storedTab","currentTabComponent","createRunningApi","updateRunningApi","getRunningApi","queryString","entries","encodeURIComponent","join","deleteRunningApi","detailRunningApi","classInfoDetailApi","classInfoDetailSelectQueryApi","classInfoMenuDetailSelectQueryApi","pageUpDownRunnIngApi","updatePcIpStateApi","removePageAllDataApi","disableScroll","body","overflow","enableScroll","percentWithNoError","inhaPercentChange","runningInfoData","excludedTitles","wbcItem","maxItem","percentTotal","percentN2","seoulStMaryPercentChange","originWbcInfo","changingWbcInfo","totalPercent","round","parseFloat","reduce","sum","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","printContent","selectItems","orderClass","nonWbcIdList","rbcInfoPathAfter","rbcTotalVal","sizeChromiaTotal","chromiaTotalTwo","shapeBodyTotal","shapeOthersCount","printReady","getDetailRunningInfo","rbcTotalAndReCount","calcShapeOthersCount","printPage","shapeOthers","getShapeOthers","artifact","doubleNormal","img_drive_root_path","url_Old","response_old","fullPath","otherCount","url_new","response_new","newJsonData","rbcItem","newRbcData","foundElementIndex","el","newRbcDataObj","posX","posY","chromiaTotalval","shapeBodyTotalVal","shapeBodyTotalVal2","lastIndex","rbcInfoAfter","pathCategory","cat","pathClass","countReAdd","hiddenImages","handleImageError","itemId","percentageChange","totalPLT","malariaTotal","lastElement","xel","wbcInfoAfter","filteredWbcInfo","showImage","noImageList","wbcArr","percentChangeBySiteCd","compressedContent","pako","innerHTML","level","fetch","method","ok","blob","URL","createObjectURL","open","revokeObjectURL","oArr","sortArr","sortedWbcInfoData","sortWbcInfo","newSortArr","nameA","nameB","isSeoulStMaryHospitalSiteCd","isInhaHospitalSiteCd","closePrint","ref_key","submitUserId","submitOfDate","birthDay","gender","rbcMemo","wbcMemo","onError","coordinates","loadMoreRef","selectedItemId","itemObj","myIp","loadingDelay","contextMenu","x","y","rightClickItem","printOnOff","selectItemWbc","selectAllCheckbox","barcodeImg","isCtrlKeyPressed","isShiftKeyPressed","firstShiftKeyStr","lastShiftKeyStr","socketTimeoutId","scrollableDiv","barCodeImageShowError","handleKeyDown","ctrlKey","shiftKey","handleKeyUp","addEventListener","handleOutsideClick","onUnmounted","removeEventListener","loadingDelayParents","watchEffect","dbData","selectedItemIdFalse","filteredItems","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","selectItem","removeCheckBox","selectedRow","querySelector","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","dbDataItem","contextMenuElement","contains","rowRightClick","lock_status","wbcInfoData","sortedArray","clientX","handleShiftSelection","startId","endId","items","handleCheckboxChange","entry","isIntersecting","intersectionRatio","ipAddress","then","delayedEmit","catch","delay","pcIp","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","submitState","deleteRow","idsToDelete","rootArr","ids","idsToDeleteLock","submitStateChangeText","onImageError","pilePath","nonWbcTitles","getClassOrder","selectedItem","newSelectedItem","setWbcTotalAndPercent","sortClassOrder","integrationFindNe","returnText","neFindItem","acc","showClassificationResults","classificationResult","showClassificationNonWbcResults","allImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","hideImage","imageSet","executeExcelCreate","bufferDelay","dbGetData","today","thirtyDaysAgo","setDate","searchType","prevPage","titleItem","titleItemArr","wbcCountOrder","classListToggle","bmClassIsBoolen","prevDataPage","reqDataPrev","checkedSelectedItems","eventTriggered","notStartLoading","barcodeInput","isPrintingExcel","rbcInfoAfterVal","rbcInfoBeforeVal","inputTimeout","inputBuffer","handleStateVal","initDbData","closeClassListBox","focus","on","handleGlobalKeydown","previousValue","lastInputTime","isBarcodeScannerInput","handleInput","currentTime","timeDiff","trimmedValue","currentRoute","handleEnter","selectBox","selectButton","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","getDbData","saveLastSearchParams","storedSearchParams","pageNum","pageChange","requestData","pageSize","startDay","endDay","dateA","dateB","diff","diffInMs","getTime","diffInDays","loadMoreData","loadPrevData","exportToExcel","convertRbcData","excecuteExcel","checkedItem","beforeRbcData","afterRbcData","dataList","reDegree","areDegreesIdentical","sendingItem","before","after","beforeItem","classInfoItem","classInfoDetailItem","Malaria","Others","Platelet","afterItem","createRbcJson","arr1","arr2","i","item1","item2","j","classInfo1","classInfo2","sendingData","jsonString","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","shapeTotalVal","inclusionBody","countArtifact","countDoubleNormal","afterCategory","afterClassItem","rbcInfoArray","dateRefresh","checkListItem","onKeydown","_withKeys","_KeepAlive","ListTable","onLoadMoreData","onLoadPrevData","onInitData","onSelectItem","onRefresh","onCheckListItem","ListInfo","ListWbcImg","ListBmImg","checkedClassIndices","memo","sliderValue","memoModal","isBefore","except","selectedClass","allCheckType","jsonIsBool","bodyTotal","shapeTotal","rbcSendtimerId","timeoutId","rbcResponseOldArr","rbcImagePageNumber","rightClickItemSet","isCommitChanged","allCheckClear","currentRbcPageNumber","newRbcPageNumber","afterChange","processItems","argument","handleClick","isChecked","updateClassInfoArr","clickChangeSens","handleLiClick","toggleCheckbox","pageNumber","classChange","sensitivity","resetTimer","sensRbcReJsonSend","rbcInfoAfterSensitivity","className","anyWay","updatedItem","resRunningItem","selectedClassVal","findClass","toggleAll","check","notCanvasClickVal","allCheckboxes","checkbox","some","oldItem","updataClassInfoaArr","onClickDegree","isNormal","memoOpen","memoCancel","memoChange","enterAppliedRbcMemo","replaceAll","alertShow","scrollTo","behavior","commitConfirmed","onCommit","localTime","rulers","moveImgPost","moveClassImagePost","VIEWER_CHECK","malariaList","noMalariaList","selectedClickImages","selectedImageSrc","indexBeforePressingShift","draggedImages","imageExist","modalOpen","modalImageWidth","modalImageHeight","getImageList","json","err","handleBodyClick","outerClickCloseModal","closeModal","handleOpenModal","malaria","zoomIn","newWidth","newHeight","zoomOut","closest","handleClickImage","section","imgName","clickedImage","startIdx","endIdx","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","onDblclick","noMalaria","viewer","imgSet_img_list","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","activeRuler","showSelect","rulerPos","prevPosX","prevPosY","left","rulerSize","rulerWidth","viewBoxWH","tilingViewerLayer","tileExist","newItemClassInfoArr","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","classInfoArrNewReData","canvasCurrentHeight","canvasCurrentWitdh","fileNameResultArr","initElement","closeSelectBox","dziWidthHeight","urlImage","imageFileName","imageResponse","extractWidthHeightFromDzi","xmlString","parser","DOMParser","xmlDoc","parseFromString","sizeElement","getElementsByTagName","tileSizeEl","tileSize","getAttribute","moveRbcClassEvent","existingOverlays","getElementsByClassName","newAsrr","moveRbcClassItem","removeDiv","rbcInfoPathAfterJsonCreate","drawRbcMarker","overlaysArray","overlay","removeOverlay","compareData","jsonData","removeRbcMarker","olElements","querySelectorAll","validClassNmSet","Set","rbcMarker","nenenen","rbcClassRightClick","currentTarget","HTMLElement","imgNum","sss","getElementById","destroy","canvas","ctx","getContext","clearRect","beginPath","colors","info","lineWidth","strokeStyle","classItemPosX","classItemPosY","rectPath","Path2D","x2","x1","y2","y1","ddrr","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","maxZoomLevel","minZoomLevel","zoomPerClick","zoomPerScroll","viewportMargins","bottom","right","visibilityRatio","element","moveHandler","existingMagCanvas","removeChild","drawer","magCanvas","createElement","magCtx","magWidth","magHeight","zoomLevel","position","border","borderRadius","zIndex","appendChild","drawImage","visibility","addOverlay","location","addHandler","Image","Size","Width","Height","notCanvasClick","parentElement","container","drawRuler","originalEvent","clickPos","viewport","pointFromPixel","canvasPos","isItemSelected","selectItm","setAttribute","backgroundColor","opacity","overlayRect","imageToViewportRectangle","itemPos","color","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","fileNameResult","extractSubStringBeforeFiles","xmlns","Url","Format","Overlap","TileSize","searchString","endIndex","indexOf","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbReset","brightnessReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","maxNumberOfLines","numberOfLines","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","gridLines","line","remove","onClickRuler","ruler","divtilingViewer","rulerOverlay","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","zoomRatio","viewportToImageZoom","titleElement","textAlign","fontSize","minWidth","startX","endX","startY","endY","centerX","centerY","halfWidth","onClickZoom","onContextmenu","resData","route","useRoute","isButtonDisabled","pageMoveDeleteStop","isLoading","isNext","moveWbc","deleteConnectionStatus","upDownBlockAccess","pageGo","pageUpDownRunnIng","step","res","direction","processNextDbIndex","handleDataResponse","dbId","resClassInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","fileSysPost","createFile","createCbcFile","cbcWorkList","cbcPatientNo","cbcPatientNm","cbcSex","loading","cbcAge","cbcFilePathSetArr","cbcCodeList","selectItemsVal","getCbcPathData","getCbcCodeList","initCbcData","inhaCbc","hospital","cmcSeoulCbc","kuahGilHosCbc","commonCbc","updateRunningApiPost","params","deviceBarcode","msg","segments","cbcSegment","CBC_CD","fields","obj","readFileTxtRes","parms","machine","episode","baseUrl","returnCode","regNo","sex","age","testCode","testCodeList","codes","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","cbcData","cbcDataArray","originalDb","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","allUnCheck","isBeforeUpdate","refreshClass","classInfoArrUpdate","classInfoArrUpdateRe","unChecked","changeCurrentRbcImagePageNumber","ClassInfoMenu","onRefreshClass","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","onClassInfoArrUpdateRe","RbcImageList","onNotCanvasClick","onUnChecked","onChangeCurrentRbcImagePageNumber","eqmtcd","CbcWbcTestCdList_0002","removeDuplicatesById","seenIds","_createStaticVNode","inhaTestSendCode","wbcInfoVal","wbcInfoAfterVal","wbcInfoBeforeVal","toggleLock","totalBeforeCount","totalAfterCount","okMessageType","lisFilePathSetArr","customClassArr","submittedScreen","lisBtnColor","getCustomClass","mountedMethod","getLisWbcRbcData","getLisPathData","beforeAfterChange","lisInhaDataSend","lisModalOpen","goClass","wbcClassTileChange","updateOriginalDb","toggleLockEvent","barcodeCopy","textarea","select","execCommand","uploadLis","cmcSeoulLisAndCbcDataGet","uimdTestCbcLisDataGet","lisLastStep","codeList","resultCbc","cbcJson","fiveDiffWorkList","wbcDiffCountItem","testcd","wbcTemp","fiveDiffItem","uniqueItems","totalPercentRounded","updatedWbcTemp","nsPercentItem","ancResult","paramsLisCopyLogData","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","paramsResult","newparams","ex_interface","userid","testcont","testcontcd","execdeptcd","resultFlag","ResultFlag","resultflag","_text","paramsDataCbcLisLog","frontendSendData","processSendData","uimdDefaultData","frontendData","lisLastReportVal","error2","errText","seq","buildDataString","LIS_CD","IA_CD","countLine","percentLine","lisFileUrlCreate","goDae","inhaDataSend","otherDataSend","fileCreateRes","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","sendLisMessage","filepath","resultStr","tmpList","tmpStr","rbcTmp","processWbcItem","lisCodeLIS_CD","MIN_COUNT","specialCodes","IA_CATEGORY_CD","rbcItemElement","IA_CLASS_CD","replacements","rbcTmp2","parmsLisCopy","kumcMergePercent","kumcBandPercent","updateItem","newPercent","appendData","fileParams","filename","fileRes","updatedRunningInfo","errorCode","errorMessage","newWbcDataArr","wbcDataItem","CD_NM","newRbcDataArr","rbcDataItem","CATEGORY_NM","CLASS_NM","succ","fail","userNm","getUsernm","usernm","enterAppliedWbcMemo","getStringValue","noAlert","customClassItems","availableCustomClassArr","wbcBeforeInfo","wbcAfterInfo","customClassItem","customItem","wbcBeforeArr","wbcAfterArr","wbcInfoAfterValForTotalCount","filterByTitle","wbcInfoBeforeValForTotalCount","totalCountSet","createPercent","isChanged","isBeforeAfterChanged","sortedBeforeImages","sortedAfterImages","beforeSet","afterSet","areEqual","isNonWbc","titleArr","showType","titleInArray","nonWbcTitleArr","nonWbcClassList","handleClickOutside","classOrderChanged","stopPropagation","wbcArrs","sortedWbcInfo","submitStateChanged","changedSubmitState","WbcClass","onClassOrderChanged","onSubmitStateChanged","nonRbcClassList","Print","onPrintClose","updateWbcInfo","Function","classCompareShow","Boolean","selectedTitle","setRef","replaceFileNamePrefix","onDragOver","isBorderChanged","wbcReset","projectTypeReturn","wbcInfoRefresh","imageSize","expose","__expose","refsArray","cellRef","firstClass","firstClassObj","lastClass","firstItemIndex","lastItemIndex","lastClassObj","previousFirstClass","previousLastClass","scrollToElement","targetElement","scrollIntoView","wbcInfoArrChild","toRefs","debouncedUpdate","debounce","timestamp","uniqueKey","imgIndex","classImgChange","handleImageLoad","itemIndex","highImg","findAfterArr","updateClassValue","currentClass","previousClass","classObj","$emit","imageIndex","parseInt","onLoad","draggedItemIndex","draggedImageIndex","firstClickedImageIndex","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","selectSizeTitle","allCheck","cellMarkerIcon","imgSet","zoomValue","selectItemImageArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","$imageGalleryRef","showImageGallery","imgSetLocalStorage","drawCellMarker","currentMoveImgIsBool","handleZoom","newSize","handleUpdateCellRef","refValue","classCompare","imgPixelConvertToPercent","percentConvertToPixel","storedBrightness","storedRgb","imageSizeCopy","nextPage","isNextFalse","handleRightClick","openContextMenu","showSizeControl","menuHeight","screenHeight","innerHeight","mouseX","mouseY","menuX","menuY","menuWidth","innerWidth","moveSelectedImages","itemIdx","matchingItemFind","infoItem","addToRollbackHistory","draggedItem","matchingItemIndex","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","wbcinfo","wbcPush","foundObject","itemsToDelete","prefix","modifiedPrefix","openModal","handleWheel","imgResize","jsonImageDat","imageElement","foundItem","FILE_NM","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","POSX2","POSX1","rectHeight","POSY2","POSY1","display","allCheckChange","allCheckInsert","idxKey","imgSizeReset","reset","selectedSizeTitle","changeImageSize","requestAnimationFrame","updateImageSize","newPercentValue","displayValue","onDragOverCircle","onDropCircle","updatedWbcInfo","moveSelectedImagesToTargetItem","targetIndex","selectedImages","selectedImagesToMove","sourceItemIndex","sourceItem","correspondingItem","itemImg","dataItem","wbcInfoIdArr","handleMoveImages","selectImage","classInfoitem","imageIndexInSelected","targetItemIndex","originalOnDrop","draggedItems","targetItems","keyMove","wbcInfosArr","sourceFolders","destinationFolders","formattedTargetItemId","classInfoBagic","matchingItem","newArr","newArrIdx","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","status","onIsNextFalse","ClassInfo","onNextPage","onScrollEvent","ImageGallery","onAllCheckChange","onSelectImage","onOpenModal","onHideImage","onHandleRightClick","onOnDrop","onOnDragStart","onOnDropCircle","onOnDragOverCircle","onScrollToElement","onWheel","paImages","idealZoneImages","idealStitchImages","megaImages","particleImageUrls","idealZoneImageUrls","idealStitchImageUrls","megaImageUrls","strArray","buttonOfen","viewerSmall","getImgUrl","bmOldDataDivision","getImageUrlsSmallImg","returnVal","resp","all","openInViewer","bmOldData","urlTileSources","navigator","showZoomControl","showHomeControl","showFullScreenControl","showRotationControl","showFullPageControl","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","preventDefaultAction","closeViewer","viewerElement","newImgHeight","newImgWidth","viewerHeight","bool","transform","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","to","next","currentUser","_imports_0","appHeaderLeftHidden","isBlinkingPrime","storagePercent","eqStatCdData","oilCountData","storagePercentData","oilVisible","maxOilCount","statusBarWrapper","statusBar","noRouterPush","isAralrmInterver","clickType","userSetOutUl","isStartCountUpdated","formattedDate","userSetOutToggle","updateDateTime","toLocaleDateString","toLocaleTimeString","clear","fullscreenElement","exitFullscreen","fullScreen","timerId","closeUserSetBox","preventScroll","passive","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","_component_router_link","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","runningInfoStore","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","range","countingInterStartval","countingInterRunval","isNsNbIntegrationLocal","viewerCheckApp","parsedDataProps","deleteData","isFullscreen","stataasdasd","ipMatches","barcodeNum","siteCdDvBarCode","checkFullscreenStatus","matchMedia","matches","startChecking","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","sendMessage","reqArrPaste","leave","isIpMatching","urlPattern","socketData","textDecoder","TextDecoder","stringData","decode","parseDataWarp","deviceInfoObj","saveDeviceInfo","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","wbcInfoNewVal","getDefaultWbcInfo","getDefaultWbcInfoAfter","updateWbcInfoAfter","traySlot","tactTime","bf_lowPowerPath","bminfo","saveRunningInfo","deviceInfo","deviceItem","last","startSysPostWebSocket","runInfoPostWebSocket","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","MAIN_WEBSOCKET_IP","socketPlugin","install","app","socket","io","transports","reconnection","reconnectionAttempts","reconnectionDelay","timeout","pingTimeout","sendPing","connected","$socketError","latency","originalUnmount","unmount","bind","disconnect","faHalfCircleUp","iconName","faHalfCircleDown","library","fas","faCircle","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","n","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}