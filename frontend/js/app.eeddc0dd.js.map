{"version":3,"file":"js/app.eeddc0dd.js","mappings":"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","sources":["webpack://uimdCell/./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack://uimdCell/./src/common/defines/constFile/commonCodeList.ts","webpack://uimdCell/./src/common/defines/constFile/dataBase.ts","webpack://uimdCell/./src/common/lib/utils/conversionDataUtils.ts","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?cb1e","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue","webpack://uimdCell/./src/views/analysis/commponent/processInfo.vue?1d54","webpack://uimdCell/./src/common/defines/constFile/analysis.ts","webpack://uimdCell/./src/common/defines/constFile/constantMessageText.ts","webpack://uimdCell/./src/common/lib/utils/dateUtils.ts","webpack://uimdCell/./src/common/tcpRequest/tcpReq.ts","webpack://uimdCell/./src/common/api/httpClient.ts","webpack://uimdCell/./src/common/api/apiConstants.ts","webpack://uimdCell/./src/common/api/service/setting/settingApi.ts","webpack://uimdCell/./src/eventBus/eventBus.ts","webpack://uimdCell/./src/components/commonUi/Alert.vue","webpack://uimdCell/./src/components/commonUi/Alert.vue?90b6","webpack://uimdCell/./src/common/defines/constFile/settings.ts","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?8b98","webpack://uimdCell/./src/views/analysis/commponent/execute.vue","webpack://uimdCell/./src/views/analysis/commponent/execute.vue?96b5","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?dadc","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView.vue?cfb3","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?7c68","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue","webpack://uimdCell/./src/views/analysis/commponent/orderList.vue?9b7d","webpack://uimdCell/./src/store/modules/analysis/wbcclassification.ts","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?479e","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue","webpack://uimdCell/./src/views/analysis/commponent/classInfoification.vue?392d","webpack://uimdCell/./src/store/modules/analysis/rbcClassification.ts","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?b417","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue","webpack://uimdCell/./src/views/analysis/commponent/rbcclassification.vue?44de","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?a3fa","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue","webpack://uimdCell/./src/views/analysis/commponent/foundingCells.vue?439a","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?7f70","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue","webpack://uimdCell/./src/views/analysis/commponent/workingView100A.vue?ea5c","webpack://uimdCell/./src/views/analysis/index.vue?4f95","webpack://uimdCell/./src/views/analysis/index.vue","webpack://uimdCell/./src/views/analysis/index.vue?b0e1","webpack://uimdCell/./src/views/HomeView.vue?71c7","webpack://uimdCell/./src/views/HomeView.vue","webpack://uimdCell/./src/common/api/service/user/userApi.ts","webpack://uimdCell/./src/views/join/index.vue?d437","webpack://uimdCell/./src/views/join/index.vue","webpack://uimdCell/./src/views/join/index.vue?f30d","webpack://uimdCell/./src/common/api/service/device/deviceApi.ts","webpack://uimdCell/./src/common/lib/commonfunction/settingFunctions.ts","webpack://uimdCell/./src/views/login/index.vue?959f","webpack://uimdCell/./src/views/login/index.vue","webpack://uimdCell/./src/views/login/index.vue?b794","webpack://uimdCell/./src/common/api/service/backup/wbcApi.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?ad77","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/cellImageAnalyzed.vue?a264","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?a52c","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/rbcDegree.vue?f1e6","webpack://uimdCell/./src/common/lib/sendWebSocket/common.ts","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?0bb8","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/deviceControls.vue?be0b","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?19b1","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/customClass.vue?4fc6","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?0179","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcHotKeys.vue?5d3f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?d72d","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/bfHotKeys.vue?493e","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?2fe3","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/normalRange.vue?deaa","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?fd0f","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/classOrder.vue?1620","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?c3ef","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/component/wbcRunningCount.vue?2f57","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?2732","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue","webpack://uimdCell/./src/views/setting/analysisDatabase/index.vue?9ed3","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?b666","webpack://uimdCell/./src/views/setting/lognAccount/index.vue","webpack://uimdCell/./src/views/setting/lognAccount/index.vue?27bd","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?8c34","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue","webpack://uimdCell/./src/views/setting/report/component/ImagePrint.vue?56ba","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?a6eb","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue","webpack://uimdCell/./src/views/setting/report/component/lisCode.vue?51fb","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?d20a","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue","webpack://uimdCell/./src/views/setting/report/component/cbcCode.vue?2655","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?e6b5","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue","webpack://uimdCell/./src/views/setting/report/component/filePathSet.vue?84d4","webpack://uimdCell/./src/views/setting/report/index.vue?ebd0","webpack://uimdCell/./src/views/setting/report/index.vue","webpack://uimdCell/./src/views/setting/report/index.vue?9290","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue","webpack://uimdCell/./src/views/setting/qualityCheck/index.vue?18fb","webpack://uimdCell/./src/views/setting/version/index.vue?c959","webpack://uimdCell/./src/views/setting/version/index.vue","webpack://uimdCell/./src/views/setting/version/index.vue?7549","webpack://uimdCell/./src/views/setting/index.vue?d55b","webpack://uimdCell/./src/views/setting/index.vue","webpack://uimdCell/./src/views/setting/index.vue?7828","webpack://uimdCell/./src/components/commonUi/modal.vue","webpack://uimdCell/./src/components/commonUi/modal.vue?4253","webpack://uimdCell/./src/common/api/service/runningInfo/runningInfoApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?a1c9","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/print.vue?e29e","webpack://uimdCell/./src/common/defines/constFile/classArr.ts","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listTable.vue?e80c","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listInfo.vue?ef0e","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?c177","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listWbcImg.vue?21a5","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?1100","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue","webpack://uimdCell/./src/views/datebase/commponent/list/listBmImg.vue?17fe","webpack://uimdCell/./src/views/datebase/index.vue?61fa","webpack://uimdCell/./src/views/datebase/index.vue","webpack://uimdCell/./src/views/datebase/index.vue?ebef","webpack://uimdCell/./src/components/commonUi/Confirm.vue","webpack://uimdCell/./src/components/commonUi/Confirm.vue?15eb","webpack://uimdCell/./src/components/commonUi/SliderBar.vue?ff40","webpack://uimdCell/./src/components/commonUi/SliderBar.vue","webpack://uimdCell/./src/components/commonUi/SliderBar.vue?092e","webpack://uimdCell/./src/common/api/service/fileReader/fileReaderApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?ab8c","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcClass.vue?3a74","webpack://uimdCell/./src/common/defines/constFile/rbc.ts","webpack://uimdCell/./src/common/api/service/dataBase/wbc/wbcApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?484e","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/Malaria.vue?b1d3","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?8cab","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/rbcImageList/rbcImageList.vue?e25a","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?b2bc","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfoMenu.vue?d9ae","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?364c","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/lisCbc.vue?a2b2","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?91c1","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/rbc/listDetailRbc.vue?bac2","webpack://uimdCell/./src/common/defines/constFile/lis.ts","webpack://uimdCell/./src/common/api/service/fileSys/fileSysApi.ts","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?fb23","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue?2e79","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?cb24","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/report/report.vue?301e","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?5ca2","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/classInfo/listDetail.vue?8353","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?f393","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/leftImgList.vue?2b16","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?51a6","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/tilingViewer.vue?7660","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?2dfe","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue","webpack://uimdCell/./src/views/datebase/commponent/detail/databaseWhole/index.vue?3e85","webpack://uimdCell/./src/router/index.ts","webpack://uimdCell/./src/components/layout/AppHeader.vue?527c","webpack://uimdCell/./src/components/layout/AppHeader.vue","webpack://uimdCell/./src/components/layout/AppHeader.vue?0448","webpack://uimdCell/./src/store/modules/userModule.ts","webpack://uimdCell/./src/store/modules/analysis/executeModule.ts","webpack://uimdCell/./src/store/modules/analysis/workingViewModule.ts","webpack://uimdCell/./src/store/modules/embeddedStatusModule.ts","webpack://uimdCell/./src/store/modules/analysis/orderListModule.ts","webpack://uimdCell/./src/store/modules/testPageCommon/ruuningInfo.ts","webpack://uimdCell/./src/store/modules/commonModule.ts","webpack://uimdCell/./src/store/modules/dataBaseSetData/dataBaseSetDataModule.ts","webpack://uimdCell/./src/store/modules/timeModule.ts","webpack://uimdCell/./src/store/index.ts","webpack://uimdCell/./src/common/lib/storeSetData/common.ts","webpack://uimdCell/./src/common/lib/utils/changeData.ts","webpack://uimdCell/./src/App.vue?2a5e","webpack://uimdCell/./src/App.vue","webpack://uimdCell/./src/App.vue?7ccd","webpack://uimdCell/./src/plugins/socketPlugin.ts","webpack://uimdCell/./src/icons/customIcons.ts","webpack://uimdCell/./src/main.ts","webpack://uimdCell/webpack/bootstrap","webpack://uimdCell/webpack/runtime/chunk loaded","webpack://uimdCell/webpack/runtime/compat get default export","webpack://uimdCell/webpack/runtime/define property getters","webpack://uimdCell/webpack/runtime/global","webpack://uimdCell/webpack/runtime/hasOwnProperty shorthand","webpack://uimdCell/webpack/runtime/make namespace object","webpack://uimdCell/webpack/runtime/node module decorator","webpack://uimdCell/webpack/runtime/publicPath","webpack://uimdCell/webpack/runtime/jsonp chunk loading","webpack://uimdCell/webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 5177,\n\t\"./af.js\": 5177,\n\t\"./ar\": 1509,\n\t\"./ar-dz\": 1488,\n\t\"./ar-dz.js\": 1488,\n\t\"./ar-kw\": 8676,\n\t\"./ar-kw.js\": 8676,\n\t\"./ar-ly\": 2353,\n\t\"./ar-ly.js\": 2353,\n\t\"./ar-ma\": 4496,\n\t\"./ar-ma.js\": 4496,\n\t\"./ar-ps\": 6947,\n\t\"./ar-ps.js\": 6947,\n\t\"./ar-sa\": 2682,\n\t\"./ar-sa.js\": 2682,\n\t\"./ar-tn\": 9756,\n\t\"./ar-tn.js\": 9756,\n\t\"./ar.js\": 1509,\n\t\"./az\": 5533,\n\t\"./az.js\": 5533,\n\t\"./be\": 8959,\n\t\"./be.js\": 8959,\n\t\"./bg\": 7777,\n\t\"./bg.js\": 7777,\n\t\"./bm\": 4903,\n\t\"./bm.js\": 4903,\n\t\"./bn\": 1290,\n\t\"./bn-bd\": 7357,\n\t\"./bn-bd.js\": 7357,\n\t\"./bn.js\": 1290,\n\t\"./bo\": 1545,\n\t\"./bo.js\": 1545,\n\t\"./br\": 1470,\n\t\"./br.js\": 1470,\n\t\"./bs\": 4429,\n\t\"./bs.js\": 4429,\n\t\"./ca\": 7306,\n\t\"./ca.js\": 7306,\n\t\"./cs\": 6464,\n\t\"./cs.js\": 6464,\n\t\"./cv\": 3635,\n\t\"./cv.js\": 3635,\n\t\"./cy\": 4226,\n\t\"./cy.js\": 4226,\n\t\"./da\": 3601,\n\t\"./da.js\": 3601,\n\t\"./de\": 7853,\n\t\"./de-at\": 6111,\n\t\"./de-at.js\": 6111,\n\t\"./de-ch\": 4697,\n\t\"./de-ch.js\": 4697,\n\t\"./de.js\": 7853,\n\t\"./dv\": 708,\n\t\"./dv.js\": 708,\n\t\"./el\": 4691,\n\t\"./el.js\": 4691,\n\t\"./en-au\": 3872,\n\t\"./en-au.js\": 3872,\n\t\"./en-ca\": 8298,\n\t\"./en-ca.js\": 8298,\n\t\"./en-gb\": 6195,\n\t\"./en-gb.js\": 6195,\n\t\"./en-ie\": 6584,\n\t\"./en-ie.js\": 6584,\n\t\"./en-il\": 5543,\n\t\"./en-il.js\": 5543,\n\t\"./en-in\": 9033,\n\t\"./en-in.js\": 9033,\n\t\"./en-nz\": 9402,\n\t\"./en-nz.js\": 9402,\n\t\"./en-sg\": 3004,\n\t\"./en-sg.js\": 3004,\n\t\"./eo\": 2934,\n\t\"./eo.js\": 2934,\n\t\"./es\": 7650,\n\t\"./es-do\": 838,\n\t\"./es-do.js\": 838,\n\t\"./es-mx\": 7730,\n\t\"./es-mx.js\": 7730,\n\t\"./es-us\": 6575,\n\t\"./es-us.js\": 6575,\n\t\"./es.js\": 7650,\n\t\"./et\": 3035,\n\t\"./et.js\": 3035,\n\t\"./eu\": 3508,\n\t\"./eu.js\": 3508,\n\t\"./fa\": 119,\n\t\"./fa.js\": 119,\n\t\"./fi\": 527,\n\t\"./fi.js\": 527,\n\t\"./fil\": 5995,\n\t\"./fil.js\": 5995,\n\t\"./fo\": 2477,\n\t\"./fo.js\": 2477,\n\t\"./fr\": 5498,\n\t\"./fr-ca\": 6435,\n\t\"./fr-ca.js\": 6435,\n\t\"./fr-ch\": 7892,\n\t\"./fr-ch.js\": 7892,\n\t\"./fr.js\": 5498,\n\t\"./fy\": 7071,\n\t\"./fy.js\": 7071,\n\t\"./ga\": 1734,\n\t\"./ga.js\": 1734,\n\t\"./gd\": 217,\n\t\"./gd.js\": 217,\n\t\"./gl\": 7329,\n\t\"./gl.js\": 7329,\n\t\"./gom-deva\": 2124,\n\t\"./gom-deva.js\": 2124,\n\t\"./gom-latn\": 3383,\n\t\"./gom-latn.js\": 3383,\n\t\"./gu\": 5050,\n\t\"./gu.js\": 5050,\n\t\"./he\": 1713,\n\t\"./he.js\": 1713,\n\t\"./hi\": 3861,\n\t\"./hi.js\": 3861,\n\t\"./hr\": 6308,\n\t\"./hr.js\": 6308,\n\t\"./hu\": 609,\n\t\"./hu.js\": 609,\n\t\"./hy-am\": 7160,\n\t\"./hy-am.js\": 7160,\n\t\"./id\": 4063,\n\t\"./id.js\": 4063,\n\t\"./is\": 9374,\n\t\"./is.js\": 9374,\n\t\"./it\": 8383,\n\t\"./it-ch\": 1827,\n\t\"./it-ch.js\": 1827,\n\t\"./it.js\": 8383,\n\t\"./ja\": 3827,\n\t\"./ja.js\": 3827,\n\t\"./jv\": 9722,\n\t\"./jv.js\": 9722,\n\t\"./ka\": 1794,\n\t\"./ka.js\": 1794,\n\t\"./kk\": 7088,\n\t\"./kk.js\": 7088,\n\t\"./km\": 6870,\n\t\"./km.js\": 6870,\n\t\"./kn\": 4451,\n\t\"./kn.js\": 4451,\n\t\"./ko\": 3164,\n\t\"./ko.js\": 3164,\n\t\"./ku\": 8174,\n\t\"./ku-kmr\": 6181,\n\t\"./ku-kmr.js\": 6181,\n\t\"./ku.js\": 8174,\n\t\"./ky\": 8474,\n\t\"./ky.js\": 8474,\n\t\"./lb\": 9680,\n\t\"./lb.js\": 9680,\n\t\"./lo\": 5867,\n\t\"./lo.js\": 5867,\n\t\"./lt\": 5766,\n\t\"./lt.js\": 5766,\n\t\"./lv\": 9532,\n\t\"./lv.js\": 9532,\n\t\"./me\": 8076,\n\t\"./me.js\": 8076,\n\t\"./mi\": 1848,\n\t\"./mi.js\": 1848,\n\t\"./mk\": 306,\n\t\"./mk.js\": 306,\n\t\"./ml\": 3739,\n\t\"./ml.js\": 3739,\n\t\"./mn\": 9053,\n\t\"./mn.js\": 9053,\n\t\"./mr\": 6169,\n\t\"./mr.js\": 6169,\n\t\"./ms\": 3386,\n\t\"./ms-my\": 2297,\n\t\"./ms-my.js\": 2297,\n\t\"./ms.js\": 3386,\n\t\"./mt\": 7075,\n\t\"./mt.js\": 7075,\n\t\"./my\": 2264,\n\t\"./my.js\": 2264,\n\t\"./nb\": 2274,\n\t\"./nb.js\": 2274,\n\t\"./ne\": 8235,\n\t\"./ne.js\": 8235,\n\t\"./nl\": 2572,\n\t\"./nl-be\": 3784,\n\t\"./nl-be.js\": 3784,\n\t\"./nl.js\": 2572,\n\t\"./nn\": 4566,\n\t\"./nn.js\": 4566,\n\t\"./oc-lnc\": 9330,\n\t\"./oc-lnc.js\": 9330,\n\t\"./pa-in\": 9849,\n\t\"./pa-in.js\": 9849,\n\t\"./pl\": 4418,\n\t\"./pl.js\": 4418,\n\t\"./pt\": 9834,\n\t\"./pt-br\": 8303,\n\t\"./pt-br.js\": 8303,\n\t\"./pt.js\": 9834,\n\t\"./ro\": 4457,\n\t\"./ro.js\": 4457,\n\t\"./ru\": 2271,\n\t\"./ru.js\": 2271,\n\t\"./sd\": 1221,\n\t\"./sd.js\": 1221,\n\t\"./se\": 3478,\n\t\"./se.js\": 3478,\n\t\"./si\": 7538,\n\t\"./si.js\": 7538,\n\t\"./sk\": 5784,\n\t\"./sk.js\": 5784,\n\t\"./sl\": 6637,\n\t\"./sl.js\": 6637,\n\t\"./sq\": 6794,\n\t\"./sq.js\": 6794,\n\t\"./sr\": 5719,\n\t\"./sr-cyrl\": 3322,\n\t\"./sr-cyrl.js\": 3322,\n\t\"./sr.js\": 5719,\n\t\"./ss\": 6000,\n\t\"./ss.js\": 6000,\n\t\"./sv\": 1011,\n\t\"./sv.js\": 1011,\n\t\"./sw\": 748,\n\t\"./sw.js\": 748,\n\t\"./ta\": 1025,\n\t\"./ta.js\": 1025,\n\t\"./te\": 1885,\n\t\"./te.js\": 1885,\n\t\"./tet\": 8861,\n\t\"./tet.js\": 8861,\n\t\"./tg\": 6571,\n\t\"./tg.js\": 6571,\n\t\"./th\": 5802,\n\t\"./th.js\": 5802,\n\t\"./tk\": 9527,\n\t\"./tk.js\": 9527,\n\t\"./tl-ph\": 9231,\n\t\"./tl-ph.js\": 9231,\n\t\"./tlh\": 1052,\n\t\"./tlh.js\": 1052,\n\t\"./tr\": 5096,\n\t\"./tr.js\": 5096,\n\t\"./tzl\": 9846,\n\t\"./tzl.js\": 9846,\n\t\"./tzm\": 1765,\n\t\"./tzm-latn\": 7711,\n\t\"./tzm-latn.js\": 7711,\n\t\"./tzm.js\": 1765,\n\t\"./ug-cn\": 8414,\n\t\"./ug-cn.js\": 8414,\n\t\"./uk\": 6618,\n\t\"./uk.js\": 6618,\n\t\"./ur\": 158,\n\t\"./ur.js\": 158,\n\t\"./uz\": 7609,\n\t\"./uz-latn\": 2475,\n\t\"./uz-latn.js\": 2475,\n\t\"./uz.js\": 7609,\n\t\"./vi\": 1135,\n\t\"./vi.js\": 1135,\n\t\"./x-pseudo\": 4051,\n\t\"./x-pseudo.js\": 4051,\n\t\"./yo\": 2218,\n\t\"./yo.js\": 2218,\n\t\"./zh-cn\": 2648,\n\t\"./zh-cn.js\": 2648,\n\t\"./zh-hk\": 1632,\n\t\"./zh-hk.js\": 1632,\n\t\"./zh-mo\": 1541,\n\t\"./zh-mo.js\": 1541,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 5358;","export const commonCodeList = [\r\n    { grpCd: '00', grpNm: 'User position', cd: '00', cdNm: 'Position' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '01', cdNm: 'Executive advisor' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '02', cdNm: 'General manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '03', cdNm: 'Chief' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '04', cdNm: 'Assistant manager' },\r\n    { grpCd: '00', grpNm: 'User position', cd: '05', cdNm: 'Staff' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '01', cdNm: 'Normal' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '02', cdNm: 'Admin' },\r\n    { grpCd: '01', grpNm: 'User authorization', cd: '03', cdNm: 'Developer' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '0', cdNm: 'Empty' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '1', cdNm: 'Ready' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '2', cdNm: 'Analyzing' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '3', cdNm: 'Complete' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '4', cdNm: 'Error' },\r\n    { grpCd: '02', grpNm: 'Cassete state', cd: '9', cdNm: 'Scan' },\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '01', cdNm: 'Cassette Loaded.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '02', cdNm: 'PB/BM Sequence Start.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '03', cdNm: 'Cassette Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '04', cdNm: 'Cassette Scanned.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '05', cdNm: 'Loading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '06', cdNm: 'Barcode Scanned : '},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '07', cdNm: 'Low Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '08', cdNm: 'Low Power Slide Scan Complete.'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '09', cdNm: 'Dispensing Immersion Oil......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '10', cdNm: 'High Power Slide Scanning......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'RBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '11', cdNm: 'WBC Classification Processing......'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '12', cdNm: 'Unloading Slide #'},\r\n    { grpCd: '03', grpNm: 'Processing code', cd: '13', cdNm: 'Cassette Complete'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '01', cdNm: 'PB smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '02', cdNm: 'BM smear'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '03', cdNm: 'Touch print'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '04', cdNm: 'BM biopsy'},\r\n    { grpCd: '04', grpNm: 'Analysis type', cd: '05', cdNm: 'Clot section'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '01', cdNm: '100 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '02', cdNm: '200 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '03', cdNm: '300 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '04', cdNm: '400 count'},\r\n    { grpCd: '05', grpNm: 'Cell count', cd: '05', cdNm: '500 count'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '01', cdNm: 'Wright stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '02', cdNm: 'Giemsa stain'},\r\n    { grpCd: '06', grpNm: 'General stain', cd: '03', cdNm: 'Wright & Giemsa stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '04', cdNm: 'Iron stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '05', cdNm: 'Trichrome stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '06', cdNm: 'Myeloperoxidase stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '07', cdNm: 'NSE stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '08', cdNm: 'NSE stain after NaFinhibition'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '09', cdNm: 'Reticulin stain'},\r\n    { grpCd: '07', grpNm: 'Special stain', cd: '10', cdNm: 'PAS stain'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '11', cdNm: 'CD 3'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '12', cdNm: 'CD 5'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '13', cdNm: 'CD 20'},\r\n    { grpCd: '08', grpNm: 'Immuno stain', cd: '14', cdNm: 'CD 79a'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '01', cdNm: 'Single'},\r\n    { grpCd: '09', grpNm: 'Sampling stain', cd: '02', cdNm: 'Both'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '01', cdNm: 'Male'},\r\n    { grpCd: '10', grpNm: 'Gender', cd: '02', cdNm: 'Female'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '01', cdNm: 'PB'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '02', cdNm: 'BF(Default)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '03', cdNm: 'BF(Select)'},\r\n    { grpCd: '11', grpNm: 'Test Type', cd: '04', cdNm: 'Premium'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '01', cdNm: 'Signed'},\r\n    { grpCd: '12', grpNm: 'Signed state', cd: '02', cdNm: 'Ready'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '00', cdNm: 'User log'},\r\n    { grpCd: '13', grpNm: 'Log type', cd: '01', cdNm: 'System log'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '00', cdNm: 'Empty'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '01', cdNm: 'Ready'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '02', cdNm: 'Scan'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '03', cdNm: 'Analyzing'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '04', cdNm: 'Complete'},\r\n    { grpCd: '14', grpNm: 'Slot state', cd: '05', cdNm: 'Error'}\r\n]","export const testType = [\r\n    {value: '01', text: 'Diff'},\r\n    {value: '04', text: 'Premium'},\r\n    {value: '02', text: 'Body fluid default'},\r\n    {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const bmTestType = [\r\n    {value: '02', text: 'BM smear'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'}\r\n];","import { commonCodeList } from '@/common/defines/constFile/commonCodeList';\r\nimport {bmTestType, testType} from \"@/common/defines/constFile/dataBase\";\r\ninterface CommonCode {\r\n    grpCd: string;\r\n    cd: string;\r\n    cdNm: string; // Add cdNm property to the CommonCode interface\r\n}\r\n\r\n\r\nexport const getCommonCode = (grpCd: string, cd: string): string | undefined => {\r\n    const foundCode = commonCodeList.find((code) => code.grpCd === grpCd && code.cd === cd);\r\n\r\n    return foundCode?.cdNm;\r\n};\r\n\r\nexport function stringToDateTime(str: string): string {\r\n    if (!str) {\r\n        return '';\r\n    }\r\n\r\n    const [year, month, day, hour, minute, second] = [\r\n        str.substring(0, 4),\r\n        str.substring(4, 6),\r\n        str.substring(6, 8),\r\n        str.substring(8, 10),\r\n        str.substring(10, 12),\r\n        str.substring(12, 14)\r\n    ];\r\n\r\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\r\n}\r\n\r\nexport const getTestTypeText = (value: string) => {\r\n    const matchingOption = testType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBmTestTypeText = (value: string) => {\r\n    const matchingOption = bmTestType.find(option => option.value === value);\r\n    return matchingOption ? matchingOption.text : '';\r\n};\r\n\r\nexport const getBarcodeDetailImageUrl = (imageName: string, iaRootPath: string, slotId: string, barcodeDirName: string): string => {\r\n    const baseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    return `${baseUrl}/images/getImageRealTime?folder=${iaRootPath + \"/\" + slotId + \"/\" + barcodeDirName + \"/\"}&imageName=${imageName}`;\r\n}\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"P\"),\n  /*#__PURE__*/_createTextVNode(\"rocessing \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"I\"),\n  /*#__PURE__*/_createTextVNode(\"nformation \")\n], -1)\nconst _hoisted_2 = { class: \"processInfoUl\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Cassette No\", -1)\nconst _hoisted_4 = { class: \"proVal\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Barcode ID\", -1)\nconst _hoisted_6 = { class: \"proVal\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient ID\", -1)\nconst _hoisted_8 = { class: \"proVal\" }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Patient Name\", -1)\nconst _hoisted_10 = { class: \"proVal\" }\nconst _hoisted_11 = { class: \"proSpan\" }\nconst _hoisted_12 = { class: \"proVal\" }\nconst _hoisted_13 = { class: \"proSpan\" }\nconst _hoisted_14 = { class: \"proVal\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"proSpan\" }, \"Oil Count\", -1)\nconst _hoisted_16 = { class: \"proVal\" }\n\nimport {ref, computed, watch, onMounted, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'processInfo',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"ul\", _hoisted_2, [\n      _createElementVNode(\"li\", null, [\n        _hoisted_3,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_4, _toDisplayString(processInfoItem.value?.cassetteNo), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_5,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_6, _toDisplayString(processInfoItem.value?.barcodeId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_7,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_8, _toDisplayString(processInfoItem.value?.patientId), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_9,\n        _createTextVNode(),\n        _createElementVNode(\"span\", _hoisted_10, _toDisplayString(processInfoItem.value?.patientName), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_11, _toDisplayString(projectBm.value ? 'BM CELL Count ' : 'WBC Count '), 1),\n        _createElementVNode(\"span\", _hoisted_12, _toDisplayString(processInfoItem.value?.wbcCount), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _createElementVNode(\"span\", _hoisted_13, _toDisplayString(siteCd.value === '0019' ? 'Order Date' : 'Analyzed Date'), 1),\n        _createElementVNode(\"span\", _hoisted_14, _toDisplayString(siteCd.value === '0019' ? processInfoItem.value?.analyzedDttm   : processInfoItem.value?.orderDate), 1)\n      ]),\n      _createElementVNode(\"li\", null, [\n        _hoisted_15,\n        _createElementVNode(\"span\", _hoisted_16, _toDisplayString(prevOilCount.value), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">P</span>rocessing <span class=\"greenColor\">I</span>nformation </h3>\r\n    <ul class=\"processInfoUl\">\r\n      <li><span class=\"proSpan\">Cassette No</span> <span class=\"proVal\">{{ processInfoItem?.cassetteNo }}</span></li>\r\n      <li><span class=\"proSpan\">Barcode ID</span> <span class=\"proVal\">{{ processInfoItem?.barcodeId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient ID</span> <span class=\"proVal\">{{ processInfoItem?.patientId }}</span></li>\r\n      <li><span class=\"proSpan\">Patient Name</span> <span class=\"proVal\">{{ processInfoItem?.patientName }}</span></li>\r\n      <li>\r\n        <span class=\"proSpan\">{{ projectBm ? 'BM CELL Count ' : 'WBC Count ' }} </span>\r\n        <span class=\"proVal\">{{ processInfoItem?.wbcCount }}</span></li>\r\n      <li>\r\n        <!--0019 길병원-->\r\n        <span class=\"proSpan\">\r\n          {{ siteCd === '0019' ? 'Order Date' : 'Analyzed Date' }}\r\n        </span>\r\n        <span class=\"proVal\">\r\n          {{ siteCd === '0019' ? processInfoItem?.analyzedDttm   : processInfoItem?.orderDate }}\r\n        </span>\r\n      </li>\r\n      <li>\r\n        <span class=\"proSpan\">Oil Count</span>\r\n        <span class=\"proVal\">{{ prevOilCount }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, getCurrentInstance, defineProps} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport process from \"process\";\r\nconst props = defineProps([ 'parsedData']);\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\n\r\n// processInfoItem 초기화\r\nconst processInfoItem = ref<any>({});\r\nconst prevOilCount = ref<string | null>(null);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVal) => {\r\n  if (newVal.length > 0) {\r\n    const sysInfo = newVal[0].sysInfo;\r\n    if(sysInfo.oilCount !== prevOilCount.value){\r\n      processInfoItem.value.oilCount = sysInfo.oilCount;\r\n      prevOilCount.value = sysInfo.oilCount\r\n    }\r\n  }\r\n})\r\n\r\nonMounted(() => {\r\n  prevOilCount.value = embeddedStatusJobCmd.value[0]?.sysInfo.oilCount;\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = parsedData?.slotInfo;\r\n    if (currentSlot) {\r\n      processInfoItem.value = {\r\n        cassetteNo: '',\r\n        barcodeId: currentSlot.barcodeNo,\r\n        patientId: currentSlot.patientId,\r\n        patientName: currentSlot.patientNm,\r\n        // wbcCount: currentSlot.maxWbcCount,\r\n        orderDate: stringToDateTime(currentSlot.orderDttm),\r\n        analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// 실행정보를 가지고 온다.\r\n\r\n</script>\r\n","import script from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./processInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const analysisOptions = [\r\n    {value: '01', text: 'WBC Diff (Standard)'},\r\n    {value: '04', text: 'PBS (Premium)'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'},\r\n    // {value: '05', text: 'Quality Check'}\r\n];\r\n\r\nexport const wbcCountOptions = [\r\n    {value: '100', text: '100 WBC'},\r\n    {value: '150', text: '150 WBC'},\r\n    {value: '200', text: '200 WBC'},\r\n    {value: '250', text: '250 WBC'},\r\n    {value: '300', text: '300 WBC'},\r\n    {value: '350', text: '350 WBC'},\r\n    {value: '400', text: '400 WBC'},\r\n    {value: '450', text: '450 WBC'},\r\n    {value: '500', text: '500 WBC'}\r\n];\r\n\r\nexport const bmCountOptions = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const stitchCountOptions = [{value: '1', text: '1 stitch'},\r\n    {value: '2', text: '2 stitch'},\r\n    {value: '3', text: '3 stitch'},\r\n    {value: '4', text: '4 stitch'},\r\n    {value: '5', text: '5 stitch'}];\r\n\r\nexport const slideCard = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n        {slotNo: 11, slotState: '0'},\r\n        {slotNo: 12, slotState: '0'}\r\n    ]\r\n};\r\n\r\nexport const slideCard100a = {\r\n    input: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ],\r\n    output: [\r\n        {slotNo: 1, slotState: '0'},\r\n        {slotNo: 2, slotState: '0'},\r\n        {slotNo: 3, slotState: '0'},\r\n        {slotNo: 4, slotState: '0'},\r\n        {slotNo: 5, slotState: '0'},\r\n        {slotNo: 6, slotState: '0'},\r\n        {slotNo: 7, slotState: '0'},\r\n        {slotNo: 8, slotState: '0'},\r\n        {slotNo: 9, slotState: '0'},\r\n        {slotNo: 10, slotState: '0'},\r\n    ]\r\n};\r\n","interface Messages {\r\n    [key: string]: string;\r\n}\r\nexport  const messages: Messages = {\r\n    Logout: 'Would you like to log out?',\r\n\r\n    // login page\r\n    GET_POSITION_LIST: 'getPositionList',\r\n    GET_LOGIN_HISTORY: 'getLoginHistory',\r\n    SET_USER: 'setUser',\r\n    IS_REGIST_USER: 'isRegistUser',\r\n    UPDATE_LOGIN_DTTM: 'updateLoginDttm',\r\n    UPDATE_USER_AVAILABLE: 'updateUserAvailable',\r\n\r\n    // WBC classification\r\n    GET_WBC_CLASS_LIST: 'getWbcClassList',\r\n    GET_WBC_CLASS_LIST_ALL: 'getWbcClassListAll',\r\n    GET_WBC_TOTAL_COUNT: 'getWbcTotalCount',\r\n    UPDATE_WBC_COUNT: 'updateWbcCount',\r\n    GET_WBC_COUNT: 'getWbcCount',\r\n    GET_TEST_TYPE: 'getTestType',\r\n    // 인하대 test type 명칭 변경\r\n    GET_MODIFIED_TEST_TYPE: 'getModifiedTestType',\r\n    GET_STITCH_COUNT: 'getStitchCount',\r\n    GET_RBC_COUNT: 'getRbcCount',\r\n    GET_RBC_COUNT_HIST: 'getRbcCountHist',\r\n    GET_RBC_COUNT_SKMC: 'getRbcCountSkmc',\r\n    UPDATE_DEGREE: 'updateDegree',\r\n    INIT_WBC_COUNT: 'initWbcCount',\r\n    INIT_RBC_DEGREE: 'initRbcDegree',\r\n    GET_WBC_INFO: 'getWbcInfo',\r\n    SET_WBC_IMAGE_HIST: 'setWbcImageHist',\r\n    GET_WBC_IMAGE_HIST: 'getWbcImageHist',\r\n    INIT_WBC_IMAGE_HIST: 'initWbcImageHist',\r\n    INSERT_WBC_CLASSIFICATION: 'insertWbcClassification',\r\n    SET_WBC_CUSTOM_LIST: 'setWbcClassList',\r\n    UPDATE_HOT_KEYS: 'updateHotKeys',\r\n    UPDATE_BF_HOT_KEYS: 'updateBfHotKeys',\r\n    UPDATE_ORDER: 'updateOrder',\r\n    UPDATE_ORDER_BF: 'updateOrderBf',\r\n    UPDATE_IMAGE_HIST: 'updateImageHist',\r\n    SET_CURRENT_WBC_RESULTS: 'setCurrentWbcResults',\r\n    GET_CURRENT_WBC_RESULTS: 'getCurrentWbcResults',\r\n    SET_BEFORE_WBC_RESULTS: 'setBeforeWbcResults',\r\n    GET_BEFORE_WBC_RESULTS: 'getBeforeWbcResults',\r\n\r\n    // 집계\r\n    GET_WBC_MODIFY_LIST: 'getWbcModifyList',\r\n    GET_WBC_MODIFY_LIST_ALL: 'getWbcModifyListAll',\r\n    GET_BF_MODIFY_LIST: 'getBfModifyList',\r\n\r\n    // RBC classification\r\n    GET_RBC_CLASS_LIST: 'getRbcClassList',\r\n    GET_MALARIA_COUNT: 'getMalariaCount',\r\n    UPDATE_MALARIA_COUNT: 'updateMalariaCount',\r\n    SET_CURRENT_RBC_RESULTS: 'setCurrentRbcResults',\r\n    GET_CURRENT_RBC_RESULTS: 'getCurrentRbcResults',\r\n\r\n    SET_CLASSIFICATION: 'setClassification',\r\n    GET_CLASSIFICATION_ITEM: 'getClassificationItem',\r\n    SET_CLASSIFICATION_ITEM: 'setClassificationItem',\r\n\r\n    UPDATE_RBC_CLASSIFICATION: 'updateRbcClassificatin',\r\n    UPDATE_RBC_CLASSIFICATION_SKMC: 'updateRbcClassificatinSkmc',\r\n    INSERT_WBC_SUCCESS: 'insertWbcSuccess',\r\n    SELECT_RBC_DEGREE: 'selectRbcDegree',\r\n    UPDATE_RBC_DEGREE: 'updateRbcDegree',\r\n\r\n    // Test page\r\n    SET_TEST_LIST: 'setTestList',\r\n    GET_TEST_LIST: 'getTestList',\r\n    GET_TEST_RESULT: 'getTestResult',\r\n    GET_RBC_FIELDS: 'getRbcFields',\r\n    GET_WBC_FIELDS: 'getWbcFields',\r\n    GET_RBC_ITEMS: 'getRbcItems',\r\n    GET_WBC_ITEMS: 'getWbcItems',\r\n    INIT_OIL_COUNT: 'initOilCount',\r\n    UPDATE_RESULT: 'updateResult',\r\n    UPDATE_RUNNING_STATE: 'updateRunningState',\r\n    GET_ORDER_LIST: 'getOrderList',\r\n    SET_ORDER_LIST: 'setOrderList',\r\n    UPDATE_ORDER_LIST: 'updateOrderList',\r\n    INIT_ORDER_LIST: 'initOrderList',\r\n    GET_TEST_RESULT_ALL: 'getTestResultAll',\r\n    GET_SEARCH_OPTIONS: 'getSearchOptions',\r\n    UPDATE_SEARCH_OPTIONS: 'updateSearchOption',\r\n    SET_TEST_HISTORY: 'setTestHistory',\r\n    GET_TEST_HISTORY_LIST: 'getTestHistoryList',\r\n    ALL_TEST_HISTORY_LIST: 'allTestHistoryList',\r\n    SEARCH_TEST_HISTORY_LIST: 'searchTestHistoryList',\r\n    UPDATE_TEST_HISTORY: 'updateTestHistory',\r\n    GET_TEST_HISTORY: 'getTestHistory',\r\n    DELETE_TEST_HISTORY: 'deleteTestHistory',\r\n    UPDATE_SIGNED_STATE: 'updatesubmitState',\r\n    UPDATE_TEST_HISTORY_WBC_INFO: 'updateTestHistoryWbcInfo',\r\n    GET_RBC_COMMENT: 'getRbcComment',\r\n    GET_WBC_COMMENT: 'getWbcComment',\r\n    GET_RUNNING_INTERVAL_ID: 'getRunningIntervalId',\r\n    SET_RUNNING_INTERVAL_ID: 'setRuningIntervalId',\r\n    UPDATE_TIMER: 'updateWorkingTimer',\r\n    GET_TIMER: 'getWorkingTimer',\r\n    SET_TIMER: 'setWorkingTimer',\r\n    SET_WORKING_INTERVAL_ID: 'setWorkingIntervalId',\r\n    GET_WORKING_INTERVAL_ID: 'getWorkingIntervalId',\r\n    GET_RUNNING_STATE: 'getRunningState',\r\n    SET_SLIDE_TIMER: 'setSlideTimer',\r\n    UPDATE_SLIDE_TIMER: 'updateSlideTimer',\r\n    GET_SLIDE_TIME_COUNT: 'getSlideTimeCount',\r\n    SET_USER_STOP: 'setUserStop',\r\n    GET_USER_STOP: 'getUserStop',\r\n    SET_WBC_CELL_POSITION: 'setWbcCellPosition',\r\n    GET_WBC_CELL_POSITION: 'getWbcCellPosition',\r\n    GET_TEST_HISTORY_PREV: 'getTestHistoryPrev',\r\n    GET_TEST_HISTORY_NEXT: 'getTestHistoryNext',\r\n    SET_IS_RECOVERY_RUN: 'setIsRecoveryRun',\r\n    GET_IS_RECOVERY_RUN: 'getIsRecoveryRun',\r\n\r\n    // Work List\r\n    SET_WORK_LIST: 'setWorkList',\r\n    GET_WORK_LIST: 'getWorkList',\r\n    INIT_WORK_LIST: 'initWorkList',\r\n    DELETE_WORK_LIST: 'deleteWorkList',\r\n    UPDATE_WORK_LIST: 'updateWorkList',\r\n    UPDATE_WORK_LIST_BM: 'updateWorkListBm',\r\n    UPDATE_SIGNED_WORK_LIST: 'updateSignedWorkList',\r\n    UPDATE_RBC_COMMENT: 'updateRbcComment',\r\n    UPDATE_WBC_COMMENT: 'updateWbcComment',\r\n    UPDATE_BM_COMMENT: 'updateBmComment',\r\n    UPDATE_SELECT_ORDER_ID: 'updateSelectOrderId',\r\n    GET_SELECT_ORDER_ID: 'getSelectOrderId',\r\n    ADD_WORK_LIST: 'addWorkList',\r\n    GET_TEST_BARCODES: 'getTestBarcodes',\r\n    ADD_DSP_LIST: 'addDspList',\r\n    GET_DSP_LIST: 'getDspList',\r\n\r\n    // Common\r\n    // lis 단축키 추가\r\n    SET_LIS_HOT_KEY: 'setLisHotKey',\r\n    UPDATE_NEW_TEST_SET: 'updateNewTestSet',\r\n    UPDATE_EXEC_TEST_TYPE: 'updateExecTestType',\r\n    INITIALIZE_MOUNT_CNT: 'initializeMountCnt',\r\n    UPDATE_MOUNT_CNT: 'updateMountCnt',\r\n    GET_CURRENT_USER: 'getCurrentUser',\r\n    GET_SETTINGS: 'getSettings',\r\n    UPDATE_RUNNING_PATH: 'updateRunningPath',\r\n    UPDATE_RESULT_PATH_WBC: 'updateResultPathWbc',\r\n    UPDATE_RESULT_PATH_RBC: 'updateResultPathRbc',\r\n    UPDATE_BARCODE_PATH: 'updateBarcodePath',\r\n    GET_SYSTEM_TIME_ID: 'getSystemTimeId',\r\n    SET_SYSTEM_TIME_ID: 'setSystemTimeId',\r\n    GET_USER: 'getUser',\r\n    UPDATE_REMEMBER_STATE: 'updateRememberState',\r\n    SET_CURRENT_USER: 'setCurrentUser',\r\n    UPDATE_ROOT_PATH: 'updateRootPath',\r\n    GET_FILE_FILTER: 'getFileFilter',\r\n    GET_USER_LIST: 'getUserList',\r\n    UPDATE_ANALYSIS_TYPE: 'updateAnalysisType',\r\n    UPDATE_TEST_TYPE: 'updateTestType',\r\n    UPDATE_RUNNING_MODE: 'updateRunningMode',\r\n    UPDATE_USER: 'updateUser',\r\n    DELETE_USER: 'deleteUser',\r\n    UPDATE_MARKER_STATE: 'updateMarkerState',\r\n    GET_MARKER_STATE: 'getMarkerState',\r\n    SET_PAUSE_STATE: 'setPauseState',\r\n    GET_PAUSE_STATE: 'getPauseState',\r\n    GET_BF_WHOLE_SLIDE_PATH: 'getBfWholeSlidePath',\r\n    GET_BF_WBC_CLASS_LIST: 'getBfWbcClassList',\r\n    GET_SIZE_SLIDE_VALUE: 'getSizeSlideValue',\r\n    UPDATE_LIS_CODE: 'updateLisCode',\r\n    SELECT_LIS_CODE: 'selectLisCode',\r\n    SELECT_LIS_CODE_RBC: 'selectLisCodeRbc',\r\n    UPDATE_CBC_CODE: 'updateCbcCode',\r\n    SELECT_CBC_CODE: 'selectCbcCode',\r\n    UPDATE_LIS_CONN_PATH: 'updateLisConnPath',\r\n    SELECT_LIS_CONN_PATH: 'selectLisConnPath',\r\n    GET_BACKUP_LIST: 'getBackupList',\r\n    RESTORE_BACKUP_DATA: 'restoreBackupData',\r\n    DELETE_BACKUP_DATA: 'deleteBackupData',\r\n    RESET_RBC_DEGREE: 'resetRbcDegree',\r\n    GET_DEFAULT_RBC_DEGREE: 'getDefaultRbcDegree',\r\n    UPDATE_CHECKED_CELL: 'updateCheckedCell',\r\n    SET_LOCK_SLIDE: 'setLockSlide',\r\n    SET_HOST_IP: 'setHostIp',\r\n    GET_HOST_IP: 'getHostIp',\r\n    GET_NORMAL_RANGE: 'getNormalRange',\r\n    UPDATE_NORMAL_RANGE: 'updateNormalRange',\r\n    GET_LOCK_STATE: 'getLockState',\r\n    GET_KUMC_CBC_PATH: 'getKumcCbcPath',\r\n    SET_WBC_NORMAL_RANGE: 'setWbcNormalRange',\r\n    GET_WBC_NORMAL_RANGE: 'getWbcNormalRange',\r\n    GET_SKMC_RESULT_CD: 'getSkmcResultCd',\r\n    SET_SKMC_RESULT_CD: 'setSkmcResultCd',\r\n    REMOVE_SKMC_RESULT_CD: 'removeSkmcResultCd',\r\n    GET_SKMC_REMARK: 'getSkmcRemark',\r\n    SET_SKMC_REMARK: 'setSkmcRemark',\r\n    REMOVE_SKMC_REMARK: 'removeSkmcRemark',\r\n    SET_SKMC_FAVORITE: 'setSkmcFavorite',\r\n    GET_SKMC_FAVORITE: 'getSkmcFavorite',\r\n    GET_SKMC_LIS_RESULTS: 'getSkmcLisResults',\r\n    SET_SKMC_LIS_RESULTS: 'setSkmcLisResults',\r\n    SET_ALARM_COUNT: 'setAlarmCount',\r\n    SET_SORT_TYPE: 'setSortType',\r\n    GET_SORT_TYPE: 'getSortType',\r\n    SET_CUSTOM_CLASS: 'setCustomClass',\r\n    GET_CUSTOM_CLASS: 'getCustomClass',\r\n    SET_SYS_INFO: 'setSysInfo',\r\n    GET_SYS_INFO: 'getSysInfo',\r\n    SET_BACKEND_DATA: 'setBackendData',\r\n    GET_BACKEND_DATA: 'getBackendData',\r\n\r\n    // 인하대 임시\r\n    SELECT_CBC_CODE_INHA: 'selectCbcCodeInha',\r\n    SELECT_LIS_CODE_INHA: 'selectLisCodeInha',\r\n    SELECT_LIS_CODE_RBC_INHA: 'selectLisCodeRbcInha',\r\n    SELECT_LIS_CONN_PATH_INHA: 'selectLisConnPathInha',\r\n    GET_RBC_COUNT_INHA: 'getRbcCountInha',\r\n    SELECT_WBC_RUNNING_COUNT: 'selectWbcRunningCount',\r\n\r\n    // wbc\r\n    GET_BRIGHTNESS_SLIDE_VALUE: 'getBrightnessSlideValue',\r\n    GET_RED_VALUE: 'getRedValue',\r\n    GET_GREEN_VALUE: 'getGreenValue',\r\n    GET_BLUE_VALUE: 'getBlueValue',\r\n    GET_RGB_VALUE: 'getRgbValue',\r\n    SET_SIZE_SLIDE_VALUE: 'setSizeSlideValue',\r\n    SET_BRIGHTNESS_SLIDE_VALUE: 'setBrightnessSlideValue',\r\n    SET_RED_VALUE: 'setRedValue',\r\n    SET_GREEN_VALUE: 'setGreenValue',\r\n    SET_BLUE_VALUE: 'setBlueValue',\r\n    SET_RGB_VALUE: 'setRgbValue',\r\n    SET_ROLLBACK_LIST: 'setRollbackList',\r\n    GET_ROLLBACK_LIST: 'getRollbackList',\r\n    GET_IMAGE_ROLLBACK_LIST: 'getImageRollbackList',\r\n    SET_CLONED_WBC_INFO: 'setClonedWbcInfo',\r\n\r\n    // rbc\r\n    GET_RBC_BRIGHTNESS_SLIDE_VALUE: 'getRbcBrightnessSlideValue',\r\n    GET_RBC_RED_VALUE: 'getRbcRedValue',\r\n    GET_RBC_GREEN_VALUE: 'getRbcGreenValue',\r\n    GET_RBC_BLUE_VALUE: 'getRbcBlueValue',\r\n    SET_RBC_BRIGHTNESS_SLIDE_VALUE: 'setRbcBrightnessSlideValue',\r\n    SET_RBC_RED_VALUE: 'setRbcRedValue',\r\n    SET_RBC_GREEN_VALUE: 'setRbcGreenValue',\r\n    SET_RBC_BLUE_VALUE: 'setRbcBlueValue',\r\n    SET_CLONED_RBC_INFO: 'setClonedRbcInfo',\r\n\r\n    UPDATE_OIL_COUNT: 'updateOilCount',\r\n    SET_RESULT_LIST: 'setResultList',\r\n    CLEAR_RESULT_LIST: 'clearResultList',\r\n    GET_RESULT_LIST: 'getResultList',\r\n    SET_WBC_REPORT_PRINT: 'setWbcReportPrint',\r\n    GET_WBC_REPORT_PRINT: 'getWbcReportPrint',\r\n    SET_RBC_REPORT_PRINT: 'setRbcReportPrint',\r\n    GET_RBC_REPORT_PRINT: 'getRbcReportPrint',\r\n    SET_RBC_SIZE: 'setRbcSize',\r\n    GET_RBC_SIZE: 'getRbcSize',\r\n    SET_RBC_CHROMIA: 'setRbcChromia',\r\n    GET_RBC_CHROMIA: 'getRbcChromia',\r\n    SET_RBC_SHAPE: 'setRbcShape',\r\n    GET_RBC_SHAPE: 'getRbcShape',\r\n    PUSH_RBC_SHAPE: 'pushRbcShape',\r\n    POP_RBC_SHAPE: 'popRbcShape',\r\n    SET_RBC_PLATELET: 'setRbcPlatelet',\r\n    GET_RBC_PLATELET: 'getRbcPlatelet',\r\n    PUSH_RBC_PLATELET: 'pushRbcPlatelet',\r\n    POP_RBC_PLATELET: 'popRbcPlatelet',\r\n    SET_RBC_INCLUSION: 'setRbcInclusion',\r\n    GET_RBC_INCLUSION: 'getRbcInclusion',\r\n    POP_RBC_INCLUSION: 'popRbcInclusion',\r\n    PUSH_RBC_INCLUSION: 'pushRbcInclusion',\r\n    SET_IS_SHOW_MODAL_BARCODE: 'setIsShowModalBarcode',\r\n    GET_IS_SHOW_MODAL_BARCODE: 'getIsShowModalBarcode',\r\n    SET_IS_NS_NB_INTEGRATION: 'setIsNsNbIntegration',\r\n    GET_IS_NS_NB_INTEGRATION: 'getIsNsNbIntegration',\r\n    SET_IS_ALARM: 'setIsAlarm',\r\n    GET_IS_ALARM: 'getIsAlarm',\r\n    SET_IS_CBC_SHOW: 'setIsCbcShow',\r\n    GET_IS_CBC_SHOW: 'getIsCbcShow',\r\n    SET_SITE_CD: 'setSiteCd',\r\n    GET_SITE_CD: 'getSiteCd',\r\n    SET_DEVICE_SERIALNUM: 'setDeviceSerialNm',\r\n    GET_DEVICE_SERIALNUM: 'getDeviceSerialNm',\r\n\r\n    SELECT_BF_HOT_KEY: 'selectBfHotKey',\r\n    SELECT_WBC_HOT_KEY: 'selectWbcHotKey',\r\n    SELECT_WBC_CUSTOM_CLASS: 'selectWbcCustomClass',\r\n    SELECT_EMP_NO: 'selectEmpNo',\r\n\r\n    // log history\r\n    INSERT_WBC_MODIFY_HIST: 'insetWbcModifyHist',\r\n    GET_WBC_MODIFY_HIST: 'getWbcModifyHist',\r\n    UPDATE_WBC_HIST_LIST: 'updateWbcHistList',\r\n    GET_WBC_HIST_LIST: 'getWbcHistList',\r\n\r\n    // Code group\r\n    GET_COMMON_CODE_LIST: 'getCommonCodeList',\r\n    GET_COMMON_CODE: 'getCommonCode',\r\n\r\n    GET_CODE_LIST_USER_POSITION: '00',\r\n    GET_CODE_LIST_USER_AUTHORIZATION: '01',\r\n    GET_CODE_LIST_USER_CASSETE_STATE: '02',\r\n    GET_CODE_LIST_PROCESSING_STATE: '03',\r\n    GET_CODE_LIST_ANALYSIS_TYPE: '04',\r\n    GET_CODE_LIST_CELL_COUNT: '05',\r\n    GET_CODE_LIST_GENERAL_STAIN: '06',\r\n    GET_CODE_LIST_SPECIAL_STAIN: '07',\r\n    GET_CODE_LIST_IMMUNO_STAIN: '08',\r\n    GET_CODE_LIST_SAMPLING_STAIN: '09',\r\n    GET_CODE_LIST_GENDER: '10',\r\n    GET_CODE_LIST_TEST_TYPE: '11',\r\n    GET_CODE_SIGNED_STATE: '12',\r\n    GET_CODE_LOG_TYPE: '13',\r\n    GET_CODE_SLOT_STATE: '14',\r\n\r\n    // log code\r\n    EVENT_TYPE_USER: '00',\r\n    EVENT_TYPE_SYSTEM: '01',\r\n\r\n    // System log\r\n    SET_EVENT_LOG: 'setEventLog',\r\n    GET_EVENT_LOG: 'getEventLog',\r\n    REMOVE_EVENT_LOG: 'removeEventLog',\r\n\r\n    // Storage\r\n    REMEMBER_PWD_KEY: 'uimdia190$^!00000000000000000000',\r\n    REMEMBER_PWD_IV: '0000000000000000',\r\n\r\n    // Workers\r\n    RECEIVE_DATA_BROADCAST_CHAN: 'RECEIVE_DATA_BROADCAST_CHAN',\r\n\r\n    // PB APIS [\r\n    GET_PB_CLASSIFICATIONS: 'getPbClassifications',\r\n    GET_CLASSIFICATION_IMAGES: 'getClassificationImages',\r\n    GET_MARKER_POSITION: 'getMarkerPosition',\r\n    GET_PB_HOT_KEYS: 'getPbHotKeys',\r\n    UPDATE_CLASSIFICATION: 'updateClassification',\r\n    PB_IA_MOVE_IMAGE: 'PbIaMoveImage',\r\n    SET_WBC_IMAGE_LIST: 'setWbcImageList',\r\n    GET_PB_WBC_IMAGES: 'getPbWbcImages',\r\n    SET_SELECTED_ITEM: 'setSelectedItem',\r\n    GET_SELECTED_ITEM: 'getSelectedItem',\r\n    IA_SET_CUSTOM_CLASS: 'iaSetCustomClass',\r\n    IA_GET_CUSTOM_CLASS: 'iaGetCustomClass',\r\n    // PB APIS ]\r\n\r\n\r\n    // Message\r\n    IDS_MSG_SUCCESS: 'Success',\r\n    IDS_MSG_FAILED: 'Failed',\r\n    IDS_MSG_OIL_REMAIN_COUNTER: 'Reset Immersion oil counter after final test or changing the Oil',\r\n    IDS_MSG_POWEROFF: 'Shutdown the system.',\r\n    IDS_MSG_INITALIZE: 'Please execute after initialization.',\r\n    IDS_MSG_SIGNING_COMPLETE: 'Signing is complete.',\r\n    IDS_MSG_DELETE_THE_SELECTED_ITEMS: 'Delete the selected items?',\r\n    IDS_MSG_ACCOUNT_CHANGED: 'Account conversion is complete.',\r\n    IDS_MSG_DELETE_ACCOUNT: 'Are you sure you want to delete your account?',\r\n    IDS_MSG_LOGOUT: 'Are you sure you want to logout now?',\r\n    IDS_MSG_DUPLICATE_KEY: 'The %s key is a duplicate key.',\r\n    IDS_MSG_HOTKEY_IN_ENGLISH: 'Please recheck the key',\r\n\r\n    IDS_ERROR_CHECK_ID: 'The ID must be 5-20 letters or numbers starting with the alphabet.',\r\n    IDS_ERROR_CHECK_PASSWORD: 'The password is a combination of 6-30 digits in English, numbers.',\r\n    IDS_ERROR_NOT_MATCHED_PASSWORD: 'Passwords do not match.',\r\n    IDS_ERROR_SIGINUP: 'Please check the input field.',\r\n    IDS_ERROR_SIGINUP_ALREADY_ID: 'ID already registered.',\r\n    IDS_ERROR_LOGIN_ERROR: 'Please check your ID and password.',\r\n    IDS_ERROR_LOGIN_ID: 'Please check your Login ID.',\r\n    IDS_ERROR_ALREADY_RUNNING: 'Process is already running.',\r\n    IDS_ERROR_STOP_PROCESS: 'Process is terminating.',\r\n    IDS_ERROR_INIT_ERROR: 'Please initialize.',\r\n    IDS_ERROR_CHECK_REQUIRED_FIELDS: 'Please check required fields',\r\n    IDS_ERROR_CHECK_SLOT_NO: 'Please check the slot number.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST: 'Up to 5 favorites can be registered.',\r\n    IDS_ERROR_FAVORITE_MAX_REGIST2: 'Up to 12 favorites can be registered.',\r\n    IDS_ERROR_ENTER_YOUR_ORDER_DETAILS: 'Please enter your order details.',\r\n    IDS_ERROR_SELECT_A_TARGET_ITEM: 'Please select items',\r\n    IDS_ERROR_PLEASE_SELECT_AN_IMAGE: 'Please select an image.',\r\n    IDS_ERROR_ALREADY_ADDED: 'This item has already been added.',\r\n    IDS_ERROR_ADD_A_WORKLIST: 'Please add a worklist',\r\n    IDS_ERROR_NO_TEST_RESULTS: 'There are no test results.',\r\n    IDS_ERROR_FILE_CLISSIFICATION: 'File classification error',\r\n    IDS_ERROR_ENTER_CLASS_INFO: 'Please enter class information',\r\n    IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID: 'Please confirm your user ID.',\r\n\r\n    IDS_DOWNLOAD_COMPLETE: 'Download Complete',\r\n    IDS_SELECT_SLIDE: 'Please select a slide.',\r\n    IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED: 'Signed items cannot be modified.',\r\n    IDS_RECOVER_GRIPPER_CONDITION: 'Would you like to recover the gripper condition?',\r\n    IDS_PLEASE_ENTER_END_DATE: 'Please enter the end date.',\r\n    IDS_PLEASE_ENTER_START_DATE: 'Please enter the start date.',\r\n    IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS: 'The maximum inquiry date is 31 days.',\r\n    IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE: 'Start date is not greater than end date.',\r\n    IDS_RESTART_SYSTEM: 'A new version has been downloaded. Please restart the application to apply the update.',\r\n    IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER: 'Please enter your barcode number',\r\n    IDS_BARCODE_REGISTRATION_SUCCESSFUL: 'Barcode registration successful',\r\n    IDS_THIS_IS_A_DUPLICATION_ABBREVIATION: 'This is a duplicate abbreviation.',\r\n    IDS_THIS_CARD_HAS_ALREADY_BEEN_USED: 'This card has already been used.',\r\n    IDS_MSG_UPLOAD_LIS: 'Upload current results to LIS',\r\n    IDS_MSG_SUBMIT_SLIDE: 'Submit slide',\r\n    IDS_MSG_CONFIRM_SLIDE: 'Confirm slide',\r\n    IDS_PLEASE_SELECT_A_CLASS: 'Please select a class',\r\n    IDS_PLEASE_SELECT_A_BACKUP_DATE: 'Please select a backup date.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_PATH: 'Please select a backup path.',\r\n    IDS_PLEASE_SELECT_A_BACKUP_FILE: 'Please select a backup file.',\r\n    IDS_NO_DATA_FOUND: 'No data found.',\r\n    IDS_MSG_DATA_BACKUP: 'Data from that period will be deleted. Would you like to proceed?',\r\n    IDS_MSG_DATA_RESTORE: 'Do you want to recover your data?',\r\n    IDS_MSG_SIZE_CHROMIA_LINKED_LIS: 'Size and Chromia categories are linked with LIS data.',\r\n\r\n    UPDATE_SUCCESSFULLY : 'Update Successfully',\r\n    TCP_DiSCONNECTED: 'The TCP connection was disconnected.',\r\n    alreadyInitialized: 'It has already been initialized.',\r\n};","import moment from 'moment';\r\nimport 'moment-timezone';\r\n\r\n\r\nexport function getDateTimeStr(): string {\r\n    const now = moment();\r\n\r\n    const formattedTime = now.format('YYYYMMDDHHmmssSSS');\r\n\r\n    return formattedTime;\r\n}\r\n\r\nexport const formatDateString = (dateString: any) => {\r\n    if(!dateString){\r\n       return null;\r\n    }\r\n    const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n    return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\nexport const getCountToTime = (timeCount: number): string => {\r\n    const hour = Math.floor(timeCount / 3600);\r\n    const minutes = Math.floor((timeCount % 3600) / 60);\r\n    const seconds = Math.floor((timeCount % 3600) % 60);\r\n\r\n    return `${pad(hour, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`;\r\n}\r\n\r\nconst pad = (value: number, length: number): string => {\r\n    return String(value).padStart(length, '0');\r\n}\r\n\r\n\r\nexport const parseDateString = (dateString: string): Date => {\r\n    const year = +dateString.substring(0, 4);\r\n    const month = +dateString.substring(4, 6) - 1;\r\n    const day = +dateString.substring(6, 8);\r\n    const hours = +dateString.substring(8, 10);\r\n    const minutes = +dateString.substring(10, 12);\r\n    const seconds = +dateString.substring(12, 14);\r\n\r\n    return new Date(year, month, day, hours, minutes, seconds);\r\n}\r\n\r\nexport const formatDate = (date: any) => {\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n    const day = date.getDate().toString().padStart(2, '0');\r\n    return `${year}-${month}-${day}`;\r\n};","import {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nexport const tcpReq:any = () => {\r\n    const reqDttm = getDateTimeStr(); // 현재 날짜와 시간을 가져오는 함수\r\n\r\n    return {\r\n        embedStatus: {\r\n            start: {\r\n                jobCmd: \"START\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            startAction: {\r\n                jobCmd: 'START',\r\n                reqUserId: '',\r\n                testType: '01',\r\n                wbcCount: '',\r\n                stitchCount: '',\r\n                runningMode: '00',\r\n                positionMargin:  '0',\r\n                wbcPositionMargin: '0',\r\n                pltPositionMargin: '0',\r\n                reqDttm: reqDttm,\r\n            },\r\n            init: {\r\n                jobCmd: 'INIT',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            restart: {\r\n                jobCmd: 'RESTART',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                bfSelectFiles: []\r\n            },\r\n            stop: {\r\n                jobCmd: 'STOP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                isEmergency: 'N',\r\n                isUserStop: 'Y'\r\n            },\r\n            end: {\r\n                jobCmd: \"END\",\r\n                reqUserId: '',\r\n                testType: \"\",\r\n                wbcCount: \"\",\r\n                reqDttm: reqDttm\r\n            },\r\n            runningInfo: {\r\n                jobCmd: \"RUNNING_INFO\",\r\n                reqUserId: '',\r\n                reqDttm: reqDttm\r\n            },\r\n            sysInfo: {\r\n                jobCmd: 'SYSINFO',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            pause: {\r\n                jobCmd: 'PAUSE',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            runIngComp: {\r\n                jobCmd: 'RUNNING_COMP',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            recovery: {\r\n                jobCmd: 'RECOVERY',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            settings: {\r\n                jobCmd: 'SETTINGS',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n                pbiaRootDir: 'D:/IA_Proc',\r\n                oilCount: '',\r\n                isOilReset: '',\r\n                deviceType: '01',\r\n                // uiVersion: 'web',\r\n                isNsNbIntegration: '',\r\n            },\r\n            oilPrime: {\r\n                jobCmd: 'OIL_PRIME',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            gripperOpen: {\r\n                jobCmd: 'GRIPPER_OPEN',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            },\r\n            cameraReset: {\r\n                jobCmd: 'CAMERA_RESET',\r\n                reqUserId: '',\r\n                reqDttm: reqDttm,\r\n            }\r\n        },\r\n    };\r\n};\r\n","// useHttpClient.ts\r\nimport axios, { AxiosRequestConfig } from 'axios';\r\n\r\nimport { Endpoint, GenericObject } from '../type/generalTypes';\r\n\r\nexport interface ApiResponse<T> {\r\n    code: number;\r\n    data?: T;\r\n    success: boolean;\r\n}\r\n\r\ninterface HttpResponse<T> {\r\n    data?: ApiResponse<T>;\r\n    success: boolean;\r\n}\r\n\r\n\r\nexport function useHttpClient() {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n    // type 용도 -> ? 쿼리 스트링으로 보낼지 여부\r\n    const httpGet = async <T>(url: Endpoint, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpGetAct(url.endpoint, parameters, type);\r\n    };\r\n\r\n    const httpGetAct = async <T>(url: string, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'public, max-age=3600' // 응답을 1시간 동안 캐싱하도록 지정\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.get(`${apiBaseUrl}/${url}${slush}${parameters}`, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n    const httpPost = async <T>(url: Endpoint, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n        return httpPostAct(url.endpoint, payload, contentType, formData);\r\n    };\r\n\r\n    const httpPostAct = async <T>(url: string, payload: GenericObject, contentType?: string, formData = false): Promise<ApiResponse<T>> => {\r\n\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        if (contentType === 'blob'){\r\n            options.responseType = 'blob';\r\n        }\r\n        if (contentType === 'text/plain'){\r\n            options.headers=  {\r\n                'Content-Type': 'text/plain',\r\n            }\r\n        }\r\n        if(formData){\r\n            options.headers =  {\r\n                'Content-Type': 'multipart/form-data',\r\n            }\r\n        }\r\n\r\n        axios.defaults.withCredentials = true;\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.post(`${apiBaseUrl}/${url}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpPut = async <T>(url: Endpoint, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpPutAct(url.endpoint, payload, parameters, type);\r\n    };\r\n\r\n    const httpPutAct = async <T>(url: string, payload: GenericObject, parameters?: string, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = parameters ? (type ? '?' : '/') : '';\r\n        parameters = parameters || '';\r\n\r\n        try {\r\n            const response: HttpResponse<T> = await axios.put(`${apiBaseUrl}/${url}${slush}${parameters}`, payload, options);\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n    const httpDelete = async <T>(url: Endpoint, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        return httpDeleteAct(url.endpoint, payload, type);\r\n    };\r\n\r\n    const httpDeleteAct = async <T>(url: string, payload: GenericObject, type?: boolean): Promise<ApiResponse<T>> => {\r\n        const options: AxiosRequestConfig = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Cache-Control': 'no-cache', // 캐시 무효화\r\n            },\r\n        };\r\n\r\n        axios.defaults.withCredentials = true;\r\n        const slush = type ? '?' : '/';\r\n        try {\r\n            const response: HttpResponse<T> = await axios.delete(`${apiBaseUrl}/${url}${slush}`, { ...options, data: payload });\r\n            return Promise.resolve(response.data || { code: 500, data: undefined, success: false });\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return {\r\n        httpGet,\r\n        httpGetAct,\r\n        httpPost,\r\n        httpPostAct,\r\n        httpPut,\r\n        httpPutAct,\r\n        httpDelete,\r\n        httpDeleteAct,\r\n    };\r\n\r\n}\r\n","\r\nexport const apiConstants = {\r\n    auth: {\r\n        refresh: {\r\n            endpoint: '/auth/refresh',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    processInfo: {\r\n        list: {\r\n            endpoint: 'proinfo/getAllProcessInfo',\r\n            requiresToken: false,\r\n        },\r\n    },\r\n    rbcclassification: {\r\n        list: {\r\n            endpoint: 'rbc/getAllRbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    wbcclassification:{\r\n        list: {\r\n            endpoint: 'wbc/getAllWbc',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    user:{\r\n        register:{\r\n            endpoint: 'user/register',\r\n            requiresToken: false,\r\n        },\r\n        login:{\r\n            endpoint:'user/login',\r\n            requiresToken: false,\r\n        },\r\n        userCheck:{\r\n            endpoint: 'user',\r\n            requiresToken: false,\r\n        },\r\n        // userIp:{\r\n        //     endpoint: 'ip',\r\n        //     requiresToken: false,\r\n        // },\r\n        getUsers:{\r\n            endpoint:'user/getUsers',\r\n            requiresToken: false,\r\n        },\r\n        userDataPut: {\r\n            endpoint:'user/update',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    settings:{\r\n        cellImgAnalyzedPost:{\r\n            cellImgAdd:{\r\n                endpoint:'cellImgAnalyzed/cellImgAdd',\r\n                requiresToken: false,\r\n            },\r\n            cellImgGet:{\r\n                endpoint:'cellImgAnalyzed',\r\n                requiresToken: false,\r\n            },\r\n            cellImgPut:{\r\n                endpoint:'cellImgAnalyzed/update',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        rbcDegree:{\r\n            rbcDegreeAdd: {\r\n                endpoint: 'rbcDegree/rbcDegreeAdd',\r\n                requiresToken: false,\r\n            },\r\n            rbcDegree:{\r\n                endpoint: 'rbcDegree',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcCustomClass:{\r\n            create: {\r\n                endpoint: 'wbcCustomClass/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcCustomClass/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcCustomClass/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        wbcHotKeys: {\r\n            create: {\r\n                endpoint: 'wbcHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'wbcHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'wbcHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        bfHotKeys: {\r\n            create: {\r\n                endpoint: 'bfHotKeys/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'bfHotKeys/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'bfHotKeys/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        normalRange: {\r\n            create: {\r\n                endpoint: 'normalRange/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'normalRange/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'normalRange/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        imagePrint: {\r\n            create: {\r\n                endpoint: 'imagePrint/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'imagePrint/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'imagePrint/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCode: {\r\n            create: {\r\n                endpoint: 'lisCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        lisCodeRbc: {\r\n            create: {\r\n                endpoint: 'lisCodeRbc/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'lisCodeRbc/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'lisCodeRbc/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        cbcCode: {\r\n            create: {\r\n                endpoint: 'cbcCode/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'cbcCode/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'cbcCode/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        filePathSet: {\r\n            create: {\r\n                endpoint: 'filePathSet/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'filePathSet/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'filePathSet/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runCount: {\r\n            create: {\r\n                endpoint: 'runCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        minCount: {\r\n            create: {\r\n                endpoint: 'minCount/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'minCount/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'minCount/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        runningInfo: {\r\n            create: {\r\n                endpoint: 'runningInfo/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'runningInfo/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'runningInfo/getAll',\r\n                requiresToken: false,\r\n            },\r\n            delete:{\r\n                endpoint: 'runningInfo/delete',\r\n                requiresToken: false,\r\n            },\r\n            detail:{\r\n                endpoint: 'runningInfo/detail',\r\n                requiresToken: false,\r\n            },\r\n            pageUpDown:{\r\n                endpoint:'runningInfo/pageUpDown',\r\n                requiresToken: false,\r\n            },\r\n            updatePcIpState:{\r\n                endpoint:'runningInfo/updatePcIpState',\r\n                requiresToken: false,\r\n            },\r\n            clearPcIpState:{\r\n                endpoint:'runningInfo/clearPcIpState',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folder: {\r\n            get:{\r\n                endpoint: 'folder/drives',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        folders: {\r\n            get:{\r\n                endpoint:'folders',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n        classOrder: {\r\n            create: {\r\n                endpoint: 'classOrders/create',\r\n                requiresToken: false,\r\n            },\r\n            update: {\r\n                endpoint: 'classOrders/update',\r\n                requiresToken: false,\r\n            },\r\n            get:{\r\n                endpoint: 'classOrders/get',\r\n                requiresToken: false,\r\n            }\r\n        },\r\n    },\r\n    images:{\r\n        move: {\r\n            endpoint: 'images/move',\r\n            requiresToken: false,\r\n        },\r\n        moveClassImage: {\r\n            endpoint: 'images/moveClassImage',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    jsonReader: {\r\n        get: {\r\n            endpoint: 'jsonReader/send',\r\n            requiresToken: false,\r\n        },\r\n        jsonCreate: {\r\n            endpoint: 'jsonReader/upload',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    pdf:{\r\n        post:{\r\n            endpoint: 'pdf/generate',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    filesystem:{\r\n        post:{\r\n            endpoint: 'filesystem/create-folder',\r\n            requiresToken: false,\r\n        },\r\n        delete: {\r\n            endpoint: 'filesystem/delete-folder',\r\n            requiresToken: false,\r\n        },\r\n        readGet:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        },\r\n        createDirectory: {\r\n            endpoint: 'file/create-directory',\r\n            requiresToken: false,\r\n        },\r\n        fileCreate:{\r\n            endpoint: 'file/createFile',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    fileTxtRead: {\r\n        get:{\r\n            endpoint: 'file/read',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Read: {\r\n        post: {\r\n            endpoint: 'hl7/parse',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    H7Message:{\r\n        post: {\r\n            endpoint: 'hl7/message',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    Hl7Create:{\r\n        post: {\r\n            endpoint: 'hl7/hl7Create',\r\n            requiresToken: false,\r\n        }\r\n    },\r\n    device: {\r\n        getDeviceInfo: {\r\n            create: {\r\n                endpoint: 'device/create',\r\n                requiresToken: false,\r\n            },\r\n            get: {\r\n                endpoint: 'device/get',\r\n                requiresToken: false,\r\n            },\r\n            ip: {\r\n                endpoint: 'ip',\r\n                requiresToken: false,\r\n            }\r\n        }\r\n    },\r\n    backUp:{\r\n        backUpDate:{\r\n            endpoint: 'backup/post',\r\n            requiresToken: false,\r\n        }\r\n    }\r\n\r\n};","import {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {apiConstants} from '@/common/api/apiConstants';\r\nimport {\r\n    CellImgAnalyzedRequest,\r\n    CellImgAnalyzedResponse,\r\n} from '@/common/api/service/setting/dto/cellImgAnalyzedDto'\r\nimport {RbcDegreeDto, RbcDegreeRes} from \"@/common/api/service/setting/dto/rbcDegree\";\r\nimport {CreateWbcCustomClassDto, UpdateWbcCustomClassDto} from \"@/common/api/service/setting/dto/wbcCustomClassDto\";\r\nimport {CreateWbcHotKeysDto, UpdateWbcHotKeysDto} from \"@/common/api/service/setting/dto/wbcHotKeysDto\";\r\nimport {CreateBfHotKeysDto, UpdateBfHotKeysDto} from \"@/common/api/service/setting/dto/bfHotKeysDto\";\r\nimport {CreateNormalRange, NormalRangeUpdateDto} from \"@/common/api/service/setting/dto/normalRangeDto\";\r\nimport {\r\n    CreateImagePrintDto, ImagePrintItem,\r\n    UpdateImagePrintsDto\r\n} from \"@/common/api/service/setting/dto/imagePrintDto\";\r\nimport {\r\n    CreateCbcCodeRbcDto,\r\n    CreateLisCodeDto,\r\n    CreateLisCodeRbcDto, cbcCodeItem,\r\n    LisCodeRbcItem, LisCodeWbcItem, UpdateCbcCodeRbcDto,\r\n    UpdateLisCodeDto, UpdateLisCodeRbcDto\r\n} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {CreateFilePathDto, FilePathItem, UpdateFilePathsDto} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {CreateRunCountDto, runCountItem, UpdateRunCountDto} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport {CreateMinCountDto, minCountItem, UpdateMinCountDto} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createCellImgApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cellImgAnalyzedPost.cellImgAdd, request);\r\n};\r\n\r\nexport const getCellImgApi = async (): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cellImgAnalyzedPost.cellImgGet);\r\n};\r\n\r\nexport const putCellImgApi = async (request: any, id: string): Promise<ApiResponse<CellImgAnalyzedResponse | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cellImgAnalyzedPost.cellImgPut, request, id);\r\n};\r\n\r\nexport const createRbcDegreeApi = async (request: RbcDegreeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.rbcDegree.rbcDegreeAdd, request);\r\n};\r\n\r\nexport const putRbcDegreeApi = async (request: CellImgAnalyzedRequest): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.rbcDegree.rbcDegree, request);\r\n};\r\n\r\nexport const getRbcDegreeApi = async (): Promise<ApiResponse<RbcDegreeRes | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.rbcDegree.rbcDegree);\r\n};\r\n\r\n\r\nexport const createWbcCustomClassApi = async (request: CreateWbcCustomClassDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcCustomClass.create, request);\r\n};\r\n\r\nexport const updateWbcCustomClassApi = async (request: UpdateWbcCustomClassDto): Promise<ApiResponse<UpdateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcCustomClass.update, request);\r\n};\r\n\r\nexport const getWbcCustomClassApi = async (): Promise<ApiResponse<CreateWbcCustomClassDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcCustomClass.get);\r\n};\r\n\r\n\r\nexport const createWbcHotKeysApi = async (request: CreateWbcHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.wbcHotKeys.create, request);\r\n};\r\n\r\nexport const updateWbcHotKeysApi = async (request: UpdateWbcHotKeysDto): Promise<ApiResponse<UpdateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.wbcHotKeys.update, request);\r\n};\r\n\r\nexport const getWbcHotKeysApi = async (): Promise<ApiResponse<CreateWbcHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.wbcHotKeys.get);\r\n};\r\n\r\nexport const createBfHotKeysApi = async (request: CreateBfHotKeysDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.bfHotKeys.create, request);\r\n};\r\n\r\nexport const updateBfHotKeysApi = async (request: UpdateBfHotKeysDto): Promise<ApiResponse<UpdateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.bfHotKeys.update, request);\r\n};\r\n\r\nexport const getBfHotKeysApi = async (): Promise<ApiResponse<CreateBfHotKeysDto | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.bfHotKeys.get);\r\n};\r\n\r\nexport const createNormalRangeApi = async (request: CreateNormalRange): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.normalRange.create, request);\r\n};\r\n\r\nexport const updateNormalRangeApi = async (request: NormalRangeUpdateDto): Promise<ApiResponse<NormalRangeUpdateDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.normalRange.update, request);\r\n};\r\n\r\nexport const getNormalRangeApi = async (): Promise<ApiResponse<CreateNormalRange | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.normalRange.get);\r\n};\r\n\r\nexport const createImagePrintApi = async (request: CreateImagePrintDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.imagePrint.create, request);\r\n};\r\n\r\nexport const updateImagePrintApi = async (request: UpdateImagePrintsDto): Promise<ApiResponse<UpdateImagePrintsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.imagePrint.update, request);\r\n};\r\n\r\nexport const getImagePrintApi = async (): Promise<ApiResponse<ImagePrintItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.imagePrint.get);\r\n};\r\n\r\n// lis code wbc\r\nexport const createLisCodeWbcApi = async (request: CreateLisCodeDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCode.create, request);\r\n};\r\n\r\nexport const updateLisCodeWbcApi = async (request: UpdateLisCodeDto): Promise<ApiResponse<UpdateLisCodeDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCode.update, request);\r\n};\r\n\r\nexport const getLisCodeWbcApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n//lise code rbc\r\nexport const createLisCodeRbcApi = async (request: CreateLisCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.lisCodeRbc.create, request);\r\n};\r\n\r\nexport const updateLisCodeRbcApi = async (request: UpdateLisCodeRbcDto): Promise<ApiResponse<UpdateLisCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.lisCodeRbc.update, request);\r\n};\r\n\r\nexport const getLisCodeRbcApi = async (): Promise<ApiResponse<LisCodeRbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCodeRbc.get);\r\n};\r\n\r\n// cbc code\r\nexport const createCbcCodeRbcApi = async (request: CreateCbcCodeRbcDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.cbcCode.create, request);\r\n};\r\n\r\nexport const updateCbcCodeRbcApi = async (request: UpdateCbcCodeRbcDto): Promise<ApiResponse<UpdateCbcCodeRbcDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.cbcCode.update, request);\r\n};\r\n\r\nexport const getCbcCodeRbcApi = async (): Promise<ApiResponse<cbcCodeItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.cbcCode.get);\r\n};\r\n// file path set\r\nexport const createFilePathSetApi = async (request: CreateFilePathDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.filePathSet.create, request);\r\n};\r\n\r\nexport const updateFilePathSetApi = async (request: UpdateFilePathsDto): Promise<ApiResponse<UpdateFilePathsDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.filePathSet.update, request);\r\n};\r\n\r\nexport const getFilePathSetApi = async (): Promise<ApiResponse<FilePathItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.filePathSet.get);\r\n};\r\n\r\n// runInfoWbcCount\r\nexport const createRunInfoWbcApi = async (request: CreateRunCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runCount.create, request);\r\n};\r\n\r\nexport const updateRunInfoApi = async (request: UpdateRunCountDto): Promise<ApiResponse<UpdateRunCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runCount.update, request);\r\n};\r\n\r\nexport const getRunInfoApi = async (): Promise<ApiResponse<runCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runCount.get);\r\n};\r\n// minCount\r\nexport const createMinCountApi = async (request: CreateMinCountDto): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.minCount.create, request);\r\n};\r\n\r\nexport const updateMinCountApi = async (request: UpdateMinCountDto): Promise<ApiResponse<UpdateMinCountDto | undefined>> => {\r\n    return httpClient.httpPut(apiConstants.settings.minCount.update, request);\r\n};\r\n\r\nexport const getMinCountApi = async (): Promise<ApiResponse<minCountItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.minCount.get);\r\n};\r\n\r\nexport const getLisCodeApi = async (): Promise<ApiResponse<LisCodeWbcItem[] | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.lisCode.get);\r\n};\r\n\r\n// --- 드라이브\r\nexport const getDrivesApi = async (): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.settings.folder.get);\r\n};\r\n\r\n//-- 클래스 정렬\r\nexport const createOrderClassApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.classOrder.create, request);\r\n};\r\n\r\nexport const getOrderClassApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.classOrder.get);\r\n};\r\n\r\nexport const putOrderClassApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.settings.classOrder.update, request);\r\n};","// EventBus.ts\r\n\r\ntype EventHandler = (...args: any[]) => void;\r\n\r\nclass EventBus {\r\n    private events: Record<string, EventHandler[]> = {};\r\n\r\n    // 이벤트를 구독하는 메서드\r\n    public subscribe(eventName: string, handler: EventHandler): void {\r\n        if (!this.events[eventName]) {\r\n            this.events[eventName] = [];\r\n        }\r\n        this.events[eventName].push(handler);\r\n    }\r\n\r\n    // 이벤트를 발행하는 메서드\r\n     public publish(eventName: string, ...args: any[]): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            handlers.forEach(handler => handler(...args));\r\n        }\r\n    }\r\n\r\n    // 이벤트를 구독 해제하는 메서드\r\n    public unsubscribe(eventName: string, handler: EventHandler): void {\r\n        const handlers = this.events[eventName];\r\n        if (handlers) {\r\n            this.events[eventName] = handlers.filter(h => h !== handler);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new EventBus();\r\n","<!-- Alert.vue -->\r\n<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1 alertMessage\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"hideAlert\">Close</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `alert-${props.type}`);\r\nconst emit = defineEmits(['update:hideAlert']);\r\n\r\nconst hideAlert = () => {\r\n  emit('hide');\r\n};\r\n</script>","import script from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Alert.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const testTypeList = [\r\n    {value: '01', text: 'PB standard'},\r\n    {value: '04', text: 'PB premium'},\r\n    // {value: '02', text: 'Body fluid default'},\r\n    // {value: '03', text: 'Body fluid select'}\r\n];\r\n\r\nexport const testBmTypeList = [\r\n    {value: '02', text: 'BM wedge'},\r\n    {value: '03', text: 'Touch print'},\r\n    {value: '04', text: 'BM biopsy'},\r\n    {value: '05', text: 'Clot section'},\r\n    {value: '06', text: 'BM squash'},\r\n];\r\n\r\nexport const AnalysisList = [\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n];\r\n\r\nexport const bmAnalysisList = [\r\n    { value: '500', text: '500' },\r\n    { value: '600', text: '600' },\r\n    { value: '700', text: '700' },\r\n    { value: '800', text: '800' },\r\n    { value: '900', text: '900' },\r\n    { value: '1000', text: '1000' },\r\n    { value: '1100', text: '1100' },\r\n    { value: '1200', text: '1200' },\r\n    { value: '1300', text: '1300' },\r\n    { value: '1400', text: '1400' },\r\n    { value: '1500', text: '1500' },\r\n];\r\n\r\nexport const AnalysisList2 = [\r\n    {value: '50', text: '50'},\r\n    {value: '100', text: '100'},\r\n    {value: '150', text: '150'},\r\n    {value: '200', text: '200'},\r\n    {value: '250', text: '250'},\r\n    {value: '300', text: '300'},\r\n    {value: '350', text: '350'},\r\n    {value: '400', text: '400'},\r\n    {value: '450', text: '450'},\r\n    {value: '500', text: '500'}\r\n]\r\n\r\nexport const stitchCountList = [\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const WbcPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const PltPositionMarginList = [\r\n    {value: '0', text: '0'},\r\n    {value: '1', text: '1'},\r\n    {value: '2', text: '2'},\r\n    {value: '3', text: '3'},\r\n    {value: '4', text: '4'},\r\n    {value: '5', text: '5'}\r\n]\r\n\r\nexport const runningModeList = [\r\n    {value: '00', text: 'Normal'},\r\n    {value: '01', text: 'RBC dection'},\r\n    {value: '02', text: 'Hardware'}\r\n]\r\n\r\nexport const searchUserType = [\r\n    {value: '00', text: 'User Id'},\r\n    {value: '01', text: 'User Name'}\r\n];\r\n\r\nexport const cbcList = [\r\n    {cd: '01', classCd: '', classNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', classNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', classNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', classNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', classNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', classNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', classNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', classNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', classNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', classNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', classNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', classNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', classNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', classNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', classNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', classNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', classNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', classNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', classNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', classNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', classNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', classNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', classNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', classNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', classNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', classNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', classNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', classNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', classNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', classNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', classNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', classNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', classNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', classNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', classNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', classNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', classNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', classNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', classNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const defaultCbcList = [\r\n    {cd: '01', classCd: '', fullNm: 'WBC Diff. Count', isSelected: true},\r\n    {cd: '02', classCd: '', fullNm: 'Seg.-neutrophils', isSelected: true},\r\n    {cd: '03', classCd: '', fullNm: 'Band-neutrophils', isSelected: true},\r\n    {cd: '04', classCd: '', fullNm: 'Lymphocytes', isSelected: true},\r\n    {cd: '05', classCd: '', fullNm: 'Monocytes', isSelected: true},\r\n    {cd: '06', classCd: '', fullNm: 'Eosinophils', isSelected: true},\r\n    {cd: '07', classCd: '', fullNm: 'Basophils', isSelected: true},\r\n    {cd: '08', classCd: '', fullNm: 'Metamyelocytes', isSelected: true},\r\n    {cd: '09', classCd: '', fullNm: 'Myelocytes', isSelected: true},\r\n    {cd: '10', classCd: '', fullNm: 'Promyelocytes', isSelected: true},\r\n    {cd: '11', classCd: '', fullNm: 'Blasts', isSelected: true},\r\n    {cd: '12', classCd: '', fullNm: 'Immature cells', isSelected: true},\r\n    {cd: '13', classCd: '', fullNm: 'Atypical cells', isSelected: true},\r\n    {cd: '14', classCd: '', fullNm: 'Atypical lymphocyte', isSelected: true},\r\n    {cd: '15', classCd: '', fullNm: 'Activated lymphocyte', isSelected: true},\r\n    {cd: '16', classCd: '', fullNm: 'Prolymphocytes', isSelected: true},\r\n    {cd: '17', classCd: '', fullNm: 'Promonocytes', isSelected: true},\r\n    {cd: '18', classCd: '', fullNm: 'Plasma cells', isSelected: true},\r\n    {cd: '19', classCd: '', fullNm: 'Nucleated RBC', isSelected: true},\r\n    {cd: '20', classCd: '', fullNm: 'Others', isSelected: true},\r\n    {cd: '21', classCd: '', fullNm: 'Atypical Lymphoid cells', isSelected: true},\r\n    {cd: '22', classCd: '', fullNm: 'Leukemic cells', isSelected: true},\r\n    {cd: '23', classCd: '', fullNm: 'Abnormal lymphocyte', isSelected: true},\r\n    {cd: '24', classCd: '', fullNm: 'Reactive lymphocyte', isSelected: true},\r\n    {cd: '25', classCd: '', fullNm: 'Plasmacytoid lymphocyte', isSelected: true},\r\n    {cd: '26', classCd: '', fullNm: 'ANC calc', isSelected: true},\r\n    {cd: '27', classCd: '', fullNm: 'WBC', isSelected: true},\r\n    {cd: '28', classCd: '', fullNm: 'RBC', isSelected: true},\r\n    {cd: '29', classCd: '', fullNm: 'HGB', isSelected: true},\r\n    {cd: '30', classCd: '', fullNm: 'HCT', isSelected: true},\r\n    {cd: '31', classCd: '', fullNm: 'MCV', isSelected: true},\r\n    {cd: '32', classCd: '', fullNm: 'MCH', isSelected: true},\r\n    {cd: '33', classCd: '', fullNm: 'MCHC', isSelected: true},\r\n    {cd: '34', classCd: '', fullNm: 'RDW', isSelected: true},\r\n    {cd: '35', classCd: '', fullNm: 'Platelet', isSelected: true},\r\n    {cd: '36', classCd: '', fullNm: 'PCT', isSelected: true},\r\n    {cd: '37', classCd: '', fullNm: 'MPV', isSelected: true},\r\n    {cd: '38', classCd: '', fullNm: 'PDW', isSelected: true},\r\n    {cd: '39', classCd: '', fullNm: 'ESR', isSelected: true}\r\n];\r\n\r\nexport const rbcClassList = {\r\n    rbcClassList: [{\r\n        categoryId: '01',\r\n        categoryNm: 'Size',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Macrocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Microcyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Anisocytosis',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '02',\r\n        categoryNm: 'Chromia',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Hyperchromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Hypochromic',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Polychromia',\r\n            degree: '0'\r\n        }]\r\n    }, {\r\n        categoryId: '03',\r\n        categoryNm: 'Shape',\r\n        classInfo: [{\r\n            classId: '01',\r\n            classNm: 'Normal',\r\n            degree: '0'\r\n        }, {\r\n            classId: '02',\r\n            classNm: 'Poikilocytosis',\r\n            degree: '0'\r\n        }, {\r\n            classId: '03',\r\n            classNm: 'Target Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '04',\r\n            classNm: 'Burr Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '05',\r\n            classNm: 'Acanthocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '06',\r\n            classNm: 'Ovalocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '07',\r\n            classNm: 'Schistocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '08',\r\n            classNm: 'Sickle Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '09',\r\n            classNm: 'Stomatocyte',\r\n            degree: '0'\r\n        }, {\r\n            classId: '10',\r\n            classNm: 'Tear Drop Cell',\r\n            degree: '0'\r\n        }, {\r\n            classId: '11',\r\n            classNm: 'Spherocyte',\r\n            degree: '0'\r\n        }]\r\n    },\r\n        // {\r\n        //   categoryId: '04',\r\n        //   categoryNm: 'Platelet',\r\n        //   classInfo: Object.freeze([{\r\n        //     classId: '01',\r\n        //     classNm: 'Giant Platelet',\r\n        //     degree: '0'\r\n        //   }])\r\n        // },\r\n        {\r\n            categoryId: '05',\r\n            categoryNm: 'Inclusion Body',\r\n            classInfo: [{\r\n                classId: '01',\r\n                classNm: 'Howell-Jolly Body',\r\n                degree: '0'\r\n            }, {\r\n                classId: '02',\r\n                classNm: 'Basophilic Stippling',\r\n                degree: '0'\r\n            }]\r\n        }],\r\n    malariaCount: 0,\r\n    currentRbcResults: null\r\n};\r\n\r\nexport const defaultRbcDegree = [\r\n{\r\n    categoryId: '01',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '01',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '02',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '03',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '02',\r\n    classId: '04',\r\n    degree1: '5',\r\n    degree2: '10',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '03',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '04',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '05',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '06',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '07',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '08',\r\n    degree1: '0.5',\r\n    degree2: '1',\r\n    degree3: '2'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '09',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '10',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '03',\r\n    classId: '11',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '01',\r\n    degree1: '1',\r\n    degree2: '2',\r\n    degree3: '3'\r\n}, {\r\n    categoryId: '05',\r\n    classId: '02',\r\n    degree1: '2.5',\r\n    degree2: '5',\r\n    degree3: '20'\r\n}];\r\n\r\nexport const wbcHotKeys = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    },\r\n    {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    },\r\n    {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    },\r\n    {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    },\r\n    {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    },\r\n    {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    },\r\n    {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    },\r\n    {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    },\r\n    {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    },\r\n    {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 19\r\n    },\r\n    {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    },\r\n    {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    },\r\n    {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    },\r\n    {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    },]\r\nexport const bmHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', key: '', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', key: '', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', key: '', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', key: '', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', key: '', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', key: '', orderIdx: 19\r\n}]\r\nexport const bfHotKeys = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '02', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 2\r\n}, {\r\n    id: '03', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 3\r\n}, {\r\n    id: '04', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 4\r\n}, {\r\n    id: '05', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 5\r\n}, {\r\n    id: '06', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 6\r\n}, {\r\n    id: '07', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 7\r\n}, {\r\n    id: '08', abbreviation: 'NR', fullNm: 'NRBC', key: '', orderIdx: 8\r\n}, {\r\n    id: '09', abbreviation: 'AR', fullNm: 'Artifact(Smudge)', key: '', orderIdx: 9\r\n}, {\r\n    id: '10', abbreviation: 'MC', fullNm: 'Malignant cell', key: '', orderIdx: 10\r\n}, {\r\n    id: '11', abbreviation: 'MT', fullNm: 'Mesothelial cell', key: '', orderIdx: 11\r\n}]\r\n\r\nexport const normalRange = [\r\n{\r\n    abbreviation: 'NE',\r\n    fullNm: 'Neutrophil',\r\n    classId: '01',\r\n    min: 42,\r\n    max: 85,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'ME',\r\n    fullNm: 'Metamyelocyte',\r\n    classId: '02',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MY',\r\n    fullNm: 'Myelocyte',\r\n    classId: '03',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PR',\r\n    fullNm: 'Promyelocyte',\r\n    classId: '04',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LY',\r\n    fullNm: 'Lymphocyte',\r\n    classId: '05',\r\n    min: 11,\r\n    max: 49,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'MO',\r\n    fullNm: 'Monocyte',\r\n    classId: '07',\r\n    min: 0,\r\n    max: 9,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'EO',\r\n    fullNm: 'Eosinophil',\r\n    classId: '08',\r\n    min: 0,\r\n    max: 6,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BA',\r\n    fullNm: 'Basophil',\r\n    classId: '09',\r\n    min: 0,\r\n    max: 2,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'BL',\r\n    fullNm: 'Blast',\r\n    classId: '10',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'PC',\r\n    fullNm: 'Plasma cell',\r\n    classId: '11',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'NR',\r\n    fullNm: 'nRBC',\r\n    classId: '12',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'GP',\r\n    fullNm: 'Giant platelet',\r\n    classId: '13',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'PA',\r\n    fullNm: 'Platelet aggregation',\r\n    classId: '14',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'AR',\r\n    fullNm: 'Artifact(Smudge)',\r\n    classId: '15',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n}, {\r\n    abbreviation: 'MA',\r\n    fullNm: 'Malaria',\r\n    classId: '16',\r\n    min: 0,\r\n    max: 100,\r\n    unit: 'Count'\r\n},\r\n{\r\n    abbreviation: 'LR',\r\n    fullNm: 'Reactive lymphocyte',\r\n    classId: '61',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n}, {\r\n    abbreviation: 'LA',\r\n    fullNm: 'Abnormal lymphocyte',\r\n    classId: '62',\r\n    min: 0,\r\n    max: 100,\r\n    unit: '%'\r\n},\r\n]\r\n\r\nexport const imagePrintAndWbc = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false},\r\n    { fullNm: 'Blast', classId: '10', checked: false},\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false},\r\n    { fullNm: 'nRBC', classId: '12', checked: false},\r\n    { fullNm: 'Giant platelet', classId: '13', checked: false},\r\n    { fullNm: 'Platelet aggregation', classId: '14', checked: false},\r\n    { fullNm: 'Malaria', classId: '16', checked: false},\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', checked: false},\r\n    { fullNm: 'rbcPrintModel', classId: '99999', checked: false},\r\n]\r\nexport const imagePrintAndBm = [\r\n    { fullNm: 'Neutrophil', classId: '01', checked: false },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', checked: false },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', checked: false },\r\n    { fullNm: 'Metamyelocyte', classId: '02', checked: false },\r\n    { fullNm: 'Myelocyte', classId: '03', checked: false },\r\n    { fullNm: 'Promyelocyte', classId: '04', checked: false },\r\n    { fullNm: 'Lymphocyte', classId: '05', checked: false },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '06', checked: false },\r\n    { fullNm: 'Monocyte', classId: '07', checked: false },\r\n    { fullNm: 'Eosinophil', classId: '08', checked: false },\r\n    { fullNm: 'Basophil', classId: '09', checked: false },\r\n    { fullNm: 'Blast', classId: '10', checked: false },\r\n    { fullNm: 'Plasma cell', classId: '11', checked: false },\r\n    { fullNm: 'Orthochromic Normoblast', classId: '12', checked: false },\r\n    { fullNm: 'Polychromic Normoblast', classId: '13', checked: false },\r\n    { fullNm: 'Basophilic Normoblast', classId: '14', checked: false },\r\n    { fullNm: 'Proerythroblast', classId: '15', checked: false },\r\n    { fullNm: 'Histiocyte', classId: '16', checked: false },\r\n    { fullNm: 'Others', classId: '17', checked: false }\r\n];\r\n\r\n\r\nexport const lisCodeWbcOption = [\r\n    { fullNm: 'Neutrophil', classId: '01', key: '' },\r\n    { fullNm: 'Neutrophil-Segmented', classId: '71', key: '' },\r\n    { fullNm: 'Neutrophil-Band', classId: '72', key: '' },\r\n    { fullNm: 'Metamyelocyte', classId: '02', key: '' },\r\n    { fullNm: 'Myelocyte', classId: '03', key: '' },\r\n    { fullNm: 'Promyelocyte', classId: '04', key: '' },\r\n    { fullNm: 'Lymphocyte', classId: '05', key: '' },\r\n    { fullNm: 'Reactive lymphocyte', classId: '61', key: '' },\r\n    { fullNm: 'Abnormal lymphocyte', classId: '62', key: '' },\r\n    { fullNm: 'Monocyte', classId: '07', key: '' },\r\n    { fullNm: 'Eosinophil', classId: '08', key: '' },\r\n    { fullNm: 'Basophil', classId: '09', key: '' },\r\n    { fullNm: 'Blast', classId: '10', key: '' },\r\n    { fullNm: 'Plasma cell', classId: '11', key: '' },\r\n    { fullNm: 'nRBC', classId: '12', key: '' },\r\n    { fullNm: 'Giant platelet', classId: '13', key: '' },\r\n    { fullNm: 'Platelet aggregation', classId: '14', key: '' },\r\n    { fullNm: 'Malaria', classId: '16', key: '' },\r\n    { fullNm: 'Artifact(Smudge)', classId: '15', key: '' },\r\n    { fullNm: 'rbcPrintModel', classId: '99999', key: '' },\r\n];\r\n\r\nexport const lisCodeRbcOption = [\r\n    { categoryId: '01', categoryNm: 'Size', classId: '01', fullNm: 'Normal', key: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '02', fullNm: 'Macrocyte', key: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '03', fullNm: 'Microcyte', key: '0' },\r\n    { categoryId: '01', categoryNm: 'Size', classId: '04', fullNm: 'Anisocytosis', key: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '01', fullNm: 'Normal', key: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '02', fullNm: 'Hyperchromic', key: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '03', fullNm: 'Hypochromic', key: '0' },\r\n    { categoryId: '02', categoryNm: 'Chromia', classId: '04', fullNm: 'Polychromia', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '01', fullNm: 'Normal', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '02', fullNm: 'Poikilocytosis', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '03', fullNm: 'Target Cell', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '04', fullNm: 'Burr Cell', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '05', fullNm: 'Acanthocyte', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '06', fullNm: 'Ovalocyte', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '07', fullNm: 'Schistocyte', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '08', fullNm: 'Sickle Cell', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '09', fullNm: 'Stomatocyte', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '10', fullNm: 'Tear Drop Cell', key: '0' },\r\n    { categoryId: '03', categoryNm: 'Shape', classId: '11', fullNm: 'Spherocyte', key: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '01', fullNm: 'Howell-Jolly Body', key: '0' },\r\n    { categoryId: '05', categoryNm: 'Inclusion Body', classId: '02', fullNm: 'Basophilic Stippling', key: '0' }\r\n];\r\n\r\nexport const minRunCount = [\r\n    { minGPCount:0, minPACount:0, },\r\n]\r\n\r\nexport const wbcRunningCount = [\r\n{\r\n    min: 0,\r\n    max: 700,\r\n    wbcConditionCount: 50\r\n}, {\r\n    min: 701,\r\n    max: 1000,\r\n    wbcConditionCount: 100\r\n}, {\r\n    min: 1001,\r\n    max: 2000,\r\n    wbcConditionCount: 150\r\n}, {\r\n    min: 2001,\r\n    max: 3000,\r\n    wbcConditionCount: 250\r\n}];\r\n\r\nexport const lisHotKeyAndLisFilePathAndUrl =[\r\n    { lisHotKey: '', lisFilePath:'', cbcFilePath:'' },\r\n]\r\n\r\nexport const barcodeImgDir = {\r\n    barcodeDirName: '00_Barcode_Image'\r\n}\r\n\r\nexport const dirName = {\r\n    howellJollyDirName: '19_Howell_jolly',\r\n    malariaDirName: '43_InclusionBody_Malaria',\r\n    noMalariaDirName: '44_InclusionBody_NoMalaria',\r\n    rbcClassDirName: '03_RBC_Classification',\r\n    rbcImageDirName: '02_RBC_Image',\r\n    barcodeDirName: '00_Barcode_Image',\r\n    wbcClassDirName: '01_WBC_Classification',\r\n    bfDirName: '02_LowPower_Image',\r\n    bfHighDirName: '03_HighPower_Image',\r\n    bfClassDirName: '05_BF_Classification',\r\n    iaRootPath: 'D:/ia_proc',\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode, createCommentVNode as _createCommentVNode, unref as _unref, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"execute\" }\nconst _hoisted_2 = { class: \"startDiv\" }\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"startStopP\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"startStopP\"\n}\nconst _hoisted_7 = { class: \"stopDiv\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"value\"]\nconst _hoisted_10 = [\"disabled\"]\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"span\", null, \" INITIALIZING \", -1)\n\nimport {ref, computed, watch, onMounted, nextTick} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'execute',\n  setup(__props, { emit: __emit }) {\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = __emit;\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((analysisType).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_4))\n          }), 128))\n        ], 8, _hoisted_3), [\n          [_vModelSelect, analysisType.value]\n        ]),\n        (showStopBtn.value)\n          ? (_openBlock(), _createElementBlock(\"p\", _hoisted_5, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-play'],\n                class: _normalizeClass({ 'startBtn': true, [btnStatus.value]: true }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (isInit.value === 'Y' && toggleStartStop('start')))\n              }, null, 8, [\"class\"])\n            ]))\n          : (_openBlock(), _createElementBlock(\"p\", _hoisted_6, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'circle-stop'],\n                class: \"stopBtn\",\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (toggleStartStop('stop')))\n              })\n            ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _withDirectives(_createElementVNode(\"select\", {\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((wbcCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(countType.value, (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_9))\n          }), 128))\n        ], 8, _hoisted_8), [\n          [_vModelSelect, wbcCount.value]\n        ]),\n        _withDirectives(_createElementVNode(\"select\", {\n          class: \"stopDivSelect\",\n          \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((stitchCount).value = $event)),\n          disabled: isRunningState.value\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountOptions), (option) => {\n            return (_openBlock(), _createElementBlock(\"option\", {\n              key: option.value,\n              value: option.value\n            }, _toDisplayString(option.text), 9, _hoisted_11))\n          }), 128))\n        ], 8, _hoisted_10), [\n          [_vModelSelect, stitchCount.value]\n        ]),\n        _createElementVNode(\"div\", {\n          class: _normalizeClass([\"initBtn\", {'isInitDisabled': isInit.value === 'Y'}]),\n          onClick: sendInit\n        }, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'rotate-right'],\n            style: {\"font-size\":\"0.9rem\"},\n            class: _normalizeClass({ 'disabled': isInit.value !== 'N' })\n          }, null, 8, [\"class\"]),\n          _hoisted_12\n        ], 2)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"execute\">\r\n    <div class='startDiv'>\r\n      <select v-model=\"analysisType\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in testTypeArr\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <p class=\"startStopP\" v-if=\"showStopBtn\">\r\n        <font-awesome-icon\r\n            :icon=\"['fas', 'circle-play']\"\r\n            :class=\"{ 'startBtn': true, [btnStatus]: true }\"\r\n            @click=\"isInit === 'Y' && toggleStartStop('start')\"\r\n        />\r\n      </p>\r\n      <p class=\"startStopP\" v-else>\r\n        <font-awesome-icon :icon=\"['fas', 'circle-stop']\" class='stopBtn' @click=\"toggleStartStop('stop')\"/>\r\n      </p>\r\n    </div>\r\n\r\n    <div class=\"stopDiv\">\r\n      <select v-model=\"wbcCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in countType\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <select class=\"stopDivSelect\" v-model=\"stitchCount\" :disabled=\"isRunningState\">\r\n        <option v-for=\"option in stitchCountOptions\" :key=\"option.value\" :value=\"option.value\">\r\n          {{ option.text }}\r\n        </option>\r\n      </select>\r\n      <div class=\"initBtn\" @click=\"sendInit\" :class=\"{'isInitDisabled': isInit === 'Y'}\">\r\n        <font-awesome-icon :icon=\"['fas', 'rotate-right']\" style=\"font-size: 0.9rem;\"\r\n                           :class=\"{ 'disabled': isInit !== 'N' }\"\r\n        />\r\n        <span> INITIALIZING </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, computed, watch, onMounted, nextTick, defineEmits} from \"vue\";\r\n\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  analysisOptions,\r\n  wbcCountOptions,\r\n  stitchCountOptions,\r\n  bmCountOptions\r\n} from '@/common/defines/constFile/analysis';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {testBmTypeList} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\nconst store = useStore();\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('pb');\r\nconst countType = ref<any>([]);\r\n\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst executeState = computed(() => store.state.executeModule);\r\nconst isPause = ref(runInfo.value?.isPause);\r\nconst isRunningState = ref(executeState.value?.isRunningState);\r\nconst userStop = ref(embeddedStatusJobCmd.value?.userStop);\r\nconst isRecoveryRun = ref(embeddedStatusJobCmd.value?.isRecoveryRun);\r\nconst isInit = ref(embeddedStatusJobCmd.value?.isInit);\r\nconst userId = ref('');\r\nconst analysisType = ref();\r\nconst wbcCount = ref();\r\nconst stitchCount = ref();\r\nconst bfSelectFiles = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst showStopBtn = ref(false);\r\nconst btnStatus = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst testTypeArr = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\nwatch(userModuleDataGet.value, async (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  userId.value = newUserId.id;\r\n  await initDataExecut();\r\n});\r\n\r\nonMounted(async () => {\r\n  await initDataExecut();\r\n});\r\n\r\nconst initDataExecut = async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : analysisOptions;\r\n\r\n  countType.value = window.PROJECT_TYPE === 'bm' ? bmCountOptions : wbcCountOptions\r\n  // userId.value = getStoredUser.id;\r\n\r\n  await nextTick();\r\n  await cellImgGet();\r\n  initData();\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    btnStatus.value = 'start';\r\n    showStopBtn.value = true;\r\n  }\r\n}\r\n\r\nwatch(commonDataGet.value, (value) => {\r\n  if (value.loginSetData === '') {\r\n    initDataExecut();\r\n    store.dispatch('commonModule/setCommonInfo', {loginSetData: 'nn'});\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState, bfSelectFiles: newBfSelectFiles} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n  bfSelectFiles.value = newBfSelectFiles;\r\n\r\n  if (isRunningState.value) {\r\n    btnStatus.value = 'isRunning';\r\n    showStopBtn.value = false;\r\n  } else {\r\n    // btnStatus.value = 'isInit';\r\n    showStopBtn.value = true;\r\n  }\r\n})\r\n\r\n\r\n// 스토어 변경 감시\r\nwatch([embeddedStatusJobCmd.value, executeState.value], async (newVals) => {\r\n  const [newEmbeddedStatusJobCmd, newExecuteState] = newVals;\r\n\r\n  await nextTick();\r\n  const {\r\n    isPause: newIsPause,\r\n    userStop: newUserStop,\r\n    isRecoveryRun: newIsRecoveryRun,\r\n    isInit: newIsInit\r\n  } = newEmbeddedStatusJobCmd || {};\r\n\r\n  isPause.value = newIsPause;\r\n  userStop.value = newUserStop;\r\n  isRecoveryRun.value = newIsRecoveryRun;\r\n  isInit.value = newIsInit;\r\n\r\n  if (isPause.value) {\r\n    btnStatus.value = 'isPause';\r\n  } else if (userStop.value && !isRecoveryRun.value) {\r\n    btnStatus.value = 'onRecover';\r\n  } else if (isInit.value === 'N' || isInit.value === '') {\r\n    btnStatus.value = 'isInit';\r\n  } else {\r\n    btnStatus.value = 'start';\r\n  }\r\n\r\n});\r\n\r\n//웹소켓으로 백엔드에 전송\r\nconst emitSocketData = async (type: string, payload: object) => {\r\n  EventBus.publish('executeAction', payload);\r\n};\r\nconst toggleStartStop = (action: 'start' | 'stop') => {\r\n  if (action === 'start') {\r\n    if (isPause.value) { // 일시정지인 상태일 경우 임베디드에게 상태값을 알려준다.\r\n\r\n      tcpReq().embedStatus.restart.bfSelectFiles = bfSelectFiles.value;\r\n      tcpReq().embedStatus.restart.reqUserId = userId.value;\r\n      emitSocketData('SEND_DATA', tcpReq().embedStatus.restart);\r\n      return;\r\n    }\r\n    // 실행 여부 체크\r\n    if (isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n      return;\r\n    } else if (userStop.value) {\r\n      if (confirm(messages.IDS_RECOVER_GRIPPER_CONDITION) === true) {\r\n        tcpReq().embedStatus.recovery.reqUserId = userId.value;\r\n        emitSocketData('SEND_DATA', tcpReq().embedStatus.recovery);\r\n      }\r\n      return;\r\n    }\r\n    const rbcPositionMargin = sessionStorage.getItem('rbcPositionMargin');\r\n    const wbcPositionMargin = sessionStorage.getItem('wbcPositionMargin');\r\n    const pltPositionMargin = sessionStorage.getItem('pltPositionMargin');\r\n\r\n    let startAction = tcpReq().embedStatus.startAction;\r\n    Object.assign(startAction, {\r\n      testType: analysisType.value,\r\n      wbcCount: wbcCount.value,\r\n      stitchCount: stitchCount.value,\r\n      reqUserId: userId.value,\r\n      rbcPositionMargin: rbcPositionMargin || '0',\r\n      wbcPositionMargin: wbcPositionMargin || '0',\r\n      pltPositionMargin: pltPositionMargin || '0',\r\n    });\r\n    console.log(startAction);\r\n    if (window.PROJECT_TYPE === 'bm') {\r\n      startAction = {\r\n        \"jobCmd\": \"START\",\r\n        \"reqUserId\": userId.value,\r\n        \"reqDttm\": tcpReq().embedStatus.startAction.reqDttm,\r\n        \"orderInfo\": [{\r\n          \"orderId\": \"1\",\r\n          \"cassetNo\": \"\",\r\n          \"slotNo\": \"1\",\r\n          \"bmNo\": \"1\",\r\n          \"patientId\": \"\",\r\n          \"patientNm\": \"\",\r\n          \"age\": \"1\",\r\n          \"gender\": \"01\",\r\n          \"testType\": '02',\r\n          \"stainType\": \"01\",\r\n          \"userInputStainType\": \"\",\r\n          \"analysisType\": analysisType.value,\r\n          \"bmSamplingSide\": \"01\",\r\n          \"cellCount\": wbcCount.value,\r\n          \"department\": \"s\",\r\n          \"stitchCount\": stitchCount.value,\r\n        }],\r\n        \"runningMode\": \"00\",\r\n        \"positionMargin\": \"0\"\r\n      }\r\n    }\r\n\r\n    if (isInit.value === 'Y') { // 초기화 여부 체크 초기화가 되어있는 상태이면 실행\r\n      // 웹소켓으로 백엔드에 전송\r\n      emitSocketData('SEND_DATA', startAction);\r\n      const InfoData = {\r\n        startEmbedded: true,\r\n      }\r\n      // 시작 버튼이 눌리면 연속적으로 실행정보, 장비정보를 요청한다.\r\n      store.dispatch('commonModule/setCommonInfo', InfoData);\r\n    }\r\n  } else {\r\n    // 장비 중단\r\n    if (!isRunningState.value) {\r\n      showSuccessAlert(messages.IDS_ERROR_STOP_PROCESS);\r\n      return;\r\n    }\r\n    store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: true});\r\n    tcpReq().embedStatus.stop.reqUserId = userId.value;\r\n    emitSocketData('SEND_DATA', tcpReq().embedStatus.stop);\r\n\r\n  }\r\n\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst sendInit = () => { // 장비 초기화 진행\r\n  if (isInit.value === 'Y' || btnStatus.value === \"isRunning\" || isRunningState.value) {\r\n    showSuccessAlert(messages.alreadyInitialized);\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.init.reqUserId = userId.value;\r\n  emitSocketData('SEND_DATA', tcpReq().embedStatus.init);\r\n  emits('initDataChangeText', true);\r\n}\r\n\r\nconst initData = () => {\r\n  const newObj = {...embeddedStatusJobCmd.value}\r\n  const runInfoObj = {...runInfo.value};\r\n  isInit.value = newObj.isInit;\r\n  isPause.value = newObj.isPause;\r\n  userStop.value = newObj.userStop;\r\n  isRecoveryRun.value = newObj.isRecoveryRun;\r\n  isRunningState.value = runInfoObj.isRunningState;\r\n  showStopBtn.value = (isInit.value === 'N' || isInit.value === '') && !isRunningState.value;\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        analysisType.value = data.analysisType;\r\n        if (window.PROJECT_TYPE === 'bm') {\r\n          wbcCount.value = data.diffCellAnalyzingCount;\r\n        } else {\r\n          switch (analysisType.value) {\r\n            case '01':\r\n              wbcCount.value = data.diffCellAnalyzingCount;\r\n              break;\r\n            case '04':\r\n              wbcCount.value = data.pbsCellAnalyzingCount;\r\n              break;\r\n            default:\r\n              wbcCount.value = data.bfCellAnalyzingCount;\r\n          }\r\n        }\r\n\r\n        stitchCount.value = data.stitchCount\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./execute.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"INPUT\", -1)\nconst _hoisted_11 = { class: \"slideContent\" }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt1\" }, \"OUTPUT\", -1)\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView',\n  props: [ 'parsedData', 'initValData'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_10\n      ]),\n      _createElementVNode(\"ul\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.output, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'output'))\n          }, null, 2))\n        }), 128)),\n        _hoisted_12\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">INPUT</p>\r\n      </ul>\r\n      <!-- output -->\r\n      <ul class='slideContent'>\r\n        <li v-for=\"item in slideCardData.output\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'output')\"></li>\r\n        <p class=\"mt1\">OUTPUT</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData', 'initValData']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\n\r\n\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: SlotInfo[]) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  // afterChange\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\nwatch(() => props.initValData, (newVal) => {\r\n  if(newVal){\r\n    eqStatCd.value = '05';\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, unref as _unref, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"orderListTableContainer\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"O\"),\n  /*#__PURE__*/_createTextVNode(\"rder \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"L\"),\n  /*#__PURE__*/_createTextVNode(\"ist\")\n], -1)\nconst _hoisted_3 = { class: \"orderListTable\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Barcode ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Order Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"State\")\n  ])\n], -1)\nconst _hoisted_5 = { key: 0 }\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"tr\", null, [\n  /*#__PURE__*/_createElementVNode(\"td\", { colspan: \"4\" }, \"Data is empty.\")\n], -1)\nconst _hoisted_8 = [\n  _hoisted_7\n]\n\nimport {computed, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'orderList',\n  props: ['parsedData', 'startStatus', 'pb100aCassette'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"table\", _hoisted_3, [\n      _hoisted_4,\n      (dspOrderList.value.length > 0)\n        ? (_openBlock(), _createElementBlock(\"tbody\", _hoisted_5, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspOrderList.value, (slot, index) => {\n              return (_openBlock(), _createElementBlock(\"tr\", { key: index }, [\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.barcodeId), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.patientName), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(slot?.analyzedDttm ? _unref(formatDateString)(slot?.analyzedDttm) : _unref(formatDateString)(slot?.orderDate)), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(_unref(getCommonCode)('14', slot?.state)), 1)\n              ]))\n            }), 128))\n          ]))\n        : (_openBlock(), _createElementBlock(\"tbody\", _hoisted_6, _hoisted_8))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"orderListTableContainer\">\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">O</span>rder <span class=\"greenColor\">L</span>ist</h3>\r\n    <table class=\"orderListTable\">\r\n      <thead>\r\n      <tr>\r\n        <th>Barcode ID</th>\r\n        <th>Patient Name</th>\r\n        <th>Order Date</th>\r\n        <th>State</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody v-if=\"dspOrderList.length > 0\">\r\n      <tr v-for=\"(slot, index) in dspOrderList\" :key=\"index\">\r\n        <td>{{ slot?.barcodeId }}</td>\r\n        <td>{{ slot?.patientName }}</td>\r\n        <!--    0019는 길병원(검사 끝나는 시간으로 해달라는 길병원 요구)    -->\r\n        <td>{{\r\n            slot?.analyzedDttm ? formatDateString(slot?.analyzedDttm) : formatDateString(slot?.orderDate)\r\n          }}\r\n        </td>\r\n        <!--        {{ slot?.state }}-->\r\n        <td>{{ getCommonCode('14', slot?.state) }}</td>\r\n      </tr>\r\n      </tbody>\r\n      <tbody v-else>\r\n      <tr>\r\n        <td colspan=\"4\">Data is empty.</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, ref, watch} from \"vue\";\r\nimport {getCommonCode, stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\n\r\n// 스토어\r\nconst props = defineProps(['parsedData', 'startStatus', 'pb100aCassette']);\r\n\r\n// end 스토어\r\nconst dspOrderList = ref<any>([]);\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal) => {\r\n      runningInfoGet(newVal);\r\n    },\r\n    {deep: true}\r\n);\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if (newVal === 'reset') {\r\n        dspOrderList.value = [];\r\n        console.log('pb100aCassette 초기화', dspOrderList.value)\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\n\r\n\r\nwatch(\r\n    () => props.startStatus,\r\n    (newVal) => {\r\n      if (newVal === true) {\r\n        dspOrderList.value = [];\r\n      }\r\n    },\r\n    {deep: true}\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if (parsedData.jobCmd === 'RUNNING_INFO') {\r\n    const currentSlot = parsedData?.slotInfo\r\n    if (currentSlot) {\r\n      const barcodeNo = currentSlot.barcodeNo;\r\n      const existingItemIndex = dspOrderList.value.findIndex((item: any) => item.barcodeId === barcodeNo);\r\n      if (existingItemIndex === -1 && barcodeNo !== '') {\r\n        dspOrderList.value.push({\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        });\r\n      }else{\r\n        dspOrderList.value[existingItemIndex] = {\r\n          barcodeId: barcodeNo,\r\n          patientName: currentSlot.patientNm,\r\n          orderDate: stringToDateTime(currentSlot.orderDttm),\r\n          analyzedDttm: stringToDateTime(currentSlot.analyzedDttm),\r\n          state: currentSlot.stateCd,\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n</script>","import script from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./orderList.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// wbcclassificationModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\nexport interface WbcInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\nexport interface BmInfo {\r\n    barcodeID?: string;\r\n    id: string;\r\n    abbreviation: string;\r\n    fullNm: string;\r\n    count: string | number;\r\n    percent?: string | number;\r\n    images?: Image[];\r\n}\r\n\r\ninterface WbcClassificationState {\r\n    wbcInfo: WbcInfo | null;\r\n}\r\n\r\ninterface WbcClassificationModule {\r\n    namespaced: true;\r\n    state: () => WbcClassificationState;\r\n    mutations: {\r\n        setWbcInfo: (state: WbcClassificationState, value: WbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setWbcInfo: (context: { commit: Commit }, payload: WbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const wbcClassificationModule: WbcClassificationModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        wbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setWbcInfo(state: WbcClassificationState, value: WbcInfo): void {\r\n            state.wbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWbcInfo({commit}: { commit: Commit }, payload: WbcInfo): void {\r\n            commit('setWbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const basicWbcArr = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', key: '', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', key: '', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', key: '', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', key: '', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', key: '', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', key: '', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', key: '', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', key: '', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', key: '', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', key: '', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', key: '', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', key: '', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', key: '', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', key: '', orderIdx: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', key: '', orderIdx: 1\r\n}, {\r\n    id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', key: '', orderIdx: 2\r\n}, {\r\n    id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', key: '', orderIdx: 3\r\n}, {\r\n    id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', key: '', orderIdx: 4\r\n}, {\r\n    id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', key: '', orderIdx: 5\r\n}, {\r\n    id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', key: '', orderIdx: 6\r\n}, {\r\n    id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n}, {\r\n    id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n}, {\r\n    id: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n}, {\r\n    id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n}, {\r\n    id: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n}, {\r\n    id: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n}, {\r\n    id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n}, {\r\n    id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n}, {\r\n    id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n}, {\r\n    id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n}, {\r\n    id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n}, {\r\n    id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n}, {\r\n    id: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n}]\r\n\r\nexport const defaultWbcClassList = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        id: '61', abbreviation: 'LR', fullNm: 'Reactive lymphocyte', orderIdx: 8\r\n    }, {\r\n        id: '62', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 9\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 10\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 11\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 12\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 13\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 14\r\n    }, {\r\n        id: '12', abbreviation: 'NR', fullNm: 'nRBC', orderIdx: 15\r\n    }, {\r\n        id: '13', abbreviation: 'GP', fullNm: 'Giant platelet', orderIdx: 16\r\n    }, {\r\n        id: '14', abbreviation: 'PA', fullNm: 'Platelet aggregation', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'MA', fullNm: 'Malaria', orderIdx: 18\r\n    }, {\r\n        id: '15', abbreviation: 'AR', fullNm: 'Artifact', orderIdx: 19\r\n    }, {\r\n        id: '17', abbreviation: 'SM', fullNm: 'Smudge', orderIdx: 20\r\n    }\r\n]\r\n\r\nexport const defaultBmClassList = [\r\n    {\r\n        id: '01', abbreviation: 'NE', fullNm: 'Neutrophil', orderIdx: 1\r\n    }, {\r\n        id: '71', abbreviation: 'NS', fullNm: 'Neutrophil-Segmented', orderIdx: 2\r\n    }, {\r\n        id: '72', abbreviation: 'NB', fullNm: 'Neutrophil-Band', orderIdx: 3\r\n    }, {\r\n        id: '02', abbreviation: 'ME', fullNm: 'Metamyelocyte', orderIdx: 4\r\n    }, {\r\n        id: '03', abbreviation: 'MY', fullNm: 'Myelocyte', orderIdx: 5\r\n    }, {\r\n        id: '04', abbreviation: 'PR', fullNm: 'Promyelocyte', orderIdx: 6\r\n    }, {\r\n        id: '05', abbreviation: 'LY', fullNm: 'Lymphocyte', orderIdx: 7\r\n    }, {\r\n        id: '06', abbreviation: 'LA', fullNm: 'Abnormal lymphocyte', orderIdx: 8\r\n    }, {\r\n        id: '07', abbreviation: 'MO', fullNm: 'Monocyte', orderIdx: 9\r\n    }, {\r\n        id: '08', abbreviation: 'EO', fullNm: 'Eosinophil', orderIdx: 10\r\n    }, {\r\n        id: '09', abbreviation: 'BA', fullNm: 'Basophil', orderIdx: 11\r\n    }, {\r\n        id: '10', abbreviation: 'BL', fullNm: 'Blast', orderIdx: 12\r\n    }, {\r\n        id: '11', abbreviation: 'PC', fullNm: 'Plasma cell', orderIdx: 13\r\n    }, {\r\n        id: '12', abbreviation: 'ON', fullNm: 'Orthochromic Normoblast', orderIdx: 14\r\n    }, {\r\n        id: '13', abbreviation: 'PN', fullNm: 'Polychromic Normoblast', orderIdx: 15\r\n    }, {\r\n        id: '14', abbreviation: 'BN', fullNm: 'Basophilic Normoblast', orderIdx: 16\r\n    }, {\r\n        id: '15', abbreviation: 'PE', fullNm: 'Proerythroblast', orderIdx: 17\r\n    }, {\r\n        id: '16', abbreviation: 'HC', fullNm: 'Histiocyte', orderIdx: 18\r\n    }, {\r\n        id: '17', abbreviation: 'OT', fullNm: 'Others', orderIdx: 19\r\n    }]\r\n\r\nexport const basicWbcArrClint = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassListClint = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleText\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"BM\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"WBC\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\", -1)\nconst _hoisted_6 = { class: \"analysisWbc\" }\nconst _hoisted_7 = {\n  key: 0,\n  class: \"categories\"\n}\nconst _hoisted_8 = { class: \"categoryNm\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_10 = { class: \"classNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_13 = { class: \"degree\" }\nconst _hoisted_14 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_15 = { class: \"categories\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = {\n  key: 0,\n  class: \"categories mt1\"\n}\nconst _hoisted_20 = { class: \"categoryNm\" }\nconst _hoisted_21 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_22 = { class: \"classNm\" }\nconst _hoisted_23 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_24 = { style: {\"text-align\":\"center\"} }\nconst _hoisted_25 = { class: \"degree\" }\nconst _hoisted_26 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_27 = { class: \"mt1\" }\nconst _hoisted_28 = { class: \"categoryNm\" }\nconst _hoisted_29 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_30 = { class: \"classNm\" }\nconst _hoisted_31 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_32 = { key: 0 }\nconst _hoisted_33 = { class: \"degree\" }\nconst _hoisted_34 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\n\nimport {computed, ref, onMounted, watch, getCurrentInstance} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([__props.bmIsBoolen ? 'bmclass' : ''])\n  }, [\n    _createElementVNode(\"h3\", _hoisted_1, [\n      (__props.bmIsBoolen)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _hoisted_2,\n            _createTextVNode(),\n            _hoisted_3,\n            _createTextVNode(\"lassification \")\n          ], 64))\n        : (_openBlock(), _createElementBlock(_Fragment, { key: 1 }, [\n            _hoisted_4,\n            _createTextVNode(),\n            _hoisted_5,\n            _createTextVNode(\"lassification\")\n          ], 64))\n    ]),\n    _createElementVNode(\"div\", _hoisted_6, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (shouldRenderCategory(category))\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                    _createElementVNode(\"ul\", _hoisted_8, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_9, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_10, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_12, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_13, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_14, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed((Number(category?.count) / Number(totalCount.value)) === 0 ? 0 : 1) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspWbcClassList.value, (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: innerIndex }, [\n              (category.title === 'OT')\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                    _createElementVNode(\"ul\", _hoisted_20, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_21, \"Class\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_22, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_23, \"Count\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", _hoisted_24, _toDisplayString(category?.count), 1)\n                    ]),\n                    _createElementVNode(\"ul\", _hoisted_25, [\n                      (innerIndex === 0 && outerIndex === 0)\n                        ? (_openBlock(), _createElementBlock(\"li\", _hoisted_26, \"%\"))\n                        : _createCommentVNode(\"\", true),\n                      _createElementVNode(\"li\", null, _toDisplayString(totalCount.value && totalCount.value !== '0' ? ((Number(category?.count) / Number(totalCount.value)) * 100).toFixed(0) : '0'), 1)\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ], 64))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_27, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonWbcClassList.value, (nWbcItem, outerIndex) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: outerIndex,\n            class: \"categories\"\n          }, [\n            _createElementVNode(\"ul\", _hoisted_28, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_29, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(nWbcItem)), 1)\n            ]),\n            _createElementVNode(\"ul\", _hoisted_30, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_31))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", null, [\n                _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                (nWbcItem.title === 'NR' || nWbcItem.title === 'GP')\n                  ? (_openBlock(), _createElementBlock(\"span\", _hoisted_32, \" / \" + _toDisplayString(maxWbcCount.value) + \" WBC\", 1))\n                  : _createCommentVNode(\"\", true)\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_33, [\n              (outerIndex === 0)\n                ? (_openBlock(), _createElementBlock(\"li\", _hoisted_34))\n                : _createCommentVNode(\"\", true),\n              _hoisted_35\n            ])\n          ]))\n        }), 128))\n      ])\n    ])\n  ], 2))\n}\n}\n\n})","<template>\r\n  <div :class=\"[bmIsBoolen ? 'bmclass' : '']\">\r\n    <h3 class=\"titleText\">\r\n      <template v-if=\"bmIsBoolen\"><span class=\"greenColor\">BM</span> <span class=\"greenColor\">C</span>lassification\r\n      </template>\r\n      <template v-else><span class=\"greenColor\">WBC</span> <span class=\"greenColor\">C</span>lassification</template>\r\n    </h3>\r\n    <div class=\"analysisWbc\">\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\" v-if=\"shouldRenderCategory(category)\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed((Number(category?.count) / Number(totalCount)) === 0 ? 0 : 1) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>\r\n            Total\r\n          </li>\r\n        </ul>\r\n        <ul class=\"classNm\">\r\n          <li>\r\n            {{ totalCount || 0 }}\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree\">\r\n          <li>\r\n            100.00\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <template v-for=\"(classList, outerIndex) in dspWbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories mt1\" v-if=\"category.title === 'OT'\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">Count</li>\r\n              <li style=\"text-align: center\">{{ category?.count }}</li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li v-if=\"innerIndex === 0 && outerIndex === 0\" class=\"mb1 liTitle\">%</li>\r\n              <li>\r\n                {{\r\n                  totalCount && totalCount !== '0' ? ((Number(category?.count) / Number(totalCount)) * 100).toFixed(0) : '0'\r\n                }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n      <!--      nonrbc-->\r\n      <div class='mt1'>\r\n        <template v-for=\"(nWbcItem, outerIndex) in nonWbcClassList\" :key=\"outerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n              <li>{{ getCategoryName(nWbcItem) }}</li>\r\n            </ul>\r\n            <ul class=\"classNm\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>{{ nWbcItem?.count }} <span\r\n                  v-if=\"nWbcItem.title === 'NR' || nWbcItem.title === 'GP'\"> / {{ maxWbcCount }} WBC</span></li>\r\n            </ul>\r\n            <ul class=\"degree\">\r\n              <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n              <li>-</li>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, watch, defineProps, getCurrentInstance, defineEmits} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {\r\n  WbcInfo,\r\n  basicWbcArr,\r\n  basicBmClassList,\r\n  basicWbcArrClint,\r\n  basicBmClassListClint\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\nconst storeEm = useStore();\r\nconst siteCd = computed(() => storeEm.state.commonModule.siteCd);\r\n\r\ninterface SlotInfo {\r\n  stateCd: string;\r\n  testType: string;\r\n  maxWbcCount: string;\r\n  malariaCount: string;\r\n  wbcInfo: WbcInfo[];\r\n}\r\n\r\nconst dspWbcClassList = ref<any>([]);\r\nconst dspBfClassList = ref<any[]>([]);\r\nconst nonWbcClassList = ref<any[]>([]);\r\n\r\nconst testType = ref<string>(\"\");\r\nconst totalCount = ref<string>(\"0\");\r\nconst maxWbcCount = ref<string>('');\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(() => {\r\n  updateDataArray(basicBmClassList, null, true);\r\n});\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    await updateDataArray({wbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\nconst updateDataArray = async (newSlotInfo: any, parsedData?: any, type?: boolean) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n  if (slotArray.wbcInfo) {\r\n    testType.value = slotArray?.wbcInfo?.testType;\r\n    const wbcinfoType = props.bmIsBoolen ? [slotArray.wbcInfo.bmInfo] : [slotArray.wbcInfo.wbcInfo];\r\n    const wbcInfoArray = wbcinfoType;\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = wbcInfoArray[0].length > 0 ? wbcInfoArray : arrType;\r\n    const areAllCountsZero = (classList: any[]) => {\r\n      // 모든 요소의 count가 0인지 확인\r\n      return classList.every((classGroup) => {\r\n        return classGroup.every((category: any) => {\r\n          return category.count === '0';\r\n        });\r\n      });\r\n    };\r\n\r\n    // dspWbcClassList.value 배열의 모든 count 값이 '0'인지 확인\r\n    const allCountsAreZero = areAllCountsZero(dspWbcClassList.value);\r\n\r\n    if (allCountsAreZero) {\r\n      totalCount.value = '0'\r\n    }\r\n\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n\r\n    const nonRbcWbcInfoArray = wbcInfoArray\r\n        .flat()  // 중첩 배열을 평탄화\r\n        .filter((item: any) =>\r\n            ['NR', 'AR', 'GP', 'PA', 'MC', 'MA', 'GP', 'PA', 'SM'].includes(item?.title)\r\n        );\r\n    nonWbcClassList.value = nonRbcWbcInfoArray;\r\n\r\n  } else {\r\n    const arrType = props.bmIsBoolen ? [basicBmClassListClint] : [basicWbcArrClint];\r\n    dspWbcClassList.value = arrType;\r\n    dspBfClassList.value = dspWbcClassList.value.flat();\r\n  }\r\n  if (slotArray && slotArray.wbcInfo) {\r\n    const currentSlot = slotArray.wbcInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      if (currentSlot.wbcCount === '00') {\r\n        return;\r\n      }\r\n      await updateCounts(currentSlot);\r\n      maxWbcCount.value = currentSlot.maxWbcCount;\r\n    }\r\n  }\r\n  // await updatePercentages();\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  // if(lastCompleteIndex !== slotIndex.value){\r\n  //   return;\r\n  // }\r\n  if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n    const data = {\r\n      classInfo:{\r\n        wbcInfo: dspWbcClassList.value,\r\n        // nonRbcClassList: nonWbcClassList,\r\n        totalCount: totalCount.value,\r\n        maxWbcCount: maxWbcCount.value,\r\n        slotId: parsedData.slotInfo.slotId\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    };\r\n    emits('classInfoUpdate',data)\r\n  }\r\n};\r\n\r\nconst getIncludesStrBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd || siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", \"NE\", \"GP\", \"PA\", \"OT\"],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\",\"NE\", \"GP\", \"PA\", \"OT\"],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"NE\",\"SM\", \"GP\", \"PA\", \"OT\"],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n// 퍼센트 계산 하는 부분\r\nconst calculateWbcPercentages = (\r\n    classList: WbcInfo[],\r\n    wbcList: WbcInfo[]\r\n) => {\r\n\r\n  const includesStr = getIncludesStrBySiteCd(siteCd.value, testType.value);\r\n  let total = 0;\r\n\r\n  for (let category of classList) {\r\n    if (!includesStr.includes(category.title)) {\r\n      total += Number(category.count);\r\n    }\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\n\r\n\r\n\r\nconst updateCounts = async (currentSlot: any) => {\r\n  const arrType = props.bmIsBoolen ? currentSlot.bmInfo : currentSlot.wbcInfo;\r\n  const wbcList = arrType;\r\n  let totalVal = \"0\";\r\n\r\n  if (testType.value === \"01\" || testType.value === \"04\") {\r\n    totalVal = calculateWbcPercentages(\r\n        dspWbcClassList.value.flat(),\r\n        wbcList\r\n    ).toFixed(0);\r\n  } else {\r\n    totalVal = calculateWbcPercentages(dspBfClassList.value, wbcList).toFixed(0);\r\n  }\r\n\r\n\r\n  totalCount.value = totalVal;\r\n  await updatePercentages();\r\n};\r\n\r\nconst shouldRenderCategory = (category: WbcInfo) => {\r\n  // siteCd와 testType을 입력으로 getStringArrayBySiteCd 함수를 호출\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, testType.value);\r\n\r\n  // category.title이 targetArray에 포함되어 있는지 확인\r\n  return !targetArray.includes(category.title);\r\n};\r\n\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\",\"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE',\"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nconst updatePercentages = async () => {\r\n\r\n  const percent = dspWbcClassList.value.map((classList: any) => {\r\n    return classList.map((category: any) => {\r\n      const percentage = totalCount.value && totalCount.value !== '0'\r\n          ? ((Number(category.count) / Number(totalCount.value)) * 100).toFixed(1)\r\n          : '0';\r\n      // 퍼센트를 정수와 비교해서 정수일 경우 정수만, 그렇지 않으면 소수점 한 자리까지 표시\r\n      const formattedPercent = (Number(percentage) === Math.floor(Number(percentage)))\r\n          ? Math.floor(Number(percentage)).toString()\r\n          : percentage;\r\n\r\n      return {\r\n        ...category,\r\n        percent: formattedPercent,\r\n      };\r\n    });\r\n  });\r\n  dspWbcClassList.value = percent;\r\n};\r\n\r\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\n</script>\r\n","import script from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoification.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// rbcInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\nexport interface BasicRbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: {\r\n        classId: string;\r\n        classNm: string;\r\n        degree: string;\r\n    }[];\r\n}\r\n\r\nexport interface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\n interface RbcInfoState {\r\n    rbcInfo: RbcInfo | null;\r\n}\r\n\r\ninterface RbcInfoModule {\r\n    namespaced: true,\r\n    state: () => RbcInfoState;\r\n    mutations: {\r\n        setRbcInfo: (state: RbcInfoState, value: RbcInfo) => void;\r\n    };\r\n    actions: {\r\n        setRbcInfo: (context: { commit: Commit }, payload: RbcInfo) => void;\r\n    };\r\n}\r\n\r\nexport const rbcClassificationModule: RbcInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        rbcInfo: null,\r\n    }),\r\n    mutations: {\r\n        setRbcInfo(state: RbcInfoState, value: RbcInfo): void {\r\n            state.rbcInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setRbcInfo({ commit }: { commit: Commit }, payload: RbcInfo): void {\r\n            commit('setRbcInfo', payload);\r\n        },\r\n    },\r\n};\r\n\r\nexport const basicRbcArr = [\r\n    {\r\n        \"categoryId\": \"01\",\r\n        \"categoryNm\": \"Size\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Macrocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Microcyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Anisocytosis\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"02\",\r\n        \"categoryNm\": \"Chromia\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Hyperchromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Hypochromic\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Polychromia\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"03\",\r\n        \"categoryNm\": \"Shape\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Normal\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Poikilocytosis\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"03\",\r\n                \"classNm\": \"Target Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"04\",\r\n                \"classNm\": \"Burr Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"05\",\r\n                \"classNm\": \"Acanthocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"06\",\r\n                \"classNm\": \"Ovalocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"07\",\r\n                \"classNm\": \"Schistocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"08\",\r\n                \"classNm\": \"Sickle Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"09\",\r\n                \"classNm\": \"Stomatocyte\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"10\",\r\n                \"classNm\": \"Tear Drop Cell\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"11\",\r\n                \"classNm\": \"Spherocyte\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"categoryId\": \"05\",\r\n        \"categoryNm\": \"Inclusion Body\",\r\n        \"classInfo\": [\r\n            {\r\n                \"classId\": \"01\",\r\n                \"classNm\": \"Howell-Jolly Body\",\r\n                \"degree\": \"0\"\r\n            },\r\n            {\r\n                \"classId\": \"02\",\r\n                \"classNm\": \"Basophilic Stippling\",\r\n                \"degree\": \"0\"\r\n            }\r\n        ]\r\n    }\r\n];","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"Whole\"),\n  /*#__PURE__*/_createTextVNode(\" Slide Image \")\n], -1)\nconst _hoisted_3 = { class: \"row\" }\nconst _hoisted_4 = [\"src\", \"id\", \"onClick\"]\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mt-3 row\"\n}\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"col\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { style: {\"color\":\"#2798DC\"} }, \"Select Interest Area\")\n], -1)\nconst _hoisted_7 = { class: \"col\" }\nconst _hoisted_8 = { key: 1 }\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"RBC\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"C\"),\n  /*#__PURE__*/_createTextVNode(\"lassification \")\n], -1)\nconst _hoisted_10 = { class: \"categoryNm\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = { class: \"classNmRbc\" }\nconst _hoisted_13 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = { key: 1 }\nconst _hoisted_18 = { key: 0 }\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"classNmRbc\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Platelets\"),\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Malaria\")\n], -1)\nconst _hoisted_23 = { class: \"degree analysis\" }\nconst _hoisted_24 = { style: {\"font-size\":\"0.7rem\"} }\nconst _hoisted_25 = { style: {\"font-size\":\"0.7rem\"} }\n\nimport {ref, onMounted, watch} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcclassification',\n  props: ['bmIsBoolen','parsedData'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = __emit;\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (testType.value !== '01' && testType.value !== '04')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n          _hoisted_2,\n          _createElementVNode(\"div\", null, [\n            (_openBlock(), _createElementBlock(_Fragment, null, _renderList([0, 6, 12, 18, 24, 30], (rowStart, rowIndex) => {\n              return _createElementVNode(\"div\", {\n                key: rowIndex,\n                class: \"pl-2\"\n              }, [\n                _createElementVNode(\"div\", _hoisted_3, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lowPowerPath.value.slice(rowStart, rowStart + 6), (lowPower, colIndex) => {\n                    return (_openBlock(), _createElementBlock(\"div\", {\n                      key: colIndex,\n                      class: \"col-2 p-1\"\n                    }, [\n                      _createElementVNode(\"img\", {\n                        src: lowPower.path,\n                        id: lowPower.seqNo,\n                        ref_for: true,\n                        ref: \"wholeSlideImg\",\n                        class: \"wholeSlideImg\",\n                        onClick: ($event: any) => (onClickBfImg($event, lowPower)),\n                        style: {\"width\":\"75px\"}\n                      }, null, 8, _hoisted_4)\n                    ]))\n                  }), 128))\n                ])\n              ])\n            }), 64)),\n            (testType.value === '03')\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                  _hoisted_6,\n                  _createElementVNode(\"div\", _hoisted_7, [\n                    _createElementVNode(\"div\", null, _toDisplayString(bfSelectModeList.value.length), 1)\n                  ])\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _hoisted_9,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(dspRbcClassList.value, (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return (_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_10, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Category\"))\n                      : _createCommentVNode(\"\", true),\n                    _createElementVNode(\"li\", null, _toDisplayString(getCategoryName(category)), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_12, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, \"Class\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                    }), 128))\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_14, [\n                    (innerIndex === 0)\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                      : _createCommentVNode(\"\", true),\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                        (classInfo.classId !== '01' || category.categoryId === '05')\n                          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                              (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                return _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fas', 'circle'],\n                                  key: degreeIndex,\n                                  class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                                }, null, 8, [\"class\"])\n                              }), 64))\n                            ]))\n                          : (_openBlock(), _createElementBlock(\"li\", _hoisted_17, [\n                              (classInfo.degree === '0')\n                                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                                    _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle'] })\n                                  ]))\n                                : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                                    _createVNode(_component_font_awesome_icon, {\n                                      icon: ['fas', 'circle'],\n                                      class: \"degreeActive\"\n                                    })\n                                  ]))\n                            ]))\n                      ], 64))\n                    }), 128))\n                  ])\n                ]))\n              }), 128))\n            ], 64))\n          }), 128))\n        ])),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_20, [\n        _hoisted_21,\n        _hoisted_22,\n        _createElementVNode(\"ul\", _hoisted_23, [\n          _createElementVNode(\"li\", _hoisted_24, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n          _createElementVNode(\"li\", _hoisted_25, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div v-if=\"testType !== '01' && testType !== '04'\">\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">Whole</span> Slide Image\r\n      </h3>\r\n      <div>\r\n        <div v-for=\"(rowStart, rowIndex) in [0, 6, 12, 18, 24, 30]\" :key=\"rowIndex\" class=\"pl-2\">\r\n          <div class=\"row\">\r\n            <div v-for=\"(lowPower, colIndex) in lowPowerPath.slice(rowStart, rowStart + 6)\" :key=\"colIndex\"\r\n                 class=\"col-2 p-1\">\r\n              <img :src=\"lowPower.path\" :id=\"lowPower.seqNo\" ref=\"wholeSlideImg\" class=\"wholeSlideImg\"\r\n                   @click=\"onClickBfImg($event, lowPower)\" style=\"width: 75px;\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div v-if=\"testType === '03'\" class=\"mt-3 row\">\r\n          <div class=\"col\">\r\n            <div style=\"color: #2798DC\">Select Interest Area</div>\r\n          </div>\r\n          <div class=\"col\">\r\n            <div>{{ bfSelectModeList.length }}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <h3 class=\"titleText\">\r\n        <span class=\"greenColor\">RBC</span> <span class=\"greenColor\">C</span>lassification\r\n      </h3>\r\n      <template v-for=\"(classList, outerIndex) in dspRbcClassList\" :key=\"outerIndex\">\r\n        <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n          <div class=\"categories\">\r\n            <ul class=\"categoryNm\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n              <li>{{ getCategoryName(category) }}</li>\r\n            </ul>\r\n            <ul class=\"classNmRbc\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li>{{ classInfo?.classNm }}</li>\r\n              </template>\r\n            </ul>\r\n            <ul class=\"degree analysis\">\r\n              <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n              <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fas', 'circle']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                  />\r\n                </li>\r\n                <li v-else>\r\n                  <div v-if=\"classInfo.degree === '0'\">\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                    />\r\n                  </div>\r\n                  <div v-else>\r\n                    <font-awesome-icon\r\n                        :icon=\"['fas', 'circle']\"\r\n                        class=\"degreeActive\"\r\n                    />\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </div>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>Platelets</li>\r\n          <li>Malaria</li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.7rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.7rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, defineProps, watch, defineEmits} from \"vue\";\r\nimport {RbcInfo, basicRbcArr} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nconst props = defineProps(['bmIsBoolen','parsedData']);\r\n\r\nconst dspRbcClassList = ref<RbcInfo[][]>([]);\r\nconst malariaCount = ref('');\r\nconst maxRbcCount = ref('');\r\nconst pltCount = ref('');\r\nconst testType = ref<string>(\"01\");\r\nconst bfSelectModeList = ref<any>([]);\r\nconst rbcDegreeStandard = ref<any>([]);\r\nconst emits = defineEmits();\r\n\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n  await updateDataArray({rbcInfo: props.parsedData.slotInfo},'');\r\n});\r\n\r\nwatch(\r\n    () => props.parsedData, // 감시할 데이터\r\n    (newVal, oldVal) => {\r\n      // 데이터 변경 시 실행할 코드\r\n      runningInfoGet(newVal);\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nconst runningInfoGet = async (data: any) => {\r\n  const parsedData = data\r\n  if(parsedData.jobCmd === 'RUNNING_INFO'){\r\n    const currentSlot = data?.slotInfo;\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      malariaCount.value = currentSlot.malariaCount;\r\n      maxRbcCount.value = currentSlot.maxRbcCount;\r\n      pltCount.value = currentSlot.pltCount;\r\n    }\r\n    await updateDataArray({rbcInfo: parsedData.slotInfo}, parsedData);\r\n  }\r\n}\r\n\r\n\r\nconst lowPowerPath = ref([]);\r\nconst updateDataArray = async (newSlotInfo: any, parsedData: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlotInfo));\r\n\r\n  if (Array.isArray(slotArray.rbcInfo)) {\r\n    testType.value = slotArray.rbcInfo[0].testType;\r\n    if(!slotArray.rbcInfo[0]){\r\n      return\r\n    }\r\n    const wbcInfoArray = [slotArray.rbcInfo[0].rbcInfo];\r\n    const wbcInfoArr = wbcInfoArray[0].length > 0 ? wbcInfoArray : [basicRbcArr];\r\n\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree(wbcInfoArr[0], parsedData)\r\n    \r\n    if (slotArray.rbcInfo[0].lowPowerPath) {\r\n      lowPowerPath.value = slotArray.rbcInfo[0].lowPowerPath.sort(function (a: any, b: any) {\r\n        return a.seqNo - b.seqNo;\r\n      });\r\n    } else {\r\n      lowPowerPath.value = [];\r\n    }\r\n\r\n\r\n  } else {\r\n    //최종으로 슬라이드 정보를 업데이트\r\n    calcRbcDegree([basicRbcArr][0], parsedData);\r\n  }\r\n\r\n\r\n};\r\n\r\nconst calcRbcDegree = (rbcInfos: any, parsedData: any) => {\r\n  let totalCount = 0;\r\n  let sizeTotal = 0;\r\n  let chromiaTotal = 0;\r\n  const originalData = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  const rbcInfo = parsedData.length === 0 || !parsedData ?  (JSON.parse(JSON.stringify(rbcInfos))) : (JSON.parse(JSON.stringify(parsedData?.slotInfo?.rbcInfo)));\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size total\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId !== '04') {\r\n          sizeTotal += Number(rbcClass.degree)\r\n        }\r\n      }\r\n\r\n      // chromia total\r\n      else if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId !== '04') {\r\n          chromiaTotal += Number(rbcClass.degree)\r\n        }\r\n      } else {\r\n        totalCount += Number(rbcClass.degree)\r\n      }\r\n    });\r\n  });\r\n\r\n  rbcInfo.forEach((rbcCategory: any, idx1: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any, idx2: any) => {\r\n      if(!rbcDegreeStandard.value){\r\n        return;\r\n      }\r\n      rbcDegreeStandard.value.forEach((degreeStandard: any) => {\r\n        rbcClass.originalDegree = originalData[idx1].classInfo[idx2].degree;\r\n        if (\r\n            degreeStandard.categoryId === rbcCategory.categoryId &&\r\n            degreeStandard.classId === rbcClass.classId\r\n        ) {\r\n          const degreeCount = Number(rbcClass.degree);\r\n          let percent = 0;\r\n\r\n          if (degreeStandard.categoryId === '01') { // size total\r\n            percent = Number(((degreeCount / sizeTotal) * 100).toFixed(2));\r\n\r\n          } else if (degreeStandard.categoryId === '02') { // chromia total\r\n            percent = Number(((degreeCount / chromiaTotal) * 100).toFixed(2));\r\n          } else { // shape, inclusion body total\r\n            percent = Number(((degreeCount / totalCount) * 100).toFixed(2));\r\n          }\r\n\r\n          if (isNaN(percent)) {\r\n            percent = 0;\r\n          }\r\n\r\n          const setDegree = (value: any) => (rbcClass.degree = value);\r\n\r\n          // 0\r\n          if (percent < Number(degreeStandard.degree1)) setDegree('0');\r\n          // 1\r\n          else if (percent < Number(degreeStandard.degree2)) setDegree('1');\r\n          // 2\r\n          else if (percent < Number(degreeStandard.degree3)) setDegree('2');\r\n          // 3\r\n          else setDegree('3');\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n\r\n  rbcInfo.forEach((rbcCategory: any) => {\r\n    rbcCategory.classInfo.forEach((rbcClass: any) => {\r\n      // size\r\n      if (rbcCategory.categoryId === '01') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // chromia\r\n      if (rbcCategory.categoryId === '02') {\r\n        if (rbcClass.classId === '01') rbcCategory.classInfo[0].degree = '1';\r\n        if (['02', '03'].includes(rbcClass.classId) && Number(rbcClass.degree) > 0)\r\n          rbcCategory.classInfo[0].degree = '0';\r\n      }\r\n\r\n      // Poikilocytosis\r\n      if (rbcCategory.categoryId === '03') {\r\n        if (rbcClass.classId === '01') {\r\n          // normal\r\n          rbcCategory.classInfo[0].degree = '1'\r\n          // poikilo\r\n          rbcCategory.classInfo[1].degree = '0'\r\n        }\r\n\r\n        if (rbcClass.classId !== '01' && rbcClass.classId !== '02') {\r\n          var poikiloDegree = Number(rbcCategory.classInfo[1].degree)\r\n\r\n          if (Number(rbcClass.degree) > poikiloDegree) {\r\n            rbcCategory.classInfo[0].degree = '0'\r\n            rbcCategory.classInfo[1].degree = rbcClass.degree\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  dspRbcClassList.value[0] = rbcInfo;\r\n  const str: any = parsedData?.iCasStat ?? '';\r\n  const iCasStatArr: any = [...str];\r\n  if(iCasStatArr.lastIndexOf(\"2\") !== -1){\r\n    const data = {\r\n      rbc:{\r\n        rbcInfo: rbcInfo,\r\n        slotId: parsedData.slotInfo.slotId,\r\n      },\r\n      iCasStatArr: iCasStatArr.lastIndexOf(\"2\")\r\n    }\r\n    emits('rbcUpdate',data);\r\n  }\r\n};\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\n\r\nconst onClickBfImg = (event: any, lowPower: any) => {\r\n  if (testType.value === '03') {\r\n    // lowPower가 이미 bfSelectModeList에 있는지 확인\r\n    const existingIndex = bfSelectModeList.value.findIndex((item: any) => item.seqNo === lowPower.seqNo);\r\n\r\n    if (existingIndex !== -1) {\r\n      // 만약 lowPower가 이미 bfSelectModeList에 있다면, 제거\r\n      bfSelectModeList.value.splice(existingIndex, 1);\r\n    } else {\r\n      // lowPower가 bfSelectModeList에 없다면, 추가\r\n      bfSelectModeList.value.push(lowPower);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\n</script>\r\n<style>\r\ntd, th {\r\n  border: 1px solid #353942;\r\n}\r\n</style>","import script from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcclassification.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcclassification.vue?vue&type=style&index=0&id=23d1ee3f&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-e5e792d0\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt1\" }\nconst _hoisted_2 = {\n  key: 0,\n  class: \"slider\"\n}\nconst _hoisted_3 = [\"src\"]\n\nimport {ref, watch} from 'vue';\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'foundingCells',\n  props: [ 'parsedData'],\n  setup(__props) {\n\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = __props;\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_Transition, {\n      name: \"fade\",\n      mode: \"out-in\"\n    }, {\n      default: _withCtx(() => [\n        (images.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(images.value, (type) => {\n                return (_openBlock(), _createElementBlock(_Fragment, {\n                  key: type.id\n                }, [\n                  (getImageUrl(type))\n                    ? (_openBlock(), _createElementBlock(\"img\", {\n                        key: 0,\n                        src: getImageUrl(type),\n                        alt: \"Slide\"\n                      }, null, 8, _hoisted_3))\n                    : _createCommentVNode(\"\", true)\n                ], 64))\n              }), 128))\n            ]))\n          : _createCommentVNode(\"\", true)\n      ]),\n      _: 1\n    })\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt1\">\r\n    <transition name=\"fade\" mode=\"out-in\">\r\n      <div class=\"slider\" v-if=\"images.length > 0\">\r\n        <template v-for=\"type in images\" :key=\"type.id\">\r\n          <img\r\n              :src=\"getImageUrl(type)\"\r\n              v-if=\"getImageUrl(type)\"\r\n              alt=\"Slide\"\r\n          />\r\n        </template>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, watch, defineProps} from 'vue';\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst props = defineProps([ 'parsedData']);\r\n\r\nconst images = ref<RunningPathItem[]>([]);\r\n\r\n\r\ninterface RunningPathItem {\r\n  path: string;\r\n  id: string;\r\n}\r\n\r\nwatch(\r\n    () => props.parsedData,\r\n    (newVal, oldVal) => {\r\n      const slotInfo = newVal?.slotInfo;\r\n      if (slotInfo) {\r\n        let accumulatedRunningPath: any = {};\r\n\r\n        if (slotInfo.stateCd === '03' && slotInfo.runningPath && slotInfo.runningPath.length > 0) {\r\n          const runningPath: RunningPathItem[] = slotInfo.runningPath.map((pathItem: any) => ({\r\n            ...pathItem,\r\n            // path: pathItem.path + '?' + getDateTimeStr(),\r\n            path: pathItem.path,\r\n            id: generateUniqueId()\r\n          }));\r\n\r\n          accumulatedRunningPath = runningPath;\r\n        }\r\n\r\n        if (accumulatedRunningPath.length > 0) {\r\n          // 이미지 배열을 순회하며 중복 확인\r\n          let isDuplicate = false;\r\n          for (const image of accumulatedRunningPath) {\r\n            if (!images.value.find(existingImage => existingImage.path === image.path)) {\r\n              // 중복되지 않는 경우에만 이미지 배열에 추가\r\n              images.value.unshift(image);\r\n            } else {\r\n              isDuplicate = true;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\n\r\nfunction generateUniqueId() {\r\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n}\r\n\r\nfunction getImageUrl(types: RunningPathItem[] | undefined): string[] {\r\n  if (!types || types.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  // 이미지의 URL들을 담을 배열\r\n  const imageUrls: string[] = [];\r\n\r\n  // 각 이미지의 URL을 가져와서 배열에 추가\r\n  const folderPath = types?.path.match(/^(.*\\\\)\\d+_Real_Time\\\\/)?.[0];\r\n\r\n  // 파일 경로에서 파일 이름 부분 추출\r\n  const fileName = types?.path.match(/[^\\\\]*$/)[0];\r\n\r\n  // 이미지의 URL 생성\r\n  const imageUrl = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${fileName}`;\r\n\r\n  // URL이 `undefined`, 빈 문자열, 또는 `null`이 아닌 경우만 배열에 추가\r\n  if (imageUrl) {\r\n    imageUrls.unshift(imageUrl);\r\n  }\r\n\r\n  return imageUrls;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity 0.5s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n.slider {\r\n  position: relative;\r\n  overflow: hidden;\r\n  max-height: 135px;\r\n}\r\n.slider img {\r\n  width: 12%;\r\n}\r\nbutton {\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./foundingCells.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./foundingCells.vue?vue&type=style&index=0&id=e5e792d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e5e792d0\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"titleText\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"W\"),\n  /*#__PURE__*/_createTextVNode(\"orking \"),\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"greenColor\" }, \"V\"),\n  /*#__PURE__*/_createTextVNode(\"iew \")\n], -1)\nconst _hoisted_2 = { class: \"circular-progress-bar mt2\" }\nconst _hoisted_3 = {\n  class: \"progress-ring\",\n  width: \"120\",\n  height: \"120\"\n}\nconst _hoisted_4 = [\"cx\", \"cy\", \"r\", \"stroke-width\"]\nconst _hoisted_5 = [\"cx\", \"cy\", \"r\", \"stroke-width\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\"]\nconst _hoisted_6 = { class: \"slideTime\" }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"slideTime1 mt2\" }, \"Number of WBCs\", -1)\nconst _hoisted_8 = { class: \"slideCardWrap\" }\nconst _hoisted_9 = { class: \"slideContent pb100a\" }\nconst _hoisted_10 = { class: \"mt1\" }\n\nimport {ref, onMounted, onBeforeUnmount, watch, computed} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'workingView100A',\n  props: [ 'parsedData','pb100aCassette'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = __props;\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"p\", {\n        class: _normalizeClass({'blinkColor': isBlinking.value})\n      }, _toDisplayString(changeWqStatCd()), 3),\n      _createElementVNode(\"p\", null, _toDisplayString(wbcCount.value), 1),\n      _createElementVNode(\"div\", _hoisted_2, [\n        (_openBlock(), _createElementBlock(\"svg\", _hoisted_3, [\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: \"#ccc\",\n            fill: \"none\"\n          }, null, 8, _hoisted_4),\n          _createElementVNode(\"circle\", {\n            cx: radius.value,\n            cy: radius.value,\n            r: radius.value - strokeWidth.value / 2,\n            \"stroke-width\": strokeWidth.value,\n            stroke: progressColor.value,\n            fill: \"none\",\n            \"stroke-dasharray\": circumference.value,\n            \"stroke-dashoffset\": dashoffset.value\n          }, null, 8, _hoisted_5)\n        ])),\n        _createElementVNode(\"p\", _hoisted_6, _toDisplayString(timeDataGet.value.slideTime), 1)\n      ]),\n      _hoisted_7,\n      _createElementVNode(\"p\", null, _toDisplayString(timeDataGet.value.totalSlideTime), 1)\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"p\", null, \"INPUT : \" + _toDisplayString(casExistChangeText(iCasExist.value)), 1),\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(slideCardData.value.input, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.slotNo,\n            class: _normalizeClass(getSlotStateClass(item.slotState,'input'))\n          }, null, 2))\n        }), 128)),\n        _createElementVNode(\"p\", _hoisted_10, \"OUTPUT : \" + _toDisplayString(casExistChangeText(oCasExist.value)), 1)\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleText\"><span class=\"greenColor\">W</span>orking <span class=\"greenColor\">V</span>iew </h3>\r\n    <div>\r\n      <p :class=\"{'blinkColor': isBlinking}\">{{ changeWqStatCd() }}</p>\r\n      <p>{{ wbcCount }}</p>\r\n\r\n      <div class=\"circular-progress-bar mt2\">\r\n        <svg class=\"progress-ring\" width=\"120\" height=\"120\">\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              stroke=\"#ccc\"\r\n              fill=\"none\"\r\n          />\r\n          <circle\r\n              :cx=\"radius\"\r\n              :cy=\"radius\"\r\n              :r=\"radius - strokeWidth / 2\"\r\n              :stroke-width=\"strokeWidth\"\r\n              :stroke=\"progressColor\"\r\n              fill=\"none\"\r\n              :stroke-dasharray=\"circumference\"\r\n              :stroke-dashoffset=\"dashoffset\"\r\n          />\r\n        </svg>\r\n        <p class=\"slideTime\"> {{ timeDataGet.slideTime }} </p>\r\n      </div>\r\n      <p class=\"slideTime1 mt2\">Number of WBCs</p>\r\n      <p> {{ timeDataGet.totalSlideTime }} </p>\r\n\r\n    </div>\r\n    <div class='slideCardWrap'>\r\n      <!-- input -->\r\n      <ul class='slideContent pb100a'>\r\n        <p>INPUT : {{ casExistChangeText(iCasExist) }}</p>\r\n        <li v-for=\"item in slideCardData.input\" :key=\"item.slotNo\"\r\n            :class=\"getSlotStateClass(item.slotState,'input')\"></li>\r\n        <p class=\"mt1\">OUTPUT : {{ casExistChangeText(oCasExist) }}</p>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, onBeforeUnmount, watch, computed, defineProps} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\nimport {EmbeddedStatusState} from \"@/store/modules/embeddedStatusModule\";\r\nimport {getCountToTime} from \"@/common/lib/utils/dateUtils\";\r\nimport {slideCard, slideCard100a} from \"@/common/defines/constFile/analysis\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst runningInfoModule = computed(() => store.state.runningInfoModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst timeDataGet = computed(() => store.state.timeModule);\r\nconst props = defineProps([ 'parsedData','pb100aCassette']);\r\n\r\n\r\n// 스토어\r\n\r\nconst timeNum = ref(0);\r\nconst size = ref(120); // SVG 크기\r\nconst strokeWidth = ref(6); // 프로그레스 바 두께\r\nconst progressColor = ref('#00c2ff'); // 프로그레스 바 색상\r\nconst radius = ref(size.value / 2);\r\nconst circumference = ref(2 * Math.PI * (radius.value - strokeWidth.value / 2));\r\nconst dashoffset = ref(circumference.value);\r\nconst wbcCount = ref(0);// wbc 개수\r\nconst maxWbcCount = ref(0); // wbc 총합\r\nconst eqStatCd = ref('');\r\nconst slideTime = ref('');\r\nconst totalSlideTime = ref('');\r\nlet countingInterval: any = null;\r\nlet countingIntervalTotal: any = null;\r\nconst slideCardData = ref(slideCard100a);\r\nlet totalElapsedTimeCount = ref(0);\r\nlet elapsedTimeCount = ref(0);\r\nconst isBlinking = ref(false);\r\nlet interval: any = ref(null);\r\nconst iCasExist = ref<any>('0');\r\nconst oCasExist = ref<any>('0');\r\n\r\nwatch(\r\n    () => props.pb100aCassette,\r\n    (newVal) => {\r\n      if(newVal === 'reset'){\r\n        stopTotalCounting();\r\n        startTotalCounting();\r\n        stopCounting();\r\n      }\r\n    },\r\n    { deep: true }\r\n);\r\n\r\nwatch(() => store.state.embeddedStatusModule, (newData: EmbeddedStatusState) => {\r\n  const sysInfo = newData.sysInfo;\r\n  eqStatCd.value = newData.sysInfo.eqStatCd;\r\n  if (commonDataGet.value.isRunningState) {\r\n    updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n    updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n  } else {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n  const regex = /[1,2,9]/g;\r\n  const dataICasStat = String(sysInfo?.iCasStat);\r\n  if (String(sysInfo?.iCasStat) !== '999999999999') {\r\n    if ((dataICasStat.search(regex) < 0) || sysInfo?.oCasStat === '111111111111') { // 끝났을 경우 체크하는 곳\r\n      updateInputState(sysInfo.iCasStat, slideCardData.value.input);\r\n      updateInputState(sysInfo.oCasStat, slideCardData.value.output);\r\n    }\r\n  }\r\n}, {deep: true});\r\n\r\n\r\n// 장비가 슬라이드 검사를 완료 할때 감시\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n\r\n  if (!newValsObj[0].startEmbedded) {\r\n    stopCounting();\r\n  } else if(newValsObj[0].runningSlotId === '' && newValsObj[0].startEmbedded) {\r\n    startTotalCounting();\r\n  }\r\n\r\n\r\n  if (!newValsObj[0].isRunningState) {\r\n    stopTotalCounting();\r\n    stopCounting();\r\n  }\r\n});\r\n\r\n\r\nwatch([runningInfoModule.value], (newSlot: any) => {\r\n  const slotArray = JSON.parse(JSON.stringify(newSlot))\r\n  iCasExist.value = slotArray[0]?.runningInfo?.iCasExist;\r\n  oCasExist.value = slotArray[0]?.runningInfo?.oCasExist;\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'start' && slotArray[0].slideBooleanState?.slideIs.value === true) {\r\n    startCounting();\r\n  } else if (slotArray[0].changeSlideState?.changeSlide.value === 'stop') {\r\n    if (countingInterval !== null) {\r\n      // stop일 경우 실행 중인 interval을 중지\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  }\r\n  if (slotArray[0].changeSlideState?.changeSlide.value === 'afterChange') {\r\n    stopCounting();\r\n    startCounting();\r\n  }\r\n\r\n\r\n  if (slotArray[0].runningInfo) {\r\n\r\n    const currentSlot = slotArray[0].runningInfo.slotInfo;\r\n\r\n    if (currentSlot && currentSlot?.stateCd === '03') {\r\n      wbcCount.value = Number(currentSlot.wbcCount);\r\n      maxWbcCount.value = Number(currentSlot.maxWbcCount);\r\n\r\n      if (wbcCount.value > maxWbcCount.value) {\r\n        wbcCount.value = maxWbcCount.value;\r\n      }\r\n\r\n      const percentage = (wbcCount.value / maxWbcCount.value) * 100;\r\n      dashoffset.value = circumference.value * (1 - percentage / 100);\r\n    }\r\n  }\r\n});\r\n\r\nconst casExistChangeText = (val: string) => {\r\n  switch (val) {\r\n    case '0':\r\n      return 'EMPTY';\r\n    case '1':\r\n      return 'EXIST';\r\n    case '2':\r\n      return 'FULL';\r\n  }\r\n}\r\n\r\nwatch(()=>eqStatCd.value, (newVal) => {\r\n  if (newVal === '05') {\r\n    interval.value = setInterval(() => {\r\n      isBlinking.value = !isBlinking.value;\r\n    }, 1000);\r\n\r\n  } else {\r\n    isBlinking.value = false;\r\n    clearInterval(interval.value);\r\n  }\r\n})\r\n\r\n\r\nonMounted(() => {\r\n  eqStatCd.value = '01';\r\n  slideCardData.value.input.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n\r\n  slideCardData.value.output.forEach(item => {\r\n    item.slotState = '0';\r\n  });\r\n});\r\n\r\n\r\n\r\nconst updateInputState = (source: string, target: any[]): void => {\r\n  // 2는 진행중, 1은 있다. 3은 완료 iCasStat 기준\r\n  target.forEach((item, index) => {\r\n    item.slotState = source.charAt(index);\r\n  });\r\n}\r\n\r\n\r\nconst startCounting = (): void => {\r\n  if (!countingInterval) {\r\n    countingInterval = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        elapsedTimeCount.value += 1;\r\n        timeNum.value = elapsedTimeCount.value % 60;\r\n        sessionStorage.setItem('elapsedTimeCount', String(elapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {slideTime: getCountToTime(elapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingInterval) {\r\n      clearInterval(countingInterval);\r\n      countingInterval = null;\r\n    }\r\n  });\r\n};\r\n\r\n\r\nconst startTotalCounting = (): void => {\r\n  if (!countingIntervalTotal) {\r\n    countingIntervalTotal = setInterval(() => {\r\n      if (commonDataGet.value.isRunningState) {\r\n        totalElapsedTimeCount.value += 1;\r\n        sessionStorage.setItem('totalElapsedTimeCount', String(totalElapsedTimeCount.value));\r\n        store.dispatch('timeModule/setTimeInfo', {totalSlideTime: getCountToTime(totalElapsedTimeCount.value)});\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  onBeforeUnmount(() => {\r\n    if (countingIntervalTotal) {\r\n      clearInterval(countingIntervalTotal);\r\n      countingIntervalTotal = null;\r\n    }\r\n  });\r\n};\r\n\r\nconst stopCounting = () => {\r\n  clearInterval(countingInterval);\r\n  countingInterval = null;\r\n  elapsedTimeCount.value = 0;\r\n  slideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('elapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n};\r\n\r\nconst stopTotalCounting = (): void => {\r\n  clearInterval(countingIntervalTotal);\r\n  countingIntervalTotal = null;\r\n  totalElapsedTimeCount.value = 0;\r\n  totalSlideTime.value = getCountToTime(0);\r\n  sessionStorage.removeItem('totalElapsedTimeCount');\r\n  store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n};\r\n\r\n\r\nconst changeWqStatCd = (): string => {\r\n  switch (eqStatCd.value) {\r\n    case '01':\r\n      return 'IDLE';\r\n    case '02':\r\n      return 'READY';\r\n    case '03':\r\n      return 'ERROR';\r\n    case '04':\r\n      return 'RUNNING';\r\n    case '05':\r\n      return 'INITIALIZATION';\r\n    default:\r\n      return 'UNKNOWN';\r\n  }\r\n}\r\n\r\nconst getSlotStateClass = (state: string, type: string): string => {\r\n  // 각 상태에 따라 클래스명 반환\r\n  if (type === 'input') {\r\n    switch (state) {\r\n      case '0':\r\n        return 'class-for-state-0';\r\n      case '1':\r\n        return 'class-for-state-1';\r\n      case '2':\r\n        return 'class-for-state-2';\r\n      case '3':\r\n        return 'class-for-state-3';\r\n      case '4':\r\n        return 'class-for-state-4';\r\n      default:\r\n        return '';\r\n    }\r\n  } else {\r\n    switch (state) {\r\n      case '0':\r\n        return 'out-for-state-0';\r\n      case '1':\r\n        return 'out-for-state-1';\r\n      default:\r\n        return 'outClassDefault';\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n","import script from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./workingView100A.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-045b817f\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"contentLeft\" }\nconst _hoisted_2 = { class: \"contentRight\" }\nconst _hoisted_3 = { class: \"contentBottom\" }\n\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {onMounted, ref} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  props: ['parsedData','isClass', 'startStatus', 'pb100aCassette'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = __props;\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  initValData.value = val;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, [\n      _createVNode(Execute, { onInitDataChangeText: initDataChangeText }),\n      _createVNode(ProcessInfo, {\n        parsedData: props.parsedData,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"pb100aCassette\"]),\n      _createVNode(orderList, {\n        parsedData: props.parsedData,\n        startStatus: props.startStatus,\n        pb100aCassette: __props.pb100aCassette\n      }, null, 8, [\"parsedData\", \"startStatus\", \"pb100aCassette\"])\n    ], 512), [\n      [_vShow, props.isClass]\n    ]),\n    _withDirectives(_createElementVNode(\"div\", _hoisted_2, [\n      (pbVersion.value !== '100a')\n        ? (_openBlock(), _createBlock(workingView, {\n            key: 0,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\"]))\n        : (_openBlock(), _createBlock(WorkingView100A, {\n            key: 1,\n            initValData: initValData.value,\n            parsedData: props.parsedData,\n            pb100aCassette: __props.pb100aCassette,\n            class: \"contentRightChild\"\n          }, null, 8, [\"initValData\", \"parsedData\", \"pb100aCassette\"])),\n      (!bmIsBoolen.value)\n        ? (_openBlock(), _createBlock(rbcclassification, {\n            key: 2,\n            onRbcUpdate: rbcUpdate,\n            parsedData: props.parsedData,\n            class: \"contentRightChild\"\n          }, null, 8, [\"parsedData\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(wbcclassification, {\n        onClassInfoUpdate: classInfoUpdate,\n        parsedData: props.parsedData,\n        bmIsBoolen: bmIsBoolen.value,\n        class: \"contentRightChild\"\n      }, null, 8, [\"parsedData\", \"bmIsBoolen\"]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(FoundingCells, {\n          parsedData: props.parsedData\n        }, null, 8, [\"parsedData\"])\n      ])\n    ], 512), [\n      [_vShow, props.isClass]\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"contentLeft\" v-show=\"props.isClass\">\r\n    <Execute @initDataChangeText=\"initDataChangeText\"/>\r\n    <ProcessInfo :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\"/>\r\n    <orderList :parsedData=\"props.parsedData\" :startStatus=\"props.startStatus\" :pb100aCassette=\"pb100aCassette\"/>\r\n  </div>\r\n  <div class=\"contentRight\" v-show=\"props.isClass\">\r\n    <workingView :initValData=\"initValData\" :parsedData=\"props.parsedData\" class=\"contentRightChild\" v-if=\"pbVersion !== '100a'\"/>\r\n    <WorkingView100A :initValData=\"initValData\" :parsedData=\"props.parsedData\" :pb100aCassette=\"pb100aCassette\" class=\"contentRightChild\" v-else/>\r\n    <rbcclassification @rbcUpdate=\"rbcUpdate\" :parsedData=\"props.parsedData\" v-if=\"!bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <wbcclassification @classInfoUpdate=\"classInfoUpdate\" :parsedData=\"props.parsedData\" :bmIsBoolen=\"bmIsBoolen\" class=\"contentRightChild\"/>\r\n    <div class=\"contentBottom\">\r\n      <FoundingCells :parsedData=\"props.parsedData\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ProcessInfo from '@/views/analysis/commponent/processInfo.vue';\r\nimport Execute from '@/views/analysis/commponent/execute.vue';\r\nimport workingView from '@/views/analysis/commponent/workingView.vue';\r\nimport orderList from './commponent/orderList.vue';\r\nimport wbcclassification from './commponent/classInfoification.vue';\r\nimport rbcclassification from './commponent/rbcclassification.vue';\r\nimport FoundingCells from \"@/views/analysis/commponent/foundingCells.vue\";\r\nimport {defineEmits, defineProps, onMounted, ref} from \"vue\";\r\nimport WorkingView100A from \"@/views/analysis/commponent/workingView100A.vue\";\r\nconst emits = defineEmits();\r\n\r\nconst bmIsBoolen = ref(false);\r\nconst props = defineProps(['parsedData','isClass', 'startStatus', 'pb100aCassette']);\r\nconst pbVersion = ref<any>('');\r\nconst initValData = ref(false);\r\nonMounted(async () => {\r\n  if (window.PROJECT_TYPE === 'bm') {\r\n    bmIsBoolen.value = true;\r\n  }else {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n});\r\n\r\nconst rbcUpdate = (data: any) => {\r\n  emits('rbcAppUpdate', data);\r\n}\r\n\r\nconst classInfoUpdate = (data: any) => {\r\n  emits('classAppUpdateLast', data);\r\n}\r\n\r\nconst initDataChangeText = (val: any) => {\r\n  initValData.value = val;\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"css\" scoped src=\"@/assets/css/layout.css\">\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"@/assets/css/layout.css?vue&type=style&index=0&id=045b817f&lang=css&scoped=true&external\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-045b817f\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'HomeView',\n  setup(__props) {\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_Fragment = _resolveComponent(\"Fragment\")!\n\n  return (_openBlock(), _createBlock(_component_Fragment, null, {\n    default: _withCtx(() => [\n      _createVNode(Analysis)\n    ]),\n    _: 1\n  }))\n}\n}\n\n})","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { useHttpClient, ApiResponse } from '@/common/api/httpClient';\r\nimport { apiConstants } from '@/common/api/apiConstants';\r\nimport { CreateUser, loginUser, UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {CellImgAnalyzedRequest, CellImgAnalyzedResponse} from \"@/common/api/service/setting/dto/cellImgAnalyzedDto\";\r\n\r\n// Create an instance of the http client\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createUser = async (request: CreateUser): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.user.register, request);\r\n};\r\n\r\nexport const login = async (request: loginUser): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.user.login, request);\r\n};\r\n\r\nexport const getAllUsersApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.getUsers, userId);\r\n}\r\n\r\nexport const getUserApi = async (userId: string): Promise<ApiResponse<UserResponse | undefined>> => {\r\n    return httpClient.httpGet(apiConstants.user.userCheck, userId);\r\n}\r\n\r\nexport const putUserDataApi = async (request: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpPut(apiConstants.user.userDataPut, request, '', true);\r\n};\r\n\r\n// export const getUserIpApi = async (): Promise<ApiResponse<any>> => {\r\n//     return httpClient.httpGet(apiConstants.user.userIp, '');\r\n// }","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"joinContent\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \"CREATE ACCOUNT\", -1)\nconst _hoisted_3 = { class: \"joinWrapper\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"ID\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"password\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Repeat password\", -1)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"name\", -1)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"Employee No\", -1)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginTitle\" }, \"user Type\", -1)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"admin\" }, \"Admin\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"normal\" }, \"Normal\", -1)\nconst _hoisted_12 = [\n  _hoisted_10,\n  _hoisted_11\n]\n\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"ul\", _hoisted_3, [\n          _createElementVNode(\"li\", null, [\n            _hoisted_4,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event))\n            }, null, 512), [\n              [_vModelText, idVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_5,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event))\n            }, null, 512), [\n              [_vModelText, password.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_6,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((passwordRepeat).value = $event))\n            }, null, 512), [\n              [_vModelText, passwordRepeat.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_7,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((nameVal).value = $event))\n            }, null, 512), [\n              [_vModelText, nameVal.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_8,\n            _withDirectives(_createElementVNode(\"input\", {\n              class: \"loginInput\",\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((employeeNo).value = $event))\n            }, null, 512), [\n              [_vModelText, employeeNo.value]\n            ])\n          ]),\n          _createElementVNode(\"li\", null, [\n            _hoisted_9,\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((userType).value = $event))\n            }, _hoisted_12, 512), [\n              [_vModelSelect, userType.value]\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", { class: \"joinBtn\" }, [\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: createAccount\n          }, \"Create Account\"),\n          _createElementVNode(\"button\", {\n            class: \"defaultBtn\",\n            type: \"button\",\n            onClick: goLoginPage\n          }, \"Back\")\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"joinContent\">\r\n    <p class=\"mt2 mb4 \">CREATE ACCOUNT</p>\r\n    <div>\r\n      <ul class=\"joinWrapper\">\r\n        <li>\r\n          <span class=\"loginTitle\">ID</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"idVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"password\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Repeat password</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"passwordRepeat\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">name</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"nameVal\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">Employee No</span>\r\n          <input class=\"loginInput\" type=\"text\" v-model=\"employeeNo\">\r\n        </li>\r\n        <li>\r\n          <span class=\"loginTitle\">user Type</span>\r\n          <select v-model=\"userType\">\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"normal\">Normal</option>\r\n          </select>\r\n        </li>\r\n      </ul>\r\n      <div class='joinBtn'>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='createAccount'>Create Account</button>\r\n        <button class=\"defaultBtn\" type=\"button\" @click='goLoginPage'>Back</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref} from \"vue\";\r\nimport {createUser} from \"@/common/api/service/user/userApi\";\r\nimport router from \"@/router\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst employeeNo = ref('');\r\nconst idVal = ref('');\r\nconst nameVal = ref('');\r\nconst passwordRepeat = ref('');\r\nconst password = ref('');\r\nconst userType = ref('admin');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst goLoginPage = () => {\r\n  router.push('/user/login');\r\n}\r\nconst createAccount = async () => {\r\n  const currentDate = new Date();\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n    name: nameVal.value,\r\n    employeeNo: employeeNo.value,\r\n    userType: userType.value,\r\n    subscriptionDate: currentDate,\r\n  }\r\n\r\n  try {\r\n    const result = await createUser(user);\r\n    if (result) {\r\n      await showSuccessAlert('registration successful');\r\n      await router.push('/user/login');\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createDeviceInfoApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.device.getDeviceInfo.create, request);\r\n}\r\n\r\nexport const getDeviceInfoApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.get);\r\n}\r\n\r\nexport const getDeviceIpApi = async (): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.device.getDeviceInfo.ip);\r\n}","import {reactive, ref} from 'vue';\r\nimport {\r\n    getCellImgApi,\r\n    createCellImgApi,\r\n    createOrderClassApi,\r\n    getOrderClassApi,\r\n    createNormalRangeApi,\r\n    getNormalRangeApi,\r\n    createRbcDegreeApi, getRbcDegreeApi\r\n} from '@/common/api/service/setting/settingApi';\r\nimport process from \"process\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {defaultRbcDegree, normalRange, rbcClassList} from \"@/common/defines/constFile/settings\";\r\n\r\nconst saveHttpType = ref('');\r\nconst cellimgId = ref('');\r\nconst orderHttpType = ref('');\r\nconst normalItems = ref<any>(normalRange);\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\n\r\nconst projectType = window.PROJECT_TYPE === 'bm';\r\nconst defaultCellImgData = {\r\n    testTypeCd: projectType ? '02' : '01',\r\n    diffCellAnalyzingCount: projectType ? '500':'100',\r\n    wbcPositionMargin: '0',\r\n    rbcPositionMargin: '0',\r\n    pltPositionMargin: '0',\r\n    pbsCellAnalyzingCount: '100',\r\n    stitchCount: '1',\r\n    bfCellAnalyzingCount: '100',\r\n    iaRootPath: projectType ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc',\r\n    isNsNbIntegration: false,\r\n    isAlarm: false,\r\n    alarmCount: '5',\r\n    keepPage: false,\r\n    backupPath: '',\r\n    backupStartDate: new Date(),\r\n    backupEndDate: new Date(),\r\n    userId: '', // 사용자 ID 기본값\r\n};\r\n\r\nexport const firstCellImgSet = async () => {\r\n    let cellImgData;\r\n\r\n    const result = await getCellImgApi();\r\n    if (result && result.data) {\r\n        cellImgData = result.data;\r\n    }\r\n\r\n    if (!cellImgData) {\r\n        saveHttpType.value = 'post';\r\n    } else {\r\n        saveHttpType.value = 'put';\r\n    }\r\n\r\n    const cellImgSet = {\r\n        analysisType: defaultCellImgData.testTypeCd,\r\n        diffCellAnalyzingCount: defaultCellImgData.diffCellAnalyzingCount,\r\n        wbcPositionMargin: defaultCellImgData.wbcPositionMargin,\r\n        rbcPositionMargin: defaultCellImgData.rbcPositionMargin,\r\n        pltPositionMargin: defaultCellImgData.pltPositionMargin,\r\n        pbsCellAnalyzingCount: defaultCellImgData.pbsCellAnalyzingCount,\r\n        stitchCount: defaultCellImgData.stitchCount,\r\n        bfCellAnalyzingCount: defaultCellImgData.bfCellAnalyzingCount,\r\n        iaRootPath: defaultCellImgData.iaRootPath,\r\n        isNsNbIntegration: defaultCellImgData.isNsNbIntegration,\r\n        isAlarm: defaultCellImgData.isAlarm,\r\n        alarmCount: defaultCellImgData.alarmCount,\r\n        keepPage: defaultCellImgData.keepPage,\r\n        backupPath: defaultCellImgData.backupPath,\r\n        backupStartDate: defaultCellImgData.backupStartDate.toISOString().split('T')[0],\r\n        backupEndDate: defaultCellImgData.backupEndDate.toISOString().split('T')[0],\r\n    };\r\n    if (saveHttpType.value === 'post') {\r\n        try {\r\n            const result = await createCellImgApi(cellImgSet);\r\n            if (result) {\r\n                sessionStorage.setItem('isNsNbIntegration', defaultCellImgData?.isNsNbIntegration ? 'Y' : 'N');\r\n                sessionStorage.setItem('wbcPositionMargin', String(defaultCellImgData?.wbcPositionMargin));\r\n                sessionStorage.setItem('rbcPositionMargin', String(defaultCellImgData?.rbcPositionMargin));\r\n                sessionStorage.setItem('pltPositionMargin', String(defaultCellImgData?.pltPositionMargin));\r\n                sessionStorage.setItem('iaRootPath', String(defaultCellImgData?.iaRootPath));\r\n                sessionStorage.setItem('keepPage', String(defaultCellImgData?.keepPage));\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\nexport const firstSaveOrderClass = async () => {\r\n    const orderList: any = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    for (const index in orderList) {\r\n        orderList[index].orderIdx = index;\r\n    }\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n        if (result?.data.length === 0) {\r\n            orderHttpType.value = 'post';\r\n        }else{\r\n            orderHttpType.value = 'put';\r\n        }\r\n    }\r\n    try {\r\n        if (orderHttpType.value === 'post') {\r\n            await createOrderClassApi(orderList);\r\n        }\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const firstSaveNormalRange = async () => {\r\n    try {\r\n        const result = await getNormalRangeApi();\r\n        if (result) {\r\n            if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n                await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n            }\r\n        }\r\n\r\n    } catch (e) {\r\n        console.log(e);\r\n    }\r\n};\r\n\r\nexport const firstCreateRbcDegreeData = async () => {\r\n    await combindDegree();\r\n    const rbcDegreeList: any = [];\r\n\r\n    rbcClassListArr.value.forEach((category: any) => {\r\n        category.classInfo.forEach((classItem: any) => {\r\n            rbcDegreeList.push({\r\n                categoryId: category.categoryId,\r\n                categoryNm: category.categoryNm,\r\n                classId: classItem.classId,\r\n                classNm: classItem.classNm,\r\n                degree1: classItem.degree1,\r\n                degree2: classItem.degree2,\r\n                degree3: classItem.degree3,\r\n            });\r\n        });\r\n    });\r\n\r\n    try {\r\n        const result: any = await getRbcDegreeApi();\r\n        if((result.data && result.data.length === 0) || !result.data){\r\n            await createRbcDegreeApi(rbcDegreeList);\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n};\r\n\r\nconst combindDegree = async () => {\r\n    rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n        return {\r\n            ...category,\r\n            classInfo: category.classInfo.map((classItem: any) => {\r\n                const defaultDegree = defaultRbcDegree.find(\r\n                    (defaultItem) =>\r\n                        defaultItem.categoryId === category.categoryId &&\r\n                        defaultItem.classId === classItem.classId\r\n                );\r\n\r\n                return {\r\n                    ...classItem,\r\n                    degree1: defaultDegree?.degree1 || 0,\r\n                    degree2: defaultDegree?.degree2 || 0,\r\n                    degree3: defaultDegree?.degree3 || 0,\r\n                };\r\n            }),\r\n        };\r\n    });\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"uimdLogin\" }\nconst _hoisted_2 = { class: \"loginContent\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginTitle\" }, [\n  /*#__PURE__*/_createElementVNode(\"span\", { class: \"loginColorSpan\" }, \"U\"),\n  /*#__PURE__*/_createTextVNode(\"IMD\")\n], -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"loginP mt2\" }, \"Unique Idea Medical Device\", -1)\nconst _hoisted_5 = { class: \"mt3 loginDiv\" }\nconst _hoisted_6 = { class: \"loginUl\" }\n\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass();\r\n      await firstSaveNormalRange();\r\n      await firstCreateRbcDegreeData();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      // await updateAccount(userId, String(result.data), 'main');\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      // await updateAccount(userId, result.data, 'viewer');\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\n// const updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n//   const user = {\r\n//     userId: userId,\r\n//     password: '',\r\n//     name: '',\r\n//     employeeNo: '',\r\n//     userType: '',\r\n//     subscriptionDate: '',\r\n//     state: '',\r\n//     pcIp: pcIp\r\n//   }\r\n\r\n//   try {\r\n//     const result = await putUserDataApi(user);\r\n//     if (result) {\r\n//       showSuccessAlert('login successful.');\r\n\r\n//       if(viewerCheck === 'main'){\r\n//         await router.push('/');\r\n//         await document.documentElement.requestFullscreen();\r\n//       }else{\r\n//         await router.push('/dataBase');\r\n//         await document.documentElement.requestFullscreen();\r\n//       }\r\n//       await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n//       await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n//     }\r\n\r\n//   } catch (e) {\r\n\r\n//     console.log(e);\r\n//   }\r\n// }\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _hoisted_4,\n        _createElementVNode(\"div\", _hoisted_5, [\n          _createElementVNode(\"ul\", _hoisted_6, [\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((idVal).value = $event)),\n                placeholder: \"ID\"\n              }, null, 512), [\n                [_vModelText, idVal.value]\n              ])\n            ]),\n            _createElementVNode(\"li\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                class: \"loginInput\",\n                type: \"password\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((password).value = $event)),\n                placeholder: \"password\"\n              }, null, 512), [\n                [_vModelText, password.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", { class: \"loginBtn\" }, [\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: loginUser\n            }, \"Login\"),\n            _createElementVNode(\"button\", {\n              type: \"button\",\n              onClick: goJoinPage\n            }, \"Add User\")\n          ])\n        ])\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class='uimdLogin'>\r\n    <div class='loginContent'>\r\n      <p class=\"loginTitle\"><span class=\"loginColorSpan\">U</span>IMD</p>\r\n      <p class='loginP mt2'>Unique Idea Medical Device</p>\r\n      <div class=\"mt3 loginDiv\">\r\n        <ul class=\"loginUl\">\r\n          <li>\r\n            <input class=\"loginInput\" type=\"text\" v-model=\"idVal\" placeholder=\"ID\">\r\n          </li>\r\n          <li>\r\n            <input class=\"loginInput\" type=\"password\" v-model=\"password\" placeholder=\"password\">\r\n          </li>\r\n        </ul>\r\n<!-- 자동 로그인시 Fullscreen이 안되는 문제가 발생하여 보류 -->\r\n<!--        <div class=\"mt1 loginFooter\">-->\r\n<!--          <input type=\"checkbox\" id=\"checked\" v-model=\"isAutoLoginEnabled\">-->\r\n<!--          <label class=\"loginLabel\" for=\"checked\">Save Login Profile</label>-->\r\n<!--        </div>-->\r\n        <div class='loginBtn'>\r\n          <button type=\"button\" @click=\"loginUser\">Login</button>\r\n          <button type=\"button\" @click=\"goJoinPage\">Add User</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n    <Alert\r\n    v-if=\"showAlert\"\r\n    :is-visible=\"showAlert\"\r\n    :type=\"alertType\"\r\n    :message=\"alertMessage\"\r\n    @hide=\"hideAlert\"\r\n    @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {getCurrentInstance, ref, onMounted} from \"vue\";\r\nimport { login } from \"@/common/api/service/user/userApi\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport router from \"@/router\";\r\nimport { UserResponse  } from '@/common/api/service/user/dto/userDto'\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {\r\n  firstCellImgSet,\r\n  firstCreateRbcDegreeData,\r\n  firstSaveNormalRange,\r\n  firstSaveOrderClass\r\n} from \"@/common/lib/commonfunction/settingFunctions\";\r\n\r\n// 스토어\r\nconst store = useStore();\r\nconst password = ref('');\r\nconst idVal = ref('');\r\nconst instance = getCurrentInstance();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst isAutoLoginEnabled = ref(false);\r\n\r\nonMounted(() => {\r\n  isAutoLogginable();\r\n})\r\n\r\n/** 자동 로그인 확인 */\r\nconst isAutoLogginable = () => {\r\n  const getStoredUser = JSON.parse(localStorage.getItem('user') || '{}');\r\n  if (getStoredUser.userId && getStoredUser.password) {\r\n    idVal.value = getStoredUser.userId;\r\n    password.value = getStoredUser.password;\r\n    loginUser();\r\n  }\r\n};\r\n\r\n\r\nconst goJoinPage = () => {\r\n  router.push('/user/join');\r\n}\r\n\r\nconst loginUser = async () => {\r\n  const user = {\r\n    userId: idVal.value,\r\n    password: password.value,\r\n  }\r\n\r\n  if (user.userId === '' || user.password === '') {\r\n    showSuccessAlert('Login failed.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const result: ApiResponse<UserResponse | undefined> = await login(user);\r\n    if (result?.data?.user) {\r\n      await firstCellImgSet();\r\n      await firstSaveOrderClass();\r\n      await firstSaveNormalRange();\r\n      await firstCreateRbcDegreeData();\r\n      await store.dispatch('userModule/setUserAction', result.data?.user);\r\n      sessionStorage.setItem('user', JSON.stringify(result.data.user));\r\n\r\n      if (isAutoLoginEnabled.value) {\r\n        localStorage.setItem('user', JSON.stringify((result.data.user)))\r\n      }\r\n      await getIpAddress(result?.data?.user.userId);\r\n\r\n    }else{\r\n      showSuccessAlert('Login failed.');\r\n    }\r\n  } catch (e) {\r\n    showSuccessAlert('server Err.')\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getIpAddress = async (userId: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === '1' || (window.APP_API_BASE_URL && window.APP_API_BASE_URL.includes(result.data))) {\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'main'});\r\n      // await updateAccount(userId, String(result.data), 'main');\r\n      await updateAccount('main');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n\r\n    }else{\r\n      await store.dispatch('commonModule/setCommonInfo', {viewerCheck: 'viewer'});\r\n      // await updateAccount(userId, result.data, 'viewer');\r\n      await updateAccount('viewer');\r\n      sessionStorage.setItem('pcIp', JSON.stringify(result.data));\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst updateAccount = async (viewerCheck: string) => {\r\n      showSuccessAlert('login successful.');\r\n\r\n      if(viewerCheck === 'main'){\r\n        await router.push('/');\r\n        await document.documentElement.requestFullscreen();\r\n      }else{\r\n        await router.push('/dataBase');\r\n        await document.documentElement.requestFullscreen();\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\n// const updateAccount = async (userId: string, pcIp: string, viewerCheck: string) => {\r\n//   const user = {\r\n//     userId: userId,\r\n//     password: '',\r\n//     name: '',\r\n//     employeeNo: '',\r\n//     userType: '',\r\n//     subscriptionDate: '',\r\n//     state: '',\r\n//     pcIp: pcIp\r\n//   }\r\n\r\n//   try {\r\n//     const result = await putUserDataApi(user);\r\n//     if (result) {\r\n//       showSuccessAlert('login successful.');\r\n\r\n//       if(viewerCheck === 'main'){\r\n//         await router.push('/');\r\n//         await document.documentElement.requestFullscreen();\r\n//       }else{\r\n//         await router.push('/dataBase');\r\n//         await document.documentElement.requestFullscreen();\r\n//       }\r\n//       await store.dispatch('commonModule/setCommonInfo', {loginSetData: ''});\r\n//       await store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n//     }\r\n\r\n//   } catch (e) {\r\n\r\n//     console.log(e);\r\n//   }\r\n// }\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const backUpDate = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.backUp.backUpDate, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTable\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Analysis Type\", -1)\nconst _hoisted_3 = { colspan: \"2\" }\nconst _hoisted_4 = [\"value\"]\nconst _hoisted_5 = {\n  key: 0,\n  rowspan: \"4\"\n}\nconst _hoisted_6 = { key: 1 }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_8 = [\"value\"]\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Wbc Position Margin\", -1)\nconst _hoisted_11 = [\"value\"]\nconst _hoisted_12 = { key: 1 }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Rbc Position Margin\", -1)\nconst _hoisted_14 = [\"value\"]\nconst _hoisted_15 = { key: 2 }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Plt Position Margin\", -1)\nconst _hoisted_17 = [\"value\"]\nconst _hoisted_18 = { key: 3 }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", { rowspan: \"2\" }, \"PBS Analysis Values\", -1)\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"th\", null, \" Cell Analyzing Count \", -1)\nconst _hoisted_21 = [\"value\"]\nconst _hoisted_22 = { key: 0 }\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Stitch Count\", -1)\nconst _hoisted_24 = [\"value\"]\nconst _hoisted_25 = { key: 4 }\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"th\", null, \"BF Analysis Values\", -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Cell Analyzing Count\", -1)\nconst _hoisted_28 = [\"value\"]\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"th\", null, \"IA Root Path\", -1)\nconst _hoisted_30 = { colspan: \"2\" }\nconst _hoisted_31 = [\"value\"]\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"th\", null, \"NS/NB Integration\", -1)\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Alarm Timer (sec)\", -1)\nconst _hoisted_34 = { key: 5 }\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Keep WBC Page\", -1)\nconst _hoisted_36 = { class: \"backupDiv\" }\nconst _hoisted_37 = { class: \"backupDivChild\" }\nconst _hoisted_38 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"mb1\" }, \"Backup and Restore\", -1)\nconst _hoisted_39 = { class: \"settingDatePickers\" }\nconst _hoisted_40 = [\"value\"]\n\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cellImageAnalyzed',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"table\", _hoisted_1, [\n        _createElementVNode(\"tbody\", null, [\n          _createElementVNode(\"tr\", null, [\n            _hoisted_2,\n            _createElementVNode(\"td\", _hoisted_3, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((testTypeCd).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(testTypeArr.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_4))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, testTypeCd.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'pb')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_5, \"WBC Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            (projectType.value === 'bm')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_6, \"BM Diff Analysis Values\"))\n              : _createCommentVNode(\"\", true),\n            _hoisted_7,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((diffCellAnalyzingCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(analysisVal.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_8))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, diffCellAnalyzingCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_9, [\n                _hoisted_10,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((wbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(WbcPositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_11))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, wbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_12, [\n                _hoisted_13,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((rbcPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_14))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, rbcPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_15, [\n                _hoisted_16,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((pltPositionMargin).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(PositionMarginList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_17))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pltPositionMargin.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_18, [\n                _hoisted_19,\n                _hoisted_20,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((pbsCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_21))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, pbsCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            (projectType.value === 'bm')\n              ? (_openBlock(), _createElementBlock(\"th\", _hoisted_22))\n              : _createCommentVNode(\"\", true),\n            _hoisted_23,\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((stitchCount).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(stitchCountList), (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type.value,\n                    value: type.value\n                  }, _toDisplayString(type.text), 9, _hoisted_24))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, stitchCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_25, [\n                _hoisted_26,\n                _hoisted_27,\n                _createElementVNode(\"td\", null, [\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((bfCellAnalyzingCount).value = $event))\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList), (type) => {\n                      return (_openBlock(), _createElementBlock(\"option\", {\n                        key: type.value,\n                        value: type.value\n                      }, _toDisplayString(type.text), 9, _hoisted_28))\n                    }), 128))\n                  ], 512), [\n                    [_vModelSelect, bfCellAnalyzingCount.value]\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_29,\n            _createElementVNode(\"td\", _hoisted_30, [\n              _withDirectives(_createElementVNode(\"select\", {\n                \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((iaRootPath).value = $event))\n              }, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(drive.value, (type) => {\n                  return (_openBlock(), _createElementBlock(\"option\", {\n                    key: type,\n                    value: type\n                  }, _toDisplayString(type), 9, _hoisted_31))\n                }), 128))\n              ], 512), [\n                [_vModelSelect, iaRootPath.value]\n              ])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_32,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isNsNbIntegration.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleNsNbIntegration\n              }, null, 8, [\"icon\"])\n            ])\n          ]),\n          _createElementVNode(\"tr\", null, [\n            _hoisted_33,\n            _createElementVNode(\"td\", null, [\n              _createVNode(_component_font_awesome_icon, {\n                icon: isAlarm.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                class: \"iconSize\",\n                onClick: toggleAlarm\n              }, null, 8, [\"icon\"])\n            ]),\n            _createElementVNode(\"td\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((alarmCount).value = $event)),\n                class: \"alarmInput\"\n              }, null, 512), [\n                [_vModelText, alarmCount.value]\n              ])\n            ])\n          ]),\n          (projectType.value === 'pb')\n            ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_34, [\n                _hoisted_35,\n                _createElementVNode(\"td\", null, [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: keepPage.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    class: \"iconSize\",\n                    onClick: toggleKeepPage\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_36, [\n        _createElementVNode(\"div\", _hoisted_37, [\n          _hoisted_38,\n          _createElementVNode(\"div\", _hoisted_39, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[10] || (_cache[10] = ($event: any) => ((backupRootPath).value = $event))\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(backupDrive.value, (type) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: type,\n                  value: type\n                }, _toDisplayString(type), 9, _hoisted_40))\n              }), 128))\n            ], 512), [\n              [_vModelSelect, backupRootPath.value]\n            ]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupStartDate.value,\n              \"onUpdate:modelValue\": _cache[11] || (_cache[11] = ($event: any) => ((backupStartDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createVNode(_unref(Datepicker), {\n              modelValue: backupEndDate.value,\n              \"onUpdate:modelValue\": _cache[12] || (_cache[12] = ($event: any) => ((backupEndDate).value = $event))\n            }, null, 8, [\"modelValue\"]),\n            _createElementVNode(\"button\", {\n              class: \"backupBtn\",\n              onClick: createBackup\n            }, \"backup\")\n          ])\n        ])\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[13] || (_cache[13] = ($event: any) => (cellImgSet()))\n      }, \"Save Cell Image Analyzed\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <table class=\"settingTable\">\r\n      <tbody>\r\n      <tr>\r\n        <th>Analysis Type</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='testTypeCd'>\r\n            <option v-for=\"type in testTypeArr\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--Common analysis values-->\r\n\r\n      <tr>\r\n        <!-- WBC diff analysis values -->\r\n        <th rowspan=\"4\" v-if=\"projectType === 'pb'\">WBC Diff Analysis Values</th>\r\n\r\n        <!-- BM diff analysis values -->\r\n        <th v-if=\"projectType === 'bm'\">BM Diff Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n\r\n          <select v-model='diffCellAnalyzingCount'>\r\n            <option v-for=\"type in analysisVal\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Wbc Position Margin</th>\r\n        <td>\r\n          <select v-model='wbcPositionMargin'>\r\n            <option v-for=\"type in WbcPositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Rbc Position Margin</th>\r\n        <td>\r\n          <select v-model='rbcPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Plt Position Margin</th>\r\n        <td>\r\n          <select v-model='pltPositionMargin'>\r\n            <option v-for=\"type in PositionMarginList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      PBS analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th rowspan=\"2\">PBS Analysis Values</th>\r\n        <th>\r\n          Cell Analyzing Count\r\n        </th>\r\n        <td>\r\n          <select v-model='pbsCellAnalyzingCount'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th v-if=\"projectType === 'bm'\"></th>\r\n        <th>Stitch Count</th>\r\n        <td>\r\n          <select v-model='stitchCount'>\r\n            <option v-for=\"type in stitchCountList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <!--      BF analysis values-->\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>BF Analysis Values</th>\r\n        <th>Cell Analyzing Count</th>\r\n        <td>\r\n          <select v-model='bfCellAnalyzingCount'>\r\n            <option v-for=\"type in AnalysisList\" :key=\"type.value\" :value=\"type.value\">{{ type.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>IA Root Path</th>\r\n        <td colspan=\"2\">\r\n          <select v-model='iaRootPath'>\r\n            <option v-for=\"type in drive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>NS/NB Integration</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isNsNbIntegration ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleNsNbIntegration\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      <tr>\r\n        <th>Alarm Timer (sec)</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"isAlarm ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleAlarm\"\r\n          />\r\n        </td>\r\n        <td>\r\n          <input type=\"text\" v-model='alarmCount' class=\"alarmInput\">\r\n        </td>\r\n      </tr>\r\n      <tr v-if=\"projectType === 'pb'\">\r\n        <th>Keep WBC Page</th>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"keepPage ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              class=\"iconSize\"\r\n              @click=\"toggleKeepPage\"\r\n          />\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <div class=\"backupDiv\">\r\n      <div class=\"backupDivChild\">\r\n        <h5 class=\"mb1\">Backup and Restore</h5>\r\n        <div class=\"settingDatePickers\">\r\n          <select v-model='backupRootPath'>\r\n            <option v-for=\"type in backupDrive\" :key=\"type\" :value=\"type\">{{ type }}</option>\r\n          </select>\r\n          <Datepicker v-model=\"backupStartDate\"></Datepicker>\r\n          <Datepicker v-model=\"backupEndDate\"></Datepicker>\r\n          <button class=\"backupBtn\" @click=\"createBackup\">backup</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button class=\"saveBtn\" type=\"button\" @click='cellImgSet()'>Save Cell Image Analyzed</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {createCellImgApi, getCellImgApi, getDrivesApi, putCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Datepicker from 'vue3-datepicker';\r\n\r\nimport {nextTick, onMounted, ref} from \"vue\";\r\nimport {\r\n  AnalysisList,\r\n  PositionMarginList, stitchCountList,\r\n  testTypeList,\r\n  WbcPositionMarginList,\r\n  testBmTypeList, bmAnalysisList\r\n} from \"@/common/defines/constFile/settings\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport moment from \"moment\";\r\nimport {backUpDate} from \"@/common/api/service/backup/wbcApi\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nconst analysisVal = ref<any>([]);\r\nconst testTypeCd = ref('01');\r\nconst diffCellAnalyzingCount = ref('100');\r\nconst wbcPositionMargin = ref('0');\r\nconst rbcPositionMargin = ref('0');\r\nconst pltPositionMargin = ref('0');\r\nconst pbsCellAnalyzingCount = ref('100');\r\nconst stitchCount = ref('1');\r\nconst bfCellAnalyzingCount = ref('100');\r\nconst iaRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BMIA_proc' : 'D:\\\\PBIA_proc');\r\nconst backupRootPath = ref(window.PROJECT_TYPE === 'bm' ? 'D:\\\\BM_backup' : 'D:\\\\PB_backup');\r\nconst isNsNbIntegration = ref(false);\r\nconst isAlarm = ref(false);\r\nconst alarmCount = ref('5');\r\nconst keepPage = ref(false);\r\nconst backupStartDate = ref(moment().local().toDate());\r\nconst backupEndDate = ref(moment().local().toDate());\r\n\r\nconst saveHttpType = ref('');\r\nconst drive = ref<any>([]);\r\nconst backupDrive = ref<any>([]);\r\nconst cellimgId = ref('');\r\nconst projectType = ref('pb');\r\n\r\nconst testTypeArr = ref<any>([]);\r\nconst store = useStore();\r\n\r\nconst createBackup = async () => {\r\n  const backupDto = {\r\n    startDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 시작일\r\n    endDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0], // 백업 종료일\r\n    backupPath: backupRootPath.value, // 백업 경로\r\n    sourceFolderPath: `${iaRootPath.value}` //이미지가 있는 경로 옮겨져야 하는 폴더 위치\r\n  };\r\n\r\n  const res = await backUpDate(backupDto);\r\n\r\n}\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  testTypeCd.value = window.PROJECT_TYPE === 'bm' ? '02' : '01';\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  testTypeArr.value = window.PROJECT_TYPE === 'bm' ? testBmTypeList : testTypeList;\r\n  analysisVal.value = window.PROJECT_TYPE === 'bm' ? bmAnalysisList : AnalysisList;\r\n\r\n  await cellImgGet();\r\n  await driveGet();\r\n});\r\n\r\n\r\nconst driveGet = async () => {\r\n  try {\r\n    const result = await getDrivesApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n      } else {\r\n        const data = result.data;\r\n        const saveData = JSON.parse(JSON.stringify(data));\r\n        const backUpData = JSON.parse(JSON.stringify(data));\r\n\r\n        const savePlace = window.PROJECT_TYPE === 'bm' ? 'BMIA_proc' : 'PBIA_proc';\r\n        const backupPlace = window.PROJECT_TYPE === 'bm' ? 'BM_backup' : 'PB_backup';\r\n        for (const dataKey in data) {\r\n          saveData[dataKey] = saveData[dataKey] + `\\\\${savePlace}`;\r\n          backUpData[dataKey] = backUpData[dataKey] + `\\\\${backupPlace}`;\r\n        }\r\n        drive.value = saveData;\r\n        backupDrive.value = backUpData;\r\n      }\r\n\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (!result?.data) {\r\n        saveHttpType.value = 'post';\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n\r\n        const data = result.data;\r\n\r\n        cellimgId.value = String(data.id);\r\n        testTypeCd.value = data.analysisType;\r\n        diffCellAnalyzingCount.value = data.diffCellAnalyzingCount;\r\n        wbcPositionMargin.value = data.wbcPositionMargin;\r\n        rbcPositionMargin.value = data.rbcPositionMargin;\r\n        pltPositionMargin.value = data.pltPositionMargin;\r\n        pbsCellAnalyzingCount.value = data.pbsCellAnalyzingCount;\r\n        stitchCount.value = data.stitchCount;\r\n        bfCellAnalyzingCount.value = data.bfCellAnalyzingCount;\r\n        iaRootPath.value = data.iaRootPath;\r\n        backupRootPath.value = data.backupPath;\r\n        isNsNbIntegration.value = data.isNsNbIntegration;\r\n        isAlarm.value = data.isAlarm;\r\n        alarmCount.value = data.alarmCount;\r\n        keepPage.value = data.keepPage;\r\n        backupStartDate.value = moment(data.backupStartDate).local().toDate();\r\n        backupEndDate.value = moment(data.backupEndDate).local().toDate();\r\n      }\r\n    }\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst cellImgSet = async () => {\r\n\r\n  const cellImgSet = {\r\n    analysisType: testTypeCd.value,\r\n    diffCellAnalyzingCount: diffCellAnalyzingCount.value,\r\n    wbcPositionMargin: wbcPositionMargin.value,\r\n    rbcPositionMargin: rbcPositionMargin.value,\r\n    pltPositionMargin: pltPositionMargin.value,\r\n    pbsCellAnalyzingCount: pbsCellAnalyzingCount.value,\r\n    stitchCount: stitchCount.value,\r\n    bfCellAnalyzingCount: bfCellAnalyzingCount.value,\r\n    iaRootPath: iaRootPath.value,\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n    isAlarm: isAlarm.value,\r\n    alarmCount: alarmCount.value,\r\n    keepPage: keepPage.value,\r\n    backupPath: backupRootPath.value,\r\n    backupStartDate: moment(backupStartDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n    backupEndDate: moment(backupEndDate.value).add(1, 'day').local().toDate().toISOString().split('T')[0],\r\n  }\r\n\r\n  try {\r\n\r\n    let result: any = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCellImgApi(cellImgSet);\r\n    } else {\r\n      result = await putCellImgApi(cellImgSet, cellimgId.value);\r\n    }\r\n\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY;\r\n      showSuccessAlert(text);\r\n      const data = result?.data;\r\n      await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n        isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n      });\r\n      // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n      sessionStorage.setItem('isNsNbIntegration', data.isNsNbIntegration ? 'Y' : 'N');\r\n      sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n      sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n      sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n      sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n      sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n    }\r\n\r\n  } catch (e) {\r\n\r\n    console.log(e);\r\n  }\r\n}\r\nconst toggleNsNbIntegration = () => {\r\n  isNsNbIntegration.value = !isNsNbIntegration.value;\r\n};\r\n\r\nconst toggleAlarm = () => {\r\n  isAlarm.value = !isAlarm.value;\r\n};\r\n\r\nconst toggleKeepPage = () => {\r\n  keepPage.value = !keepPage.value;\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cellImageAnalyzed.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { id: \"collapse-4\" }\nconst _hoisted_2 = { class: \"rbcDegreeCategoryNm\" }\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = { class: \"degreeInput mb1\" }\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"onUpdate:modelValue\"]\n\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcDegree',\n  setup(__props) {\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rbcClassListArr.value, (category, index) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            class: \"mt2 rbcClassListArr\",\n            key: 'rbc' + index\n          }, [\n            _createElementVNode(\"div\", _hoisted_2, _toDisplayString(category?.categoryNm), 1),\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category.classInfo, (classItem, classIndex) => {\n              return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, [\n                _createElementVNode(\"div\", null, _toDisplayString(classItem.classNm), 1),\n                _createElementVNode(\"div\", _hoisted_3, \" [ \" + _toDisplayString(`${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}`) + \" ] \", 1),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"div\", _hoisted_4, [\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree1) = $event)\n                    }, null, 8, _hoisted_5), [\n                      [_vModelText, classItem.degree1]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree2) = $event)\n                    }, null, 8, _hoisted_6), [\n                      [_vModelText, classItem.degree2]\n                    ]),\n                    _withDirectives(_createElementVNode(\"input\", {\n                      type: \"number\",\n                      \"onUpdate:modelValue\": ($event: any) => ((classItem.degree3) = $event)\n                    }, null, 8, _hoisted_7), [\n                      [_vModelText, classItem.degree3]\n                    ])\n                  ])\n                ])\n              ]))\n            }), 128))\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"div\", { class: \"mt-2 degreeDiv\" }, [\n        _createElementVNode(\"button\", { onClick: onResetDegree }, \"Reset\"),\n        _createElementVNode(\"button\", {\n          type: \"button\",\n          onClick: createRbcDegreeData\n        }, \"Save\")\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div id=\"collapse-4\">\r\n      <!--      {{ rbcClassListArr }}-->\r\n      <div class=\"mt2 rbcClassListArr\" v-for=\"(category, index) in rbcClassListArr.value\" :key=\"'rbc' + index\">\r\n        <div class=\"rbcDegreeCategoryNm\">\r\n          {{ category?.categoryNm }}\r\n        </div>\r\n\r\n        <div v-for=\"(classItem, classIndex) in category.classInfo\" :key=\"classIndex\">\r\n          <div>\r\n            {{ classItem.classNm }}\r\n          </div>\r\n          <div class=\"mb1\">\r\n            [ {{ `${classItem.degree1} , ${classItem.degree2} , ${classItem.degree3}` }} ]\r\n          </div>\r\n          <div>\r\n            <div class='degreeInput mb1'>\r\n              <input type=\"number\" v-model=\"classItem.degree1\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree2\"/>\r\n              <input type=\"number\" v-model=\"classItem.degree3\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-2 degreeDiv\" >\r\n      <button @click=\"onResetDegree\">Reset</button>\r\n      <button type=\"button\" @click=\"createRbcDegreeData\">Save</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, reactive, ref} from 'vue';\r\nimport {rbcClassList, defaultRbcDegree} from '@/common/defines/constFile/settings';\r\nimport {Category, ClassItem} from '@/common/api/service/setting/dto/rbcDegree';\r\nimport {createRbcDegreeApi, getRbcDegreeApi, putRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst rbcClassListArr = reactive<any>({value: []}); // reactive로 변경\r\nconst saveHttpType = ref('post');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getRbcDegreeData();\r\n});\r\n\r\nconst combindDegree = async () => {\r\n  rbcClassListArr.value = rbcClassList.rbcClassList.map((category: any) => {\r\n    return {\r\n      ...category,\r\n      classInfo: category.classInfo.map((classItem: any) => {\r\n        const defaultDegree = defaultRbcDegree.find(\r\n            (defaultItem) =>\r\n                defaultItem.categoryId === category.categoryId &&\r\n                defaultItem.classId === classItem.classId\r\n        );\r\n\r\n        return {\r\n          ...classItem,\r\n          degree1: defaultDegree?.degree1 || 0,\r\n          degree2: defaultDegree?.degree2 || 0,\r\n          degree3: defaultDegree?.degree3 || 0,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n}\r\n\r\nconst onResetDegree = () => {\r\n  combindDegree();\r\n};\r\n\r\nconst createRbcDegreeData = async () => {\r\n  const rbcDegreeList: any = [];\r\n\r\n  rbcClassListArr.value.forEach((category: any) => {\r\n    category.classInfo.forEach((classItem: any) => {\r\n      rbcDegreeList.push({\r\n        categoryId: category.categoryId,\r\n        categoryNm: category.categoryNm,\r\n        classId: classItem.classId,\r\n        classNm: classItem.classNm,\r\n        degree1: classItem.degree1,\r\n        degree2: classItem.degree2,\r\n        degree3: classItem.degree3,\r\n      });\r\n    });\r\n  });\r\n\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRbcDegreeApi(rbcDegreeList);\r\n    } else {\r\n      result = await putRbcDegreeApi(rbcDegreeList);\r\n    }\r\n\r\n    if (result) {\r\n      // showSuccessAlert('Save successful');\r\n      showSuccessAlert('Save successful');\r\n      saveHttpType.value = 'put';\r\n    }\r\n  } catch (e) {\r\n    showErrorAlert(e);\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    saveHttpType.value = 'put';\r\n    const data = result.data;\r\n    processData(data);\r\n  } catch (e) {\r\n    saveHttpType.value = 'post';\r\n    await combindDegree();\r\n  }\r\n};\r\n\r\n\r\nconst processData = (data: any): void => {\r\n  const categoryMap = new Map();\r\n\r\n  data.forEach((item: any) => {\r\n    const categoryId = item.categoryId;\r\n    const classId = item.classId;\r\n\r\n    if (!categoryMap.has(categoryId)) {\r\n      const newCategory = {\r\n        categoryId: categoryId,\r\n        categoryNm: item.categoryNm,\r\n        classInfo: [{\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        }],\r\n      };\r\n      categoryMap.set(categoryId, newCategory);\r\n    } else {\r\n      const existingCategory = categoryMap.get(categoryId);\r\n      const existingClassIndex = existingCategory.classInfo.findIndex((ci: any) => ci.classId === classId);\r\n\r\n      if (existingClassIndex === -1) {\r\n        existingCategory.classInfo.push({\r\n          classId: classId,\r\n          classNm: item.classNm,\r\n          degree1: item.degree1,\r\n          degree2: item.degree2,\r\n          degree3: item.degree3,\r\n        });\r\n      } else {\r\n        existingCategory.classInfo[existingClassIndex].degree = item.degree;\r\n      }\r\n    }\r\n  });\r\n\r\n  rbcClassListArr.value = Array.from(categoryMap.values());\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcDegree.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {getCurrentInstance} from 'vue';\r\nimport {useStore} from \"vuex\";\r\n\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\n\r\n// appHeader page\r\nexport const sendSettingInfoWebSocket = (isOilReset: string, oilCount: string, userId: string, isNsNbIntegration: string) => {\r\n    const settings = tcpReq().embedStatus.settings;\r\n    settings.reqUserId = userId;\r\n\r\n    Object.assign(settings, {\r\n        oilCount,\r\n        isOilReset,\r\n        // uiVersion: 'uimd-pb-comm_v3',\r\n        isNsNbIntegration: isNsNbIntegration,\r\n    });\r\n    sendMessage(settings);\r\n}\r\n\r\nexport const sendOilPrimeWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.oilPrime);\r\n}\r\n\r\n\r\n// 셋팅 page -> 디바이스 컨트롤 page\r\nexport const onGripperOpenWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.gripperOpen.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.gripperOpen);\r\n}\r\n\r\nexport const onCameraResetWebSocket = (userId: string) => {\r\n    tcpReq().embedStatus.cameraReset.reqUserId = userId;\r\n    sendMessage(tcpReq().embedStatus.cameraReset);\r\n}\r\n\r\n\r\nconst sendMessage = (payload: object) => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: payload\r\n    });\r\n    // store.dispatch('commonModule/setCommonInfo', {resFlag: false});\r\n}\r\n\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Gripper Open\", -1)\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Camera Reset\", -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", { class: \"mt2\" }, [\n  /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1\" }, \"Charge Remaining Count\"),\n  /*#__PURE__*/_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"defaultBtn\"\n  }, \"Scan\")\n], -1)\n\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'deviceControls',\n  setup(__props) {\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", { class: \"customSettingContainer\" }, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_1,\n          _createElementVNode(\"button\", {\n            onClick: onGripperOpen,\n            type: \"button\",\n            class: \"defaultBtn\"\n          }, \"OK\")\n        ]),\n        _createElementVNode(\"li\", { class: \"mt2\" }, [\n          _hoisted_2,\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            class: \"defaultBtn\",\n            onClick: onCameraReset\n          }, \"OK\")\n        ]),\n        _hoisted_3\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customSettingContainer\">\r\n      <li>\r\n        <p class=\"mb1\">Gripper Open</p>\r\n        <button @click=\"onGripperOpen\" type=\"button\" class=\"defaultBtn\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Camera Reset</p>\r\n        <button type=\"button\" class=\"defaultBtn\" @click=\"onCameraReset\">OK</button>\r\n      </li>\r\n      <li class=\"mt2\">\r\n        <p class=\"mb1\">Charge Remaining Count</p>\r\n        <button type=\"button\" class=\"defaultBtn\">Scan</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {onCameraResetWebSocket, onGripperOpenWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\n\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst isRunningState = ref(false);\r\n\r\n\r\nonMounted(async () => {\r\n  const newUserId = JSON.parse(JSON.stringify(userModuleDataGet.value));\r\n  userId.value = newUserId.userId;\r\n});\r\n\r\nwatch([runInfo.value], async (newVals) => {\r\n  await nextTick();\r\n  const [newRunInfo] = newVals;\r\n\r\n  const {isRunningState: newIsRunningState} = newRunInfo || {};\r\n  isRunningState.value = newIsRunningState;\r\n\r\n})\r\n\r\n\r\nconst onGripperOpen = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onGripperOpenWebSocket(userId.value);\r\n}\r\n\r\nconst onCameraReset = () => {\r\n  if(isRunningState.value){\r\n    showSuccessAlert(messages.IDS_ERROR_ALREADY_RUNNING);\r\n    return;\r\n  }\r\n  onCameraResetWebSocket(userId.value);\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./deviceControls.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"customClass customSettingContainer\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\n\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customClass',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcCustomItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, \"ID: \" + _toDisplayString(item!.customNum), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.abbreviation) = $event),\n                type: \"text\",\n                maxlength: \"3\",\n                placeholder: \"abbreviation\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.abbreviation]\n              ])\n            ]),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.fullNm) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_3), [\n                [_vModelText, item.fullNm]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: saveWbcCustomClass\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"customClass customSettingContainer\">\r\n      <li v-for=\"item in wbcCustomItems\" :key=\"item.id\">\r\n        <span>ID: {{ item!.customNum }}</span>\r\n        <span><input v-model=\"item.abbreviation\" type=\"text\" maxlength=\"3\" placeholder=\"abbreviation\"/></span>\r\n        <span><input v-model=\"item.fullNm\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcCustomClass\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport {\r\n  createWbcCustomClassApi,\r\n  updateWbcCustomClassApi,\r\n  getWbcCustomClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcCustomParm = [\r\n  { customNum: 90, abbreviation: '', fullNm: '' },\r\n  { customNum: 91, abbreviation: '', fullNm: '' },\r\n  { customNum: 92, abbreviation: '', fullNm: '' },\r\n  { customNum: 93, abbreviation: '', fullNm: '' },\r\n  { customNum: 94, abbreviation: '', fullNm: '' }\r\n];\r\n\r\nconst wbcCustomItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcCustomClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n    } else {\r\n      const updateResult = await updateWbcCustomClassApi({ classArr: wbcCustomItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcCustomClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcCustomClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcCustomClasses = async () => {\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcCustomItems.value = wbcCustomParm;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        const data = result.data;\r\n        wbcCustomItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./customClass.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveWbcCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in wbcHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveWbcCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {createWbcHotKeysApi, updateWbcHotKeysApi, getWbcHotKeysApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bmHotKeys, wbcHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref('pb');\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n  await getWbcHotKeyClasses();\r\n});\r\n\r\nconst saveWbcCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n    } else {\r\n      const updateResult = await updateWbcHotKeysApi({wbcHotKeysItems: wbcHotKeysItems.value});\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        wbcHotKeysItems.value = projectType.value ==='bm' ? bmHotKeys : wbcHotKeys;\r\n        // bmHotKeys\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcHotKeysItems\" }\nconst _hoisted_2 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'bfHotKeys',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bfHotKeysItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"span\", null, _toDisplayString(item.abbreviation), 1),\n            _createElementVNode(\"span\", null, _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"span\", null, [\n              _withDirectives(_createElementVNode(\"input\", {\n                \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event),\n                type: \"text\",\n                maxlength: \"25\",\n                placeholder: \"class name\"\n              }, null, 8, _hoisted_2), [\n                [_vModelText, item.key]\n              ])\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveBfCustomClass,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n<!--        {{ bfHotKeysItems }}-->\r\n    <ul class=\"wbcHotKeysItems\">\r\n      <li v-for=\"item in bfHotKeysItems\" :key=\"item.id\">\r\n        <span>{{ item.abbreviation }}</span>\r\n        <span>{{ item.fullNm }}</span>\r\n        <span><input v-model=\"item.key\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveBfCustomClass\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createBfHotKeysApi, updateBfHotKeysApi, getBfHotKeysApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {bfHotKeys} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getBfHotKeyClasses();\r\n});\r\n\r\nconst saveBfCustomClass = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n    } else {\r\n      const updateResult = await updateBfHotKeysApi({bfHotKeysItems: bfHotKeysItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getBfHotKeyClasses();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getBfHotKeyClasses();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        bfHotKeysItems.value = bfHotKeys;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        bfHotKeysItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./bfHotKeys.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"normalItems\" }\nconst _hoisted_2 = { class: \"mt1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\n\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'normalRange',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"ul\", _hoisted_1, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(normalItems.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: item.id\n          }, [\n            _createElementVNode(\"div\", null, _toDisplayString(item.abbreviation) + \" - \" + _toDisplayString(item.fullNm), 1),\n            _createElementVNode(\"div\", _hoisted_2, [\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.min) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_3), [\n                  [_vModelText, item.min]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((item.max) = $event),\n                  type: \"text\",\n                  maxlength: \"25\",\n                  placeholder: \"class name\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, item.max]\n                ])\n              ]),\n              _createElementVNode(\"span\", null, _toDisplayString(item.unit), 1)\n            ])\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"button\", {\n        onClick: saveNormalRange,\n        class: \"saveBtn\",\n        type: \"button\"\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <ul class=\"normalItems\">\r\n      <li v-for=\"item in normalItems\" :key=\"item.id\">\r\n        <div>\r\n          {{ item.abbreviation }} - {{ item.fullNm }}\r\n        </div>\r\n        <div class=\"mt1\">\r\n          <span><input v-model=\"item.min\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span><input v-model=\"item.max\" type=\"text\" maxlength=\"25\" placeholder=\"class name\"/></span>\r\n          <span>{{ item.unit }}</span>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <button @click=\"saveNormalRange\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {\r\n  createNormalRangeApi,\r\n  updateNormalRangeApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {normalRange} from \"@/common/defines/constFile/settings\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst saveHttpType = ref('');\r\n\r\nconst normalItems = ref<any>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getNormalRange();\r\n});\r\n\r\nconst saveNormalRange = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createNormalRangeApi({normalRangeItems: normalItems.value });\r\n    } else {\r\n      const updateResult = await updateNormalRangeApi({normalRangeItems: normalItems.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getNormalRange();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getNormalRange();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (!result?.data || (result?.data instanceof Array && result?.data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        normalItems.value = normalRange;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        normalItems.value = result.data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./normalRange.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, withModifiers as _withModifiers, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcClassScroll\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"classTitle\" }, \"Class\", -1)\nconst _hoisted_3 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_4 = { class: \"nth1ChildOrder\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classOrder',\n  setup(__props) {\n\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[0] || (_cache[0] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          _createElementVNode(\"ul\", _hoisted_4, [\n            _createElementVNode(\"li\", null, _toDisplayString(item?.fullNm), 1)\n          ])\n        ], 40, _hoisted_3))\n      }), 128))\n    ]),\n    _createElementVNode(\"button\", {\n      onClick: saveOrderClassSave,\n      class: \"saveBtn\",\n      type: \"button\"\n    }, \"Save\"),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcClassScroll\">\r\n    <h1 class=\"classTitle\">Class</h1>\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n\r\n      <ul class=\"nth1ChildOrder\">\r\n        <li>{{ item?.fullNm }}</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <button @click=\"saveOrderClassSave\" class=\"saveBtn\" type=\"button\">Save</button>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {onMounted, ref} from \"vue\";\r\nimport {defaultBmClassList, defaultWbcClassList} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {\r\n  createOrderClassApi,\r\n  getOrderClassApi, putOrderClassApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst wbcInfoChangeVal = ref<any>([]);\r\n\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\nconst saveHttpType = ref('');\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  wbcInfoChangeVal.value = window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await getOrderClass();\r\n})\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        saveHttpType.value = 'post';\r\n      }else{\r\n        saveHttpType.value = 'put';\r\n        wbcInfoChangeVal.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst saveOrderClassSave = async () => {\r\n  let orderList: any = wbcInfoChangeVal.value;\r\n  for (const index in orderList) {\r\n    orderList[index].orderIdx = index;\r\n  }\r\n  try {\r\n    let result = {};\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createOrderClassApi(orderList);\r\n    }else {\r\n      result = await putOrderClassApi(orderList);\r\n    }\r\n    if (result) {\r\n      const text = saveHttpType.value === 'post' ? 'save successful' : messages.UPDATE_SUCCESSFULLY\r\n      showSuccessAlert(text);\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classOrder.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = {\n  class: \"defaultTable\",\n  style: {\"margin\":\"auto\"}\n}\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC min\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"WBC max\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"count\")\n  ])\n], -1)\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = [\"onUpdate:modelValue\"]\nconst _hoisted_6 = [\"onUpdate:modelValue\"]\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'wbcRunningCount',\n  setup(__props) {\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"table\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"tbody\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcRunInfoCountArr.value, (wbcRunning) => {\n            return (_openBlock(), _createElementBlock(\"tr\", {\n              key: wbcRunning.id\n            }, [\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.min) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_4), [\n                  [_vModelText, wbcRunning.min]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"number\",\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.max) = $event),\n                  class: \"form-control form-control-sm\"\n                }, null, 8, _hoisted_5), [\n                  [_vModelText, wbcRunning.max]\n                ])\n              ]),\n              _createElementVNode(\"td\", null, [\n                _withDirectives(_createElementVNode(\"select\", {\n                  \"onUpdate:modelValue\": ($event: any) => ((wbcRunning.wbcConditionCount) = $event),\n                  class: \"form-select form-select-sm\"\n                }, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(AnalysisList2), (option) => {\n                    return (_openBlock(), _createElementBlock(\"option\", {\n                      key: option.value,\n                      value: +option.value\n                    }, _toDisplayString(option.text), 9, _hoisted_7))\n                  }), 128))\n                ], 8, _hoisted_6), [\n                  [_vModelSelect, wbcRunning.wbcConditionCount]\n                ])\n              ])\n            ]))\n          }), 128))\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveWbcRunningCount()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <table class=\"defaultTable\" style=\"margin: auto;\">\r\n      <thead>\r\n      <tr>\r\n        <th>WBC min</th>\r\n        <th>WBC max</th>\r\n        <th>count</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(wbcRunning) in wbcRunInfoCountArr\" :key=\"wbcRunning.id\">\r\n        <td><input type=\"number\" v-model=\"wbcRunning.min\" class=\"form-control form-control-sm\"></td>\r\n        <td><input type=\"number\" v-model=\"wbcRunning.max\" class=\"form-control form-control-sm\"></td>\r\n        <td>\r\n          <select v-model=\"wbcRunning.wbcConditionCount\" class=\"form-select form-select-sm\">\r\n            <option v-for=\"option in AnalysisList2\" :key=\"option.value\" :value=\"+option.value\">{{ option.text }}</option>\r\n          </select>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveWbcRunningCount()\">Save</button>\r\n  </div>\r\n\r\n  <!-- 모달 창 -->\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {onMounted, ref} from \"vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {AnalysisList2, wbcRunningCount} from \"@/common/defines/constFile/settings\";\r\nimport {runCountItem} from \"@/common/api/service/setting/dto/runWbcInfoCountDto\";\r\nimport { createRunInfoWbcApi, getRunInfoApi, updateRunInfoApi } from \"@/common/api/service/setting/settingApi\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\n\r\n\r\nconst saveHttpType = ref('');\r\nconst wbcRunInfoCountArr = ref<runCountItem[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getWbcRunningCountData();\r\n});\r\n\r\nconst getWbcRunningCountData = async () => {\r\n  try {\r\n    const runCountResult = await getRunInfoApi();\r\n\r\n    if (runCountResult && runCountResult.data) {\r\n      const runInfoData = runCountResult.data;\r\n\r\n      if (!runInfoData || (runInfoData instanceof Array && runInfoData.length === 0)) {\r\n        console.log(null);\r\n        saveHttpType.value = 'post';\r\n        wbcRunInfoCountArr.value = wbcRunningCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        wbcRunInfoCountArr.value = runInfoData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst saveWbcRunningCount = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createRunInfoWbcApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n    } else {\r\n      const updateResult = await updateRunInfoApi({ wbcRunCountItems: wbcRunInfoCountArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getWbcRunningCountData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getWbcRunningCountData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n</script>","import script from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./wbcRunningCount.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { class: \"tab-content\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (activateTab('cellImageAnalyzed'))),\n        class: _normalizeClass({ 'active': activeTab.value === 'cellImageAnalyzed' })\n      }, \"Cell Image Analyzed\", 2),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 0,\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (activateTab('rbcDegree'))),\n            class: _normalizeClass({ 'active': activeTab.value === 'rbcDegree' })\n          }, \"RBC Degree\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (activateTab(\"deviceControls\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'deviceControls' })\n      }, \"Device Controls\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (activateTab(\"wbcRunningCount\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcRunningCount' })\n      }, \"WBC Running Count\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[4] || (_cache[4] = ($event: any) => (activateTab(\"wbcCustomClass\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcCustomClass' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Custom Class \", 3),\n      _createElementVNode(\"button\", {\n        onClick: _cache[5] || (_cache[5] = ($event: any) => (activateTab(\"wbcHotKeys\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcHotKeys' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Hot Keys \", 3),\n      (projectType.value === 'pb')\n        ? (_openBlock(), _createElementBlock(\"button\", {\n            key: 1,\n            onClick: _cache[6] || (_cache[6] = ($event: any) => (activateTab(\"bfHotKeys\"))),\n            class: _normalizeClass({ 'active': activeTab.value === 'bfHotKeys' })\n          }, \"BF Hot Keys\", 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"button\", {\n        onClick: _cache[7] || (_cache[7] = ($event: any) => (activateTab(\"normalRange\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'normalRange' })\n      }, \"Normal Range\", 2),\n      _createElementVNode(\"button\", {\n        onClick: _cache[8] || (_cache[8] = ($event: any) => (activateTab(\"wbcOrder\"))),\n        class: _normalizeClass({ 'active': activeTab.value === 'wbcOrder' })\n      }, _toDisplayString(projectType.value === 'pb' ? 'WBC' : 'BM') + \" Order \", 3)\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(activeTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"activateTab('cellImageAnalyzed')\" :class=\"{ 'active': activeTab === 'cellImageAnalyzed' }\">Cell Image Analyzed</button>\r\n      <button v-if=\"projectType === 'pb'\" @click=\"activateTab('rbcDegree')\" :class=\"{ 'active': activeTab === 'rbcDegree' }\">RBC Degree</button>\r\n      <button @click='activateTab(\"deviceControls\")' :class=\"{ 'active': activeTab === 'deviceControls' }\">Device Controls</button>\r\n      <button @click='activateTab(\"wbcRunningCount\")' :class=\"{ 'active': activeTab === 'wbcRunningCount' }\">WBC Running Count</button>\r\n      <button @click='activateTab(\"wbcCustomClass\")' :class=\"{ 'active': activeTab === 'wbcCustomClass' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Custom Class\r\n      </button>\r\n      <button @click='activateTab(\"wbcHotKeys\")' :class=\"{ 'active': activeTab === 'wbcHotKeys' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Hot Keys\r\n      </button>\r\n      <button v-if=\"projectType === 'pb'\" @click='activateTab(\"bfHotKeys\")' :class=\"{ 'active': activeTab === 'bfHotKeys' }\">BF Hot Keys</button>\r\n      <button @click='activateTab(\"normalRange\")' :class=\"{ 'active': activeTab === 'normalRange' }\">Normal Range</button>\r\n      <button @click='activateTab(\"wbcOrder\")' :class=\"{ 'active': activeTab === 'wbcOrder' }\">\r\n        {{ projectType === 'pb' ? 'WBC' : 'BM' }} Order\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"activeTabComponent\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport CellImageAnalyzed from \"@/views/setting/analysisDatabase/component/cellImageAnalyzed.vue\";\r\nimport RbcDegree from \"@/views/setting/analysisDatabase/component/rbcDegree.vue\";\r\nimport DeviceControls from '@/views/setting/analysisDatabase/component/deviceControls.vue'\r\nimport WbcCustomClass from '@/views/setting/analysisDatabase/component/customClass.vue'\r\nimport WbcHotKey from \"@/views/setting/analysisDatabase/component/wbcHotKeys.vue\";\r\nimport BfHotKey from '@/views/setting/analysisDatabase/component/bfHotKeys.vue';\r\nimport NormalRange from \"@/views/setting/analysisDatabase/component/normalRange.vue\";\r\nimport WbcOrder from \"@/views/setting/analysisDatabase/component/classOrder.vue\";\r\nimport WbcRunningCount from \"@/views/setting/analysisDatabase/component/wbcRunningCount.vue\";\r\nimport process from \"process\";\r\nconst activeTab = ref('cellImageAnalyzed');\r\nconst projectType = ref('');\r\nconst activateTab = (tabName: string) => {\r\n  activeTab.value = tabName;\r\n};\r\n\r\nconst activeTabComponent = computed(() => {\r\n  switch (activeTab.value) {\r\n    case 'cellImageAnalyzed':\r\n      return CellImageAnalyzed;\r\n    case 'rbcDegree':\r\n      return RbcDegree;\r\n    case 'deviceControls':\r\n      return DeviceControls;\r\n    case 'wbcCustomClass':\r\n      return WbcCustomClass;\r\n    case 'wbcHotKeys':\r\n      return WbcHotKey;\r\n    case 'bfHotKeys':\r\n      return BfHotKey;\r\n    case 'normalRange':\r\n      return NormalRange;\r\n    case 'wbcOrder':\r\n      return WbcOrder;\r\n    case 'wbcRunningCount':\r\n      return WbcRunningCount;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE === 'bm' ? 'bm' : 'pb';\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createElementVNode as _createElementVNode, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, createVNode as _createVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingContainer\" }\nconst _hoisted_2 = { class: \"searchUserContainer\" }\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = { class: \"table defaultTable mt2\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"No.\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User Type\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"User ID\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Subscription Date\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Latest Date\")\n  ])\n], -1)\n\nimport { onMounted, ref } from \"vue\";\r\nimport { getAllUsersApi  } from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _withDirectives(_createElementVNode(\"select\", {\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((userSearchOption).value = $event)),\n        class: \"searchSelect\"\n      }, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(userSearchOptions.value, (option) => {\n          return (_openBlock(), _createElementBlock(\"option\", {\n            key: option.value,\n            value: option.value\n          }, _toDisplayString(option.text), 9, _hoisted_3))\n        }), 128))\n      ], 512), [\n        [_vModelSelect, userSearchOption.value]\n      ]),\n      _withDirectives(_createElementVNode(\"input\", {\n        type: \"text\",\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputText).value = $event)),\n        class: \"searchInputBox\"\n      }, null, 512), [\n        [_vModelText, inputText.value]\n      ]),\n      _createVNode(_component_font_awesome_icon, {\n        icon: ['fas', 'search'],\n        class: \"searchBtn\",\n        onClick: onSearch\n      })\n    ]),\n    _createElementVNode(\"table\", _hoisted_4, [\n      _hoisted_5,\n      _createElementVNode(\"tbody\", null, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allUsers.value, (user) => {\n          return (_openBlock(), _createElementBlock(\"tr\", {\n            key: user.id\n          }, [\n            _createElementVNode(\"td\", null, _toDisplayString(user.id), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userType), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.userId), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.name), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(user.employeeNo), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.subscriptionDate)), 1),\n            _createElementVNode(\"td\", null, _toDisplayString(date(user.latestDate)), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingContainer\">\r\n    <div class=\"searchUserContainer\">\r\n      <select v-model=\"userSearchOption\" class=\"searchSelect\">\r\n        <option v-for=\"option in userSearchOptions\" :key=\"option.value\" :value=\"option.value\">{{ option.text }}</option>\r\n      </select>\r\n      <input type=\"text\" v-model=\"inputText\" class=\"searchInputBox\">\r\n      <font-awesome-icon :icon=\"['fas', 'search']\" class=\"searchBtn\" @click=\"onSearch\"/>\r\n\r\n    </div>\r\n    <table class=\"table defaultTable mt2\">\r\n      <thead>\r\n        <tr>\r\n          <th>No.</th>\r\n          <th>User Type</th>\r\n          <th>User ID</th>\r\n          <th>Name</th>\r\n          <th>Employee</th>\r\n          <th>Subscription Date</th>\r\n          <th>Latest Date</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in allUsers\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.userType }}</td>\r\n          <td>{{ user.userId }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.employeeNo }}</td>\r\n          <td>{{ date(user.subscriptionDate) }}</td>\r\n          <td>{{ date(user.latestDate) }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { onMounted, ref } from \"vue\";\r\nimport { getAllUsersApi  } from \"@/common/api/service/user/userApi\";\r\nimport { User } from '@/common/api/service/user/dto/userDto'\r\n\r\nonMounted(async () => {\r\n  currentUserId.value = getStoredUser.id;\r\n  await getAllUsers();\r\n});\r\n\r\n\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst currentUserId = ref('');\r\nconst allUsers = ref<User[]>([]);\r\nconst date = (text: string) => {\r\n  return text.replace('T', ' ').replace('.000Z', '');\r\n}\r\nconst userSearchOption = ref('userId')\r\nconst userSearchOptions = ref([\r\n  { value: 'userId', text: 'User Id' },\r\n  { value: 'name', text: 'User Name' }\r\n])\r\n\r\nconst inputText = ref('');\r\n\r\nconst filterUsers = (users: any[], searchText: any, searchOption: string) => {\r\n  const searchQuery = searchText.toLowerCase();\r\n  return users.filter(item => {\r\n    const searchField = searchOption === 'userId' ? String(item.userId) : item.name;\r\n    return searchField.toLowerCase().includes(searchQuery);\r\n  });\r\n};\r\n\r\nconst onSearch = async () => {\r\n  try {\r\n    const result = await getAllUsersApi(String(currentUserId.value));\r\n\r\n    if (result && result.data) {\r\n      const users = result.data.users || [];\r\n      const filteredUsers = filterUsers(users, inputText.value, userSearchOption.value);\r\n      allUsers.value = filteredUsers;\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('An error occurred:', error);\r\n  }\r\n};\r\n\r\nconst getAllUsers = async() => {\r\n  try {\r\n    // api 받아옴\r\n    const result = await getAllUsersApi(String(currentUserId.value))\r\n\r\n    if (result && result?.data) {\r\n      allUsers.value = result.data.users || []\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingImagePrint\" }\nconst _hoisted_2 = [\"value\"]\nconst _hoisted_3 = { class: \"mt1\" }\n\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'ImagePrint',\n  setup(__props) {\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imagePrintAndWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.id\n        }, [\n          _createElementVNode(\"div\", null, _toDisplayString(item.fullNm), 1),\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"checkbox\",\n              value: item.classId,\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((selectedItems).value = $event))\n            }, null, 8, _hoisted_2), [\n              [_vModelCheckbox, selectedItems.value]\n            ])\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (saveImagePrint()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"settingImagePrint\">\r\n    <label v-for=\"item in imagePrintAndWbcArr\" :key=\"item.id\">\r\n      <div>{{ item.fullNm }}</div>\r\n      <div><input type=\"checkbox\" :value=\"item.classId\" v-model=\"selectedItems\" /></div>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveImagePrint()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted, computed} from 'vue';\r\nimport {imagePrintAndBm, imagePrintAndWbc} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createImagePrintApi,\r\n  getImagePrintApi,\r\n  updateImagePrintApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport process from \"process\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\r\nconst imagePrintAndWbcArr = ref<any[]>([]);\r\nconst selectedItems = ref<string[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveImagePrint = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    imagePrintAndWbcArr.value.forEach((item) => {\r\n      item.checked = selectedItems.value.includes(item.classId);\r\n    });\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n    } else {\r\n      const updateResult = await updateImagePrintApi({ imagePrintItems: imagePrintAndWbcArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        imagePrintAndWbcArr.value = window.PROJECT_TYPE ==='bm'? imagePrintAndBm : imagePrintAndWbc;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        imagePrintAndWbcArr.value = data;\r\n        selectedItems.value = data.filter((item) => item.checked).map((item) => item.classId);\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./ImagePrint.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb4\" }, \" [ WBC ] \", -1)\nconst _hoisted_3 = { class: \"mb1\" }\nconst _hoisted_4 = [\"onUpdate:modelValue\"]\nconst _hoisted_5 = { class: \"alignDiv\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mt2 mb4\" }, \" [ RBC ] \", -1)\nconst _hoisted_7 = { class: \"mb1\" }\nconst _hoisted_8 = [\"onUpdate:modelValue\"]\nconst _hoisted_9 = { class: \"alignDiv\" }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \" [ Min Count ] \", -1)\nconst _hoisted_11 = { key: 0 }\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Giant Platelet\", -1)\nconst _hoisted_13 = { key: 1 }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb1 mt1\" }, \"Platelet Aggregation\", -1)\nconst _hoisted_15 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCode',\n  setup(__props) {\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _hoisted_2,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeWbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.classId\n        }, [\n          _createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_4), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_5, [\n      _hoisted_6,\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(lisCodeRbcArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.fullNm\n        }, [\n          _createElementVNode(\"p\", _hoisted_7, _toDisplayString(item.categoryNm) + \" - \" + _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.key) = $event)\n          }, null, 8, _hoisted_8), [\n            [_vModelText, item.key]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _hoisted_10,\n      _createElementVNode(\"ul\", null, [\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, [\n              _hoisted_12,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((minCountArr.value[0].minGPCount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minGPCount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true),\n        (minCountArr.value.length > 0)\n          ? (_openBlock(), _createElementBlock(\"li\", _hoisted_13, [\n              _hoisted_14,\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"text\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((minCountArr.value[0].minPACount) = $event)),\n                class: \"form-control form-control-sm\"\n              }, null, 512), [\n                [_vModelText, minCountArr.value[0].minPACount]\n              ])\n            ]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_15, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[2] || (_cache[2] = ($event: any) => (saveLisCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb4\"> [ WBC ] </p>\r\n    <label v-for=\"item in lisCodeWbcArr\" :key=\"item.classId\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mt2 mb4\"> [ RBC ] </p>\r\n    <label v-for=\"item in lisCodeRbcArr\" :key=\"item.fullNm\">\r\n      <p class=\"mb1\">{{ item.categoryNm }} - {{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.key\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"alignDiv\">\r\n    <p class=\"mb2\"> [ Min Count ] </p>\r\n    <ul>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Giant Platelet</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minGPCount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n      <li v-if=\"minCountArr.length > 0\">\r\n        <p class=\"mb1 mt1\">Platelet Aggregation</p>\r\n        <input type=\"text\" v-model=\"minCountArr[0].minPACount\" class=\"form-control form-control-sm\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveLisCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { lisCodeWbcOption , lisCodeRbcOption, minRunCount} from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport {\r\n  createLisCodeWbcApi, createLisCodeRbcApi, createMinCountApi,\r\n  getLisCodeWbcApi, getLisCodeRbcApi, getMinCountApi,\r\n  updateLisCodeWbcApi, updateLisCodeRbcApi, updateMinCountApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {LisCodeRbcItem, LisCodeWbcItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {minCountItem} from \"@/common/api/service/setting/dto/minCountDto\";\r\n\r\n\r\nconst lisCodeWbcArr = ref<LisCodeWbcItem[]>([]);\r\nconst lisCodeRbcArr = ref<LisCodeRbcItem[]>([]);\r\nconst minCountArr = ref<minCountItem[]>([]);\r\n\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveLisCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    let rbcResult: ApiResponse<void>;\r\n    let minCountResult: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      rbcResult = await createLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      minCountResult = await createMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n    } else {\r\n      const updateResult = await updateLisCodeWbcApi({ lisCodeItems: lisCodeWbcArr.value });\r\n      const updateRbcResult = await updateLisCodeRbcApi({ lisCodeItems: lisCodeRbcArr.value });\r\n      const updateMinCountResult = await updateMinCountApi({ minCountItems: minCountArr.value });\r\n\r\n      if (updateResult.data && updateRbcResult.data && updateMinCountResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result && rbcResult && minCountResult) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeWbcApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    const minCountResult = await getMinCountApi();\r\n\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data && minCountResult && minCountResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n      const minCountData = minCountResult.data;\r\n\r\n      if (!wbcData || (wbcData instanceof Array && wbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeWbcArr.value = lisCodeWbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n\r\n      if (!rbcData || (rbcData instanceof Array && rbcData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        lisCodeRbcArr.value = lisCodeRbcOption;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n\r\n      if (!minCountData || (minCountData instanceof  Array && minCountData.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        minCountArr.value = minRunCount;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        minCountArr.value = minCountData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"alignDiv\" }\nconst _hoisted_2 = { class: \"mb1\" }\nconst _hoisted_3 = [\"onUpdate:modelValue\"]\nconst _hoisted_4 = { class: \"mt1\" }\n\nimport { ref, onMounted } from 'vue';\r\nimport { defaultCbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'cbcCode',\n  setup(__props) {\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = defaultCbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcCodeArr.value, (item) => {\n        return (_openBlock(), _createElementBlock(\"label\", {\n          key: item.cd\n        }, [\n          _createElementVNode(\"p\", _hoisted_2, _toDisplayString(item.fullNm), 1),\n          _withDirectives(_createElementVNode(\"input\", {\n            type: \"text\",\n            \"onUpdate:modelValue\": ($event: any) => ((item.classCd) = $event)\n          }, null, 8, _hoisted_3), [\n            [_vModelText, item.classCd]\n          ])\n        ]))\n      }), 128))\n    ]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (saveCbcCode()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\">\r\n    <label v-for=\"item in cbcCodeArr\" :key=\"item.cd\">\r\n      <p class=\"mb1\">{{ item.fullNm }}</p>\r\n      <input type=\"text\" v-model=\"item.classCd\" />\r\n    </label>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveCbcCode()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from 'vue';\r\nimport { defaultCbcList } from \"@/common/defines/constFile/settings\";\r\nimport { ApiResponse } from \"@/common/api/httpClient\";\r\nimport { createCbcCodeRbcApi, getCbcCodeRbcApi, updateCbcCodeRbcApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {cbcCodeItem} from \"@/common/api/service/setting/dto/lisCodeDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst cbcCodeArr = ref<cbcCodeItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getImagePrintData();\r\n});\r\n\r\nconst saveCbcCode = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n    } else {\r\n      const updateResult = await updateCbcCodeRbcApi({ cbcCodeItems: cbcCodeArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getImagePrintData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getImagePrintData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        cbcCodeArr.value = defaultCbcList;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        cbcCodeArr.value = data;\r\n      }\r\n    }\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./cbcCode.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"alignDiv\",\n  style: {\"text-align\":\"center\"}\n}\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2\" }, \"LIS Hot Key\", -1)\nconst _hoisted_3 = [\"value\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Lis File Path\", -1)\nconst _hoisted_5 = [\"value\"]\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", { class: \"mb2 mt2\" }, \"Cbc File Path\", -1)\nconst _hoisted_7 = [\"value\"]\nconst _hoisted_8 = { class: \"mt1\" }\n\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'filePathSet',\n  setup(__props) {\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        _createElementVNode(\"li\", null, [\n          _hoisted_2,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisHotKey : '',\n            onInput: _cache[0] || (_cache[0] = ($event: any) => (updateHotKey($event, 0)))\n          }, null, 40, _hoisted_3)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_4,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].lisFilePath : '',\n            onInput: _cache[1] || (_cache[1] = ($event: any) => (updateFilePath($event, 0)))\n          }, null, 40, _hoisted_5)\n        ]),\n        _createElementVNode(\"li\", null, [\n          _hoisted_6,\n          _createElementVNode(\"input\", {\n            type: \"text\",\n            value: filePathSetArr.value[0] ? filePathSetArr.value[0].cbcFilePath : '',\n            onInput: _cache[2] || (_cache[2] = ($event: any) => (updateCbcFilePath($event, 0)))\n          }, null, 40, _hoisted_7)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_8, [\n      _createElementVNode(\"button\", {\n        class: \"saveBtn\",\n        type: \"button\",\n        onClick: _cache[3] || (_cache[3] = ($event: any) => (saveFilePathSet()))\n      }, \"Save\")\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"alignDiv\" style=\"text-align: center\">\r\n    <ul>\r\n      <li>\r\n        <p class=\"mb2\">LIS Hot Key</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisHotKey : ''\"\r\n               @input=\"updateHotKey($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Lis File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].lisFilePath : ''\"\r\n               @input=\"updateFilePath($event, 0)\">\r\n      </li>\r\n      <li>\r\n        <p class=\"mb2 mt2\">Cbc File Path</p>\r\n        <input type=\"text\" :value=\"filePathSetArr[0] ? filePathSetArr[0].cbcFilePath : ''\"\r\n               @input=\"updateCbcFilePath($event, 0)\">\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"mt1\">\r\n    <button class=\"saveBtn\" type=\"button\" @click=\"saveFilePathSet()\">Save</button>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, onMounted} from 'vue';\r\nimport {lisHotKeyAndLisFilePathAndUrl} from \"@/common/defines/constFile/settings\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport { createFilePathSetApi, getFilePathSetApi, updateFilePathSetApi } from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {FilePathItem} from \"@/common/api/service/setting/dto/filePathSetDto\";\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\n\r\nconst filePathSetArr = ref<FilePathItem[]>([]);\r\nconst saveHttpType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\n\r\nonMounted(async () => {\r\n  await getFilePathSetData();\r\n});\r\n\r\nconst saveFilePathSet = async () => {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n\r\n    if (saveHttpType.value === 'post') {\r\n      result = await createFilePathSetApi({filePathSetItems: filePathSetArr.value });\r\n    } else {\r\n      const updateResult = await updateFilePathSetApi({ filePathSetItems: filePathSetArr.value });\r\n\r\n      if (updateResult.data) {\r\n        showSuccessAlert(messages.UPDATE_SUCCESSFULLY);\r\n        await getFilePathSetData();\r\n      } else {\r\n        showErrorAlert('update failed');\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (result) {\r\n      showSuccessAlert('save successful');\r\n      saveHttpType.value = 'put';\r\n      await getFilePathSetData();\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getFilePathSetData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        saveHttpType.value = 'post';\r\n        filePathSetArr.value = lisHotKeyAndLisFilePathAndUrl;\r\n      } else {\r\n        saveHttpType.value = 'put';\r\n        filePathSetArr.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst updateHotKey = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisHotKey = event.target.value;\r\n};\r\n\r\nconst updateFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].lisFilePath = event.target.value;\r\n};\r\n\r\nconst updateCbcFilePath = (event: any, index: number) => {\r\n  filePathSetArr.value[index].cbcFilePath = event.target.value;\r\n};\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n\r\n","import script from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./filePathSet.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingTabSubButtons\" }\nconst _hoisted_2 = { key: 0 }\nconst _hoisted_3 = { class: \"tab-content\" }\n\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"button\", {\n        onClick: _cache[0] || (_cache[0] = ($event: any) => (selectTab('ImagePrint'))),\n        class: _normalizeClass({ 'active': _unref(selectedTab) === 'ImagePrint' })\n      }, \"Image Print\", 2),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [\n            _createElementVNode(\"button\", {\n              onClick: _cache[1] || (_cache[1] = ($event: any) => (selectTab('LisCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'LisCode' })\n            }, \"Lis Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[2] || (_cache[2] = ($event: any) => (selectTab('CbcCode'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'CbcCode' })\n            }, \"CBC Code\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (selectTab('filePathSet'))),\n              class: _normalizeClass({ 'active': _unref(selectedTab) === 'filePathSet' })\n            }, \"Lis(CBC) Hot Key & File Path\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, [\n      (_openBlock(), _createBlock(_resolveDynamicComponent(selectedTabComponent.value)))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <div class=\"settingTabSubButtons\">\r\n      <button @click=\"selectTab('ImagePrint')\" :class=\"{ 'active': selectedTab === 'ImagePrint' }\">Image Print</button>\r\n      <div v-if=\"!projectBm\">\r\n        <button @click=\"selectTab('LisCode')\" :class=\"{ 'active': selectedTab === 'LisCode' }\">Lis Code</button>\r\n        <button @click=\"selectTab('CbcCode')\" :class=\"{ 'active': selectedTab === 'CbcCode' }\">CBC Code</button>\r\n        <button @click=\"selectTab('filePathSet')\" :class=\"{ 'active': selectedTab === 'filePathSet' }\">Lis(CBC) Hot Key & File Path</button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"tab-content\">\r\n      <component :is=\"selectedTabComponent\"/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport ImagePrint from \"@/views/setting/report/component/ImagePrint.vue\";\r\nimport LisCode from \"@/views/setting/report/component/lisCode.vue\";\r\nimport cbcCode from \"@/views/setting/report/component/cbcCode.vue\";\r\nimport FilePathSet from '@/views/setting/report/component/filePathSet.vue';\r\nimport * as process from \"process\";\r\n\r\nimport {computed, ref, onMounted} from \"vue\";\r\n\r\nconst projectBm = ref(false);\r\n\r\nlet selectedTab = ref('ImagePrint');\r\n\r\nconst selectTab = (tabName: string) => {\r\n  selectedTab.value = tabName;\r\n};\r\n\r\nconst selectedTabComponent = computed(() => {\r\n  switch (selectedTab.value) {\r\n    case 'ImagePrint':\r\n      return ImagePrint;\r\n    case 'LisCode':\r\n      return LisCode;\r\n    case 'CbcCode':\r\n      return cbcCode;\r\n    case 'filePathSet':\r\n      return FilePathSet;\r\n    default:\r\n      return null;\r\n  }\r\n});\r\n\r\nonMounted(() => {\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n})\r\n\r\n</script>","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\n</script>\r\n","import { render } from \"./index.vue?vue&type=template&id=23f4e997\"\nconst script = {}\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"versionContainer\" }\n\nimport { ref, onMounted } from \"vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", null, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(projectVersion.value, (item, index) => {\n        return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n          _createElementVNode(\"span\", null, _toDisplayString(item.key), 1),\n          _createElementVNode(\"span\", null, _toDisplayString(item.name), 1)\n        ]))\n      }), 128))\n    ])\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"versionContainer\">\r\n    <ul>\r\n      <li v-for=\"(item, index) in projectVersion\" :key=\"index\">\r\n        <span>{{ item.key }}</span>\r\n        <span>{{ item.name }}</span>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n<script setup lang=\"ts\">\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst projectVersion = ref<{key: string, name: string}[]>()\r\n\r\nonMounted(() => {\r\n  projectVersion.value = [\r\n    {key: 'AI Version', name: window.AI_VERSION as string},\r\n    {key: 'Web Frontend Version', name: window.WEB_FRONTEND_VERSION as string},\r\n    {key: 'Web Backend Version', name: window.WEB_BACKEND_VERSION as string},\r\n    {key: 'PB Version', name: window.PB_VERSION as string}\r\n  ];\r\n})\r\n\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, resolveDynamicComponent as _resolveDynamicComponent, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"settingWrapDiv\" }\nconst _hoisted_2 = { class: \"settingTabBtn\" }\nconst _hoisted_3 = [\"onClick\"]\n\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"ul\", _hoisted_2, [\n      (_openBlock(), _createElementBlock(_Fragment, null, _renderList(tabs, (tab) => {\n        return _createElementVNode(\"li\", {\n          key: tab,\n          class: _normalizeClass({ activeTab: currentTab.value === tab }),\n          onClick: ($event: any) => (changeTab(tab))\n        }, _toDisplayString(tab), 11, _hoisted_3)\n      }), 64))\n    ]),\n    (_openBlock(), _createBlock(_resolveDynamicComponent(currentTabComponent.value), { class: \"settingWrap\" }))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"settingWrapDiv\">\r\n    <ul class=\"settingTabBtn\">\r\n      <li v-for=\"tab in tabs\" :key=\"tab\" :class=\"{ activeTab: currentTab === tab }\" @click=\"changeTab(tab)\">{{ tab }}</li>\r\n    </ul>\r\n    <component class=\"settingWrap\" :is=\"currentTabComponent\" />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue';\r\nimport AnalysisDatabase from \"@/views/setting/analysisDatabase/index.vue\";\r\nimport LognAccount from \"@/views/setting/lognAccount/index.vue\";\r\nimport Report from \"@/views/setting/report/index.vue\";\r\nimport QualityCheck from \"@/views/setting/qualityCheck/index.vue\";\r\nimport Version from \"@/views/setting/version/index.vue\";\r\n\r\nconst tabs = ['Login/Account', 'Analysis/Database', 'Report', 'Quality Check', 'Version'] as const;\r\nconst currentTab = ref<typeof tabs[number]>(tabs[0]);\r\n\r\nconst changeTab = (tab: typeof tabs[number]) => {\r\n  currentTab.value = tab;\r\n  sessionStorage.setItem('selectedTab', tab);\r\n};\r\n\r\nconst components = { 'Login/Account': LognAccount, 'Analysis/Database': AnalysisDatabase, 'Report': Report, 'Quality Check': QualityCheck, 'Version': Version };\r\n\r\nconst storedTab = sessionStorage.getItem('selectedTab');\r\nif (storedTab && tabs.includes(storedTab as typeof tabs[number])) {\r\n  currentTab.value = storedTab as typeof tabs[number];\r\n}\r\n\r\nconst currentTabComponent = computed(() => components[currentTab.value]);\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- 자식 모달 컴포넌트 -->\r\n<template>\r\n  <div class=\"layer\">\r\n    <div class=\"layer-content\">\r\n      <div class=\"layer-header\">\r\n        <slot name=\"header\"></slot>\r\n        <button @click=\"closeLayer\" class=\"alertButton\">Close</button>\r\n      </div>\r\n      <div class=\"layer-body\">\r\n        <slot name=\"content\"></slot>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, defineEmits } from 'vue';\r\n\r\nconst visible = ref(false);\r\nconst emit = defineEmits(['update:closeLayer']);\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = () => {\r\n  visible.value = false;\r\n  emit('update:closeLayer', false);\r\n};\r\n\r\nonMounted(() => {\r\n  emit('afterOpen'); // 모달이 열린 후에 이벤트를 부모 컴포넌트로 전달\r\n});\r\n</script>","import script from \"./modal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./modal.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import {apiConstants} from \"@/common/api/apiConstants\";\r\nimport {useHttpClient, ApiResponse} from '@/common/api/httpClient';\r\nimport {RuningInfo, RuningInfoApiRequest, RunningInfoRes} from \"@/common/api/service/runningInfo/dto/runningInfoDto\";\r\nimport * as http from \"http\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const createRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.settings.runningInfo.create, request);\r\n};\r\n\r\nexport const updateRunningApi = async (request: { userId: number; runingInfoDtoItems: any }): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPut(apiConstants.settings.runningInfo.update, request, '',true);\r\n};\r\n\r\nexport const jsonCreatePost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.jsonCreate, request, '', true);\r\n};\r\n\r\n\r\nexport const getRunningApi = async (req: RuningInfoApiRequest): Promise<ApiResponse<any | undefined>> => {\r\n    const queryString = Object.entries(req)\r\n        .filter(([key, value]) => value !== undefined)  // undefined 값은 제외\r\n        .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`)\r\n        .join('&');\r\n\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.get,`${queryString}`, true);\r\n};\r\n\r\nexport const deleteRunningApi = async (req: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.settings.runningInfo.delete, req, true);\r\n};\r\n\r\nexport const detailRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.detail, `${request}`, false);\r\n};\r\n\r\nexport const pageUpDownRunnIngApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.pageUpDown, `${req}`, true)\r\n}\r\n\r\nexport const updatePcIpStateApi = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.updatePcIpState, `${req}`, true);\r\n}\r\n\r\nexport const clearPcIpState = async (req: any): Promise<ApiResponse<any>> => {\r\n    return httpClient.httpGet(apiConstants.settings.runningInfo.clearPcIpState, `${req}`, true)\r\n}","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { style: {\"width\":\"900px\",\"height\":\"90%\",\"overflow-y\":\"auto\",\"background\":\"#fff\",\"color\":\"#000\",\"position\":\"absolute\",\"top\":\"10%\",\"left\":\"33%\",\"box-sizing\":\"border-box\",\"padding\":\"3rem 7rem\",\"border\":\"2px solid #ccc\",\"border-radius\":\"10px\"} }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"Analysis Report from UIMD PB system\")\n], -1)\nconst _hoisted_3 = { style: {\"display\":\"flex\",\"flex-direction\":\"column\",\"justify-content\":\"space-between\"} }\nconst _hoisted_4 = { style: {\"width\":\"100%\"} }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"70%\"} })\n], -1)\nconst _hoisted_6 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Slot ID\", -1)\nconst _hoisted_8 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_9 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Ordered date\", -1)\nconst _hoisted_11 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_12 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed by ID\", -1)\nconst _hoisted_14 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_15 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Signed date\", -1)\nconst _hoisted_17 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_18 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Ordered Classification\", -1)\nconst _hoisted_20 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_21 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Name\", -1)\nconst _hoisted_23 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_24 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Birth\", -1)\nconst _hoisted_26 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_27 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Gender\", -1)\nconst _hoisted_29 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_30 = { style: {\"margin-top\":\"20px\",\"border-top\":\"2px dotted #696969\"} }\nconst _hoisted_31 = {\n  key: 0,\n  style: {\"margin-top\":\"20px\"}\n}\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"RBC classification result\", -1)\nconst _hoisted_33 = { style: {\"width\":\"100%\"} }\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Category\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Degree\")\n  ])\n], -1)\nconst _hoisted_36 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_37 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_38 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_39 = { key: 0 }\nconst _hoisted_40 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_41 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Others\", -1)\nconst _hoisted_42 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Platelets\", -1)\nconst _hoisted_43 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_44 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_45 = /*#__PURE__*/_createElementVNode(\"th\", null, null, -1)\nconst _hoisted_46 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Malaria\", -1)\nconst _hoisted_47 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_48 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_49 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_50 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_51 = { style: {\"margin-top\":\"20px\"} }\nconst _hoisted_52 = /*#__PURE__*/_createElementVNode(\"h3\", { style: {\"margin\":\"40px 0\",\"font-size\":\"1.2rem\",\"font-weight\":\"600\",\"text-align\":\"center\"} }, \"WBC classification result\", -1)\nconst _hoisted_53 = { style: {\"width\":\"100%\"} }\nconst _hoisted_54 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"30%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"45%\"} }),\n  /*#__PURE__*/_createElementVNode(\"col\", { style: {\"width\":\"25%\"} })\n], -1)\nconst _hoisted_55 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\"} }, \"Percent\")\n  ])\n], -1)\nconst _hoisted_56 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_57 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_58 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_59 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_60 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"font-weight\":\"bold\",\"padding\":\"5px 0\"} }, \"Total count\", -1)\nconst _hoisted_61 = { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }\nconst _hoisted_62 = /*#__PURE__*/_createElementVNode(\"td\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"100.00%\", -1)\nconst _hoisted_63 = { style: {\"padding-bottom\":\"5px\"} }\nconst _hoisted_64 = /*#__PURE__*/_createElementVNode(\"th\", { style: {\"text-align\":\"left\",\"padding\":\"5px 0\"} }, \"Comment\", -1)\nconst _hoisted_65 = {\n  colspan: \"2\",\n  style: {\"text-align\":\"left\",\"padding\":\"5px 0\"}\n}\nconst _hoisted_66 = {\n  class: \"print\",\n  style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"20px\"}\n}\nconst _hoisted_67 = { style: {\"font-weight\":\"bold\"} }\nconst _hoisted_68 = { style: {\"position\":\"relative\"} }\nconst _hoisted_69 = [\"src\", \"width\", \"height\"]\n\nimport {computed, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport { watch } from \"fs\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'print',\n  props: ['selectItems', 'printOnOff', 'selectItemWbc'],\n  emits: ['printClose'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst sessionStorageSelectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\n\r\nconst iaRootPath = commonDataGet.value.iaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = __emit;\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => imagePrintAndWbcArr.value.includes(item.id));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"button\", {\n      style: {\"position\":\"absolute\",\"right\":\"8px\",\"background\":\"none\",\"border\":\"1px solid #000\",\"border-radius\":\"5px\",\"padding\":\"7px 25px\",\"top\":\"5px\",\"cursor\":\"pointer\"},\n      onClick: closePrint\n    }, \"Close\"),\n    _createElementVNode(\"div\", {\n      ref_key: \"printContent\",\n      ref: printContent,\n      style: {\"margin-top\":\"20px\"}\n    }, [\n      _hoisted_2,\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"table\", _hoisted_4, [\n          _hoisted_5,\n          _createElementVNode(\"tbody\", null, [\n            _createElementVNode(\"tr\", _hoisted_6, [\n              _hoisted_7,\n              _createElementVNode(\"td\", _hoisted_8, _toDisplayString(__props.selectItems?.slotId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_9, [\n              _hoisted_10,\n              _createElementVNode(\"td\", _hoisted_11, _toDisplayString(_unref(formatDateString)(__props.selectItems?.orderDttm)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_12, [\n              _hoisted_13,\n              _createElementVNode(\"td\", _hoisted_14, _toDisplayString(__props.selectItems?.submitUserId), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_15, [\n              _hoisted_16,\n              _createElementVNode(\"td\", _hoisted_17, _toDisplayString(__props.selectItems?.submitOfDate), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_18, [\n              _hoisted_19,\n              _createElementVNode(\"td\", _hoisted_20, _toDisplayString(_unref(getTestTypeText)(__props.selectItems?.testType)), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_21, [\n              _hoisted_22,\n              _createElementVNode(\"td\", _hoisted_23, _toDisplayString(__props.selectItems?.patientName), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_24, [\n              _hoisted_25,\n              _createElementVNode(\"td\", _hoisted_26, _toDisplayString(__props.selectItems?.birthDay), 1)\n            ]),\n            _createElementVNode(\"tr\", _hoisted_27, [\n              _hoisted_28,\n              _createElementVNode(\"td\", _hoisted_29, _toDisplayString(__props.selectItems?.gender === '01' ? 'Male' : 'Female'), 1)\n            ])\n          ])\n        ]),\n        _createElementVNode(\"div\", _hoisted_30, [\n          (['01', '04'].includes(__props.selectItems?.testType))\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_31, [\n                _hoisted_32,\n                _createElementVNode(\"table\", _hoisted_33, [\n                  _hoisted_34,\n                  _hoisted_35,\n                  _createElementVNode(\"tbody\", null, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([__props.selectItems?.rbcInfo], (classList, outerIndex) => {\n                      return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                          return (_openBlock(), _createElementBlock(\"tr\", {\n                            key: innerIndex,\n                            style: {\"padding-bottom\":\"5px\"}\n                          }, [\n                            _createElementVNode(\"td\", _hoisted_36, _toDisplayString(category.categoryNm), 1),\n                            _createElementVNode(\"td\", _hoisted_37, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(\"div\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                              }), 128))\n                            ]),\n                            _createElementVNode(\"td\", _hoisted_38, [\n                              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                                return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                  (classInfo.classId !== '01' || category.categoryId === '05')\n                                    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_39, _toDisplayString(classInfo?.degree), 1))\n                                    : _createCommentVNode(\"\", true)\n                                ], 64))\n                              }), 128))\n                            ])\n                          ]))\n                        }), 128))\n                      ], 64))\n                    }), 128)),\n                    _createElementVNode(\"tr\", _hoisted_40, [\n                      _hoisted_41,\n                      _hoisted_42,\n                      _createElementVNode(\"th\", _hoisted_43, _toDisplayString(__props.selectItems?.rbcInfo.pltCount) + \" PLT / 1000 RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_44, [\n                      _hoisted_45,\n                      _hoisted_46,\n                      _createElementVNode(\"th\", _hoisted_47, _toDisplayString(__props.selectItems?.rbcInfo?.malariaCount) + \" / \" + _toDisplayString(__props.selectItems.maxRbcCount) + \" RBC\", 1)\n                    ]),\n                    _createElementVNode(\"tr\", _hoisted_48, [\n                      _hoisted_49,\n                      _createElementVNode(\"th\", _hoisted_50, _toDisplayString(sessionStorageSelectItems.value.rbcMemo), 1)\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"div\", _hoisted_51, [\n            _hoisted_52,\n            _createElementVNode(\"table\", _hoisted_53, [\n              _hoisted_54,\n              _hoisted_55,\n              _createElementVNode(\"tbody\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(filteredWbcInfo.value, (item) => {\n                  return (_openBlock(), _createElementBlock(\"tr\", {\n                    key: item.id,\n                    style: {\"padding-bottom\":\"5px\"}\n                  }, [\n                    _createElementVNode(\"th\", _hoisted_56, _toDisplayString(item?.name), 1),\n                    _createElementVNode(\"td\", _hoisted_57, _toDisplayString(item?.count), 1),\n                    _createElementVNode(\"td\", _hoisted_58, _toDisplayString(item?.percent) + \" %\", 1)\n                  ]))\n                }), 128)),\n                _createElementVNode(\"tr\", _hoisted_59, [\n                  _hoisted_60,\n                  _createElementVNode(\"td\", _hoisted_61, _toDisplayString(__props.selectItems?.wbcInfo?.totalCount), 1),\n                  _hoisted_62\n                ]),\n                _createElementVNode(\"tr\", _hoisted_63, [\n                  _hoisted_64,\n                  _createElementVNode(\"td\", _hoisted_65, _toDisplayString(sessionStorageSelectItems.value?.wbcMemo), 1)\n                ])\n              ])\n            ]),\n            _createElementVNode(\"ul\", _hoisted_66, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n                return (_openBlock(), _createElementBlock(\"li\", {\n                  key: item.id\n                }, [\n                  _createElementVNode(\"div\", _hoisted_67, _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1),\n                  _createElementVNode(\"ul\", {\n                    class: _normalizeClass('wbcImgWrap ' + item?.title),\n                    style: {\"list-style\":\"none\",\"padding-left\":\"0\",\"margin-top\":\"10px\"}\n                  }, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: image.fileName,\n                        style: {\"display\":\"inline-block\",\"margin-right\":\"10px\"}\n                      }, [\n                        _createElementVNode(\"div\", _hoisted_68, [\n                          _createElementVNode(\"img\", {\n                            src: getImageUrl(image.fileName, item.id, item.title),\n                            width: image.width ? image.width : '150px',\n                            height: image.height ? image.height : '150px',\n                            style: _normalizeStyle({ filter: image.filter }),\n                            class: \"cellImg\",\n                            ref_for: true,\n                            ref: \"cellRef\"\n                          }, null, 12, _hoisted_69),\n                          _createElementVNode(\"div\", {\n                            class: \"center-point\",\n                            style: _normalizeStyle(image.coordinates)\n                          }, null, 4)\n                        ])\n                      ]))\n                    }), 128))\n                  ], 2)\n                ]))\n              }), 128))\n            ])\n          ])\n        ])\n      ])\n    ], 512)\n  ]))\n}\n}\n\n})","<template>\r\n  <div style=\"width: 900px; height: 90%; overflow-y: auto; background: #fff; color: #000; position: absolute; top: 10%; left: 33%; box-sizing: border-box; padding: 3rem 7rem; border: 2px solid #ccc; border-radius: 10px;\">\r\n    <button style=\"position: absolute; right: 8px; background: none; border: 1px solid #000; border-radius: 5px; padding: 7px 25px; top: 5px; cursor: pointer\" @click=\"closePrint\">Close</button>\r\n    <div ref=\"printContent\" style=\"margin-top: 20px;\">\r\n      <div>\r\n        <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">Analysis Report from UIMD PB system</h3>\r\n      </div>\r\n      <div style=\"display: flex; flex-direction: column; justify-content: space-between;\">\r\n        <table style=\"width: 100%;\">\r\n          <colgroup>\r\n            <col style=\"width: 30%;\"/>\r\n            <col style=\"width: 70%;\"/>\r\n          </colgroup>\r\n          <tbody>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Slot ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.slotId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Ordered date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed by ID</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitUserId }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Signed date</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.submitOfDate }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left;\">Ordered Classification</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ getTestTypeText(selectItems?.testType) }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Name</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.patientName }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Birth</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.birthDay }}</td>\r\n          </tr>\r\n          <tr style=\"padding-bottom: 5px;\">\r\n            <th style=\"text-align: left; padding: 5px 0;\">Gender</th>\r\n            <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n          </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n        <div style=\"margin-top: 20px; border-top: 2px dotted #696969\">\r\n          <!-- RBC Classification -->\r\n          <div v-if=\"['01', '04'].includes(selectItems?.testType)\" style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">RBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th style=\"text-align: left;\">Category</th>\r\n                <th style=\"text-align: left;\">Class</th>\r\n                <th style=\"text-align: left;\">Degree</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <template v-for=\"(classList, outerIndex) in [selectItems?.rbcInfo]\" :key=\"outerIndex\">\r\n                <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                  <tr style=\"padding-bottom: 5px;\">\r\n                    <td style=\"text-align: left; padding: 5px 0;\">{{ category.categoryNm }}</td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div>{{ classInfo?.classNm }}</div>\r\n                      </template>\r\n                    </td>\r\n                    <td style=\"text-align: left; padding: 5px 0;\">\r\n                      <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                        <div v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">{{ classInfo?.degree }}</div>\r\n                      </template>\r\n                    </td>\r\n                  </tr>\r\n                </template>\r\n              </template>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Others</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Platelets</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo.pltCount }} PLT / 1000 RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th></th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">Malaria</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.rbcInfo?.malariaCount }} / {{ selectItems.maxRbcCount }} RBC</th>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <!-- <th></th> -->\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ sessionStorageSelectItems.rbcMemo }}</th>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          <!-- WBC Classification -->\r\n          <div style=\"margin-top: 20px;\">\r\n            <h3 style=\"margin: 40px 0; font-size: 1.2rem; font-weight: 600; text-align: center;\">WBC classification result</h3>\r\n            <table style=\"width: 100%;\">\r\n              <colgroup>\r\n                <col style=\"width: 30%;\"/>\r\n                <col style=\"width: 45%;\"/>\r\n                <col style=\"width: 25%;\"/>\r\n              </colgroup>\r\n              <thead>\r\n                <tr>\r\n                  <th style=\"text-align: left;\">Class</th>\r\n                  <th style=\"text-align: left;\">Count</th>\r\n                  <th style=\"text-align: left;\">Percent</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ item?.percent }} %</td>\r\n              </tr>\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; font-weight: bold; padding: 5px 0;\">Total count</th>\r\n                <td style=\"text-align: left; padding: 5px 0;\">{{ selectItems?.wbcInfo?.totalCount }}</td>\r\n                <td style=\"text-align: left; padding: 5px 0;\">100.00%</td>\r\n              </tr>\r\n              <!-- <tr v-for=\"item in filteredWbcInfo\" :key=\"item.id\" style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">{{ item?.name }}</th>\r\n                <td colspan=\"1\" style=\"text-align: left; padding: 5px 0;\">{{ item?.count }}\r\n                  <span v-if=\"item.id === '12' || item.id === '13'\"> / {{ selectItems?.wbcInfo?.maxWbcCount }} WBC</span>\r\n                </td>\r\n              </tr> -->\r\n              <tr style=\"padding-bottom: 5px;\">\r\n                <th style=\"text-align: left; padding: 5px 0;\">Comment</th>\r\n                <td colspan=\"2\" style=\"text-align: left; padding: 5px 0;\">{{ sessionStorageSelectItems?.wbcMemo }}</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n            <!-- Print List -->\r\n            <ul class=\"print\" style=\"list-style: none; padding-left: 0; margin-top: 20px;\">\r\n              <li v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n                <div style=\"font-weight: bold;\">{{ item?.title }} ({{ item?.count }})</div>\r\n                <ul :class=\"'wbcImgWrap ' + item?.title\" style=\"list-style: none; padding-left: 0; margin-top: 10px;\">\r\n                  <li v-for=\"(image) in item.images\" :key=\"image.fileName\" style=\"display: inline-block; margin-right: 10px;\">\r\n                    <div style=\"position: relative;\">\r\n                      <img :src=\"getImageUrl(image.fileName, item.id, item.title)\" :width=\"image.width ? image.width : '150px'\" :height=\"image.height ? image.height : '150px'\" :style=\"{ filter: image.filter }\" class=\"cellImg\" ref=\"cellRef\"/>\r\n                      <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {getImagePrintApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport { watch } from \"fs\";\r\n\r\nconst props = defineProps(['selectItems', 'printOnOff', 'selectItemWbc']);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst store = useStore();\r\n\r\nconst printContent = ref(null);\r\nconst wbcInfo = ref([]);\r\nconst wbcInfoImg = ref([]);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst sessionStorageSelectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\n\r\nconst iaRootPath = commonDataGet.value.iaRootPath;\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst imagePrintAndWbcArr = ref<string[]>([]);\r\nconst emit = defineEmits(['printClose']);\r\nconst nonWbcIdList = ['12', '13', '14', '15', '16'];\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = typeof props.selectItemWbc === 'object' ? props.selectItemWbc : JSON.parse(props.selectItemWbc);\r\n  await getImagePrintData();\r\n  await printPage();\r\n});\r\n\r\nconst filteredWbcInfo = computed(() => {\r\n  return wbcInfo.value.filter((item: any) => !nonWbcIdList.includes(item.id) && item.count > 0);\r\n});\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const slotId = props.selectItems.slotId || \"\";\r\n  const folderPath = window.PROJECT_TYPE === 'bm' ? `${path}/${slotId}/04_BM_Classification/${id}_${title}` : `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n\r\n}\r\n\r\n\r\nconst printPage = async () => {\r\n  try {\r\n    // 프린트할 컨텐츠를 가져옴\r\n    const content = printContent.value;\r\n    if (!content) {\r\n      throw new Error(\"프린트할 내용을 찾을 수 없습니다.\");\r\n    }\r\n\r\n    // HTML 컨텐츠를 Gzip으로 압축\r\n    const compressedContent = pako.gzip(content.innerHTML, { level: 9 });\r\n\r\n    // HTML 컨텐츠를 PDF로 변환하는 요청을 보냄\r\n    const response = await fetch(`${apiBaseUrl}/pdf/convert`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/octet-stream',\r\n        'Content-Encoding': 'gzip'\r\n      },\r\n      body: compressedContent\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('HTML을 PDF로 변환하는데 실패했습니다.');\r\n    }\r\n\r\n    // 받은 PDF 파일을 브라우저의 PDF 뷰어로 열기\r\n    const blob = await response.blob();\r\n    const url = window.URL.createObjectURL(blob);\r\n    window.open(url, '_blank', 'width=800,height=500,noopener,noreferrer');\r\n    window.URL.revokeObjectURL(url);\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\nconst getImagePrintData = async () => {\r\n  try {\r\n    const result = await getImagePrintApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n\r\n      if (!data || (data instanceof Array && data.length === 0)) {\r\n        console.log(null);\r\n      } else {\r\n        imagePrintAndWbcArr.value = data.filter((item) => item.checked).map(item => item.classId);\r\n\r\n        // 이미지 프린트 및 wbc 배열에 없는 아이디 제거\r\n        wbcInfo.value = wbcInfo.value.filter((item: any) => imagePrintAndWbcArr.value.includes(item.id));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst closePrint = () => {\r\n  emit('printClose');\r\n}\r\n\r\n</script>\r\n","import script from \"./print.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./print.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const basicWbcArr = [\r\n    {\r\n        id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, key: '', order: 1\r\n    }, {\r\n        id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n    }, {\r\n        id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n    }, {\r\n        id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, key: '', order: 4\r\n    }, {\r\n        id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, key: '', order: 5\r\n    }, {\r\n        id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, key: '', order: 6\r\n    }, {\r\n        id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, key: '', order: 7\r\n    }, {\r\n        id: '61', title: 'LR', name: 'Reactive lymphocyte', count: 0, percent: 0, key: '', order: 8\r\n    }, {\r\n        id: '62', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, key: '', order: 9\r\n    }, {\r\n        id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, key: '', order: 10\r\n    }, {\r\n        id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, key: '', order: 11\r\n    }, {\r\n        id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, key: '', order: 12\r\n    }, {\r\n        id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, key: '', order: 13\r\n    }, {\r\n        id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, key: '', order: 14\r\n    }, {\r\n        id: '12', title: 'NR', name: 'nRBC', count: 0, percent: 0, key: '', order: 15\r\n    }, {\r\n        id: '13', title: 'GP', name: 'Giant platelet', count: 0, percent: 0, key: '', order: 16\r\n    }, {\r\n        id: '14', title: 'PA', name: 'Platelet aggregation', count: 0, percent: 0, key: '', order: 17\r\n    }, {\r\n        id: '16', title: 'MA', name: 'Malaria', count: 0, percent: 0, key: '', order: 18\r\n    }, {\r\n        id: '15', title: 'AR', name: 'Artifact', count: 0, percent: 0, key: '', order: 19\r\n    }, {\r\n        id: '17', title: 'SM', name: 'Smudge', count: 0, percent: 0, key: '', order: 20\r\n    }\r\n\r\n\r\n]\r\n\r\nexport const basicBmClassList = [\r\n{\r\n    id: '01', title: 'NE', name: 'Neutrophil', count: 0, percent: 0, order: 1\r\n}, {\r\n    id: '71', title: 'NS', name: 'Neutrophil-Segmented', count: 0, percent: 0, key: '', order: 2\r\n}, {\r\n    id: '72', title: 'NB', name: 'Neutrophil-Band', count: 0, percent: 0, key: '', order: 3\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', count: 0, percent: 0, order: 4\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', count: 0, percent: 0, order: 5\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', count: 0, percent: 0, order: 6\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', count: 0, percent: 0, order: 7\r\n}, {\r\n    id: '06', title: 'LA', name: 'Abnormal lymphocyte', count: 0, percent: 0, order: 8\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', count: 0, percent: 0, order: 9\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', count: 0, percent: 0, order: 10\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', count: 0, percent: 0, order: 11\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', count: 0, percent: 0, order: 12\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', count: 0, percent: 0, order: 13\r\n}, {\r\n    id: '12', title: 'ON', name: 'Orthochromic Normoblast', count: 0, percent: 0, order: 14\r\n}, {\r\n    id: '13', title: 'PN', name: 'Polychromic Normoblast', count: 0, percent: 0, order: 15\r\n}, {\r\n    id: '14', title: 'BN', name: 'Basophilic Normoblast', count: 0, percent: 0, order: 16\r\n}, {\r\n    id: '15', title: 'PE', name: 'Proerythroblast', count: 0, percent: 0, order: 17\r\n}, {\r\n    id: '16', title: 'HC', name: 'Histiocyte', count: 0, percent: 0, order: 18\r\n}, {\r\n    id: '17', title: 'OT', name: 'Others', count: 0, percent: 0, order: 19\r\n}]","<template>\r\n  <table class='defaultTable mt2 dbDataTable'>\r\n    <thead>\r\n    <tr>\r\n      <th>NO</th>\r\n      <th>\r\n        <input type=\"checkbox\" v-model=\"selectAllCheckbox\" @change=\"selectAllItems\"/>\r\n      </th>\r\n      <th>Type</th>\r\n      <th>State</th>\r\n      <th>Tray Slot</th>\r\n      <th>Barcode NO</th>\r\n      <th>Patient ID</th>\r\n      <th>Patient Name</th>\r\n      <th>Analyzed Date</th>\r\n      <th>Tact Time(S)</th>\r\n      <th>Submit</th>\r\n      <th>Submit Date</th>\r\n      <th>Edit</th>\r\n    </tr>\r\n    </thead>\r\n    <colgroup>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"3%\"/>\r\n      <col width=\"15%\"/>\r\n      <col width=\"3%\"/>\r\n    </colgroup>\r\n    <tbody v-if=\"dbData.length !== 0\">\r\n    <template v-for=\"(item, idx) in dbData\"\r\n              :key=\"item.id\">\r\n      <tr :class=\"{ selectedTr: selectedItemId === item.id, submittedTr: item.submitState === 'Submit', rock: item.lock_status && item.pcIp !== myIp, checkFirst: item.submitState === 'checkFirst' }\"\r\n          @click=\"selectItem(item)\"\r\n          @dblclick='rowDbClick(item)'\r\n          ref=\"firstRow\"\r\n          style=\"height: 49px\"\r\n          v-bind:data-row-id=\"item.id\"\r\n          @contextmenu.prevent=\"rowRightClick(item, $event)\"\r\n      >\r\n        <td> {{ idx + 1 }}</td>\r\n        <td>\r\n          <input type=\"checkbox\" v-model=\"item.checked\" @change=\"handleCheckboxChange(item)\" :checked=\"item.checked\"/>\r\n        </td>\r\n        <td> {{ projectType !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType) }}</td>\r\n        <td>\r\n          <font-awesome-icon\r\n              :icon=\"['fas', `${!item?.lock_status ? 'lock-open' : 'lock' }`]\"\r\n          />\r\n        </td>\r\n        <td> {{ item?.traySlot }}</td>\r\n        <td> {{ item?.barcodeNo }}</td>\r\n        <td> {{ item?.patientId }}</td>\r\n        <td> {{ item?.patientNm }}</td>\r\n        <td> {{ item?.analyzedDttm === '' ? '' : formatDateString(item?.analyzedDttm) }}</td>\r\n        <td> {{ item?.tactTime }}</td>\r\n        <td> {{ submitStateChangeText(item?.submitState, item?.submitUserId) }}</td>\r\n        <td> {{ item?.submitOfDate === '' || !item?.submitOfDate ? '' : formatDateString(item?.submitOfDate) }}</td>\r\n        <td>\r\n          <font-awesome-icon v-if=\"item?.submitState === 'checkFirst' || item?.submitState === ''\"\r\n                             :icon=\"['fas', 'pen-to-square']\"\r\n                             @click=\"editData(item)\"/>\r\n        </td>\r\n      </tr>\r\n    </template>\r\n    <tr>\r\n      <div ref=\"loadMoreRef\" style=\"height: 10px;\"></div>\r\n    </tr>\r\n    </tbody>\r\n    <tbody v-else>\r\n    <tr class=\"text-center\">\r\n      <td colspan=\"13\"> NO Data</td>\r\n    </tr>\r\n    </tbody>\r\n  </table>\r\n  <div v-if=\"contextMenu.visible\" :style=\"{ top: (contextMenu.y - 60) + 'px', left: contextMenu.x + 'px' }\"\r\n       class=\"context-menu\">\r\n    <ul>\r\n      <li @click=\"printStart\">Print</li>\r\n      <li @click=\"classificationRowDbClick\">Classification</li>\r\n      <li @click=\"editOrderData\">Edit order data</li>\r\n      <li @click=\"deleteRow\">Delete</li>\r\n      <li>export XLSX</li>\r\n    </ul>\r\n  </div>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Edit order data</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div>\r\n        <ul class=\"editOrder\">\r\n          <li>\r\n            <span>PB/BF</span>\r\n            <input type=\"text\" v-model=\"itemObj.testType\"/>\r\n          </li>\r\n          <li>\r\n            <span>Tray Slot</span>\r\n            <input type=\"text\" readonly v-model=\"itemObj.traySlot\"/>\r\n          </li>\r\n          <li>\r\n            <span>BARCODE ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.barcodeNo\" placeholder=\"BARCODE ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT ID</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientId\" placeholder=\"PATIENT ID\"/>\r\n          </li>\r\n          <li>\r\n            <span>PATIENT NAME</span>\r\n            <input type=\"text\" v-model=\"itemObj.patientNm\" placeholder=\"PATIENT NAME\"/>\r\n          </li>\r\n          <li>\r\n            <span>Analyzed date</span>\r\n            <input type=\"text\" v-model=\"itemObj.analyzedDttm\" readonly/>\r\n          </li>\r\n          <li>\r\n            <span>Signed state</span>\r\n            <input type=\"text\" v-model=\"itemObj.submitState\" readonly/>\r\n          </li>\r\n          <li>\r\n            <p>Barcode Image</p>\r\n            <img class=\"mt1\" :src=\"barcodeImg\"/>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"modalBottom\">\r\n        <button @click=\"dbDataEditSet\">Ok</button>\r\n      </div>\r\n    </template>\r\n  </Modal>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"rightClickItem\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup>\r\nimport {getBarcodeDetailImageUrl, getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  watchEffect,\r\n  defineProps,\r\n  defineEmits,\r\n  computed,\r\n  nextTick,\r\n  onUnmounted,\r\n  getCurrentInstance\r\n} from 'vue';\r\nimport router from \"@/router\";\r\nimport Modal from \"@/components/commonUi/modal.vue\";\r\nimport {deleteRunningApi, updatePcIpStateApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport {getRbcDegreeApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport moment from \"moment\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\n\r\nconst props = defineProps(['dbData']);\r\nconst loadMoreRef = ref(null);\r\nconst emits = defineEmits();\r\nconst selectedItemId = ref('');\r\nconst visible = ref(false);\r\nconst itemObj = ref({});\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst projectType = ref('');\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst myIp = ref('');\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\n\r\n\r\nconst contextMenu = ref({\r\n  visible: false,\r\n  x: 0,\r\n  y: 0\r\n});\r\nconst rbcDegreeStandard = ref([]);\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst userId = ref('');\r\nconst rightClickItem = ref({});\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst selectItemWbc = ref([]);\r\nconst selectAllCheckbox = ref(false);\r\nconst instance = getCurrentInstance();\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  myIp.value = JSON.parse(sessionStorage.getItem('pcIp'));\r\n  projectType.value = window.PROJECT_TYPE;\r\n  try {\r\n\r\n    userId.value = getStoredUser.id;\r\n    await getRbcDegreeData();\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n  document.addEventListener('click', handleOutsideClick);\r\n})\r\n\r\nonUnmounted(() => {\r\n  document.removeEventListener('click', handleOutsideClick);\r\n});\r\nwatchEffect(async () => {\r\n  if (props.dbData.length > 0) {\r\n    await nextTick();\r\n    // 첫 번째 행을 클릭\r\n    const dbBaseTrClickId = sessionStorage.getItem('dbBaseTrClickId') || 0;\r\n    const filteredItems = props.dbData.filter(item => item.id === Number(dbBaseTrClickId));\r\n    selectItem(filteredItems[0]);\r\n    const observer = new IntersectionObserver(handleIntersection, {\r\n      root: null,\r\n      rootMargin: '0px',\r\n      threshold: 0.5,\r\n    });\r\n    if (loadMoreRef.value) {\r\n      observer.observe(loadMoreRef.value);\r\n    }\r\n  }\r\n});\r\n\r\n\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n  resetContextMenu();\r\n}\r\nconst editOrderData = () => {\r\n  editData(rightClickItem.value);\r\n  resetContextMenu();\r\n};\r\n\r\nconst classificationRowDbClick = () => {\r\n  rowDbClick(rightClickItem.value);\r\n  resetContextMenu();\r\n}\r\nconst selectAllItems = () => {\r\n  props.dbData.forEach(item => {\r\n    item.checked = selectAllCheckbox.value;\r\n  });\r\n};\r\n\r\nconst resetContextMenu = () => {\r\n  contextMenu.value.x = 0;\r\n  contextMenu.value.y = 0;\r\n  contextMenu.value.visible = false;\r\n}\r\n\r\nconst handleOutsideClick = (event) => {\r\n  const contextMenuElement = document.querySelector('.context-menu');\r\n  if (contextMenuElement && !contextMenuElement.contains(event.target)) {\r\n    resetContextMenu();\r\n  }\r\n};\r\n\r\n\r\nconst rowRightClick = (item, event) => {\r\n  if (props.dbData.filter(item => item.checked).length === 0) {\r\n    showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n    return;\r\n  }\r\n  rightClickItem.value = item;\r\n  if (Object.keys(item?.wbcInfo).length !== 0) {\r\n    const wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n    const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n    selectItemWbc.value = sortedArray;\r\n  }\r\n  if (event) {\r\n    contextMenu.value.x = event.clientX;\r\n    contextMenu.value.y = event.clientY;\r\n    contextMenu.value.visible = true;\r\n  }\r\n};\r\n\r\nconst handleCheckboxChange = (item) => {\r\n  if (!item.hasOwnProperty('checked')) { // 체크드 하는 부분이 없으면 넣어줘야 갱신 가능\r\n    item.checked = false;\r\n  }\r\n};\r\n\r\n\r\nconst handleIntersection = (entries, observer) => {\r\n  entries.forEach((entry) => {\r\n    if (entry.isIntersecting && entry.intersectionRatio !== 1) {\r\n      emits('loadMoreData');\r\n    }\r\n  });\r\n};\r\n\r\nconst showSuccessAlert = (message) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\nconst selectItem = (item) => {\r\n  // 부모로 전달\r\n  if (!item) {\r\n    return;\r\n  }\r\n  emits('selectItem', item);\r\n  selectedItemId.value = item.id;\r\n  sessionStorage.setItem('dbBaseTrClickId', item.id);\r\n\r\n  // 선택된 행이 화면에 보이도록 스크롤 조정\r\n  const selectedRow = document.querySelector(`[data-row-id=\"${item.id}\"]`);\r\n  if (selectedRow) {\r\n    selectedRow.scrollIntoView({behavior: 'smooth', block: 'center'});\r\n  }\r\n};\r\nconst getIpAddress = async (item) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    const ipAddress = result.data;\r\n    const req = `oldPcIp=${ipAddress}&newEntityId=${item.id}&newPcIp=${ipAddress}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log(error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\nconst rowDbClick = async (item) => {\r\n  if (item.lock_status) {\r\n    return;\r\n  }\r\n\r\n  let wbcInfoData = [];\r\n  if (Object.keys(item?.wbcInfo).length === 0) {\r\n    wbcInfoData = projectType.value !== 'bm' ? basicWbcArr : basicBmClassList;\r\n    item.wbcInfo = projectType.value !== 'bm' ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]};\r\n  } else {\r\n    wbcInfoData = item?.wbcInfo?.wbcInfo[0];\r\n  }\r\n\r\n  const sortedArray = wbcInfoData.sort((a, b) => a.id - b.id);\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(item?.rbcInfo));\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedArray));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(item));\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: item.wbcInfoAfter});\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedRbcInfo: item.rbcInfo.rbcClass});\r\n  await getIpAddress(item);\r\n  await router.push('/databaseDetail');\r\n\r\n}\r\n\r\n\r\nconst getRbcDegreeData = async () => {\r\n  try {\r\n    const result = await getRbcDegreeApi();\r\n    const data = result.data;\r\n    rbcDegreeStandard.value = data\r\n  } catch (e) {\r\n    // console.log(e);\r\n  }\r\n};\r\n\r\n\r\nconst closeLayer = (val) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onModalOpen = () => {\r\n  //\r\n};\r\n\r\nconst dbDataEditSet = async () => {\r\n  try {\r\n    const updatedRuningInfo = {\r\n      id: itemObj.value.id,\r\n      barcodeNo: itemObj.value.barcodeNo,\r\n      patientId: itemObj.value.patientId,\r\n      patientNm: itemObj.value.patientNm,\r\n    };\r\n\r\n    const localDbData = [...props.dbData];\r\n\r\n    const indexToUpdate = localDbData.findIndex(item => item.id === itemObj.value.id);\r\n\r\n    if (indexToUpdate !== -1) {\r\n      localDbData[indexToUpdate] = {...localDbData[indexToUpdate], ...updatedRuningInfo};\r\n    }\r\n\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [localDbData[indexToUpdate]]\r\n    })\r\n    if (response) {\r\n      showSuccessAlert('success');\r\n      emits('initData');\r\n      closeLayer();\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst editData = async (item) => {\r\n  openLayer();\r\n  itemObj.value = JSON.parse(JSON.stringify(item));\r\n  itemObj.value.submitState = ['','Ready','checkFirst'].includes(itemObj.value.submitState) ? '' : itemObj.value.submitState;\r\n  itemObj.value.testType = projectType.value !== 'bm' ? getTestTypeText(item?.testType) : getBmTestTypeText(item?.testType);\r\n  const path = item?.img_drive_root_path !== '' && item?.img_drive_root_path ? item?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, item.slotId, barcodeImgDir.barcodeDirName);\r\n\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst deleteRow = async () => {\r\n  try {\r\n    const selectedItems = props.dbData.filter(item => item.checked);\r\n    if (selectedItems.length === 0) {\r\n      showSuccessAlert(messages.IDS_ERROR_SELECT_A_TARGET_ITEM);\r\n      return;\r\n    }\r\n\r\n    const idsToDelete = selectedItems.map(item => item.id);\r\n    const path = selectedItems?.img_drive_root_path !== '' && selectedItems?.img_drive_root_path ? selectedItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n    const rootArr = selectedItems.map(item => `${path}/${item.slotId}`);\r\n    const req = {\r\n      ids: idsToDelete,\r\n      img_drive_root_path: rootArr\r\n    }\r\n    const response = await deleteRunningApi(req);\r\n\r\n    if (response.success) {\r\n      showSuccessAlert('Items deleted successfully');\r\n      emits('refresh'); // 데이터 다시 불러오기\r\n      resetContextMenu();\r\n    } else {\r\n      console.error('Failed to delete items');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst submitStateChangeText = (text, submitUserId) => {\r\n  switch (text) {\r\n    case 'Ready':\r\n      return 'Ready';\r\n    case 'Submit':\r\n      return `Submit (${submitUserId})`;\r\n    default:\r\n      return 'Ready';\r\n  }\r\n\r\n}\r\n\r\n\r\n</script>\r\n\r\n","import script from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listTable.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<!-- ListInfo.vue -->\r\n<template>\r\n\r\n  <div v-if=\"Object.keys(selectedItem).length !== 0\">\r\n    <div>\r\n      <h3 class=\"orderTitle hh3title\">Order Information</h3>\r\n      <ul class=\"orderListUi\">\r\n        <li>Order ID <span>{{ selectedItem?.slotId }}</span>  </li>\r\n        <li>LIS status <span>No data sent or received from LIS</span>  </li>\r\n        <li>Type of order <span>No data sent or received from LIS</span>\r\n          <span v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">WBC + RBC</span>\r\n          <span v-else>{{ selectedItem?.testType }}</span>\r\n        </li> \r\n        <li>NS, NB Integration <span>{{ selectedItem?.isNsNbIntegration }}</span>  </li>\r\n        <li>Patient ID <span>{{ selectedItem?.patientId }}</span>  </li>\r\n        <li>Patient Name <span>{{ selectedItem?.patientNm }}</span>  </li>\r\n        <li>\r\n          <img :src=\"pilePath\" style=\"width: 235px\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div>\r\n      <h3 class=\"mt2 mb1 hh3title\">Result Information</h3>\r\n      <ul>\r\n        <li>Analyzed Date <span>{{ formatDateString(selectedItem?.analyzedDttm) }}</span></li>\r\n        <li>Signed State <span>{{ selectedItem?.submitState }}</span></li>\r\n        <li>Signed of Date <span>{{ selectedItem?.submitOfDate }}</span></li>\r\n        <li>Signed User ID <span>{{ selectedItem?.submitUserId }}</span></li>\r\n        <li v-if=\"selectedItem?.testType === '01' || selectedItem?.testType === '04'\">\r\n          <div v-if=\"showClassificationResults(selectedItem?.classificationResult)\">\r\n            <div v-for=\"result in selectedItem.classificationResult\" :key=\"result.title\">\r\n              <p>{{ result.title }}</p>\r\n              <p>{{ result.count }}</p>\r\n              <p>{{ result.percent }}</p>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup >\r\nimport {ref, defineProps, onMounted, watchEffect, watch, nextTick} from 'vue';\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport moment from \"moment/moment\";\r\n\r\nconst props = defineProps(['selectedItem']);\r\nconst iaRootPath = ref('');\r\nconst pilePath = ref('');\r\n\r\n\r\nonMounted(() => {\r\n  // iaRootPath가 존재하면 getImageUrl 함수 호출\r\n  iaRootPath.value = sessionStorage.getItem('iaRootPath');\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg');\r\n  }\r\n});\r\nwatch(() => props.selectedItem, (newSelectedItem) => {\r\n  if (iaRootPath.value) {\r\n    pilePath.value = getImageUrl('barcode_image.jpg', newSelectedItem);\r\n  }\r\n});\r\n\r\nconst formatDateString = (dateString) => {\r\n  const momentObj = moment(dateString, 'YYYYMMDDHHmmssSSSSS');\r\n  return momentObj.format('YYYY-MM-DD HH:mm:ss');\r\n}\r\nconst showClassificationResults = (classificationResult) => {\r\n  return (\r\n      classificationResult &&\r\n      classificationResult.length > 0 &&\r\n      !['12_NR', '13_GP', '14_PA', '15_AR', '16_MA', '17_SM'].includes(result.dirName)\r\n  );\r\n\r\n};\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nfunction getImageUrl(imageName){\r\n  const path = props.selectedItem?.img_drive_root_path !== '' && props.selectedItem?.img_drive_root_path ? props.selectedItem?.img_drive_root_path : iaRootPath.value;\r\n  return `${apiBaseUrl}/images?folder=${path + '/' + props.selectedItem.slotId + '/' + barcodeImgDir.barcodeDirName + '/'}&imageName=${imageName}`;\r\n}\r\n\r\n</script>\r\n","import script from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./listInfo.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, normalizeClass as _normalizeClass, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4e8f47d4\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"WBC Images\", -1))\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbWbcImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\", \"onClick\"]\nconst _hoisted_5 = { key: 1 }\n\nimport { onMounted, ref, watch } from 'vue';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listWbcImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: _normalizeClass([\"dbRightImages\", ['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]]),\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName)),\n                  onClick: ($event: any) => (clickImage(`${imageSet.id}-${image.fileName}`))\n                }, null, 42, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">WBC Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbWbcImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :class=\"['dbRightImages', {'selected-image': isSelectedImage(`${imageSet.id}-${image.fileName}`)}]\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n            @click=\"clickImage(`${imageSet.id}-${image.fileName}`)\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, onMounted, ref, watch } from 'vue';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst selectedImage = ref('');\r\n\r\nonMounted(() => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  allImages.value = [];\r\n  createAllImages();\r\n},{deep: true});\r\n\r\n\r\nconst clickImage = (selectImageText: string) => {\r\n  if (selectedImage.value === selectImageText) {\r\n    selectedImage.value = '';\r\n  } else {\r\n    selectedImage.value = selectImageText\r\n  }\r\n}\r\n\r\nconst isSelectedImage = (selectImageText: string) => {\r\n  return selectedImage.value === selectImageText;\r\n}\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.img_drive_root_path !== '' && selectedItem?.img_drive_root_path ? selectedItem?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/01_WBC_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.image-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  max-height: 348px;\r\n  overflow: auto;\r\n}\r\n\r\n.image-container img {\r\n  max-width: 100px;\r\n  max-height: 100px;\r\n  margin: 5px;\r\n}\r\n</style>\r\n","import script from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listWbcImg.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./listWbcImg.vue?vue&type=style&index=0&id=4e8f47d4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e8f47d4\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt3\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"mb1 hh3title infoImageTitle\" }, \"BM Images\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"dbBmImageContainer\"\n}\nconst _hoisted_4 = [\"src\", \"onError\"]\nconst _hoisted_5 = { key: 1 }\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listBmImg',\n  props: ['dbData', 'selectedItem'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (allImages.value.length > 0)\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(allImages.value, (imageSet) => {\n            return (_openBlock(), _createElementBlock(_Fragment, {\n              key: imageSet.id\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(imageSet.images, (image) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"img\", {\n                  key: image.fileName,\n                  class: \"dbRightImages\",\n                  src: getImageUrl(image.fileName, imageSet.id, imageSet.title),\n                  onError: ($event: any) => (hideImage(imageSet.id, image.fileName))\n                }, null, 40, _hoisted_4)), [\n                  [_vShow, !hiddenImages.value[`${imageSet.id}-${image.fileName}`]]\n                ])\n              }), 128))\n            ], 64))\n          }), 128))\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"No images available\"))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"mt3\">\r\n    <h3 class=\"mb1 hh3title infoImageTitle\">BM Images</h3>\r\n    <div v-if=\"allImages.length > 0\" class=\"dbBmImageContainer\">\r\n      <template v-for=\"imageSet in allImages\" :key=\"imageSet.id\">\r\n        <img\r\n            v-for=\"image in imageSet.images\"\r\n            :key=\"image.fileName\"\r\n            class=\"dbRightImages\"\r\n            :src=\"getImageUrl(image.fileName, imageSet.id, imageSet.title)\"\r\n            @error=\"hideImage(imageSet.id, image.fileName)\"\r\n            v-show=\"!hiddenImages[`${imageSet.id}-${image.fileName}`]\"\r\n        />\r\n      </template>\r\n    </div>\r\n    <div v-else>No images available</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {useStore} from 'vuex';\r\n\r\nconst props = defineProps(['dbData', 'selectedItem']);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst allImages = ref([]);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\n\r\nonMounted(() => {\r\n  createAllImages();\r\n});\r\n\r\nwatch(() => props.selectedItem, () => {\r\n  createAllImages();\r\n});\r\n\r\nfunction createAllImages(): void {\r\n  if (!props.selectedItem?.wbcInfo) {\r\n    return;\r\n  }\r\n  if (Object.keys(props.selectedItem?.wbcInfo).length === 0) {\r\n    return;\r\n  }\r\n  allImages.value = props.selectedItem?.wbcInfo?.wbcInfo[0]?.reduce((acc: any, item: any) => {\r\n    if (item.images && item.images.length > 0) {\r\n      acc.push({\r\n        id: item.id,\r\n        images: item.images,\r\n        title: item.title,\r\n      });\r\n    }\r\n    return acc;\r\n  }, []) || [];\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string): string {\r\n  const { selectedItem } = props;\r\n\r\n  if (!selectedItem?.wbcInfo?.wbcInfo || selectedItem?.wbcInfo?.wbcInfo.length === 0) {\r\n    return '';\r\n  }\r\n\r\n  const slotId = selectedItem.slotId || '';\r\n  const path = selectedItem?.rootPath !== '' && selectedItem?.rootPath ? selectedItem?.rootPath : iaRootPath.value;\r\n  const folderPath = `${path}/${slotId}/04_BM_Classification/${id}_${title}`;\r\n  return `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n}\r\n\r\nfunction hideImage(id: string, fileName: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n</script>\r\n","import script from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listBmImg.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelCheckbox as _vModelCheckbox, toDisplayString as _toDisplayString, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"titleH3\" }\nconst _hoisted_2 = { class: \"listBoxTable\" }\nconst _hoisted_3 = { class: \"filterListDiv\" }\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"barcodeNo\" }, \"Barcode No\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientId\" }, \"Patient ID\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"patientNm\" }, \"Patient Name\", -1)\nconst _hoisted_7 = [\n  _hoisted_4,\n  _hoisted_5,\n  _hoisted_6\n]\nconst _hoisted_8 = { class: \"settingDatePickers\" }\nconst _hoisted_9 = {\n  key: 0,\n  class: \"filterDivBox\"\n}\nconst _hoisted_10 = {\n  key: 0,\n  class: \"nrCount\"\n}\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"span\", null, \"NR count\", -1)\nconst _hoisted_12 = { class: \"wbcTotal\" }\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Total\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"option\", { value: \"all\" }, \"Do Not Select\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"option\", null, \"DESC\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"option\", null, \"ASC\", -1)\nconst _hoisted_17 = [\n  _hoisted_14,\n  _hoisted_15,\n  _hoisted_16\n]\nconst _hoisted_18 = {\n  key: 1,\n  class: \"wbcInfoFilter\"\n}\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", null, \"WBC Info Filter\", -1)\nconst _hoisted_20 = { class: \"wbcInfoFilter\" }\nconst _hoisted_21 = [\"id\", \"onUpdate:modelValue\"]\nconst _hoisted_22 = [\"for\"]\nconst _hoisted_23 = { class: \"lastTestType\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Test Type\", -1)\nconst _hoisted_25 = [\"checked\"]\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"span\", null, \"ALL\", -1)\nconst _hoisted_27 = [\"checked\"]\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Diff\", -1)\nconst _hoisted_29 = [\"checked\"]\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"span\", null, \"PBS\", -1)\nconst _hoisted_31 = { class: \"listBox\" }\n\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"h3\", _hoisted_1, [\n        _createTextVNode(\" Classification List \"),\n        _createElementVNode(\"button\", { onClick: classListToggleEvent }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'list-check'] })\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createElementVNode(\"div\", null, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchType).value = $event)),\n              class: \"searchSelect\"\n            }, _hoisted_7, 512), [\n              [_vModelSelect, searchType.value]\n            ]),\n            _withDirectives(_createElementVNode(\"input\", {\n              type: \"text\",\n              \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((searchText).value = $event)),\n              class: \"searchInputBox\"\n            }, null, 512), [\n              [_vModelText, searchText.value]\n            ]),\n            _createElementVNode(\"div\", _hoisted_8, [\n              _createVNode(_unref(Datepicker), {\n                modelValue: startDate.value,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((startDate).value = $event))\n              }, null, 8, [\"modelValue\"]),\n              _createVNode(_unref(Datepicker), {\n                modelValue: endDate.value,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((endDate).value = $event))\n              }, null, 8, [\"modelValue\"])\n            ]),\n            _createElementVNode(\"button\", {\n              class: \"searchClass\",\n              onClick: search\n            }, \"Search\")\n          ]),\n          (classListToggle.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [\n                      _hoisted_11,\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"text\",\n                        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((nrCount).value = $event))\n                      }, null, 512), [\n                        [_vModelText, nrCount.value]\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_12, [\n                  _hoisted_13,\n                  _withDirectives(_createElementVNode(\"select\", {\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((wbcCountOrder).value = $event))\n                  }, _hoisted_17, 512), [\n                    [_vModelSelect, wbcCountOrder.value]\n                  ])\n                ]),\n                (!bmClassIsBoolen.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_18, [\n                      _hoisted_19,\n                      _createElementVNode(\"ul\", _hoisted_20, [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(titleItem.value, (item, idx) => {\n                          return (_openBlock(), _createElementBlock(\"li\", { key: idx }, [\n                            _withDirectives(_createElementVNode(\"input\", {\n                              type: \"checkbox\",\n                              id: 'checkbox_' + idx,\n                              \"onUpdate:modelValue\": ($event: any) => ((item.checked) = $event),\n                              onChange: updateFilter\n                            }, null, 40, _hoisted_21), [\n                              [_vModelCheckbox, item.checked]\n                            ]),\n                            _createElementVNode(\"label\", {\n                              for: 'checkbox_' + idx\n                            }, _toDisplayString(item.title), 9, _hoisted_22)\n                          ]))\n                        }), 128))\n                      ])\n                    ]))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"div\", _hoisted_23, [\n                  _hoisted_24,\n                  _createElementVNode(\"div\", null, [\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"00\",\n                        onChange: _cache[6] || (_cache[6] = ($event: any) => (changeTestType('00'))),\n                        checked: testType.value === '00'\n                      }, null, 40, _hoisted_25),\n                      _hoisted_26\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"01\",\n                        onChange: _cache[7] || (_cache[7] = ($event: any) => (changeTestType('01'))),\n                        checked: testType.value === '01'\n                      }, null, 40, _hoisted_27),\n                      _hoisted_28\n                    ]),\n                    _createElementVNode(\"label\", null, [\n                      _createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: \"02\",\n                        onChange: _cache[8] || (_cache[8] = ($event: any) => (changeTestType('04'))),\n                        checked: testType.value === '04'\n                      }, null, 40, _hoisted_29),\n                      _hoisted_30\n                    ])\n                  ])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createVNode(ListTable, {\n          dbData: dbGetData.value,\n          onLoadMoreData: loadMoreData,\n          onInitData: initDbData,\n          onSelectItem: selectItem,\n          onRefresh: refresh\n        }, null, 8, [\"dbData\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_31, [\n        _createVNode(ListInfo, {\n          dbData: dbGetData.value,\n          selectedItem: selectedItem.value\n        }, null, 8, [\"dbData\", \"selectedItem\"]),\n        (!bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListWbcImg, {\n              key: 0,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true),\n        (bmClassIsBoolen.value)\n          ? (_openBlock(), _createBlock(ListBmImg, {\n              key: 1,\n              dbData: dbGetData.value,\n              selectedItem: selectedItem.value\n            }, null, 8, [\"dbData\", \"selectedItem\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div>\r\n    <h3 class=\"titleH3\">\r\n      Classification List\r\n      <button @click=\"classListToggleEvent\">\r\n        <font-awesome-icon :icon=\"['fas', 'list-check']\"/>\r\n      </button>\r\n    </h3>\r\n    <div class='listBoxTable'>\r\n      <div class=\"filterListDiv\">\r\n        <div>\r\n          <select v-model=\"searchType\" class=\"searchSelect\">\r\n            <option value=\"barcodeNo\">Barcode No</option>\r\n            <option value=\"patientId\">Patient ID</option>\r\n            <option value=\"patientNm\">Patient Name</option>\r\n          </select>\r\n          <input type=\"text\" v-model='searchText' class=\"searchInputBox\"/>\r\n          <div class=\"settingDatePickers\">\r\n            <Datepicker v-model=\"startDate\"></Datepicker>\r\n            <Datepicker v-model=\"endDate\"></Datepicker>\r\n          </div>\r\n          <button class=\"searchClass\" @click=\"search\">Search</button>\r\n          <!-- <button class=\"searchClass\" @click=\"refresh\">Refresh</button> -->\r\n        </div>\r\n        <div class=\"filterDivBox\" v-if=\"classListToggle\">\r\n          <div class=\"nrCount\" v-if=\"!bmClassIsBoolen\">\r\n            <span>NR count</span>\r\n            <input type=\"text\" v-model=\"nrCount\"/>\r\n          </div>\r\n          <div class=\"wbcTotal\">\r\n            <span>WBC Total</span>\r\n            <select v-model=\"wbcCountOrder\">\r\n              <option value=\"all\">Do Not Select</option>\r\n              <option>DESC</option>\r\n              <option>ASC</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"wbcInfoFilter\" v-if=\"!bmClassIsBoolen\">\r\n            <span>WBC Info Filter</span>\r\n            <ul class=\"wbcInfoFilter\">\r\n              <li v-for=\"(item, idx) in titleItem\" :key=\"idx\">\r\n                <input type=\"checkbox\" :id=\"'checkbox_' + idx\" v-model=\"item.checked\" @change=\"updateFilter\">\r\n                <label :for=\"'checkbox_' + idx\">{{ item.title }}</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"lastTestType\">\r\n            <span>Test Type</span>\r\n            <div>\r\n              <label><input type=\"checkbox\" value=\"00\" @change=\"changeTestType('00')\" :checked=\"testType === '00'\"/><span>ALL</span></label>\r\n              <label><input type=\"checkbox\" value=\"01\" @change=\"changeTestType('01')\" :checked=\"testType === '01'\"/>\r\n                <span>Diff</span></label>\r\n              <label><input type=\"checkbox\" value=\"02\" @change=\"changeTestType('04')\" :checked=\"testType === '04'\"/>\r\n                <span>PBS</span></label>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ListTable :dbData=\"dbGetData\" @loadMoreData=\"loadMoreData\" @initData=\"initDbData\" @selectItem=\"selectItem\" @refresh=\"refresh\"/>\r\n    </div>\r\n    <div class='listBox'>\r\n      <ListInfo :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListWbcImg v-if=\"!bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n      <ListBmImg v-if=\"bmClassIsBoolen\" :dbData=\"dbGetData\" :selectedItem=\"selectedItem\"/>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport ListTable from \"@/views/datebase/commponent/list/listTable.vue\";\r\nimport ListInfo from \"@/views/datebase/commponent/list/listInfo.vue\";\r\nimport ListWbcImg from \"@/views/datebase/commponent/list/listWbcImg.vue\";\r\nimport {getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport moment from \"moment/moment\";\r\nimport Datepicker from \"vue3-datepicker\";\r\nimport {formatDate} from \"@/common/lib/utils/dateUtils\";\r\nimport ListBmImg from \"@/views/datebase/commponent/list/listBmImg.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\n\r\nconst dbGetData = ref<any[]>([]);\r\nconst showAlert = ref(false);\r\nconst alertMessage = ref('');\r\n\r\nconst today = new Date();\r\nconst thirtyDaysAgo = new Date(today);\r\nthirtyDaysAgo.setDate(today.getDate() - 30);\r\n\r\nconst startDate = ref(thirtyDaysAgo);\r\nconst endDate = ref(new Date());\r\nconst searchText = ref('');\r\nconst searchType = ref('barcodeNo');\r\nconst page = ref(1);\r\nconst selectedItem = ref({});\r\nconst titleItem = ref<any>([]);\r\nconst titleItemArr = ref([]);\r\nconst nrCount = ref(0);\r\nconst testType = ref('');\r\nconst wbcCountOrder = ref('');\r\nconst classListToggle = ref(false);\r\nconst bmClassIsBoolen = ref(false);\r\nconst instance = getCurrentInstance();\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('stateVal', async (data) => { // 동시 접속자 제어 하는 곳\r\n  await initDbData();\r\n})\r\nonMounted(async () => {\r\n  await initDbData();\r\n  bmClassIsBoolen.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst classListToggleEvent = () => {\r\n  classListToggle.value = !classListToggle.value;\r\n}\r\nconst changeTestType = (value: any) => {\r\n  testType.value = testType.value === value ? '' : value;\r\n}\r\n\r\nconst updateFilter = () => {\r\n  const selectedItems = titleItem.value?.filter(item => item.checked).map(item => item.title);\r\n  titleItemArr.value = selectedItems;\r\n}\r\n\r\nconst initDbData = async () => {\r\n  titleItem.value = [];\r\n  // 이전 조회 결과 및 검색 조건 불러오기\r\n  // const lastQuery = loadLastQuery();\r\n  const lastSearchParams = loadLastSearchParams();\r\n  // 이전 검색 조건 적용\r\n  if (Object.keys(lastSearchParams).length !== 0) {\r\n    searchType.value = lastSearchParams.searchType || 'barcodeNo';\r\n    searchText.value = lastSearchParams.searchText || '';\r\n    startDate.value = new Date(lastSearchParams.startDate) || new Date();\r\n    endDate.value = new Date(lastSearchParams.endDate) || new Date();\r\n    page.value = lastSearchParams.page || 1;\r\n\r\n    const numberOfCalls = Number(lastSearchParams.page) || 1;\r\n    for (let i = 1; i <= numberOfCalls; i++) {\r\n      await getDbData('mounted', i);\r\n    }\r\n  } else {\r\n    await getDbData('mounted', 1);\r\n  }\r\n}\r\n\r\nconst selectItem = (item: any) => {\r\n  selectedItem.value = item;\r\n};\r\n\r\nconst saveLastSearchParams = () => {\r\n  const lastSearchParams = {\r\n    page: page.value,\r\n    searchType: searchType.value,\r\n    searchText: searchText.value,\r\n    startDate: formatDate(startDate.value),\r\n    endDate: formatDate(endDate.value),\r\n  };\r\n  sessionStorage.setItem('lastSearchParams', JSON.stringify(lastSearchParams));\r\n};\r\n\r\nconst loadLastSearchParams = () => {\r\n  const storedSearchParams = sessionStorage.getItem('lastSearchParams');\r\n  return storedSearchParams ? JSON.parse(storedSearchParams) : {};\r\n};\r\n\r\n\r\nconst getDbData = async (type: string, pageNum?: number) => {\r\n  if (type === 'search') {\r\n    page.value = 1;\r\n  }\r\n  const requestData: any = {\r\n    page: type !== 'mounted' ? page.value : Number(pageNum),\r\n    pageSize: 20,\r\n    startDay: formatDate(startDate.value),\r\n    endDay: formatDate(endDate.value),\r\n    barcodeNo: searchType.value === 'barcodeNo' ? searchText.value : undefined,\r\n    patientId: searchType.value === 'patientId' ? searchText.value : undefined,\r\n    patientNm: searchType.value === 'patientNm' ? searchText.value : undefined,\r\n    nrCount: nrCount.value,\r\n  };\r\n  if (titleItemArr.value.length !== 0) {\r\n    requestData.title = titleItemArr.value;\r\n  }\r\n\r\n  if (testType.value !== '00' && testType.value !== '') {\r\n    requestData.testType = testType.value;\r\n  }\r\n\r\n  if (wbcCountOrder.value !== '' && wbcCountOrder.value !== 'all') {\r\n    requestData.wbcCountOrder = wbcCountOrder.value;\r\n  }\r\n\r\n  try {\r\n    const result = await getRunningApi(requestData);\r\n    if (result && result.data) {\r\n\r\n      const newData = result.data.data;\r\n      if (newData.length === 0) {\r\n        if (page.value === 1) {\r\n          page.value = 1;\r\n        } else {\r\n          page.value -= 1;\r\n        }\r\n        if (newData.length === 0 && String(result.data?.page) === '1') {\r\n          dbGetData.value = newData;\r\n        }\r\n      } else {\r\n        if (type === 'search') {\r\n          dbGetData.value = newData;\r\n        } else {\r\n          // dbGetData.value = [...dbGetData.value, ...newData];\r\n          newData.forEach(item => {\r\n            const index = dbGetData.value.findIndex(data => data.id === item.id);\r\n            if (index !== -1) {\r\n              dbGetData.value[index] = item;\r\n            } else {\r\n              dbGetData.value.push(item);\r\n            }\r\n          });\r\n        }\r\n\r\n        // dbGetData.value = Array.from(new Set(dbGetData.value.map(item => item.id))).map(id => dbGetData.value.find(item => item.id === id));\r\n        titleItem.value = dbGetData.value[0]?.wbcInfo?.wbcInfo[0];\r\n        if (wbcCountOrder.value === '' || wbcCountOrder.value === 'all') {\r\n          dbGetData.value = dbGetData.value.sort((a, b) => {\r\n            const dateA = moment(a.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n            const dateB = moment(b.analyzedDttm, 'YYYYMMDDHHmmssSSS');\r\n\r\n            // Moment.js의 diff 메서드를 사용하여 날짜 차이 계산\r\n            return dateB.diff(dateA);\r\n          });\r\n        }\r\n        // 마지막 조회 결과 저장\r\n        saveLastSearchParams();\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst search = () => {\r\n  const diffInMs = endDate.value.getTime() - startDate.value.getTime();\r\n  const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\r\n  if (diffInDays > 30) {\r\n    showSuccessAlert(\"You cannot select a period of more than 30 days.\");\r\n    return;\r\n  }\r\n  getDbData('search');\r\n};\r\n\r\nconst refresh = () => {\r\n  getDbData('search');\r\n}\r\n\r\nconst loadMoreData = async () => {\r\n  page.value += 1;\r\n  await getDbData('loadMoreData');\r\n};\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div v-if=\"isVisible\" class=\"alert\" :class=\"typeClass\">\r\n    <p class=\"mb1\">\r\n      {{ message }}\r\n    </p>\r\n    <button class=\"alertButton\" @click=\"okConfirm\">OK</button>\r\n    <button class=\"alertButton\" @click=\"hideConfirm\">CLOSE</button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, computed } from 'vue';\r\n\r\nconst props = defineProps(['isVisible', 'type', 'message']);\r\nconst typeClass = computed(() => `confirm-${props.type}`);\r\nconst emit = defineEmits(['okConfirm']);\r\n\r\nconst hideConfirm = () => {\r\n    emit('hide');\r\n};\r\n\r\nconst okConfirm = () => {\r\n    emit('okConfirm');\r\n}\r\n</script>\r\n","import script from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Confirm.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b61087ba\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"slider-container\" }\nconst _hoisted_2 = [\"min\", \"max\"]\nconst _hoisted_3 = { class: \"value\" }\n\nimport {ref, watch} from 'vue'\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'SliderBar',\n  props: {\n    min: {},\n    max: {},\n    modelValue: {}\n  },\n  emits: ['update:modelValue'],\n  setup(__props: any, { emit: __emit }) {\n\r\nconst props = __props;\r\n\r\nconst emits = __emit;\r\n\r\nconst value = ref(props.modelValue);\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  value.value = newValue;\r\n});\r\n\r\nconst updateValue = () => {\r\n  emits('update:modelValue', value.value);\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _withDirectives(_createElementVNode(\"input\", {\n      type: \"range\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((value).value = $event)),\n      min: _ctx.min,\n      max: _ctx.max,\n      onInput: updateValue\n    }, null, 40, _hoisted_2), [\n      [_vModelText, value.value]\n    ]),\n    _createElementVNode(\"div\", _hoisted_3, _toDisplayString(value.value), 1)\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"slider-container\">\r\n    <input type=\"range\" v-model=\"value\" :min=\"min\" :max=\"max\" @input=\"updateValue\"/>\r\n    <div class=\"value\">{{ value }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, defineEmits} from 'vue'\r\n\r\nconst props = defineProps<{\r\n  min: number;\r\n  max: number;\r\n  modelValue: number;\r\n}>();\r\n\r\nconst emits = defineEmits(['update:modelValue']);\r\n\r\nconst value = ref(props.modelValue);\r\n\r\nwatch(() => props.modelValue, (newValue) => {\r\n  value.value = newValue;\r\n});\r\n\r\nconst updateValue = () => {\r\n  emits('update:modelValue', value.value);\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.slider-container {\r\n  display: flex;\r\n  align-items: center;\r\n\r\n}\r\n\r\ninput[type=\"range\"] {\r\n  margin-right: 10px;\r\n  outline: none;\r\n  opacity: 0.7;\r\n  -webkit-transition: .2s;\r\n  transition: opacity .2s;\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  height: 2px;\r\n  border: 1px solid #3498db;\r\n  background: #ffffff;\r\n}\r\n\r\ninput[type=\"range\"]:hover {\r\n  opacity: 1;\r\n}\r\n\r\ninput[type=\"range\"]::-webkit-slider-thumb {\r\n  -webkit-appearance: none;\r\n  appearance: none;\r\n  width: 20px;\r\n  height: 20px;\r\n  background: #3498db;\r\n  cursor: pointer;\r\n  border-radius: 100%;\r\n}\r\n\r\ninput[type=\"range\"]::-moz-range-thumb {\r\n  width: 15px;\r\n  height: 15px;\r\n  background: #3498db;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n}\r\n\r\ninput[type=\"range\"]::-ms-thumb {\r\n  width: 15px;\r\n  height: 15px;\r\n  background: #3498db;\r\n  cursor: pointer;\r\n  border-radius: 50%;\r\n}\r\n\r\n.value {\r\n  font-size: 14px;\r\n}\r\n</style>\r\n","import script from \"./SliderBar.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./SliderBar.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./SliderBar.vue?vue&type=style&index=0&id=b61087ba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b61087ba\"]])\n\nexport default __exports__","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const readJsonFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.jsonReader.get, request);\r\n};\r\n\r\nexport const pdfPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.pdf.post, request, 'blob');\r\n};\r\n\r\nexport const readFileTxt = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.fileTxtRead.get, `${request}`, true);\r\n};\r\n\r\nexport const readH7File = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Read.post, request, 'text/plain');\r\n};\r\n\r\nexport const readH7Message = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};\r\n\r\nexport const createH17 = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.H7Message.post, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vModelCheckbox as _vModelCheckbox, vModelSelect as _vModelSelect, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-0326334b\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"createdRbc\" }\nconst _hoisted_2 = { class: \"mt2\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", { class: \"wbcClassInfoLeft\" }, \"RBC Classification\", -1))\nconst _hoisted_4 = { class: \"leftWbcInfo rbcClass\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"categoryNm\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_9 = [\"onClick\"]\nconst _hoisted_10 = { class: \"classNmRbc\" }\nconst _hoisted_11 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_12 = [\"value\", \"onChange\"]\nconst _hoisted_13 = [\"onClick\"]\nconst _hoisted_14 = { class: \"degree analysis\" }\nconst _hoisted_15 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_16 = { key: 0 }\nconst _hoisted_17 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_18 = {\n  key: 1,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = {\n  key: 0,\n  class: \"rbcSapn\"\n}\nconst _hoisted_21 = {\n  key: 1,\n  class: \"rbcSapn\"\n}\nconst _hoisted_22 = {\n  key: 2,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_23 = {\n  key: 3,\n  class: \"rbcSapnDown\"\n}\nconst _hoisted_24 = { class: \"rbcPercent\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_26 = { class: \"categories rbcClass\" }\nconst _hoisted_27 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_28 = { class: \"classNmRbc\" }\nconst _hoisted_29 = { class: \"degree analysis\" }\nconst _hoisted_30 = { style: {\"font-size\":\"0.8rem\"} }\nconst _hoisted_31 = { style: {\"font-size\":\"0.8rem\"} }\nconst _hoisted_32 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"rbcPercent\" }, null, -1))\nconst _hoisted_33 = {\n  key: 0,\n  class: \"sensitivityDiv\"\n}\n\nimport {ref, watch, onMounted, computed, getCurrentInstance} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcClass',\n  props: ['rbcInfo', 'selectItems', 'type', 'allCheckClear'],\n  setup(__props, { emit: __emit }) {\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = __props;\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = __emit;\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst instance = getCurrentInstance();\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\n\r\nonMounted(() => {\r\n  const {rbcInfo, rbcMemo} = props.selectItems;\r\n  const {path} = router.currentRoute.value;\r\n  rbcTotalAndReCount();\r\n  pltCount.value = rbcInfo?.pltCount;\r\n  malariaCount.value = rbcInfo?.malariaCount;\r\n  memo.value = rbcMemo;\r\n  maxRbcCount.value = rbcInfo?.maxRbcCount;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n\r\n  const processItems = rbcInfo?.rbcClass || rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if(classInfo.classNm !== 'Normal'){\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n});\r\n\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => rbcReData, (newItem) => {\r\n  if(newItem){\r\n    jsonIsBool.value = false;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  let total = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    for (const idx in el.classInfo) {\r\n      total += 1\r\n    }\r\n  }\r\n  rbcTotalVal.value = total;\r\n  console.log('rbcInfoPathAfter.value', rbcInfoPathAfter.value)\r\n  console.log('rbcInfoBeforeVal', rbcInfoBeforeVal.value)\r\n}\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n\r\n  sliderValue.value = 50;\r\n};\r\n\r\n\r\nconst sensRbcReJsonSend = () => {\r\n  rbcInfoAfterSensitivity(selectedClass.value);\r\n  store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: {\r\n      jobCmd: 'RBC_RE_CLASSIFICATION',\r\n      sensitivity: Number(sliderValue.value),\r\n      reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n      reqUserId: userModuleDataGet.value.userId || '',\r\n      className: selectedClass.value,\r\n      slotId: props.selectItems?.slotId,\r\n    }\r\n  });\r\n  jsonIsBool.value = true;\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if(classNm === 'Normal'){\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  rbcInfoBeforeVal.value = props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo.rbcClass : props.selectItems.rbcInfo;\r\n  if (typeof props.selectItems.rbcInfoAfter === 'object') {\r\n    rbcInfoAfterVal.value = Object.entries(props.selectItems.rbcInfoAfter).length === 0 ? rbcInfoBeforeVal.value : props.selectItems.rbcInfoAfter;\r\n  } else {\r\n    rbcInfoAfterVal.value = props.selectItems.rbcInfoAfter && props.selectItems.rbcInfoAfter.length === 1 ? rbcInfoBeforeVal.value : props.selectItems.rbcInfoAfter;\r\n  }\r\n  classChange();\r\n}\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n          console.log(item.classInfo[findClass])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n  // rbcInfoAfterVal 업데이트\r\n  const rbcInfoAfter = rbcInfoAfterData\r\n\r\n  const updatedSelectItems = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: rbcInfoAfter\r\n  };\r\n\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report' || isBefore.value) {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  // updatedSelectItems와 rbcAfter 업데이트\r\n  const updatedSelectItems = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: rbcInfoAfter\r\n  };\r\n\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcInfoAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Creating a new RBC classification ...\", 512), [\n      [_vShow, jsonIsBool.value]\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _hoisted_3,\n        _createElementVNode(\"ul\", _hoisted_4, [\n          _createElementVNode(\"li\", _hoisted_5, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'comment-dots'],\n              onClick: memoOpen\n            }),\n            (memoModal.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                  _withDirectives(_createElementVNode(\"textarea\", {\n                    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((memo).value = $event))\n                  }, null, 512), [\n                    [_vModelText, memo.value]\n                  ]),\n                  _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                  _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n                ]))\n              : _createCommentVNode(\"\", true)\n          ]),\n          _createElementVNode(\"li\", {\n            onClick: commitConfirmed,\n            class: _normalizeClass({'submitted': __props.selectItems.submitState === 'Submit'})\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n          ], 2)\n        ])\n      ]),\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfoBeforeVal.value], (classList, outerIndex) => {\n        return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: innerIndex,\n              class: \"categories rbcClass\"\n            }, [\n              _createElementVNode(\"ul\", _hoisted_7, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_8, \"Category\"))\n                  : _createCommentVNode(\"\", true),\n                _createElementVNode(\"li\", null, [\n                  _createElementVNode(\"span\", null, _toDisplayString(getCategoryName(category)), 1),\n                  _withDirectives(_createElementVNode(\"button\", {\n                    class: \"degreeAllCheckBtn\",\n                    onClick: ($event: any) => (toggleAll(allCheckType.value, category))\n                  }, _toDisplayString(allCheckType.value ? 'All Check' : 'All Uncheck'), 9, _hoisted_9), [\n                    [_vShow, getCategoryName(category) === 'Shape']\n                  ])\n                ])\n              ]),\n              _createElementVNode(\"ul\", _hoisted_10, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_11, \"Class\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _withDirectives(_createElementVNode(\"input\", {\n                        type: \"checkbox\",\n                        value: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((checkedClassIndices).value = $event)),\n                        onChange: ($event: any) => (updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId))\n                      }, null, 40, _hoisted_12), [\n                        [_vShow, !except.value],\n                        [_vModelCheckbox, checkedClassIndices.value]\n                      ])\n                    ], 512), [\n                      [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                    ]),\n                    _createElementVNode(\"span\", {\n                      onClick: ($event: any) => (clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId))\n                    }, _toDisplayString(classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm), 9, _hoisted_13)\n                  ]))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_14, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_15, \"Degree\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(_Fragment, {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, [\n                    ((classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05'))\n                      ? (_openBlock(), _createElementBlock(\"li\", _hoisted_16, [\n                          (classInfo.classId !== '01' || category.categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_17, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-up'],\n                                    key: degreeIndex,\n                                    class: _normalizeClass({\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      })\n                                  }, null, 8, [\"class\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal.value[innerIndex].categoryId === '05')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_18, [\n                                (_openBlock(), _createElementBlock(_Fragment, null, _renderList(4, (degreeIndex) => {\n                                  return _createVNode(_component_font_awesome_icon, {\n                                    icon: ['fac', 'half-circle-down'],\n                                    key: degreeIndex + '-down',\n                                    class: _normalizeClass({\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }),\n                                    onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], degreeIndex - 1, false))\n                                  }, null, 8, [\"class\", \"onClick\"])\n                                }), 64))\n                              ]))\n                            : _createCommentVNode(\"\", true)\n                        ]))\n                      : (_openBlock(), _createElementBlock(\"li\", _hoisted_19, [\n                          (classInfo.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_20, [\n                                _createVNode(_component_font_awesome_icon, { icon: ['fac', 'half-circle-up'] })\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_21, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  icon: ['fac', 'half-circle-up'],\n                                  class: \"degreeActive\"\n                                })\n                              ])),\n                          (rbcInfoAfterVal.value[innerIndex].classInfo[classIndex]?.degree === '0')\n                            ? (_openBlock(), _createElementBlock(\"span\", _hoisted_22, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex],'0', true)),\n                                  icon: ['fac', 'half-circle-down']\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                            : (_openBlock(), _createElementBlock(\"span\", _hoisted_23, [\n                                _createVNode(_component_font_awesome_icon, {\n                                  onClick: ($event: any) => (onClickDegree(rbcInfoAfterVal.value[innerIndex], rbcInfoAfterVal.value[innerIndex].classInfo[classIndex], '1', true) ),\n                                  icon: ['fac', 'half-circle-down'],\n                                  class: \"degreeActive\"\n                                }, null, 8, [\"onClick\"])\n                              ]))\n                        ]))\n                  ], 64))\n                }), 128))\n              ]),\n              _createElementVNode(\"ul\", _hoisted_24, [\n                (innerIndex === 0)\n                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_25, \"percent\"))\n                  : _createCommentVNode(\"\", true),\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: `${outerIndex}-${innerIndex}-${classIndex}`\n                  }, _toDisplayString(percentageChange(classInfo?.originalDegree)), 1))\n                }), 128))\n              ])\n            ]))\n          }), 128))\n        ], 64))\n      }), 128)),\n      _createElementVNode(\"div\", null, [\n        _createElementVNode(\"div\", _hoisted_26, [\n          _hoisted_27,\n          _createElementVNode(\"ul\", _hoisted_28, [\n            _createElementVNode(\"li\", null, [\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-1\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[3] || (_cache[3] = ($event: any) => (updateClassInfoArr('Platelet', $event.target.checked, '04', '01')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ]),\n              _createElementVNode(\"span\", {\n                onClick: _cache[4] || (_cache[4] = ($event: any) => (clickChangeSens('Platelet', 'Others', '04' ,'01')))\n              }, \"Platelet\")\n            ]),\n            _createElementVNode(\"li\", null, [\n              _createElementVNode(\"div\", null, [\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"checkbox\",\n                  value: \"9-9-2\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((checkedClassIndices).value = $event)),\n                  onChange: _cache[6] || (_cache[6] = ($event: any) => (updateClassInfoArr('Malaria', $event.target.checked, '05', '03')))\n                }, null, 544), [\n                  [_vShow, !except.value],\n                  [_vModelCheckbox, checkedClassIndices.value]\n                ])\n              ]),\n              _createElementVNode(\"span\", {\n                onClick: _cache[7] || (_cache[7] = ($event: any) => (clickChangeSens('Malaria', 'Others', '05', '03')))\n              }, \"Malaria\")\n            ])\n          ]),\n          _createElementVNode(\"ul\", _hoisted_29, [\n            _createElementVNode(\"li\", _hoisted_30, _toDisplayString(pltCount.value || 0) + \" PLT / 1000 RBC\", 1),\n            _createElementVNode(\"li\", _hoisted_31, _toDisplayString(malariaCount.value || 0) + \" / \" + _toDisplayString(maxRbcCount.value || 0) + \" RBC\", 1)\n          ]),\n          _hoisted_32\n        ])\n      ]),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n            _withDirectives(_createElementVNode(\"select\", {\n              \"onUpdate:modelValue\": _cache[8] || (_cache[8] = ($event: any) => ((selectedClass).value = $event)),\n              onChange: classChange\n            }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(rightClickItem.value, (item) => {\n                return (_openBlock(), _createElementBlock(\"option\", {\n                  key: item.classNm\n                }, _toDisplayString(item.classNm), 1))\n              }), 128))\n            ], 544), [\n              [_vModelSelect, selectedClass.value]\n            ]),\n            _createVNode(SliderBar, {\n              modelValue: sliderValue.value,\n              \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((sliderValue).value = $event)),\n              min: 0,\n              max: 100\n            }, null, 8, [\"modelValue\"]),\n            _createElementVNode(\"button\", {\n              class: \"degreeBtn\",\n              type: \"button\",\n              onClick: sensRbcReJsonSend\n            }, \"Ok\")\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 1,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"jsonIsBool\" class=\"createdRbc\"> Creating a new RBC classification ...</div>\r\n  <div>\r\n    <div class=\"mt2\">\r\n      <h3 class=\"wbcClassInfoLeft\">RBC Classification</h3>\r\n      <ul class=\"leftWbcInfo rbcClass\">\r\n        <li style=\"position: relative\">\r\n          <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n          <div v-if=\"memoModal\" class=\"memoModal\">\r\n            <textarea v-model=\"memo\"></textarea>\r\n            <button @click=\"memoChange\">ok</button>\r\n            <button @click=\"memoCancel\">cancel</button>\r\n          </div>\r\n        </li>\r\n        <li @click=\"commitConfirmed\" :class=\"{'submitted': selectItems.submitState === 'Submit'}\">\r\n          <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <template v-for=\"(classList, outerIndex) in [rbcInfoBeforeVal]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories rbcClass\">\r\n          <ul class=\"categoryNm\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n            <li>\r\n              <span>{{ getCategoryName(category) }}</span>\r\n              <button class=\"degreeAllCheckBtn\" v-show=\"getCategoryName(category) === 'Shape'\"\r\n                      @click=\"toggleAll(allCheckType, category)\">\r\n                {{ allCheckType ? 'All Check' : 'All Uncheck' }}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li>\r\n                <div v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n                  <input type=\"checkbox\" :value=\"`${outerIndex}-${innerIndex}-${classIndex}`\"\r\n                         v-show=\"!except\"\r\n                         v-model=\"checkedClassIndices\"\r\n                         @change=\"updateClassInfoArr(classInfo.classNm, $event.target.checked, category.categoryId, classInfo.classId)\">\r\n                </div>\r\n                <span\r\n                    @click=\"clickChangeSens(classInfo.classNm, category.categoryNm, category.categoryId, classInfo.classId)\">\r\n                  {{ classInfo?.classNm === 'TearDropCell' ? 'TearDrop Cell' : classInfo?.classNm }}</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n          <ul class=\"degree analysis\">\r\n\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li v-if=\"(classInfo.classId !== '01' || category.categoryId === '05') || (rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05')\">\r\n                <span v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex\"\r\n                      :class=\"{\r\n                        'degreeActive': degreeIndex < Number(classInfo?.degree) + 2 || 0,\r\n                        'degree0-img': degreeIndex >= Number(classInfo?.degree) + 1 || 0\r\n                      }\"\r\n                  />\r\n                </span>\r\n                <span\r\n                    v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex].classId !== '01' || rbcInfoAfterVal[innerIndex].categoryId === '05'\"\r\n                    class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      v-for=\"degreeIndex in 4\" :key=\"degreeIndex + '-down'\"\r\n                      :class=\"{\r\n                      'degreeActive': degreeIndex < Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 2 || 0,\r\n                      'degree0-img': degreeIndex >= Number(rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree) + 1 || 0\r\n                    }\"\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], degreeIndex - 1, false)\"\r\n                  />\r\n                </span>\r\n              </li>\r\n              <li v-else>\r\n                <span v-if=\"classInfo.degree === '0'\" class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapn\">\r\n                  <font-awesome-icon\r\n                      :icon=\"['fac', 'half-circle-up']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n                <span v-if=\"rbcInfoAfterVal[innerIndex].classInfo[classIndex]?.degree === '0'\" class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex],'0', true)\"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                  />\r\n                </span>\r\n                <span v-else class=\"rbcSapnDown\">\r\n                  <font-awesome-icon\r\n                      @click=\"onClickDegree(rbcInfoAfterVal[innerIndex], rbcInfoAfterVal[innerIndex].classInfo[classIndex], '1', true) \"\r\n                      :icon=\"['fac', 'half-circle-down']\"\r\n                      class=\"degreeActive\"\r\n                  />\r\n                </span>\r\n              </li>\r\n            </template>\r\n\r\n          </ul>\r\n          <ul class=\"rbcPercent\">\r\n            <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">percent</li>\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li>\r\n                {{ percentageChange(classInfo?.originalDegree) }}\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n\r\n    </template>\r\n    <!--orders-->\r\n    <div>\r\n      <div class=\"categories rbcClass\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     value=\"9-9-1\"\r\n                     v-show=\"!except\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Platelet', $event.target.checked, '04', '01')\">\r\n            </div>\r\n            <span @click=\"clickChangeSens('Platelet', 'Others', '04' ,'01')\">Platelet</span>\r\n          </li>\r\n          <li>\r\n            <div>\r\n              <input type=\"checkbox\"\r\n                     v-show=\"!except\"\r\n                     value=\"9-9-2\"\r\n                     v-model=\"checkedClassIndices\"\r\n                     @change=\"updateClassInfoArr('Malaria', $event.target.checked, '05', '03')\">\r\n            </div>\r\n            <span @click=\"clickChangeSens('Malaria', 'Others', '05', '03')\">Malaria</span>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"degree analysis\">\r\n          <li style=\"font-size: 0.8rem\">{{ pltCount || 0 }} PLT / 1000 RBC</li>\r\n          <li style=\"font-size: 0.8rem\">{{ malariaCount || 0 }} / {{ maxRbcCount || 0 }} RBC</li>\r\n        </ul>\r\n        <ul class=\"rbcPercent\"></ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"sensitivityDiv\" v-if=\"type !== 'report'\">\r\n      <select v-model=\"selectedClass\"  @change=\"classChange\">\r\n        <option v-for=\"(item) in rightClickItem\" :key=\"item.classNm\">\r\n          {{ item.classNm }}\r\n        </option>\r\n      </select>\r\n      <SliderBar v-model=\"sliderValue\" :min=\"0\" :max=\"100\"/>\r\n      <button class=\"degreeBtn\" type=\"button\" @click=\"sensRbcReJsonSend\">Ok</button>\r\n    </div>\r\n    <!--    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">-->\r\n    <!--      <button @click=\"beforeChange\" :class={isBeforeClicked:isBefore}>Before</button>-->\r\n    <!--      <button @click=\"afterChange\" :class={isBeforeClicked:!isBefore}>After</button>-->\r\n    <!--    </div>-->\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {ref, defineProps, watch, onMounted, computed, defineEmits, getCurrentInstance} from 'vue';\r\nimport {RbcInfo} from \"@/store/modules/analysis/rbcClassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport Button from \"@/components/commonUi/Button.vue\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {useRouter} from \"vue-router\";\r\nimport moment from \"moment/moment\";\r\nimport SliderBar from \"@/components/commonUi/SliderBar.vue\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\n\r\n\r\nconst getCategoryName = (category: RbcInfo) => category?.categoryNm;\r\nconst checkedClassIndices = ref<any>([]);\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'allCheckClear']);\r\nconst rbcInfoAfterVal = ref<any>([]);\r\nconst rbcInfoBeforeVal = ref<any>([]);\r\nconst pltCount = ref('');\r\nconst malariaCount = ref('');\r\nconst memo = ref('');\r\nconst sliderValue = ref(50);\r\nconst memoModal = ref(false);\r\nconst store = useStore();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isBefore = ref(false);\r\nconst classInfoArr = ref<any>([]);\r\nconst emits = defineEmits();\r\nconst maxRbcCount = ref('');\r\nconst router = useRouter();\r\nconst except = ref(false);\r\nconst rightClickItem: any = ref([]);\r\nconst selectedClass = ref('Macrocyte');\r\nconst allCheckType = ref(true);\r\nconst instance = getCurrentInstance();\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst rbcTotalVal = ref(0);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst jsonIsBool = ref(false);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\n\r\nonMounted(() => {\r\n  const {rbcInfo, rbcMemo} = props.selectItems;\r\n  const {path} = router.currentRoute.value;\r\n  rbcTotalAndReCount();\r\n  pltCount.value = rbcInfo?.pltCount;\r\n  malariaCount.value = rbcInfo?.malariaCount;\r\n  memo.value = rbcMemo;\r\n  maxRbcCount.value = rbcInfo?.maxRbcCount;\r\n  except.value = path === '/report';\r\n  rightClickItem.value = [];\r\n\r\n  const processItems = rbcInfo?.rbcClass || rbcInfo;\r\n\r\n  if (processItems) {\r\n    for (const argument of processItems) {\r\n      argument.classInfo.forEach((classInfo: any) => {\r\n        if(classInfo.classNm !== 'Normal'){\r\n          rightClickItem.value.push({...classInfo, categoryId: argument.categoryId});\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  rightClickItem.value.push(\r\n      {categoryId: '04', classId: '01', classNm: 'Platelet'},\r\n      {categoryId: '05', classId: '03', classNm: 'Malaria'}\r\n  );\r\n});\r\n\r\n\r\nwatch(() => props.rbcInfo, (newItem) => {\r\n  afterChange();\r\n});\r\n\r\nwatch(() => props.allCheckClear, (newItem) => {\r\n  checkedClassIndices.value = [];\r\n  classInfoArr.value = [];\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => rbcReData, (newItem) => {\r\n  if(newItem){\r\n    jsonIsBool.value = false;\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  pltCount.value = props.selectItems?.pltCount;\r\n  malariaCount.value = props.selectItems?.malariaCount;\r\n});\r\nconst rbcTotalAndReCount = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  let total = 0;\r\n  for (const el of rbcInfoPathAfter.value) {\r\n    for (const idx in el.classInfo) {\r\n      total += 1\r\n    }\r\n  }\r\n  rbcTotalVal.value = total;\r\n  console.log('rbcInfoPathAfter.value', rbcInfoPathAfter.value)\r\n  console.log('rbcInfoBeforeVal', rbcInfoBeforeVal.value)\r\n}\r\nconst percentageChange = (count: any): any => {\r\n  const percentage = ((Number(count) / Number(rbcTotalVal.value)) * 100).toFixed(1);\r\n  return (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage\r\n}\r\n\r\nconst classChange = () => {\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n\r\n  const category = rbcData.find((el: any) => el.categoryNm === selectedClass.value);\r\n  if (category) {\r\n    sliderValue.value = category.sensitivity || 50;\r\n    return;\r\n  }\r\n\r\n  for (const el of rbcData) {\r\n    const classInfoItem = el.classInfo.find((classInfo: any) => classInfo.classNm === selectedClass.value);\r\n    if (classInfoItem) {\r\n      sliderValue.value = classInfoItem.sensitivity || 50;\r\n      return;\r\n    }\r\n  }\r\n\r\n  sliderValue.value = 50;\r\n};\r\n\r\n\r\nconst sensRbcReJsonSend = () => {\r\n  rbcInfoAfterSensitivity(selectedClass.value);\r\n  store.dispatch('commonModule/setCommonInfo', {rbcReData: false});\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: {\r\n      jobCmd: 'RBC_RE_CLASSIFICATION',\r\n      sensitivity: Number(sliderValue.value),\r\n      reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n      reqUserId: userModuleDataGet.value.userId || '',\r\n      className: selectedClass.value,\r\n      slotId: props.selectItems?.slotId,\r\n    }\r\n  });\r\n  jsonIsBool.value = true;\r\n}\r\n\r\nconst clickChangeSens = (classNm: string, categoryNm: string, categoryId: string, classId: any) => {\r\n  if(classNm === 'Normal'){\r\n    return;\r\n  }\r\n  const rbcData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const el of rbcData) {\r\n    for (const item of el?.classInfo) {\r\n      if (item.classNm === classNm && item.classId === classId) {\r\n        sliderValue.value = item.sensitivity || 50;\r\n      }\r\n    }\r\n  }\r\n  selectedClass.value = classNm;\r\n  return;\r\n\r\n}\r\n\r\nconst afterChange = () => {\r\n  isBefore.value = false;\r\n  emits('isBeforeUpdate', false);\r\n  rbcInfoBeforeVal.value = props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo.rbcClass : props.selectItems.rbcInfo;\r\n  if (typeof props.selectItems.rbcInfoAfter === 'object') {\r\n    rbcInfoAfterVal.value = Object.entries(props.selectItems.rbcInfoAfter).length === 0 ? rbcInfoBeforeVal.value : props.selectItems.rbcInfoAfter;\r\n  } else {\r\n    rbcInfoAfterVal.value = props.selectItems.rbcInfoAfter && props.selectItems.rbcInfoAfter.length === 1 ? rbcInfoBeforeVal.value : props.selectItems.rbcInfoAfter;\r\n  }\r\n  classChange();\r\n}\r\n\r\nconst rbcInfoAfterSensitivity = async (selectedClassVal: string) => {\r\n  let rbcInfoAfterData = JSON.parse(JSON.stringify(rbcInfoAfterVal.value));\r\n  for (const item of rbcInfoAfterData) {\r\n    if (item.categoryNm === selectedClassVal) {\r\n      item.sensitivity = sliderValue.value;\r\n    } else {\r\n      const findClass = item?.classInfo?.findIndex((option: any) => option.classNm === selectedClassVal);\r\n      if (findClass !== -1 && findClass !== undefined) {\r\n        if (item?.classInfo) {\r\n          item.classInfo[findClass].sensitivity = sliderValue.value;\r\n          console.log(item.classInfo[findClass])\r\n        }\r\n      }\r\n    }\r\n  }\r\n  rbcInfoAfterVal.value = rbcInfoAfterData;\r\n  // rbcInfoAfterVal 업데이트\r\n  const rbcInfoAfter = rbcInfoAfterData\r\n\r\n  const updatedSelectItems = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: rbcInfoAfter\r\n  };\r\n\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n  return;\r\n}\r\n\r\nconst toggleAll = (check: boolean, category?: any) => {\r\n  let allCheckboxes: any = [];\r\n  for (const item of rbcInfoBeforeVal.value) {\r\n    if (item.categoryId === '03' || item.categoryId === '04' || item.categoryId === '05') {\r\n      item.classInfo.forEach((classInfo: any, innerIndex: number) => {\r\n        allCheckboxes.push({\r\n          classNm: classInfo.classNm,\r\n          categoryId: item.categoryId,\r\n          classId: classInfo.classId\r\n        });\r\n      });\r\n    }\r\n  }\r\n  if (check) {\r\n    checkedClassIndices.value = [\"0-2-0\", \"0-2-1\", \"0-2-2\", \"0-2-3\", \"0-2-4\", \"0-2-5\", \"0-2-6\", \"0-2-7\", \"0-2-8\", \"0-2-9\", \"0-2-10\", \"0-3-0\", \"0-3-1\", \"9-9-1\", \"9-9-2\"];\r\n  } else {\r\n    checkedClassIndices.value = [];\r\n  }\r\n\r\n  allCheckboxes.forEach(checkbox => {\r\n    updateClassInfoArr(checkbox.classNm, check, checkbox.categoryId, checkbox.classId);\r\n  });\r\n  allCheckType.value = !allCheckType.value;\r\n}\r\n\r\n\r\nconst updateClassInfoArr = (classNm: string, isChecked: boolean, categoryId: string, classId: string) => {\r\n  if (isChecked) {\r\n    if (!classInfoArr.value.some((item: any) => item.classNm === classNm && item.classId === classId && item.categoryId === categoryId)) {\r\n      classInfoArr.value.push({classNm: classNm, categoryId: categoryId, classId: classId});\r\n    }\r\n  } else {\r\n    classInfoArr.value = classInfoArr.value.filter((item: any) => !(item.classNm === classNm && item.classId === classId && item.categoryId === categoryId));\r\n  }\r\n\r\n  emits('classInfoArrUpdate', classInfoArr.value);\r\n};\r\n\r\n\r\nconst onClickDegree = async (category: any, classInfo: any, degreeIndex: any, isNormal = false) => {\r\n  if (props.type === 'report' || isBefore.value) {\r\n    return;\r\n  }\r\n  // rbcInfoAfterVal을 깊은 복사하여 수정\r\n  const rbcInfoAfter = JSON.parse(JSON.stringify(rbcInfoAfterVal.value)).map((rbc: any) => {\r\n    if (rbc.categoryNm === category.categoryNm) {\r\n      rbc.classInfo = rbc.classInfo.map((item: any) => {\r\n        if (item.classNm === classInfo.classNm) {\r\n          if (isNormal) {\r\n            item.degree = String(Number(item.degree) === 0 ? 1 : 0);\r\n          } else {\r\n            item.degree = String(degreeIndex);\r\n          }\r\n        }\r\n        return item;\r\n      });\r\n    }\r\n    return rbc;\r\n  });\r\n\r\n  // rbcInfoAfterVal 업데이트\r\n  rbcInfoAfterVal.value = rbcInfoAfter;\r\n\r\n  // updatedSelectItems와 rbcAfter 업데이트\r\n  const updatedSelectItems = {\r\n    ...props.selectItems,\r\n    rbcInfoAfter: rbcInfoAfter\r\n  };\r\n\r\n  sessionStorage.setItem('selectItemRbc', JSON.stringify(rbcInfoAfter));\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedSelectItems));\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcInfoAfter: rbcInfoAfter,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem};\r\n  await resRunningItem(updatedRuningInfo, false);\r\n};\r\n\r\n\r\nconst memoOpen = () => {\r\n  memo.value = memo.value !== '' ? memo.value : props.selectItems.rbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoChange = async () => {\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    rbcMemo: memo.value,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo, true);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, alertShow?: any) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (alertShow) {\r\n        showSuccessAlert('success');\r\n      }\r\n\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      memo.value = filteredItems.rbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\n\r\n\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  onCommit();\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo = {...result.data, ...updatedItem}\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n\r\n.table-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.rbc-head,\r\n.rbc-container {\r\n  flex: 1;\r\n  padding-right: 20px;\r\n  text-align: left;\r\n}\r\n\r\n</style>\r\n","import script from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcClass.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcClass.vue?vue&type=style&index=0&id=0326334b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0326334b\"]])\n\nexport default __exports__","export const rulers = [{\r\n    id: 'none',\r\n    text: 'None',\r\n  }, {\r\n    id: 'line',\r\n    text: 'Line',\r\n  }, {\r\n    id: 'cross',\r\n    text: 'Cross',\r\n  }, {\r\n    id: 'circle',\r\n    text: 'Circle'\r\n}]","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const moveImgPost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.images.move, request , true);\r\n};\r\n\r\nexport const moveClassImagePost = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpPost(apiConstants.images.moveClassImage, request);\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, withModifiers as _withModifiers, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\nconst _hoisted_2 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"no-malaria\",\n  style: {\"text-align\":\"left\"}\n}, \"No Malaria\", -1)\nconst _hoisted_4 = [\"src\", \"onClick\", \"onDragstart\"]\nconst _hoisted_5 = { key: 1 }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria Images do not exist.\", -1)\nconst _hoisted_7 = [\n  _hoisted_6\n]\n\n\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'Malaria',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (imageExist.value)\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"div\", {\n            onDrop: _cache[0] || (_cache[0] = ($event: any) => (onDrop('malaria'))),\n            onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(malariaList.value, (malaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'malaria-' + index,\n                src: malaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('malaria', malaria) }]),\n                alt: \"malaria-image\",\n                onClick: ($event: any) => (handleClickImage('malaria', malaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('malaria', malaria, index))\n              }, null, 42, _hoisted_2))\n            }), 128))\n          ], 32)\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_3,\n          _createElementVNode(\"div\", {\n            onDrop: _cache[2] || (_cache[2] = ($event: any) => (onDrop('noMalaria'))),\n            onDragover: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"prevent\"])),\n            style: {\"text-align\":\"left\",\"overflow\":\"auto\",\"height\":\"400px\"}\n          }, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(noMalariaList.value, (noMalaria, index) => {\n              return (_openBlock(), _createElementBlock(\"img\", {\n                key: 'noMalaria-' + index,\n                src: noMalaria,\n                class: _normalizeClass([\"item-image\", {'selected': isSelected('noMalaria', noMalaria) }]),\n                alt: \"noMalaria-image\",\n                onClick: ($event: any) => (handleClickImage('noMalaria', noMalaria, index, $event)),\n                onDragstart: ($event: any) => (onDragStart('noMalaria', noMalaria, index))\n              }, null, 42, _hoisted_4))\n            }), 128))\n          ], 32)\n        ])\n      ]))\n    : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _hoisted_7))\n}\n}\n\n})","<template>\r\n  <div v-if=\"imageExist\">\r\n    <!-- malaria -->\r\n    <div>\r\n      <div @drop=\"onDrop('malaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(malaria, index) in malariaList\"\r\n          :key=\"'malaria-' + index\" \r\n          :src=\"malaria\" \r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('malaria', malaria) }\"\r\n          alt=\"malaria-image\"\r\n          @click=\"handleClickImage('malaria', malaria, index, $event)\"\r\n          @dragstart=\"onDragStart('malaria', malaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n    <!-- no malaria -->\r\n    <div>\r\n      <div class=\"no-malaria\" style=\"text-align:left\">No Malaria</div>\r\n      <div @drop=\"onDrop('noMalaria')\" @dragover.prevent style=\"text-align: left; overflow: auto; height: 400px;\">\r\n        <img\r\n          v-for=\"(noMalaria, index) in noMalariaList\"\r\n          :key=\"'noMalaria-' + index\"\r\n          :src=\"noMalaria\"\r\n          class=\"item-image\"\r\n          :class=\"{'selected': isSelected('noMalaria', noMalaria) }\"\r\n          alt=\"noMalaria-image\"  \r\n          @click=\"handleClickImage('noMalaria', noMalaria, index, $event)\"\r\n          @dragstart=\"onDragStart('noMalaria', noMalaria, index)\"\r\n        >\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div v-else>\r\n    <span>Malaria Images do not exist.</span>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps } from 'vue';\r\nimport axios from \"axios\";\r\nimport { ref, onMounted } from \"vue\";\r\nimport { dirName } from \"@/common/defines/constFile/settings\";\r\nimport {moveImgPost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = sessionStorage.getItem('iaRootPath') || dirName.iaRootPath;\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst malariaList = ref([]);\r\nconst noMalariaList = ref([]);\r\nconst selectedClickImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nlet indexBeforePressingShift = ref<number | null>(null);\r\nlet draggedImages = ref<{ section: string, imgName: string, index: number }[]>([]);\r\nconst imageExist = ref(false);\r\n\r\nonMounted(async () => {\r\n  await getImageList(dirName.malariaDirName, malariaList);\r\n  await getImageList(dirName.noMalariaDirName, noMalariaList);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n});\r\n\r\nasync function getImageList(folderName: string, list: []) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath;\r\n  const folderPath = `${path}/${slotId}/${dirName.rbcClassDirName}/${folderName}`;\r\n\r\n  try {\r\n    const response = await fetch(`${apiBaseUrl}/folders?folderPath=${folderPath}`);\r\n    if (!response.ok) {\r\n      imageExist.value = false;\r\n      throw new Error('Network response was not ok');\r\n    } else {\r\n      const data = await response.json();\r\n      list.value = data.map((image: string) => `${apiBaseUrl}/folders?folderPath=${folderPath}/${image}`);\r\n      imageExist.value = true;\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  \r\n  if (!target.closest('.item-image')) {\r\n    selectedClickImages.value = [];\r\n  }\r\n}\r\n\r\nfunction handleClickImage(section: string, imgName: string, index: number, event: MouseEvent) {\r\n  const clickedImage = { section, imgName, index };\r\n\r\n  if (selectedClickImages.value.length > 0 && selectedClickImages.value[selectedClickImages.value.length - 1].section !== section) {\r\n    selectedClickImages.value = [clickedImage];\r\n  } else {\r\n    if (event.shiftKey && indexBeforePressingShift.value !== null) {\r\n\r\n      const startIdx = Math.min(indexBeforePressingShift.value, index);\r\n      const endIdx = Math.max(indexBeforePressingShift.value, index);\r\n\r\n      for (let i = startIdx; i <= endIdx; i++) {\r\n        const existingIndex = selectedClickImages.value.findIndex(item => item.index === i);\r\n        if (existingIndex === -1) {\r\n          selectedClickImages.value.push({ section, imgName: section === 'malaria' ? malariaList.value[i] : noMalariaList.value[i], index: i });\r\n        }\r\n      }\r\n      \r\n    } else if (event.ctrlKey && indexBeforePressingShift.value !== null) {\r\n      selectedClickImages.value.push(clickedImage);\r\n    } else {\r\n      const existingIndex = selectedClickImages.value.findIndex(item => item.imgName === imgName);\r\n      if (existingIndex !== -1) {\r\n        selectedClickImages.value.splice(existingIndex, 1);\r\n      } else {\r\n        selectedClickImages.value = [clickedImage];\r\n      }\r\n    }\r\n  }\r\n\r\n  indexBeforePressingShift.value = index;\r\n}\r\n\r\nfunction isSelected(section: string, imgName: string): boolean {\r\n  return selectedClickImages.value.some(selectedImage => selectedImage.imgName === imgName);\r\n}\r\n\r\n\r\nfunction onDragStart(section: string, imgName: string, index: number) {\r\n  if (selectedClickImages.value.length > 0) {\r\n    draggedImages.value = selectedClickImages.value;\r\n  } else {\r\n    draggedImages.value = [{ section, imgName, index }];\r\n  }\r\n}\r\n\r\nfunction onDrop(targetSection: string) {\r\n  for (const draggedImage of draggedImages.value) {\r\n    if (targetSection !== draggedImage.section) {\r\n      moveImage(targetSection, draggedImage.imgName);\r\n    }\r\n  }\r\n}\r\n\r\nasync function moveImage(targetSection: string, imgName: string) {\r\n  const slotId = props.selectItems.slotId || '';\r\n  const pathNew = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : iaRootPath;\r\n\r\n  const path = `${pathNew}/${slotId}/${dirName.rbcClassDirName}`\r\n  const sourceFolder = targetSection === 'malaria' ? `${path}/${dirName.noMalariaDirName}` : `${path}/${dirName.malariaDirName}`;\r\n  const destinationFolder = targetSection === 'malaria' ? `${path}/${dirName.malariaDirName}` : `${path}/${dirName.noMalariaDirName}`;\r\n\r\n  const imgNameArr = imgName.split(\"/\");\r\n  const imageName = imgNameArr[imgNameArr.length-1];\r\n\r\n\r\n  const response = await moveImgPost(`sourceFolder=${sourceFolder}&destinationFolder=${destinationFolder}&imageName=${imageName}`);\r\n  \r\n  if (response) {\r\n    const index = targetSection === 'malaria' ? noMalariaList.value.findIndex(image => image === imgName) : malariaList.value.findIndex(image => image === imgName);\r\n    if (targetSection === 'malaria') {\r\n      noMalariaList.value.splice(index, 1);\r\n      malariaList.value.push(imgName);\r\n    } else {\r\n      malariaList.value.splice(index, 1);\r\n      noMalariaList.value.push(imgName);\r\n    }\r\n  }\r\n\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n}\r\n\r\n</script>\r\n","import script from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./Malaria.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, unref as _unref, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createBlock as _createBlock, withModifiers as _withModifiers, vShow as _vShow, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6b608442\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, null, -1))\nconst _hoisted_2 = { class: \"rbc-container\" }\nconst _hoisted_3 = { class: \"btn-container\" }\nconst _hoisted_4 = { class: \"btn-imgsetbox\" }\nconst _hoisted_5 = {\n  key: 0,\n  class: \"imgSet\"\n}\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Brightness\", -1))\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"RGB\", -1))\nconst _hoisted_8 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Grid\", -1))\nconst _hoisted_9 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Ruler\", -1))\nconst _hoisted_10 = { class: \"ruler-box\" }\nconst _hoisted_11 = [\"onClick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Zoom\", -1))\nconst _hoisted_13 = { class: \"tiling-viewer-box\" }\nconst _hoisted_14 = { key: 2 }\nconst _hoisted_15 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Tile does not exist.\", -1))\nconst _hoisted_16 = [\n  _hoisted_15\n]\nconst _hoisted_17 = { class: \"categoryNm\" }\nconst _hoisted_18 = { class: \"classNmRbc\" }\nconst _hoisted_19 = [\"onClick\"]\nconst _hoisted_20 = { class: \"categories\" }\nconst _hoisted_21 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \"Others\")\n], -1))\nconst _hoisted_22 = { class: \"classNmRbc\" }\nconst _hoisted_23 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Platelets\", -1))\nconst _hoisted_24 = [\n  _hoisted_23\n]\nconst _hoisted_25 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", null, \"Malaria\", -1))\nconst _hoisted_26 = [\n  _hoisted_25\n]\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'rbcImageList',\n  props: ['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = __emit;\r\nconst rightClickItem = ref([]);\r\nconst rbcTotalVal = ref(0);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nwatch(() => rbcReData, (newItem) => {\r\n  if(newItem){\r\n    removeRbcMarker();\r\n    removeDiv();\r\n    emits('unChecked');\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: moveRbcClassItem.index\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: moveRbcClassItem.index\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  console.log(rbcInfoPathAfter.value)\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    console.log(newItem)\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: any = '';\r\n          let height: any = '';\r\n          let classItemPosX: any = '';\r\n          let classItemPosY: any = '';\r\n\r\n          if(classItem.width){\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          }else{\r\n            width = classItem.x2-classItem.x1;\r\n            height = classItem.y2-classItem.y1;\r\n            classItemPosX = classItem.x1;\r\n            classItemPosY = classItem.y1;\r\n          }\r\n          // console.log(width)\r\n          // console.log(height)\r\n          let ddrr ={\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: classItem.index,\r\n          }\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          // rectPath.rect(classItem.x1, classItem.y1, x2-x1, y2-y1);\r\n          drawPath.value.push(ddrr)\r\n          console.log(ddrr)\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm === \"Normal\") {\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = item.width;\r\n            element.style.backgroundColor = color;\r\n            element.style.height = item.height;\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"button\", {\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (toggleViewer('lowMag'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'lowMag', 'inactive': activeTab.value !== 'lowMag'}])\n          }, \"Low magnification \", 2),\n          _createElementVNode(\"button\", {\n            onClick: _cache[1] || (_cache[1] = ($event: any) => (toggleViewer('malaria'))),\n            class: _normalizeClass([\"tab-btn\", { 'active': activeTab.value === 'malaria', 'inactive': activeTab.value !== 'malaria' }])\n          }, \"Malaria \", 2)\n        ]),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"button\", {\n            class: \"img-btn\",\n            onClick: imgSetOpen\n          }, \"Img Setting\"),\n          (imgSet.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                  _hoisted_6,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"80\",\n                    max: \"150\",\n                    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                    onInput: changeImgBrightness\n                  }, null, 544), [\n                    [_vModelText, imgBrightness.value]\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                  _hoisted_7,\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[0]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[1]]\n                  ]),\n                  _withDirectives(_createElementVNode(\"input\", {\n                    type: \"range\",\n                    min: \"0\",\n                    max: \"255\",\n                    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                    onInput: changeImageRgb\n                  }, null, 544), [\n                    [_vModelText, imageRgb.value[2]]\n                  ]),\n                  _createElementVNode(\"button\", {\n                    class: \"resetBtn\",\n                    onClick: rgbReset\n                  }, \"RGB Reset\")\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'th'] }),\n                  _hoisted_8,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isGrid.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickGrid\n                  }, null, 8, [\"icon\"])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'ruler'] }),\n                  _hoisted_9,\n                  _createElementVNode(\"div\", _hoisted_10, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_unref(rulers), (ruler) => {\n                      return (_openBlock(), _createElementBlock(\"button\", {\n                        class: _normalizeClass([\"tab-ruler-btn\", { 'active': activeRuler.value === ruler.text, 'inactive': activeRuler.value !== ruler.text}]),\n                        onClick: ($event: any) => (onClickRuler(ruler)),\n                        key: ruler.id\n                      }, _toDisplayString(ruler.text), 11, _hoisted_11))\n                    }), 128))\n                  ])\n                ]),\n                _createElementVNode(\"div\", null, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'magnifying-glass'] }),\n                  _hoisted_12,\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: isMagnifyingGlass.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off'],\n                    onClick: onClickZoom\n                  }, null, 8, [\"icon\"])\n                ])\n              ]))\n            : _createCommentVNode(\"\", true)\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_13, [\n        (activeTab.value === 'malaria')\n          ? (_openBlock(), _createBlock(Malaria, {\n              key: 0,\n              selectItems: __props.selectItems\n            }, null, 8, [\"selectItems\"]))\n          : (activeTab.value !== 'malaria' && tileExist.value)\n            ? (_openBlock(), _createElementBlock(\"div\", {\n                key: 1,\n                ref_key: \"tilingViewerLayer\",\n                ref: tilingViewerLayer,\n                id: \"tiling-viewer\",\n                style: {\"width\":\"100%\"},\n                onContextmenu: _withModifiers(rbcClassRightClick, [\"prevent\"])\n              }, null, 544))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, _hoisted_16))\n      ])\n    ]),\n    (showSelect.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"rbc-select-box\",\n          style: _normalizeStyle({ left: `${selectBoxX.value}px`, top: `${selectBoxY.value}px` })\n        }, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rightClickItem.value], (classList, outerIndex) => {\n            return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                  key: innerIndex,\n                  class: \"categories\"\n                }, [\n                  _createElementVNode(\"ul\", _hoisted_17, [\n                    _createElementVNode(\"li\", null, _toDisplayString(category.categoryNm), 1)\n                  ]),\n                  _createElementVNode(\"ul\", _hoisted_18, [\n                    (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                      return (_openBlock(), _createElementBlock(\"li\", {\n                        key: `${outerIndex}-${innerIndex}-${classIndex}`,\n                        onClick: ($event: any) => (moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm))\n                      }, [\n                        _createElementVNode(\"span\", null, _toDisplayString(classInfo?.classNm), 1)\n                      ], 8, _hoisted_19))\n                    }), 128))\n                  ])\n                ], 512)), [\n                  [_vShow, category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body']\n                ])\n              }), 128)),\n              _createElementVNode(\"div\", _hoisted_20, [\n                _hoisted_21,\n                _createElementVNode(\"ul\", _hoisted_22, [\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[6] || (_cache[6] = ($event: any) => (moveRbcClassEvent('04', '01', 'Giant Platelet')))\n                  }, _hoisted_24),\n                  _createElementVNode(\"li\", {\n                    onClick: _cache[7] || (_cache[7] = ($event: any) => (moveRbcClassEvent('05', '03', 'Malaria')))\n                  }, _hoisted_26)\n                ])\n              ])\n            ], 64))\n          }), 128))\n        ], 4))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div></div>\r\n  <div class=\"rbc-container\">\r\n    <div class=\"btn-container\">\r\n      <div>\r\n        <button\r\n            @click=\"toggleViewer('lowMag')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'lowMag', 'inactive': activeTab !== 'lowMag'}\"\r\n        >Low magnification\r\n        </button>\r\n        <button\r\n            @click=\"toggleViewer('malaria')\"\r\n            class=\"tab-btn\"\r\n            :class=\"{ 'active': activeTab === 'malaria', 'inactive': activeTab !== 'malaria' }\"\r\n        >Malaria\r\n        </button>\r\n      </div>\r\n      <div class='btn-imgsetbox'>\r\n        <button class=\"img-btn\" @click=\"imgSetOpen\">Img Setting</button>\r\n        <div class=\"imgSet\" v-if=\"imgSet\">\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n            <span>Brightness</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"150\"\r\n                v-model=\"imgBrightness\"\r\n                @input=\"changeImgBrightness\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n            <span>RGB</span>\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[0]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[1]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"255\"\r\n                v-model=\"imageRgb[2]\"\r\n                @input=\"changeImageRgb\"\r\n            />\r\n            <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'th']\"/>\r\n            <span>Grid</span>\r\n            <font-awesome-icon\r\n                :icon=\"isGrid ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickGrid\"\r\n            />\r\n          </div>\r\n          <!-- <div>\r\n            <font-awesome-icon :icon=\"['fas', 'crop']\"/>\r\n            <span>Crop</span>\r\n            <font-awesome-icon\r\n              :icon=\"isCrop? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n              @click=\"onClickCrop\"\r\n            />\r\n          </div> -->\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'ruler']\"/>\r\n            <span>Ruler</span>\r\n            <div class=\"ruler-box\">\r\n              <button\r\n                  class=\"tab-ruler-btn\"\r\n                  @click=\"onClickRuler(ruler)\"\r\n                  v-for=\"ruler in rulers\"\r\n                  :key=\"ruler.id\"\r\n                  :class=\"{ 'active': activeRuler === ruler.text, 'inactive': activeRuler !== ruler.text}\"\r\n              >{{ ruler.text }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <font-awesome-icon :icon=\"['fas', 'magnifying-glass']\"/>\r\n            <span>Zoom</span>\r\n            <font-awesome-icon\r\n                :icon=\"isMagnifyingGlass ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n                @click=\"onClickZoom\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"tiling-viewer-box\">\r\n      <Malaria v-if=\"activeTab === 'malaria'\" :selectItems=\"selectItems\"/>\r\n      <div v-else-if=\"activeTab !== 'malaria' && tileExist\"\r\n           ref=\"tilingViewerLayer\"\r\n           id=\"tiling-viewer\" style=\"width: 100%;\"\r\n           @contextmenu.prevent=\"rbcClassRightClick\"></div>\r\n      <div v-else>\r\n        <span>Tile does not exist.</span>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n  <div v-if=\"showSelect\" class=\"rbc-select-box\" :style=\"{ left: `${selectBoxX}px`, top: `${selectBoxY}px` }\">\r\n    <template v-for=\"(classList, outerIndex) in [rightClickItem]\" :key=\"outerIndex\">\r\n      <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n        <div class=\"categories\" v-show=\"category?.categoryNm === 'Shape' || category.categoryNm === 'Inclusion Body'\">\r\n          <ul class=\"categoryNm\">\r\n            <li>{{ category.categoryNm }}</li>\r\n          </ul>\r\n          <ul class=\"classNmRbc\">\r\n            <template v-for=\"(classInfo, classIndex) in category?.classInfo\"\r\n                      :key=\"`${outerIndex}-${innerIndex}-${classIndex}`\">\r\n              <li @click=\"moveRbcClassEvent(category.categoryId, classInfo.classId, classInfo.classNm)\">\r\n                <span>{{ classInfo?.classNm }}</span>\r\n              </li>\r\n            </template>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n      <div class=\"categories\">\r\n        <ul class=\"categoryNm\">\r\n          <li>Others</li>\r\n        </ul>\r\n        <ul class=\"classNmRbc\">\r\n          <li @click=\"moveRbcClassEvent('04', '01', 'Giant Platelet')\">\r\n            <span>Platelets</span>\r\n          </li>\r\n          <li @click=\"moveRbcClassEvent('05', '03', 'Malaria')\">\r\n            <span>Malaria</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport {rulers} from '@/common/defines/constFile/rbc';\r\nimport {dirName} from \"@/common/defines/constFile/settings\";\r\nimport Malaria from './Malaria.vue';\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {useStore} from \"vuex\";\r\nimport pako from 'pako';\r\n\r\nconst props = defineProps(['rbcInfo', 'selectItems', 'type', 'classInfoArr', 'isBefore']);\r\nconst activeTab = ref('lowMag');\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\n\r\nlet viewer: any = ref<any>(null);\r\nconst imgSet = ref(false);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst isGrid = ref(false);\r\nconst isMagnifyingGlass = ref(false);\r\nconst ruler = ref(null);\r\nconst activeRuler = ref('None');\r\nconst showSelect = ref<any>(false);\r\nconst rulerPos = ref({\r\n  prevPosX: 0,\r\n  prevPosY: 0,\r\n  posX: 0,\r\n  posY: 0,\r\n  left: 0,\r\n  top: 0,\r\n  width: 50,\r\n  height: 50\r\n});\r\nconst rulerSize = ref(5);\r\nconst rulerWidth = ref(0);\r\nconst viewBoxWH = ref(150);\r\nconst tilingViewerLayer = ref(null);\r\nconst tileExist = ref(true);\r\nconst store = useStore();\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst rbcInfoPathAfter = ref<any>([]);\r\nconst classInfoArr = ref<any>([]);\r\nconst canvasOverlay = ref<any>(null);\r\nconst drawPath = ref<any>([]);\r\nconst moveRbcClass = ref<any>([]);\r\nconst selectBoxX = ref(0);\r\nconst selectBoxY = ref(0);\r\nconst emits = defineEmits();\r\nconst rightClickItem = ref([]);\r\nconst rbcTotalVal = ref(0);\r\nconst rbcReData = computed(() => store.state.commonModule.rbcReData);\r\nwatch(() => rbcReData, (newItem) => {\r\n  if(newItem){\r\n    removeRbcMarker();\r\n    removeDiv();\r\n    emits('unChecked');\r\n  }\r\n\r\n}, {deep: true})\r\n\r\nonMounted(() => {\r\n  initElement();\r\n  document.addEventListener('click', closeSelectBox);\r\n  rightClickItem.value = !props.selectItems.rbcInfo.rbcClass ? props.selectItems.rbcInfo : props.selectItems.rbcInfo.rbcClass;\r\n});\r\nwatch(() => props.isBefore, (newItem) => {\r\n  removeRbcMarker();\r\n  removeDiv();\r\n  emits('unChecked')\r\n}, {deep: true})\r\nconst moveRbcClassEvent = async (categoryId: string, classId: string, classNm: string) => {\r\n  // categoryId에 해당하는 객체를 찾음\r\n  let category = rbcInfoPathAfter.value.find((item: any) => item.categoryId === categoryId);\r\n\r\n  // categoryId에 해당하는 객체가 없으면 새로 추가\r\n  if (!category) {\r\n    category = {\r\n      categoryId: categoryId,\r\n      classInfo: []\r\n    };\r\n    rbcInfoPathAfter.value.push(category);\r\n  }\r\n  let newAsrr = [];\r\n  for (const moveRbcClassItem of moveRbcClass.value) {\r\n    for (const argument of rbcInfoPathAfter.value) {\r\n      // 기존 부분 삭제\r\n      if (moveRbcClassItem.categoryId === argument.categoryId) {\r\n        const foundElementIndex = argument.classInfo.findIndex((el: any) => Number(el.index) === moveRbcClassItem.index);\r\n        if (foundElementIndex !== -1) {\r\n          newAsrr.push({\r\n            categoryId: categoryId,\r\n            classNm: classNm,\r\n            classId: classId,\r\n            posX: moveRbcClassItem.posX,\r\n            posY: moveRbcClassItem.posY,\r\n            width: moveRbcClassItem.width,\r\n            height: moveRbcClassItem.height,\r\n            index: moveRbcClassItem.index\r\n          });\r\n          argument.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n      }\r\n      //기존 부분을 li 클릭 한 곳으로 이동\r\n      if (argument.categoryId === categoryId) {\r\n        argument.classInfo.push({\r\n          classNm: classNm,\r\n          classId: classId,\r\n          posX: moveRbcClassItem.posX,\r\n          posY: moveRbcClassItem.posY,\r\n          width: moveRbcClassItem.width,\r\n          height: moveRbcClassItem.height,\r\n          index: moveRbcClassItem.index\r\n        })\r\n      }\r\n    }\r\n  }\r\n  await removeDiv();\r\n  await rbcInfoPathAfterJsonCreate(newAsrr);\r\n  await drawRbcMarker(classInfoArr.value);\r\n\r\n}\r\n\r\nconst removeDiv = async () => {\r\n  const existingOverlays = document.getElementsByClassName('overlayElement');\r\n  const overlaysArray = Array.from(existingOverlays); // HTMLCollection을 배열로 변환\r\n\r\n  // 모든 오버레이 제거\r\n  overlaysArray.forEach(overlay => {\r\n    viewer.value.removeOverlay(overlay);\r\n  });\r\n\r\n  showSelect.value = false;\r\n};\r\n\r\n\r\nconst rbcInfoPathAfterJsonCreate = async (jsonData: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n  const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response = await readJsonFile({fullPath: url});\r\n  let compareData = [];\r\n  if (response.data !== 'not file') {\r\n    const url = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n    const response = await readJsonFile({fullPath: url});\r\n    compareData = [...response.data, ...jsonData];\r\n  } else {\r\n    compareData = jsonData;\r\n  }\r\n\r\n  const jsonString = JSON.stringify(compareData);\r\n  const utf8Data = new TextEncoder().encode(jsonString);\r\n  const compressedData = pako.deflate(utf8Data);\r\n  const blob = new Blob([compressedData], {type: 'application/octet-stream'});\r\n  const formData = new FormData();\r\n  formData.append('file', blob, `${props.selectItems.slotId}_new.json`);\r\n  const filePath = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`\r\n  try {\r\n    const apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\n    const response = await fetch(`${apiBaseUrl}/jsonReader/upload?filePath=${filePath}`, {\r\n      method: 'POST',\r\n      body: formData,\r\n    });\r\n    const responseData = await response.json();\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nconst closeSelectBox = (event: MouseEvent) => {\r\n  const selectBox = document.querySelector('.rbc-select-box');\r\n  if (selectBox && !selectBox.contains(event.target as Node)) {\r\n    showSelect.value = false; // 셀렉트 박스 닫기\r\n  }\r\n};\r\n\r\nwatch(() => props.classInfoArr, (newItem) => {\r\n  if (newItem.length === 0) {\r\n    removeDiv();\r\n    removeRbcMarker();\r\n  }\r\n\r\n  rbcMarker(newItem);\r\n}, {deep: true});\r\n\r\nconst rbcClassRightClick = (event: MouseEvent) => {\r\n  if (props.isBefore || classInfoArr.value.length === 0) {\r\n    return;\r\n  }\r\n\r\n  showSelect.value = true;\r\n\r\n  if (event.currentTarget instanceof HTMLElement) {\r\n    selectBoxX.value = event.clientX;\r\n    selectBoxY.value = event.clientY - 300;\r\n  }\r\n};\r\n\r\n\r\nconst rbcMarker = async (newItem: any) => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const url_new = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}_new.json`;\r\n  const response_new = await readJsonFile({fullPath: url_new});\r\n  const url_Old = `${path}/${props.selectItems.slotId}/03_RBC_Classification/${props.selectItems.slotId}.json`;\r\n  const response_old = await readJsonFile({fullPath: url_Old});\r\n\r\n  if (response_new.data !== 'not file') { // 비포 , 애프터에 따른 json 파일 불러오는 부분\r\n    const newJsonData = response_new?.data;\r\n    for (const rbcItem of response_old.data[0].rbcClassList) {\r\n      for (const newRbcData of newJsonData) {\r\n        // 기존 부분 삭제 // 여기서 index 찾아서 새로 생성된 json 부분을 추가해야함\r\n        const foundElementIndex = rbcItem.classInfo.findIndex((el: any) =>\r\n            Number(el.index) === Number(newRbcData.index)\r\n        );\r\n        if (foundElementIndex !== -1) {\r\n          rbcItem.classInfo.splice(foundElementIndex, 1);\r\n        }\r\n        if (rbcItem.categoryId === newRbcData.categoryId) {\r\n          let sss = {\r\n            classNm: newRbcData.classNm,\r\n            classId: newRbcData.classId,\r\n            posX: String(newRbcData.posX),\r\n            posY: String(newRbcData.posY),\r\n            width: newRbcData.width,\r\n            height: newRbcData.height,\r\n            index: newRbcData.index,\r\n          }\r\n          rbcItem.classInfo.push(sss);\r\n        }\r\n      }\r\n    }\r\n    rbcInfoPathAfter.value = response_old.data[0].rbcClassList;\r\n  } else {\r\n    rbcInfoPathAfter.value = response_old?.data[0].rbcClassList;\r\n  }\r\n  console.log(rbcInfoPathAfter.value)\r\n  classInfoArr.value = newItem;\r\n  if (newItem.length === 0) {\r\n    removeRbcMarker();\r\n  } else {\r\n    console.log(newItem)\r\n    await drawRbcMarker(newItem); // 변경된 항목으로 마커 다시 그리기\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nwatch(() => props.selectItems, (newItem) => {\r\n  const tilingViewerLayer = document.getElementById('tiling-viewer');\r\n  if (tilingViewerLayer) {\r\n    tilingViewerLayer.innerHTML = ''; // 기존 내용 삭제\r\n\r\n    // 다시 그리는 HTML 코드 생성\r\n    const newHtml = `\r\n        <div id=\"tiling-viewer\" ref=\"tilingViewerLayer\"></div>\r\n      `;\r\n\r\n    // 생성한 HTML 코드를 tilingViewerLayer에 추가\r\n    tilingViewerLayer.insertAdjacentHTML('beforeend', newHtml);\r\n    activeTab.value = 'lowMag';\r\n    initElement();\r\n  }\r\n\r\n});\r\n\r\n// const rbc\r\n\r\nconst removeRbcMarker = () => {\r\n  let ctx = canvasOverlay.value.getContext('2d'); // canvasOverlay를 직접 사용\r\n  let canvas = canvasOverlay.value;\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.beginPath();\r\n  drawPath.value = [];\r\n  return ctx;\r\n}\r\n\r\nconst drawRbcMarker = async (classInfoArr: any) => {\r\n  // json rbcInfoPathAfter.value 로 그림 그리는곳\r\n  const colors: any = {\r\n    '01': 'red',\r\n    '02': 'green',\r\n    '03': 'blue',\r\n    '05': 'brown',\r\n  };\r\n\r\n  const ctx = removeRbcMarker();\r\n  // classInfoArr -> input 에서 체크된 값\r\n  // rbcInfoPathAfter -> json 데이터\r\n  // 여기서 새로 추가 된 index 로 있나 없나 따지고 after 에서 있으면 비포에서는 보여주지않는다.\r\n  classInfoArr.forEach((info: any) => {\r\n    rbcInfoPathAfter.value.forEach((category: any) => {\r\n      category.classInfo.forEach((classItem: any) => {\r\n        if (classItem.classNm === info.classNm && category.categoryId === info.categoryId) {\r\n          ctx.lineWidth = '2';\r\n          ctx.strokeStyle = `${colors[info.categoryId] || 'black'}`;\r\n          let rectPath = new Path2D();\r\n          let width: any = '';\r\n          let height: any = '';\r\n          let classItemPosX: any = '';\r\n          let classItemPosY: any = '';\r\n\r\n          if(classItem.width){\r\n            width = classItem.width;\r\n            height = classItem.height;\r\n            classItemPosX = classItem.posX;\r\n            classItemPosY = classItem.posY;\r\n          }else{\r\n            width = classItem.x2-classItem.x1;\r\n            height = classItem.y2-classItem.y1;\r\n            classItemPosX = classItem.x1;\r\n            classItemPosY = classItem.y1;\r\n          }\r\n          // console.log(width)\r\n          // console.log(height)\r\n          let ddrr ={\r\n            categoryId: info.categoryId,\r\n            classNm: info.classNm,\r\n            classId: info.classId,\r\n            posX: classItemPosX,\r\n            posY: classItemPosY,\r\n            width: width,\r\n            height: height,\r\n            index: classItem.index,\r\n          }\r\n          rectPath.rect(classItemPosX, classItemPosY, width, height);\r\n          // rectPath.rect(classItem.x1, classItem.y1, x2-x1, y2-y1);\r\n          drawPath.value.push(ddrr)\r\n          console.log(ddrr)\r\n          ctx.stroke(rectPath)\r\n\r\n        }\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n\r\nconst initElement = async () => {\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : iaRootPath.value;\r\n\r\n  const folderPath = `${path}/${props.selectItems.slotId}/${dirName.rbcImageDirName}`;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n\r\n    if (tilesInfo.length !== 0) {\r\n      viewer.value = OpenSeadragon({\r\n        id: \"tiling-viewer\",\r\n        animationTime: 0.4,\r\n        navigatorSizeRatio: 0.25,\r\n        showNavigator: true,\r\n        sequenceMode: true,\r\n        defaultZoomLevel: 1,\r\n        prefixUrl: `${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n        tileSources: tilesInfo,\r\n        showReferenceStrip: false,\r\n        gestureSettingsMouse: {clickToZoom: false},\r\n        maxZoomLevel: 15\r\n      });\r\n\r\n      // 마그니파이어 설정\r\n      new OpenSeadragon.MouseTracker({\r\n        element: viewer.value.element,\r\n        moveHandler: function (event: any) {\r\n          if (!isMagnifyingGlass.value) {\r\n            const magCanvas = document.getElementById('magCanvas');\r\n            if (magCanvas) {\r\n              viewer.value.element.removeChild(magCanvas);\r\n            }\r\n            return;\r\n          }\r\n\r\n          const {canvas} = viewer.value.drawer;\r\n          const magCanvas = document.createElement('canvas');\r\n          const magCtx = magCanvas.getContext('2d');\r\n          canvasOverlay.value = magCanvas\r\n          if (magCtx) {\r\n            const magWidth = 200;\r\n            const magHeight = 200;\r\n            const zoomLevel = 5;\r\n\r\n            magCanvas.id = 'magCanvas';\r\n            magCanvas.style.position = 'absolute';\r\n            magCanvas.style.left = `${event.position.x - (magWidth / 2)}px`;\r\n            magCanvas.style.top = `${event.position.y - (magHeight / 2)}px`;\r\n            magCanvas.style.border = '1px solid';\r\n            magCanvas.style.borderRadius = '50%';\r\n            magCanvas.style.width = `${magWidth}px`;\r\n            magCanvas.style.height = `${magHeight}px`;\r\n            magCanvas.style.zIndex = '0';\r\n\r\n            viewer.value.element.appendChild(magCanvas);\r\n\r\n            magCtx.drawImage(\r\n                canvas,\r\n                event.position.x - (magWidth / 8),\r\n                event.position.y - (magHeight / 8),\r\n                magWidth,\r\n                magHeight,\r\n                0,\r\n                0,\r\n                magWidth * zoomLevel,\r\n                magHeight * zoomLevel\r\n            );\r\n\r\n            magCanvas.style.visibility = event.position.y <= 0 || event.position.x <= 0 ? 'hidden' : 'visible';\r\n\r\n          }\r\n        },\r\n      });\r\n\r\n      const canvas = document.createElement('canvas');\r\n      const overlay = viewer.value.addOverlay({\r\n        element: canvas,\r\n        location: new OpenSeadragon.Rect(0, 0, 1, 1), // 캔버스가 뷰어 전체를 덮도록 설정\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('open', function (event: any) {\r\n        canvas.width = 3317;\r\n        canvas.height = 3311;\r\n        canvas.id = 'myCanvas';\r\n        overlay.canvas = canvas;\r\n        canvasOverlay.value = canvas;\r\n      });\r\n\r\n\r\n      viewer.value.addHandler('canvas-click', async (event: any) => {\r\n        if (!event.originalEvent.shiftKey) { // 쉬프트 키를 누르지 않았을 때\r\n          const clickPos = viewer.value.viewport.pointFromPixel(event.position);\r\n          const canvasPos = {\r\n            x: clickPos.x * viewer.value.source.width,\r\n            y: clickPos.y * viewer.value.source.height\r\n          };\r\n\r\n\r\n          // 클릭된 아이템 확인\r\n          for (const item of drawPath.value) {\r\n            const itemPos = item;\r\n            const width = itemPos.width; // 아이템의 너비\r\n            const height = itemPos.height; // 아이템의 높이\r\n\r\n            // 클릭된 아이템 확인\r\n            if (\r\n                canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n            ) {\r\n              const categoryId = item.categoryId;\r\n              const color = 'lightgreen'; // 연한 연두색\r\n              if (event.originalEvent.ctrlKey) { // 컨트롤 키를 눌렀을 때\r\n                moveRbcClass.value.push(item)\r\n                const element = document.createElement('ol');\r\n                element.className = 'overlayElement';\r\n                element.id = 'overlayElement';\r\n                element.setAttribute('data-category-id', categoryId);\r\n                element.setAttribute('data-class-nm', item.classNm);\r\n                element.style.width = `${item.width}px`;\r\n                element.style.backgroundColor = color;\r\n                element.style.height = `${item.height}px`;\r\n                element.style.position = 'absolute';\r\n                element.style.opacity = '0.5';\r\n\r\n                const posX = parseFloat(itemPos.posX);\r\n                const posY = parseFloat(itemPos.posY);\r\n                const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                viewer.value.addOverlay({\r\n                  element: element,\r\n                  location: overlayRect\r\n                });\r\n              } else {\r\n                if (\r\n                    canvasPos.x >= itemPos.posX && canvasPos.x <= (itemPos.posX + width) &&\r\n                    canvasPos.y >= itemPos.posY && canvasPos.y <= (itemPos.posY + height)\r\n                ) {\r\n                  // 클릭된 아이템 처리\r\n                  const categoryId = item.categoryId;\r\n                  const color = 'lightgreen'; // 연한 연두색\r\n                  const classInfo = rbcInfoPathAfter.value.find((category: any) => category.categoryId === categoryId)?.classInfo.find((classItem: any) => classItem.classNm === item.classNm);\r\n                  if (classInfo) {\r\n                    moveRbcClass.value = [item];\r\n                    const existingOverlay = document.getElementById('overlayElement');\r\n                    if (existingOverlay) {\r\n                      viewer.value.removeOverlay(existingOverlay);\r\n                    }\r\n\r\n                    const previousOverlay = document.querySelector(`.overlayElement[data-category-id=\"${categoryId}\"][data-class-nm=\"${item.classNm}\"]`);\r\n                    if (previousOverlay) {\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, itemPos.width, itemPos.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.updateOverlay(previousOverlay, overlayRect);\r\n                    } else {\r\n\r\n                      const element = document.createElement('ol');\r\n                      element.className = 'overlayElement';\r\n                      element.id = 'overlayElement';\r\n                      element.setAttribute('data-category-id', categoryId);\r\n                      element.setAttribute('data-class-nm', item.classNm);\r\n                      element.style.width = `${item.width}px`;\r\n                      element.style.backgroundColor = color;\r\n                      element.style.height = `${item.height}px`;\r\n                      element.style.position = 'absolute';\r\n                      element.style.opacity = '0.5';\r\n\r\n                      const posX = parseFloat(itemPos.posX);\r\n                      const posY = parseFloat(itemPos.posY);\r\n                      const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n                      viewer.value.addOverlay({\r\n                        element: element,\r\n                        location: overlayRect\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n              break;\r\n            }\r\n          }\r\n        } else { // 쉬프트 키를 눌렀을 때\r\n\r\n          for (const item of drawPath.value) {\r\n            if (item.classNm === \"Normal\") {\r\n              return;\r\n            }\r\n            const itemPos = item;\r\n            const categoryId = item.categoryId;\r\n            const color = 'lightgreen'; // 연한 연두색\r\n            moveRbcClass.value.push(item)\r\n            const element = document.createElement('ol');\r\n            element.className = 'overlayElement';\r\n            element.id = 'overlayElement';\r\n            element.setAttribute('data-category-id', categoryId);\r\n            element.setAttribute('data-class-nm', item.classNm);\r\n            element.style.width = item.width;\r\n            element.style.backgroundColor = color;\r\n            element.style.height = item.height;\r\n            element.style.position = 'absolute';\r\n            element.style.opacity = '0.5';\r\n\r\n            const posX = parseFloat(itemPos.posX);\r\n            const posY = parseFloat(itemPos.posY);\r\n            const overlayRect = viewer.value.viewport.imageToViewportRectangle(posX, posY, item.width, item.height); // 이미지 좌표를 뷰포트 좌표로 변환\r\n            viewer.value.addOverlay({\r\n              element: element,\r\n              location: overlayRect\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n\r\n    }\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    tileExist.value = false;\r\n    throw new Error('Network response was not ok');\r\n  } else {\r\n\r\n    const fileNames = await response.json();\r\n    const tilesInfo = [];\r\n\r\n    for (const fileName of fileNames) {\r\n      if (fileName.endsWith('_files')) {\r\n        tilesInfo.push({\r\n          Image: {\r\n            xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n            Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n            Format: \"jpg\",\r\n            Overlap: \"1\",\r\n            TileSize: \"1024\",\r\n            Size: {\r\n              Height: \"3311\",\r\n              Width: \"3317\"\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    tileExist.value = true;\r\n    return tilesInfo;\r\n  }\r\n};\r\n\r\n\r\n// Low magnification and Malaria tab\r\nconst toggleViewer = (viewerType: string) => {\r\n  switch (viewerType) {\r\n    case 'lowMag':\r\n      activeTab.value = 'lowMag';\r\n      break;\r\n    case 'malaria':\r\n      activeTab.value = 'malaria';\r\n      imgSet.value = false;\r\n      break;\r\n  }\r\n\r\n  if (activeTab.value !== 'malaria') {\r\n    initElement();\r\n  }\r\n};\r\n\r\n\r\n// Img setting\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value;\r\n}\r\n\r\n\r\n// Brightness\r\nconst changeImgBrightness = (event: any) => {\r\n  const brightness = event?.target?.value;\r\n\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n};\r\n\r\n\r\n// RGB\r\nconst changeImageRgb = () => {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = imgBrightness.value;\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(0.88) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n  }\r\n\r\n}\r\n\r\nconst rgbReset = () => {\r\n  imgBrightness.value = 100;\r\n  imageRgb.value = [0, 0, 0];\r\n\r\n  const imageContainer = document.getElementById('tiling-viewer');\r\n  if (imageContainer) {\r\n    imageContainer.style.filter = `opacity(1) drop-shadow(0 0 0 rgb(0,0,0)) brightness(100%)`;\r\n  }\r\n};\r\n\r\n\r\n// Grid\r\nconst onClickGrid = () => {\r\n  isGrid.value = !isGrid.value;\r\n  viewer.value.addHandler('zoom', drawLines);\r\n  if (isGrid.value) {\r\n    drawLines();\r\n  } else {\r\n    removeGridLines();\r\n  }\r\n}\r\n\r\nconst drawLines = () => {\r\n  removeGridLines();\r\n  if (isGrid.value) {\r\n    const imageHeight = viewer.value.world.getItemAt(0).getContentSize().y;\r\n    const imageWidth = viewer.value.world.getItemAt(0).getContentSize().x;\r\n    const zoom = viewer.value.viewport.getZoom();\r\n\r\n    const maxNumberOfLines = 400;\r\n    const numberOfLines = Math.round(maxNumberOfLines / zoom);\r\n\r\n    const minGap = Math.min(imageWidth, imageHeight) / numberOfLines;\r\n\r\n    for (let i = 1; i < numberOfLines; i++) {\r\n      const linePosition = i * minGap;\r\n\r\n      drawLine(linePosition, 0, 1, imageHeight, 'rgba(128, 128, 128, 0.2)'); // 세로선\r\n      drawLine(0, linePosition, imageWidth, 1, 'rgba(128, 128, 128, 0.2)'); // 가로선\r\n    }\r\n  }\r\n};\r\n\r\nconst drawLine = (x: number, y: number, width: number, height: number, color: string) => {\r\n  const lineElement = document.createElement('div');\r\n  lineElement.className = 'grid-line';\r\n  lineElement.style.position = 'absolute';\r\n  lineElement.style.left = `${x}px`;\r\n  lineElement.style.top = `${y}px`;\r\n  lineElement.style.width = `${width}px`;\r\n  lineElement.style.height = `${height}px`;\r\n  lineElement.style.background = color;\r\n  lineElement.style.userSelect = 'none';\r\n  lineElement.style.pointerEvents = 'none';\r\n  viewer.value.container.appendChild(lineElement);\r\n};\r\n\r\nconst removeGridLines = () => {\r\n  const gridLines = document.querySelectorAll('.grid-line');\r\n  gridLines.forEach(line => line.remove());\r\n};\r\n\r\n\r\n// Ruler\r\nconst onClickRuler = (ruler: any) => {\r\n  switch (ruler.text) {\r\n    case 'None':\r\n      activeRuler.value = 'None';\r\n      break;\r\n    case 'Line':\r\n      activeRuler.value = 'Line';\r\n      break;\r\n    case 'Cross':\r\n      activeRuler.value = 'Cross';\r\n      break;\r\n    case 'Circle':\r\n      activeRuler.value = 'Circle';\r\n      break;\r\n  }\r\n  drawRuler(ruler);\r\n}\r\n\r\nconst drawRuler = (ruler: any) => {\r\n  const divtilingViewer = document.getElementById('tiling-viewer')\r\n\r\n  if (divtilingViewer !== null) {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      // self.viewer.canvas.removeChild(rulerOverlay)\r\n      divtilingViewer.removeChild(rulerOverlay)\r\n    }\r\n\r\n\r\n    const element = document.createElement('div')\r\n    element.id = 'rulerOverlay'\r\n    element.style.position = 'absolute'\r\n    // element.style.background = 'rgba(0, 0, 0, 0.3)'\r\n    element.style.width = rulerPos.value.width + 'px'\r\n    element.style.height = rulerPos.value.height + 'px'\r\n\r\n    if (rulerPos.value.left === 0) {\r\n      element.style.left = (viewer.value.canvas.clientWidth / 2) - (rulerPos.value.width / 2) + 'px'\r\n    } else {\r\n      element.style.left = rulerPos.value.left + 'px'\r\n    }\r\n\r\n    if (rulerPos.value.top === 0) {\r\n      element.style.top = (viewer.value.canvas.clientHeight / 2) - (rulerPos.value.height / 2) + 'px'\r\n    } else {\r\n      element.style.top = rulerPos.value.top + 'px'\r\n    }\r\n\r\n    refreshRuler(element, rulerSize, ruler);\r\n    divtilingViewer.appendChild(element)\r\n\r\n    let isPress = false\r\n\r\n    element.onmousedown = function (e) {\r\n      rulerPos.value.prevPosX = e.clientX\r\n      rulerPos.value.prevPosY = e.clientY\r\n\r\n      if (rulerPos.value.left <= 30) {\r\n        rulerPos.value.left = 31\r\n      }\r\n\r\n      if (rulerPos.value.top <= 80) {\r\n        rulerPos.value.top = 81\r\n      }\r\n\r\n      isPress = true\r\n    }\r\n\r\n    element.onmouseup = function () {\r\n      isPress = false\r\n    }\r\n\r\n    element.onwheel = function (e) {\r\n      if (e.deltaY < 0) {\r\n        if (rulerSize.value < 20) {\r\n          refreshRuler(element, ++rulerSize.value, ruler)\r\n        }\r\n\r\n      } else {\r\n        if (rulerSize.value > 5) {\r\n          refreshRuler(element, --rulerSize.value, ruler)\r\n        }\r\n      }\r\n    }\r\n\r\n    const parent = document.getElementById('tilingViewer')\r\n\r\n    if (parent) {\r\n      parent.onmousemove = function (e) {\r\n        if (!isPress) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.left <= 30) {\r\n          return\r\n        }\r\n\r\n        if (rulerPos.value.top <= 80) {\r\n          return\r\n        }\r\n\r\n        rulerPos.value.posX = rulerPos.value.prevPosX - e.clientX\r\n        rulerPos.value.posY = rulerPos.value.prevPosY - e.clientY\r\n\r\n        rulerPos.value.prevPosX = e.clientX\r\n        rulerPos.value.prevPosY = e.clientY\r\n\r\n        element.style.left = (element.offsetLeft - rulerPos.value.posX) + 'px'\r\n        element.style.top = (element.offsetTop - rulerPos.value.posY) + 'px'\r\n\r\n        rulerPos.value.left = element.offsetLeft - rulerPos.value.posX\r\n        rulerPos.value.top = element.offsetTop - rulerPos.value.posY\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst refreshRuler = (element: any, rulerSize: any, ruler: any) => {\r\n  if (typeof rulerSize === 'object') {\r\n    rulerSize = rulerSize.value;\r\n  }\r\n  if (document.getElementById('rulerTitle') !== null) {\r\n    element.removeChild(document.getElementById('rulerTitle'))\r\n  }\r\n\r\n  let rSize = 1\r\n  if (rulerSize > 5) {\r\n    rSize = rSize + (0.06 * (rulerSize - 5))\r\n  }\r\n\r\n  let zoomRatio = viewer.value.viewport.viewportToImageZoom(viewer.value.viewport.getZoom())\r\n\r\n  if (zoomRatio > 1) {\r\n    zoomRatio = zoomRatio * 1.02\r\n  } else if (zoomRatio > 0.9 && zoomRatio < 1) {\r\n    zoomRatio = zoomRatio * 1.12\r\n  } else if (zoomRatio > 0.7 && zoomRatio <= 0.9) {\r\n    zoomRatio = zoomRatio * 1.22\r\n  } else if (zoomRatio > 0.6 && zoomRatio <= 0.7) {\r\n    zoomRatio = zoomRatio * 1.32\r\n  } else if (zoomRatio > 0.5 && zoomRatio <= 0.6) {\r\n    zoomRatio = zoomRatio * 1.42\r\n  } else if (zoomRatio > 0.4 && zoomRatio <= 0.5) {\r\n    zoomRatio = zoomRatio * 1.52\r\n  } else if (zoomRatio > 0.3 && zoomRatio <= 0.4) {\r\n    zoomRatio = zoomRatio * 1.72\r\n  } else if (zoomRatio > 0.2 && zoomRatio <= 0.3) {\r\n    zoomRatio = zoomRatio * 1.92\r\n  }\r\n\r\n  rulerWidth.value = 60 * (zoomRatio * rSize)\r\n\r\n  const titleElement = document.createElement('div')\r\n  titleElement.id = 'rulerTitle'\r\n  titleElement.style.color = 'black'\r\n  titleElement.style.textAlign = 'center'\r\n  titleElement.style.fontSize = '16px'\r\n  titleElement.style.minWidth = '50px'\r\n  titleElement.style.width = rulerWidth.value + 'px'\r\n\r\n  if (ruler.id === 'line') {\r\n    const startX = (viewBoxWH.value / 2) - (rulerWidth.value / 2)\r\n    const endX = (viewBoxWH.value / 2) + (rulerWidth.value / 2)\r\n    const startY = viewBoxWH.value / 2\r\n    const endY = startY\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + startY + '\" x2=\"' + endX + '\" y2=\"' + endY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + startX + '\" y1=\"' + (startY - 5) + '\" x2=\"' + startX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + endX + '\" y1=\"' + (endY - 5) + '\" x2=\"' + endX + '\" y2=\"' + (endY + 5) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>'\r\n    element.appendChild(titleElement)\r\n\r\n  } else if (ruler.id === 'cross') {\r\n    const centerX = viewBoxWH.value / 2;\r\n    const centerY = viewBoxWH.value / 2;\r\n    const halfWidth = rulerWidth.value / 2;\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<line x1=\"' + (centerX - halfWidth) + '\" y1=\"' + centerY + '\" x2=\"' + (centerX + halfWidth) + '\" y2=\"' + centerY + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '<line x1=\"' + centerX + '\" y1=\"' + (centerY - halfWidth) + '\" x2=\"' + centerX + '\" y2=\"' + (centerY + halfWidth) + '\" stroke=\"black\" stroke-width=\"2\"/>' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement);\r\n\r\n  } else if (ruler.id === 'circle') {\r\n    const cx = viewBoxWH.value / 2\r\n    const cy = viewBoxWH.value / 2\r\n    const radius = rulerWidth.value * 0.5\r\n\r\n    titleElement.innerHTML = '<div style=\"width: 100%;\">' + rulerSize + 'μm' + '</div>' +\r\n        '<svg viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">' +\r\n        '<circle cx=\"' + cx + '\" cy=\"' + cy + '\" r=\"' + radius + '\" stroke=\"black\" stroke-width=\"2\" fill=\"transparent\" opacity=\"0.6\" />' +\r\n        '</svg>';\r\n\r\n    element.appendChild(titleElement)\r\n  } else {\r\n    const rulerOverlay = document.getElementById('rulerOverlay')\r\n    if (rulerOverlay !== null) {\r\n      const divtilingViewer = document.getElementById('tilingViewer')\r\n      divtilingViewer?.removeChild(rulerOverlay)\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Zoom\r\nconst onClickZoom = () => {\r\n  isMagnifyingGlass.value = !isMagnifyingGlass.value;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.tab-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.ruler-box {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.tab-ruler-btn {\r\n  padding: 5px 10px;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.active, .tab-ruler-btn.active {\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\n.tab-btn.inactive, .tab-ruler-btn.inactive {\r\n  color: darkgray;\r\n  background-color: #393939;\r\n}\r\n\r\n\r\n.btn-imgsetbox {\r\n  position: relative;\r\n}\r\n\r\n.imgSet {\r\n  position: absolute;\r\n  top: 40px;\r\n  left: -150px;\r\n  width: 250px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n.imgSet div {\r\n  padding: 10px;\r\n}\r\n\r\n.img-btn {\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: white;\r\n  background-color: #2c2d2c;\r\n}\r\n\r\nspan {\r\n  margin: 0 10px 0 10px;\r\n}\r\n\r\n.tiling-viewer-box {\r\n  max-width: 100%;\r\n  overflow: hidden;\r\n  position: relative; /* 수정 */\r\n}\r\n\r\n#tiling-viewer {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 80vh;\r\n}\r\n\r\n.rbc-container {\r\n  height: 85vh;\r\n}\r\n\r\n.btn-container {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding-bottom: 10px;\r\n}\r\n\r\n</style>","import script from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./rbcImageList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./rbcImageList.vue?vue&type=style&index=0&id=6b608442&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6b608442\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcMenu\" }\nconst _hoisted_2 = { class: \"menuIco\" }\nconst _hoisted_3 = { class: \"menuIco\" }\nconst _hoisted_4 = { class: \"menuIco\" }\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, \"REPORT\", -1)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", null, \"LIS-CBC\", -1)\nconst _hoisted_7 = { class: \"wbcMenuBottom\" }\nconst _hoisted_8 = [\"disabled\"]\nconst _hoisted_9 = [\"disabled\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfoMenu',\n  props: ['isNext'],\n  setup(__props, { emit: __emit }) {\n\r\nconst emits = __emit;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = __props;\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"ul\", null, [\n        (['bm', 'pb'].includes(projectType.value))\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              (projectType.value !== 'pb' || (selectItems.value?.testType !== '01' && projectType.value === 'pb'))\n                ? (_openBlock(), _createElementBlock(\"li\", {\n                    key: 0,\n                    class: _normalizeClass({ onRight: isActive(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc') }),\n                    onClick: _cache[0] || (_cache[0] = ($event: any) => (pageGo(projectType.value === 'bm' ? '/databaseWhole' : '/databaseRbc')))\n                  }, [\n                    _createElementVNode(\"p\", _hoisted_2, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'virus'] })\n                    ]),\n                    _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'WHOLE' : 'RBC'), 1)\n                  ], 2))\n                : _createCommentVNode(\"\", true),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/databaseDetail\") }),\n                onClick: _cache[1] || (_cache[1] = ($event: any) => (pageGo('/databaseDetail')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_3, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'disease'] })\n                ]),\n                _createElementVNode(\"p\", null, _toDisplayString(projectType.value === 'bm' ? 'BM CELL' : 'WBC'), 1)\n              ], 2),\n              _createElementVNode(\"li\", {\n                class: _normalizeClass({ \"onRight\": isActive(\"/report\") }),\n                onClick: _cache[2] || (_cache[2] = ($event: any) => (pageGo('/report')))\n              }, [\n                _createElementVNode(\"p\", _hoisted_4, [\n                  _createVNode(_component_font_awesome_icon, { icon: ['fas', 'clipboard'] })\n                ]),\n                _hoisted_5\n              ], 2)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ]),\n      (projectType.value !== 'bm')\n        ? (_openBlock(), _createElementBlock(\"div\", {\n            key: 0,\n            onClick: lisCbcClick,\n            class: _normalizeClass({ \"onRight\": cbcLayer.value, \"cbcLi\": true })\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'desktop'] }),\n            _hoisted_6\n          ], 2))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createElementVNode(\"button\", {\n          onClick: _cache[3] || (_cache[3] = ($event: any) => (moveWbc('up'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-up'] })\n        ], 8, _hoisted_8),\n        _createElementVNode(\"button\", {\n          onClick: _cache[4] || (_cache[4] = ($event: any) => (moveWbc('down'))),\n          disabled: isButtonDisabled.value\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-down'] })\n        ], 8, _hoisted_9)\n      ])\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 0,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"wbcMenu\">\r\n    <ul>\r\n\r\n      <template v-if=\"['bm', 'pb'].includes(projectType)\">\r\n        <li\r\n            :class=\"{ onRight: isActive(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc') }\"\r\n            @click=\"pageGo(projectType === 'bm' ? '/databaseWhole' : '/databaseRbc')\"\r\n            v-if=\"projectType !== 'pb' || (selectItems?.testType !== '01' && projectType === 'pb')\"\r\n        >\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'virus']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'WHOLE' : 'RBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/databaseDetail\") }' @click=\"pageGo('/databaseDetail')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'disease']\"/>\r\n          </p>\r\n          <p>{{ projectType === 'bm' ? 'BM CELL' : 'WBC' }}</p>\r\n        </li>\r\n        <li :class='{ \"onRight\": isActive(\"/report\") }' @click=\"pageGo('/report')\">\r\n          <p class=\"menuIco\">\r\n            <font-awesome-icon :icon=\"['fas', 'clipboard']\"/>\r\n          </p>\r\n          <p>REPORT</p>\r\n        </li>\r\n      </template>\r\n\r\n    </ul>\r\n    <div @click=\"lisCbcClick\" :class='{ \"onRight\": cbcLayer, \"cbcLi\": true }' v-if=\"projectType !== 'bm'\">\r\n      <font-awesome-icon :icon=\"['fas', 'desktop']\"/>\r\n      <p>LIS-CBC</p>\r\n    </div>\r\n    <div class=\"wbcMenuBottom\">\r\n      <button @click=\"moveWbc('up')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-up']\"/>\r\n      </button>\r\n      <button @click=\"moveWbc('down')\" :disabled=\"isButtonDisabled\">\r\n        <font-awesome-icon :icon=\"['fas', 'circle-down']\"/>\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport router from \"@/router\";\r\n\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {\r\n  clearPcIpState,\r\n  detailRunningApi,\r\n  pageUpDownRunnIngApi,\r\n  updatePcIpStateApi\r\n} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {useRoute} from \"vue-router\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport { getDeviceIpApi } from \"@/common/api/service/device/deviceApi\";\r\n\r\nconst emits = defineEmits();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectType = ref<any>('bm');\r\nconst selectItemsData = ref(sessionStorage.getItem(\"selectItems\"));\r\nconst selectItems = ref(selectItemsData.value ? JSON.parse(selectItemsData.value) : null);\r\nconst resData = ref<any>([]);\r\nconst wbcInfo = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst route = useRoute();\r\nconst orderClass = ref<any>([]);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst isButtonDisabled = ref(false);\r\nlet timeoutId: number | undefined = undefined;\r\nconst pageMoveDeleteStop = ref(false);\r\nconst props = defineProps(['isNext']);\r\nconst ipAddress = ref<any>('');\r\n\r\nwatch(props.isNext, (newVal) => {\r\n  if (newVal) {\r\n    moveWbc('down')\r\n  }\r\n});\r\n\r\nonMounted(async () => {\r\n  projectType.value = window.PROJECT_TYPE;\r\n  await getRunningInfoDetail(selectItems.value.id);\r\n  pageMoveDeleteStop.value = true;\r\n  const ip = await getDeviceIpApi();\r\n  ipAddress.value = ip.data;\r\n});\r\n\r\nonUnmounted(async () => {\r\n  if (pageMoveDeleteStop.value) {\r\n    await deleteConnectionStatus();\r\n  }\r\n  await store.dispatch('commonModule/setCommonInfo', {cbcLayer: false});\r\n})\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst deleteConnectionStatus = async () => {\r\n  sessionStorage.setItem('dbBaseTrClickId', String(selectItems.value.id));\r\n\r\n  const req = `oldPcIp=${ipAddress.value}`\r\n  await clearPcIpState(req)\r\n      .then(response => {\r\n        instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n          type: 'SEND_DATA',\r\n          payload: 'refreshDb'\r\n        });\r\n      }).catch(error => {\r\n        console.log('2 err', error)\r\n      });\r\n}\r\n\r\nconst upDownBlockAccess = async (selectItems: any) => {\r\n  try {\r\n    const req = `oldPcIp=${ipAddress.value}&newEntityId=${resData.value.id}&newPcIp=${ipAddress.value}`\r\n    await updatePcIpStateApi(req).then(response => {\r\n      // emits('initData');\r\n      instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n        type: 'SEND_DATA',\r\n        payload: 'refreshDb'\r\n      });\r\n    }).catch(error => {\r\n      console.log('3 err', error)\r\n    });\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path);\r\n  pageMoveDeleteStop.value = false;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nasync function getRunningInfoDetail(id: any) {\r\n  try {\r\n    let result: ApiResponse<void>;\r\n    result = await detailRunningApi(String(id));\r\n\r\n    if (result) {\r\n      resData.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return resData.value;\r\n}\r\n\r\nasync function pageUpDownRunnIng(id: number, step: string, type: string) {\r\n  try {\r\n    const req = `id=${id}&step=${step}&type=${type}`\r\n    const res = await pageUpDownRunnIngApi(req);\r\n    if (res) {\r\n      resData.value = res.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst moveWbc = async (direction: any) => {\r\n\r\n  if (timeoutId !== undefined) {\r\n    clearTimeout(timeoutId);\r\n  }\r\n  isButtonDisabled.value = true; // 버튼 비활성화\r\n  await getOrderClass(); // 클래스 정보를 업데이트\r\n  await processNextDbIndex(direction, selectItems.value.id);\r\n\r\n  timeoutId = window.setTimeout(() => {\r\n    isButtonDisabled.value = false;\r\n  }, 700);\r\n\r\n};\r\n\r\nconst processNextDbIndex = async (direction: any, id: number) => {\r\n  const res: any = await pageUpDownRunnIng(id, '1', direction);\r\n  if (resData.value.lock_status) {\r\n    showAlert.value = true;\r\n    alertType.value = 'success';\r\n    alertMessage.value = 'Someone else is editing.';\r\n    return;\r\n  }\r\n  await handleDataResponse(res?.id, res);\r\n};\r\n\r\nconst handleDataResponse = async (dbId: any, res: any) => {\r\n  selectItems.value = resData.value;\r\n  sessionStorage.setItem('selectItems', JSON.stringify(resData.value));\r\n\r\n  const resClassInfo = resData.value?.wbcInfoAfter.length === 0 ? resData.value?.wbcInfo?.wbcInfo[0] : resData.value?.wbcInfoAfter;\r\n  const wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(resClassInfo, wbcArr);\r\n  sessionStorage.setItem('selectItemWbc', JSON.stringify(sortedWbcInfo));\r\n  sessionStorage.setItem('dbBaseTrClickId', String(dbId));\r\n  await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: sortedWbcInfo});\r\n  await updateUpDown(resClassInfo, resData.value);\r\n};\r\n\r\nconst updateUpDown = async (selectWbc: any, selectItemsNewVal: any) => {\r\n  if (projectType.value === 'pb' && selectItems.value?.testType === '01') {\r\n    pageGo('/databaseDetail');\r\n  }\r\n  emits('refreshClass', selectItemsNewVal);\r\n  pageMoveDeleteStop.value = true;\r\n  await upDownBlockAccess(selectItemsNewVal);\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst lisCbcClick = () => {\r\n  //\r\n  store.dispatch('commonModule/setCommonInfo', {cbcLayer: !cbcLayer.value});\r\n}\r\n\r\n</script>\r\n","import script from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfoMenu.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"cbcDiv\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", { class: \"titleCbc\" }, \"CBC + DIFF\", -1)\nconst _hoisted_3 = {\n  key: 0,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_4 = { class: \"cbcTable\" }\nconst _hoisted_5 = {\n  key: 1,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_6 = { class: \"cbcTable\" }\nconst _hoisted_7 = { key: 0 }\nconst _hoisted_8 = {\n  key: 2,\n  class: \"cbcDivWarp\"\n}\nconst _hoisted_9 = { class: \"cbcTable\" }\n\nimport {xml2json} from 'xml-js';\r\nimport {computed, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'lisCbc',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst store = useStore();\r\nconst props = __props;\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } \r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  classNm: cbcCode.classCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } \r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceSerialNm.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (siteCd.value ==='0002')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n          _createElementVNode(\"table\", _hoisted_4, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem?.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.tclsscrnnm._cdata), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.inptrslt._cdata), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n      : _createCommentVNode(\"\", true),\n    (siteCd.value ==='0007')\n      ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [\n          _createElementVNode(\"table\", _hoisted_6, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, [\n                  _createTextVNode(_toDisplayString(cbcItem.count) + \" \", 1),\n                  (cbcItem.cham !=='')\n                    ? (_openBlock(), _createElementBlock(\"span\", _hoisted_7, \" (\" + _toDisplayString(cbcItem.cham) + \") \", 1))\n                    : _createCommentVNode(\"\", true),\n                  _createTextVNode(\" \" + _toDisplayString(cbcItem.unit), 1)\n                ])\n              ]))\n            }), 128))\n          ])\n        ]))\n      : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n          _createElementVNode(\"table\", _hoisted_9, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(cbcWorkList.value, (cbcItem) => {\n              return (_openBlock(), _createElementBlock(\"tr\", {\n                key: cbcItem.id\n              }, [\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.classNm), 1),\n                _createElementVNode(\"td\", null, _toDisplayString(cbcItem.count) + \" \" + _toDisplayString(cbcItem.unit), 1)\n              ]))\n            }), 128))\n          ])\n        ]))\n  ]))\n}\n}\n\n})","<template>\r\n  <div class=\"cbcDiv\">\r\n    <h1 class=\"titleCbc\">CBC + DIFF</h1>\r\n    <div v-if=\"siteCd ==='0002'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem?.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.tclsscrnnm._cdata }}</td>\r\n          <td>{{ cbcItem.inptrslt._cdata }}</td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-if=\"siteCd ==='0007'\" class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }}\r\n            <span v-if=\"cbcItem.cham !==''\">\r\n              ({{ cbcItem.cham }})\r\n            </span>\r\n            {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div v-else class=\"cbcDivWarp\">\r\n      <table class=\"cbcTable\">\r\n        <tr v-for=\"(cbcItem) in cbcWorkList\" :key=\"cbcItem.id\">\r\n          <td>{{ cbcItem.classNm }}</td>\r\n          <td>\r\n            {{ cbcItem.count }} {{ cbcItem.unit }}\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {xml2json} from 'xml-js';\r\nimport {computed, defineProps, onMounted, ref, watch} from \"vue\";\r\nimport axios from \"axios\";\r\nimport {readFileTxt, readH7File} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getCbcCodeRbcApi, getFilePathSetApi} from \"@/common/api/service/setting/settingApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\n\r\nconst store = useStore();\r\nconst props = defineProps(['selectItems']);\r\nconst cbcWorkList = ref<any>([]);\r\nconst cbcPatientNo = ref('');\r\nconst cbcPatientNm = ref('');\r\nconst cbcSex = ref('');\r\nconst cbcAge = ref('');\r\nconst inhaTestCode = ref('');\r\nconst cbcFilePathSetArr: any = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst cbcCodeList = ref<any>([]);\r\nconst selectItemsVal = ref<any>([]);\r\n\r\nwatch(props.selectItems, async (newVal) => {\r\n  selectItemsVal.value = newVal;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n}, {deep: true});\r\n\r\nonMounted(async () => {\r\n  selectItemsVal.value = props.selectItems;\r\n  await getCbcPathData();\r\n  await getCbcCodeList();\r\n  await initCbcData(selectItemsVal.value);\r\n});\r\n\r\nconst initCbcData = async (newVal: any) => {\r\n  if (siteCd.value === '0002') { // 서울 성모\r\n    const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live';\r\n    axios.get(realUrl, {\r\n      params: {\r\n        submit_id: 'TRLII00124',\r\n        business_id: 'li',\r\n        instcd: '012',\r\n        bcno: newVal.barcodeNo\r\n      }\r\n    }).then(function (result) {\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      cbcWorkList.value = json.root.spcworklist.worklist;\r\n    }).catch(function (err) {\r\n      console.log(err.message)\r\n    })\r\n  } else if (siteCd.value === '0006' || siteCd.value === '0019' || siteCd.value === '0000') { // 고대 안암 + 길\r\n    let readFileTxtRes: any;\r\n    if(siteCd.value === '0000'){\r\n      readFileTxtRes = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n    }else{\r\n      readFileTxtRes = await readFileTxt(`path=C:/Users/user/Desktop/IA_MSG/CBC&filename=${props.selectItems.barcodeNo}`);\r\n    }\r\n    if (readFileTxtRes.data.success) {\r\n      const cbcData = readFileTxtRes.data.data.toString();\r\n      const cbcDataArray = cbcData.split('\\n');\r\n      const excludedTitles = [\r\n        'SPC_NO', 'BLCL_DT', 'PT_NO', 'PT_NM', 'SEX', 'AGE',\r\n        'SCAT_WDF', 'SCAT_WNR', 'DIST_RBC', 'DIST_WDF(FSC)', 'DIST_PLT'\r\n      ];\r\n      cbcDataArray.forEach((cbcData: any) => {\r\n        const [title, value] = cbcData.split('\\t').map((item: any) => item.trim());\r\n\r\n        if (!excludedTitles.includes(title)) {\r\n          const unit = title.includes('%') ? '%' : '';\r\n          cbcWorkList.value.push({classNm: title, count: value, unit: unit});\r\n        } else {\r\n          switch (title) {\r\n            case 'PT_NO':\r\n              cbcPatientNo.value = value;\r\n              break;\r\n            case 'SEX':\r\n              cbcSex.value = value;\r\n              break;\r\n            case 'AGE':\r\n              cbcAge.value = value;\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } \r\n  } else if (siteCd.value === '0007') { // 삼광의료재단\r\n    // 작업 필요\r\n  } else if (siteCd.value === '0011') { // 인하대학교\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url 설정인 경우\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        machine: 'ADUIMD',\r\n        episode: props.selectItems.barcodeNo\r\n      }\r\n      await axios.post(params.url + '/api/MifMain/Order', {\r\n        machine: params.machine,\r\n        episode: params.episode\r\n      }).then(function (result) {\r\n        cbcWorkList.value = [];\r\n        const res = result.data[0];\r\n        if (res?.returnCode === '0') {\r\n          cbcPatientNo.value = res?.regNo;\r\n          cbcPatientNm.value = res.name;\r\n          cbcSex.value = res.sex;\r\n          cbcAge.value = res.age;\r\n          inhaTestCode.value = res.testCode;\r\n          store.dispatch('commonModule/setCommonInfo', {inhaTestCode: res.testCode}); // lis 에서 사용함\r\n\r\n\r\n          const testCodeList = res.testCode.split(',');\r\n          testCodeList.forEach(function (codes: any) {\r\n            const codeArray = codes.split('|');\r\n            const code = codeArray[0];\r\n            const value = codeArray[1];\r\n            const unit = codeArray[2];\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.cd === code) {\r\n                const obj = {\r\n                  classNm: cbcCode.classCd,\r\n                  count: value,\r\n                  unit: unit\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n\r\n          })\r\n\r\n        } \r\n      }).catch(function (err) {\r\n        console.log(err.message + ' : no CBC result');\r\n      })\r\n    }\r\n\r\n  } else { // CBC 공통\r\n    if (cbcFilePathSetArr.value.includes(\"http\")) { // url\r\n      const params = {\r\n        url: cbcFilePathSetArr.value,\r\n        barcodeNo: props.selectItems.barcodeNo,\r\n        userId: userModuleDataGet.value.userId,\r\n        deviceBarcode: deviceSerialNm.value\r\n      }\r\n      const url = params.url + '?' +\r\n          'barcodeNo=' + params.barcodeNo + '&' +\r\n          'deviceBarcode=' + deviceSerialNm.value + '&' +\r\n          'userid=' + params.userId\r\n\r\n      await axios.get(url).then(async function  (result) {\r\n        const msg: any = await readH7File(result.data);\r\n        cbcWorkList.value = [];\r\n        msg.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              if (cbcCode.CBC_CD === cbcSegment.getField(3)) {\r\n                var obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment?.getField(5),\r\n                  unit: cbcSegment?.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj)\r\n              }\r\n            })\r\n\r\n          } else if (cbcSegment.name.trim() === 'PID') {\r\n            cbcPatientNo.value = cbcSegment.getField(1)\r\n            cbcPatientNm.value = cbcSegment.getField(4)\r\n            cbcSex.value = cbcSegment.getField(6)\r\n            cbcAge.value = cbcSegment.getField(7)\r\n          }\r\n        })\r\n      }).catch(function (err) {\r\n        console.log(err.message)\r\n      })\r\n\r\n    } else { // 파일\r\n      const readFileTxtRes: any = await readFileTxt(`path=${cbcFilePathSetArr.value}&filename=${props.selectItems.barcodeNo}.hl7`);\r\n      // const readFileTxtRes: any = await readFileTxt(`path=D:\\\\cbc&filename=1240459652.txt`);\r\n      if (readFileTxtRes.data.success) {\r\n        const msg: any = await readH7File(readFileTxtRes.data.data);\r\n        cbcWorkList.value = [];\r\n        msg?.data?.segments.forEach(function (cbcSegment: any) {\r\n          if (cbcSegment.name.trim() === 'OBX') {\r\n            cbcCodeList.value.forEach(function (cbcCode: any) {\r\n              //CBC_CD = > cbcCode.cd, CD_NM => cbcCode.testCd\r\n              if (cbcCode.cd === cbcSegment.getField(3)) {\r\n                const obj = {\r\n                  classNm: cbcCode.cd,\r\n                  count: cbcSegment.getField(5),\r\n                  unit: cbcSegment.getField(6)\r\n                }\r\n                cbcWorkList.value.push(obj);\r\n              }\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }else{\r\n        console.error(readFileTxtRes.data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  selectItemsVal.value.cbcPatientNo = cbcPatientNo.value;\r\n  selectItemsVal.value.cbcPatientNm = cbcPatientNm.value;\r\n  selectItemsVal.value.cbcSex = cbcSex.value;\r\n  selectItemsVal.value.cbcAge = cbcAge.value;\r\n  const req = {\r\n    cbcPatientNo: cbcPatientNo.value,\r\n    cbcPatientNm: cbcPatientNm.value,\r\n    cbcSex: cbcSex.value,\r\n    cbcAge: cbcAge.value,\r\n  };\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo ={...result.data,...req }\r\n  sessionStorage.setItem('selectItems', JSON.stringify(updatedRuningInfo));\r\n  await updateRunningApiPost([updatedRuningInfo]);\r\n\r\n}\r\n\r\nconst getCbcPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data) {\r\n      const data = result.data;\r\n      cbcFilePathSetArr.value = data[0].cbcFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst getCbcCodeList = async () => {\r\n  try {\r\n    const result = await getCbcCodeRbcApi();\r\n\r\n    if (result && result.data) {\r\n      cbcCodeList.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nasync function updateRunningApiPost(originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userModuleDataGet.value.id), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      console.log('')\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./lisCbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"wbcContent\" }\nconst _hoisted_2 = { class: \"topClintInfo\" }\n\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetailRbc',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)) + \" Smear\", 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcClass, {\n          onIsBeforeUpdate: isBeforeUpdate,\n          onClassInfoArrUpdate: classInfoArrUpdate,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          allCheckClear: allCheckClear.value\n        }, null, 8, [\"rbcInfo\", \"selectItems\", \"allCheckClear\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(RbcImageList, {\n          onUnChecked: unChecked,\n          isBefore: isBefore.value,\n          classInfoArr: classInfoArr.value,\n          rbcInfo: rbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\"\n        }, null, 8, [\"isBefore\", \"classInfoArr\", \"rbcInfo\", \"selectItems\"])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>{{ getTestTypeText(selectItems?.testType) }} Smear</li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcClass @isBeforeUpdate=\"isBeforeUpdate\" @classInfoArrUpdate=\"classInfoArrUpdate\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable' :allCheckClear=\"allCheckClear\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <RbcImageList @unChecked=\"unChecked\" :isBefore=\"isBefore\" :classInfoArr=\"classInfoArr\" :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='listTable'/>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, onMounted, ref} from 'vue';\r\nimport RbcClass from \"./rbcClass.vue\";\r\nimport RbcImageList from \"./rbcImageList/rbcImageList.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst rbcInfo = ref(null);\r\nconst classInfoArr = ref<any>([]);\r\nconst allCheckClear = ref<boolean>(false);\r\nconst isBefore = ref(false);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\n\r\nonMounted(() => {\r\n  initData();\r\n});\r\n\r\nconst initData = async () => {\r\n  rbcInfo.value = selectItems.value;\r\n}\r\n\r\nconst isBeforeUpdate = (val: boolean) => {\r\n  isBefore.value = val;\r\n}\r\n\r\nconst refreshClass = async (data: any) => {\r\n  rbcInfo.value = data;\r\n  selectItems.value = data;\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\nconst classInfoArrUpdate = (data: any) => {\r\n  classInfoArr.value = data;\r\n}\r\n\r\nconst unChecked = () => {\r\n  allCheckClear.value = !allCheckClear.value;\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetailRbc.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","export const realUrl = 'http://emr012.cmcnu.or.kr/cmcnu/.live'\r\nexport const business_id = 'li'\r\n// 병원 코드\r\nexport const instcd = '012'\r\n// 장비 코드 (LIS등록)\r\nexport const eqmtcd = 'H59'\r\n\r\nexport const CbcWbcTestCdList_0002 = [{\r\n    id: '01', title: 'NS', name: 'Neutrophil-Segmented', cd: 'LHR10501'\r\n}, {\r\n    id: '02', title: 'ME', name: 'Metamyelocyte', cd: 'LHR10507'\r\n}, {\r\n    id: '03', title: 'MY', name: 'Myelocyte', cd: 'LHR10508'\r\n}, {\r\n    id: '04', title: 'PR', name: 'Promyelocyte', cd: 'LHR10509'\r\n}, {\r\n    id: '05', title: 'LY', name: 'Lymphocyte', cd: 'LHR10503'\r\n}, {\r\n    id: '61', title: 'LR', name: 'Reactive lymphocyte', cd: 'LHR10544'\r\n}, {\r\n    id: '62', title: 'LA', name: 'Abnormal lymphocyte', cd: 'LHR10543'\r\n}, {\r\n    id: '07', title: 'MO', name: 'Monocyte', cd: 'LHR10504'\r\n}, {\r\n    id: '08', title: 'EO', name: 'Eosinophil', cd: 'LHR10505'\r\n}, {\r\n    id: '09', title: 'BA', name: 'Basophil', cd: 'LHR10506'\r\n}, {\r\n    id: '10', title: 'BL', name: 'Blast', cd: 'LHR10510'\r\n}, {\r\n    id: '11', title: 'PC', name: 'Plasma cell', cd: 'LHR10517'\r\n}]\r\n\r\nexport const spcParams = {\r\n    submit_id: 'TRLII00124',\r\n    business_id: 'li',\r\n    instcd: '012', // 병원 코드\r\n    bcno: 'H59'\r\n}\r\n\r\n","import {ApiResponse, useHttpClient} from \"@/common/api/httpClient\";\r\nimport {apiConstants} from \"@/common/api/apiConstants\";\r\nconst httpClient = useHttpClient();\r\n\r\nexport const fileSysPost = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.post, request, '');\r\n};\r\n\r\nexport const deleteRunningApi = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpDelete(apiConstants.filesystem.delete, request, false);\r\n};\r\n\r\nexport const  createDirectory = async (request: any): Promise<ApiResponse<void>> => {\r\n    return httpClient.httpGet(apiConstants.filesystem.createDirectory, `${request}`, true);\r\n};\r\n\r\nexport const createFile = async (request: any): Promise<ApiResponse<any | undefined>> => {\r\n    return httpClient.httpPost(apiConstants.filesystem.fileCreate, request, '');\r\n};","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, createTextVNode as _createTextVNode, vShow as _vShow } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = { class: \"mt2 mb2\" }\nconst _hoisted_3 = { class: \"wbcClassInfoLeft\" }\nconst _hoisted_4 = { class: \"leftWbcInfo\" }\nconst _hoisted_5 = { style: {\"position\":\"relative\"} }\nconst _hoisted_6 = {\n  key: 0,\n  class: \"memoModal\"\n}\nconst _hoisted_7 = { class: \"wbcClassScroll\" }\nconst _hoisted_8 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"nth1Child classAttribute\"\n}\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Class\", -1)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Count\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, \"%\", -1)\nconst _hoisted_13 = [\n  _hoisted_10,\n  _hoisted_11,\n  _hoisted_12\n]\nconst _hoisted_14 = [\"onClick\"]\nconst _hoisted_15 = { class: \"categories classTotal\" }\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"categoryNm\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" Total \")\n], -1)\nconst _hoisted_17 = { class: \"classNm\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"ul\", { class: \"degree\" }, [\n  /*#__PURE__*/_createElementVNode(\"li\", null, \" 100.00 \")\n], -1)\nconst _hoisted_19 = { key: 0 }\nconst _hoisted_20 = [\"onDragstart\", \"onDrop\"]\nconst _hoisted_21 = [\"onClick\"]\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"li\", null, \" -\", -1)\nconst _hoisted_23 = { key: 1 }\nconst _hoisted_24 = { class: \"categoryNm\" }\nconst _hoisted_25 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_26 = { class: \"classNm\" }\nconst _hoisted_27 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_28 = { key: 0 }\nconst _hoisted_29 = { class: \"degree\" }\nconst _hoisted_30 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_31 = /*#__PURE__*/_createElementVNode(\"li\", null, \"-\", -1)\nconst _hoisted_32 = {\n  key: 2,\n  class: \"beforeAfterBtn\"\n}\n\nimport {computed, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'classInfo',\n  props: ['wbcInfo', 'selectItems', 'type'],\n  setup(__props, { emit: __emit }) {\n\r\nconst props = __props;\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = __emit;\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo = {...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoChangeVal.value, ...nonRbcClassList.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoChangeVal.value, ...nonRbcClassList.value]});\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (__props.type !== 'report')\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: barcodeImg.value\n        }, null, 8, _hoisted_1))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h3\", _hoisted_3, _toDisplayString(wbcClassTileChange()), 1),\n      _createElementVNode(\"ul\", _hoisted_4, [\n        _createElementVNode(\"li\", _hoisted_5, [\n          _createVNode(_component_font_awesome_icon, {\n            icon: ['fas', 'comment-dots'],\n            onClick: memoOpen\n          }),\n          (memoModal.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                _withDirectives(_createElementVNode(\"textarea\", {\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((wbcMemo).value = $event))\n                }, null, 512), [\n                  [_vModelText, wbcMemo.value]\n                ]),\n                _createElementVNode(\"button\", { onClick: memoChange }, \"ok\"),\n                _createElementVNode(\"button\", { onClick: memoCancel }, \"cancel\")\n              ]))\n            : _createCommentVNode(\"\", true)\n        ]),\n        _createElementVNode(\"li\", {\n          onClick: commitConfirmed,\n          class: _normalizeClass({\r\n    'submitted': __props.selectItems.submitState === 'Submit',\r\n  })\n        }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'square-check'] })\n        ], 2),\n        _createElementVNode(\"li\", { onClick: lisModalOpen }, [\n          _createVNode(_component_font_awesome_icon, { icon: ['fas', 'upload'] })\n        ]),\n        _createElementVNode(\"li\", null, [\n          (!toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 0,\n                icon: ['fas', 'lock'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true),\n          (toggleLock.value)\n            ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                key: 1,\n                icon: ['fas', 'lock-open'],\n                onClick: toggleLockEvent\n              }))\n            : _createCommentVNode(\"\", true)\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_7, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n        return (_openBlock(), _createElementBlock(\"div\", {\n          key: item.id,\n          class: \"wbcClassDbDiv\",\n          draggable: \"true\",\n          onDragstart: ($event: any) => (startDrag(idx, $event)),\n          onDragover: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"prevent\"])),\n          onDrop: ($event: any) => (drop(idx, $event))\n        }, [\n          (idx === 0)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_9, _hoisted_13))\n            : _createCommentVNode(\"\", true),\n          (shouldRenderCategory(item.title))\n            ? (_openBlock(), _createElementBlock(\"ul\", {\n                key: 1,\n                class: \"nth1Child\",\n                onClick: ($event: any) => (goClass(item.id))\n              }, [\n                _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                _createElementVNode(\"li\", null, _toDisplayString(item?.percent || '-'), 1)\n              ], 8, _hoisted_14))\n            : _createCommentVNode(\"\", true)\n        ], 40, _hoisted_8))\n      }), 128)),\n      _createElementVNode(\"div\", _hoisted_15, [\n        _hoisted_16,\n        _createElementVNode(\"ul\", _hoisted_17, [\n          _createElementVNode(\"li\", null, _toDisplayString(totalCount.value || 0), 1)\n        ]),\n        _hoisted_18\n      ]),\n      (projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfoChangeVal.value, (item, idx) => {\n              return (_openBlock(), _createElementBlock(\"div\", {\n                key: item.id,\n                class: \"wbcClassDbDiv mb2\",\n                draggable: \"true\",\n                onDragstart: ($event: any) => (startDrag(idx, $event)),\n                onDragover: _cache[2] || (_cache[2] = _withModifiers(() => {}, [\"prevent\"])),\n                onDrop: ($event: any) => (drop(idx, $event))\n              }, [\n                (item?.title === 'OT')\n                  ? (_openBlock(), _createElementBlock(\"ul\", {\n                      key: 0,\n                      class: \"nth1Child\",\n                      onClick: ($event: any) => (goClass(item.id))\n                    }, [\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.name), 1),\n                      _createElementVNode(\"li\", null, _toDisplayString(item?.count), 1),\n                      _hoisted_22\n                    ], 8, _hoisted_21))\n                  : _createCommentVNode(\"\", true)\n              ], 40, _hoisted_20))\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (!projectBm.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(nonRbcClassList.value, (nWbcItem, outerIndex) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                key: outerIndex,\n                class: \"categories\"\n              }, [\n                _createElementVNode(\"ul\", _hoisted_24, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_25, \"non-WBC\"))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, _toDisplayString(getStringValue(nWbcItem.name)), 1)\n                ]),\n                _createElementVNode(\"ul\", _hoisted_26, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_27))\n                    : _createCommentVNode(\"\", true),\n                  _createElementVNode(\"li\", null, [\n                    _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                    (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                      ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, \" / \" + _toDisplayString(selectItemsSessionStorageData.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                      : _createCommentVNode(\"\", true)\n                  ])\n                ]),\n                _createElementVNode(\"ul\", _hoisted_29, [\n                  (outerIndex === 0)\n                    ? (_openBlock(), _createElementBlock(\"li\", _hoisted_30))\n                    : _createCommentVNode(\"\", true),\n                  _hoisted_31\n                ])\n              ], 512)), [\n                [_vShow, __props.selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM']\n              ])\n            }), 128))\n          ]))\n        : _createCommentVNode(\"\", true),\n      (__props.type !== 'report')\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_32, [\n            _createElementVNode(\"button\", {\n              onClick: beforeChang,\n              class: _normalizeClass({isBeforeClicked:isBefore.value})\n            }, \"Before\", 2),\n            _createElementVNode(\"button\", {\n              onClick: _cache[3] || (_cache[3] = ($event: any) => (afterChang(clonedWbcInfoStore.value))),\n              class: _normalizeClass({isBeforeClicked:!isBefore.value})\n            }, \"After\", 2)\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img v-if=\"type !== 'report'\"\r\n       :src=\"barcodeImg\"/>\r\n  <div class=\"mt2 mb2\">\r\n    <h3 class=\"wbcClassInfoLeft\">\r\n      {{ wbcClassTileChange() }}\r\n    </h3>\r\n    <ul class=\"leftWbcInfo\">\r\n      <li style=\"position: relative\">\r\n        <font-awesome-icon :icon=\"['fas', 'comment-dots']\" @click=\"memoOpen\"/>\r\n        <div v-if=\"memoModal\" class=\"memoModal\">\r\n          <textarea v-model=\"wbcMemo\"></textarea>\r\n          <button @click=\"memoChange\">ok</button>\r\n          <button @click=\"memoCancel\">cancel</button>\r\n        </div>\r\n      </li>\r\n      <li @click=\"commitConfirmed\" :class=\"{\r\n    'submitted': selectItems.submitState === 'Submit',\r\n  }\">\r\n        <font-awesome-icon :icon=\"['fas', 'square-check']\"/>\r\n      </li>\r\n      <li @click=\"lisModalOpen\">\r\n        <font-awesome-icon :icon=\"['fas', 'upload']\"/>\r\n      </li>\r\n      <li>\r\n        <font-awesome-icon :icon=\"['fas', 'lock']\" v-if=\"!toggleLock\" @click=\"toggleLockEvent\"/>\r\n        <font-awesome-icon :icon=\"['fas', 'lock-open']\" v-if=\"toggleLock\" @click=\"toggleLockEvent\"/>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"wbcClassScroll\">\r\n    <div\r\n        v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n        :key=\"item.id\"\r\n        class=\"wbcClassDbDiv\"\r\n        draggable=\"true\"\r\n        @dragstart=\"startDrag(idx, $event)\"\r\n        @dragover.prevent\r\n        @drop=\"drop(idx, $event)\"\r\n    >\r\n      <ul class=\"nth1Child classAttribute\" v-if=\"idx === 0\">\r\n        <li>Class</li>\r\n        <li>Count</li>\r\n        <li>%</li>\r\n      </ul>\r\n      <ul class=\"nth1Child\" v-if=\"shouldRenderCategory(item.title)\" @click=\"goClass(item.id)\">\r\n        <li>{{ item?.name }}</li>\r\n        <li>{{ item?.count }}</li>\r\n        <li> {{ item?.percent || '-' }}</li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"categories classTotal\">\r\n      <ul class=\"categoryNm\">\r\n        <li>\r\n          Total\r\n        </li>\r\n      </ul>\r\n      <ul class=\"classNm\">\r\n        <li>\r\n          {{ totalCount || 0 }}\r\n        </li>\r\n      </ul>\r\n      <ul class=\"degree\">\r\n        <li>\r\n          100.00\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"projectBm\">\r\n      <div\r\n          v-for=\"(item, idx) in wbcInfoChangeVal\"\r\n          :key=\"item.id\"\r\n          class=\"wbcClassDbDiv mb2\"\r\n          draggable=\"true\"\r\n          @dragstart=\"startDrag(idx, $event)\"\r\n          @dragover.prevent\r\n          @drop=\"drop(idx, $event)\"\r\n      >\r\n        <ul class=\"nth1Child\" v-if=\"item?.title === 'OT'\" @click=\"goClass(item.id)\">\r\n          <li>{{ item?.name }}</li>\r\n          <li>{{ item?.count }}</li>\r\n          <li> -</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-if=\"!projectBm\">\r\n      <template v-for=\"(nWbcItem, outerIndex) in nonRbcClassList\" :key=\"outerIndex\">\r\n        <div class=\"categories\" v-show=\"selectItems.siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n          <ul class=\"categoryNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\">non-WBC</li>\r\n            <li>{{ getStringValue(nWbcItem.name) }}</li>\r\n          </ul>\r\n          <ul class=\"classNm\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li>\r\n              {{ nWbcItem?.count }}\r\n              <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\">\r\n                / {{ selectItemsSessionStorageData?.wbcInfo?.maxWbcCount }} WBC</span>\r\n            </li>\r\n          </ul>\r\n          <ul class=\"degree\">\r\n            <li class=\"mb1 liTitle\" v-if=\"outerIndex === 0\"></li>\r\n            <li>-</li>\r\n          </ul>\r\n        </div>\r\n      </template>\r\n    </div>\r\n    <div v-if=\"type !== 'report'\" class=\"beforeAfterBtn\">\r\n      <button @click=\"beforeChang\" :class={isBeforeClicked:isBefore}>Before</button>\r\n      <button @click=\"afterChang(clonedWbcInfoStore)\" :class={isBeforeClicked:!isBefore}>After</button>\r\n    </div>\r\n  </div>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, defineEmits, defineProps, onMounted, ref, watch} from 'vue';\r\nimport {getBarcodeDetailImageUrl} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {\r\n  getFilePathSetApi,\r\n  getLisCodeApi,\r\n  getLisCodeRbcApi,\r\n  getOrderClassApi,\r\n  putOrderClassApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\n\r\nconst props = defineProps(['wbcInfo', 'selectItems', 'type']);\r\nconst store = useStore();\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst emits = defineEmits();\r\nimport moment from 'moment';\r\nimport {business_id, CbcWbcTestCdList_0002, eqmtcd, instcd, realUrl, spcParams} from \"@/common/defines/constFile/lis\";\r\nimport axios from \"axios\";\r\nimport {xml2json} from \"xml-js\";\r\nimport {createDirectory, createFile} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {createH17, readH7Message} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport {getDateTimeStr} from \"@/common/lib/utils/dateUtils\";\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst clonedWbcInfoStore = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst inhaTestCode: any = computed(() => store.state.commonModule.inhaTestCode);\r\nconst deviceSerialNm = computed(() => store.state.commonModule.deviceSerialNm);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst barcodeImg = ref('');\r\nconst userId = ref('');\r\nconst wbcMemo = ref('');\r\nconst memoModal = ref(false);\r\nconst wbcInfoChangeVal: any = ref<any>([]);\r\nconst nonRbcClassList = ref<any>([]);\r\nconst titleArr = ['NR', 'GP', 'PA', 'AR', 'MA', 'SM'];\r\nconst toggleLock = ref(false);\r\nconst dragIndex = ref(-1);\r\nconst dragOffsetY = ref(0);\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst orderClass = ref<any>([]);\r\nconst projectBm = ref(false);\r\nconst isBefore = ref(false);\r\nconst totalCount = ref(0);\r\nconst okMessageType = ref('');\r\nconst lisCodeWbcArr = ref<any>([]);\r\nconst lisCodeRbcArr = ref<any>([]);\r\nconst lisFilePathSetArr = ref<any>([]);\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  await afterChang(clonedWbcInfoStore.value);\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  // 첫 진입시\r\n  if (props.selectItems.submitState === \"\") {\r\n    const result: any = await detailRunningApi(String(props.selectItems.id));\r\n    const updatedItem = {\r\n      submitState: 'checkFirst',\r\n    };\r\n    const updatedRuningInfo ={...result.data,...updatedItem }\r\n    await resRunningItem(updatedRuningInfo, true);\r\n  }\r\n  await getLisWbcRbcData();\r\n  await getLisPathData();\r\n})\r\n\r\nwatch(userModuleDataGet.value, (newUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => props.wbcInfo, (newItem) => {\r\n  wbcMemo.value = props.selectItems.wbcMemo;\r\n  const path = props.selectItems?.img_drive_root_path !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : pbiaRootDir.value;\r\n  barcodeImg.value = getBarcodeDetailImageUrl('barcode_image.jpg', path, props.selectItems.slotId, barcodeImgDir.barcodeDirName);\r\n});\r\n\r\nwatch(() => clonedWbcInfoStore.value, (newItem) => {\r\n  afterChang(newItem);\r\n}, {deep: true});\r\n\r\n\r\nconst lisModalOpen = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_UPLOAD_LIS;\r\n  okMessageType.value = 'lis';\r\n}\r\n\r\nconst goClass = (id: any) => {\r\n  emits('scrollEvent', id)\r\n}\r\n\r\nconst wbcClassTileChange = (): string => {\r\n  if (!projectBm.value) {\r\n    return 'WBC Classification';\r\n  } else {\r\n    return 'BM Classification';\r\n  }\r\n}\r\n\r\nconst startDrag = (index: any, event: any) => {\r\n  dragIndex.value = index;\r\n  dragOffsetY.value = event.clientY - event.target.getBoundingClientRect().top;\r\n};\r\n\r\nconst drop = (index: any, event: any) => {\r\n  if (!toggleLock.value) {\r\n    return;\r\n  }\r\n  event.preventDefault();\r\n  if (dragIndex.value !== -1) {\r\n    const movedItem = wbcInfoChangeVal.value.splice(dragIndex.value, 1)[0];\r\n    wbcInfoChangeVal.value.splice(index, 0, movedItem);\r\n    dragIndex.value = -1;\r\n    updateOriginalDb();\r\n  }\r\n};\r\n\r\n\r\nconst toggleLockEvent = () => {\r\n  toggleLock.value = !toggleLock.value;\r\n}\r\n\r\nconst commitConfirmed = () => {\r\n  showConfirm.value = true;\r\n  confirmMessage.value = messages.IDS_MSG_CONFIRM_SLIDE;\r\n  okMessageType.value = 'commit';\r\n}\r\n\r\nconst handleOkConfirm = () => {\r\n  if (okMessageType.value === 'commit') {\r\n    onCommit();\r\n  } else {\r\n    uploadLis();\r\n  }\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst uploadLis = () => {\r\n  if (siteCd.value === '0002') {\r\n    const codeList = CbcWbcTestCdList_0002;\r\n    axios.get('http://emr012.cmcnu.or.kr/cmcnu/.live', {\r\n      params: spcParams\r\n    }).then(function (result) {\r\n      // 결과 처리 코드\r\n      const xml = result.data;\r\n      const json = JSON.parse(xml2json(xml, {compact: true}));\r\n      const cbcWorkList = json.root.spcworklist.worklist;\r\n      const fiveDiffWorkList = ['LHR10501', 'LHR10502', 'LHR10503', 'LHR10504', 'LHR10505', 'LHR10506'];\r\n\r\n      const wbcDiffCountItem = cbcWorkList.filter(function (item: any) {\r\n        return item.classCd._cdata === 'LHR100'\r\n      })\r\n\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        wbcItem.classCd = ''\r\n\r\n        codeList.forEach(function (code) {\r\n          if (wbcItem.id === code.id) {\r\n            wbcItem.classCd = code.cd\r\n          }\r\n        })\r\n      })\r\n\r\n      let wbcTemp: any = [];\r\n\r\n      // five diff push\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        fiveDiffWorkList.forEach(function (fiveDiffItem) {\r\n          if (wbcItem.classCd === fiveDiffItem) {\r\n            wbcTemp.push(wbcItem)\r\n          } else {\r\n            if ((wbcItem.count > 0) && wbcItem.classCd !== '') {\r\n              wbcTemp.push(wbcItem)\r\n            }\r\n          }\r\n        })\r\n      })\r\n\r\n      // neutrophil-seg\r\n      const nsPercentItem = wbcTemp.filter(function (item: any) {\r\n        return item.classCd === 'LHR10501'\r\n      })\r\n\r\n      // ANC insert\r\n      if ((nsPercentItem.length > 0) && (wbcDiffCountItem.length > 0)) {\r\n        const ancResult = ((Number(wbcDiffCountItem[0].inptrslt._cdata) * nsPercentItem[0].percent) / 100).toFixed(2)\r\n\r\n        wbcTemp.push({\r\n          classCd: 'LHR10599',\r\n          percent: ancResult\r\n        })\r\n      }\r\n      // 유저 체크\r\n      checkUserAuth(userModuleDataGet.value.userId).then(function (isUserAuth) {\r\n        if (isUserAuth === 'succ') {\r\n          const params = {\r\n            empNo: userModuleDataGet.value.userId,\r\n            barcodeNo: props.selectItems.barcodeNo,\r\n            wbcInfo: wbcTemp\r\n          }\r\n\r\n          const now = new Date();\r\n          const year = `${now.getFullYear()}`;\r\n          let month = `${now.getMonth() + 1}`;\r\n          if (month.length === 1) {\r\n            month = `0${month}`;\r\n          }\r\n          let day = `${now.getDate()}`;\r\n          if (day.length === 1) {\r\n            day = `0${day}`;\r\n          }\r\n\r\n          const separator1 = encodeURIComponent(String.fromCharCode(23)); // '\\u0017'\r\n          const separator2 = encodeURIComponent(String.fromCharCode(23, 23)); // '\\u0017\\u0017'\r\n          const terminator = encodeURIComponent(String.fromCharCode(3)); // '\\u0003'\r\n\r\n          const result = params.wbcInfo\r\n              .filter((wbcItem: any) => wbcItem.classCd !== null && wbcItem.classCd !== '')\r\n              .map((wbcItem: any) => `${wbcItem.classCd}${separator1}${wbcItem.percent}${separator2}${year}${month}${day}${terminator}`)\r\n              .join('');\r\n\r\n          const url = `${realUrl}?submit_id=TXLII00101&business_id=${business_id}&ex_interface=${params.empNo}|${instcd}&instcd=${instcd}&userid=${params.empNo}&eqmtcd=${eqmtcd}&bcno=${params.barcodeNo}&result=${result}&testcont=MANUAL DIFFERENTIAL COUNT RESULT&testcontcd=01&execdeptcd=H1`;\r\n\r\n          axios.get(url).then(function (result) {\r\n            const xml = result.data;\r\n            const json = JSON.parse(xml2json(xml, {compact: true}));\r\n            const resultFlag = json.root.ResultFlag.resultflag._text;\r\n            if (resultFlag === 'Y') {\r\n              showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n            } else {\r\n              showErrorAlert(json.root.ResultFlag.error2._text);\r\n            }\r\n          }).catch(function (err) {\r\n            showErrorAlert(err.message);\r\n          })\r\n        } else {\r\n          showErrorAlert(messages.IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID);\r\n        }\r\n      })\r\n\r\n    }).catch(function (err) {\r\n      showErrorAlert(err.message);\r\n    });\r\n  } else {\r\n    // lis 최종호출\r\n    lisLastStep();\r\n  }\r\n}\r\n\r\nconst lisLastStep = () => {\r\n  if (siteCd.value === '0019') {\r\n    let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n    let seq = 0;\r\n\r\n    lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n      if (lisCode.code !== '') {\r\n        props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n          if (lisCode.IA_CD === wbcItem.id) {\r\n            if (Number(wbcItem.percent) > 0 || Number(wbcItem.count)) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n\r\n          }\r\n\r\n        })\r\n      }\r\n    })\r\n    data += 'L|1|N'\r\n    lisFileUrlCreate(data);\r\n  } else if (siteCd.value === '0006') { // 고대 안암\r\n    const data = godae();\r\n    lisFileUrlCreate(data);\r\n\r\n  } else if (siteCd.value === '0011') {\r\n    inhaDataSend();\r\n  } else {\r\n    otherDataSend();\r\n  }\r\n}\r\n\r\nconst otherDataSend = async () => {\r\n  const url = lisFilePathSetArr.value;\r\n  const fileCreateRes = await createDirectory(url);\r\n  let msg: any;\r\n\r\n  if (fileCreateRes) {\r\n    const data = {\r\n      sendingApp: 'PBIA',\r\n      sendingFacility: 'PBIA',\r\n      receivingApp: 'LIS',\r\n      receivingFacility: 'LIS',\r\n      dateTime: getDateTimeStr(),\r\n      security: '',\r\n      messageType: ['ADT', 'R02'],\r\n      messageControlId: props.selectItems.barcodeNo,\r\n      processingId: 'P',\r\n      hl7VersionId: '2.5',\r\n      selectedItem: { /* selectedItem 데이터 */},\r\n      wbcInfo: props.selectItems.wbcInfoAfter,\r\n      result: lisCodeWbcArr.value,\r\n    };\r\n\r\n    const res = await readH7Message(data);\r\n    if (res) {\r\n      if (!lisFilePathSetArr.value.includes(\"http\")) { // file\r\n        const data = {\r\n          filepath: lisFilePathSetArr.value,\r\n          msg: res,\r\n        }\r\n        try {\r\n          const createH17Res: any = await createH17(data);\r\n          showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        } catch (error: any) {\r\n          showErrorAlert(error.response.data);\r\n        }\r\n      } else { // url\r\n        sendLisMessage(res);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst inhaDataSend = () => {\r\n  let resultStr = '';\r\n  const testCodeList = inhaTestCode.value.split(',');\r\n  let tmpList: any = [];\r\n  testCodeList.forEach(function (codes: any) {\r\n    if (codes.length > 0) {\r\n      var codeArray = codes.split('|')\r\n      var code = codeArray[0]\r\n      var value = codeArray[1]\r\n      var unit = codeArray[2]\r\n      var type = codeArray[3]\r\n      var tmpStr = ''\r\n\r\n      if (code === 'L0210') {\r\n        value = value + '5'\r\n      }\r\n\r\n      if (code === 'H1151') {\r\n        tmpStr += 'H9511' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1152') {\r\n        tmpStr += 'H9512' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1153') {\r\n        tmpStr += 'H9513' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1154') {\r\n        tmpStr += 'H9514' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1155') {\r\n        tmpStr += 'H9515' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1165') {\r\n        tmpStr += 'H9510' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1162') {\r\n        tmpStr += 'H9570' + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      } else if (code === 'H1101' || code === 'H1102' || code === 'H1103' ||\r\n          code === 'H1104' || code === 'H1105' || code === 'H1106' ||\r\n          code === 'H1121' || code === 'H1122' || code === 'H1123') {\r\n        tmpStr += code + '|' + value + '|' //+ unit // + '\\\\' + type\r\n        tmpList.push(tmpStr)\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  inhaTestCode.value = '';\r\n  tmpList.forEach(function (item: any) {\r\n    inhaTestCode.value += item + ','\r\n  })\r\n  resultStr += inhaTestCode.value;\r\n  let rbcTmp = '';\r\n  //wbc\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any, index: any) {\r\n    props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n      if (lisCode.IA_CD === wbcItem.id) {\r\n        if (lisCode.code === 'H9600' || lisCode.code === 'H9365' ||\r\n            lisCode.code === 'H9366') {\r\n          if (Number(wbcItem.count) > 0) {\r\n            resultStr += lisCode.code + '|' + '1' + '|' + ','\r\n          } else {\r\n            resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n          }\r\n        } else {\r\n          // GP, PA\r\n          if (lisCode.IA_CD === '13' || lisCode.IA_CD === '14') {\r\n            if (Number(wbcItem.count) > Number(lisCode.MIN_COUNT)) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              resultStr += lisCode.code + '|' + wbcItem.percent + '|' + ','\r\n            } else {\r\n              resultStr += lisCode.code + '|' + ' ' + '|' + ','\r\n            }\r\n          }\r\n\r\n        }\r\n      }\r\n    })\r\n  })\r\n  // RBC\r\n  const specialCodes = ['H9531', 'H9535', 'H9594', 'H9571', 'H9574', 'H9595'];\r\n\r\n  lisCodeRbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.rbcInfoAfter.forEach(function (rbcItem: any) {\r\n        if (lisCode.categoryId === rbcItem.categoryId) {\r\n          for (const rbcItemElement of rbcItem.classInfo) {\r\n            if (lisCode.classId === rbcItemElement.classId) {\r\n              const degree = Number(rbcItemElement.degree) === 0 ? ' ' : specialCodes.includes(lisCode.code) ? '0' : rbcItemElement.degree;\r\n              rbcTmp += `${lisCode.code}|${degree}|,`;\r\n              resultStr += `${lisCode.code}|${degree}|,`;\r\n            }\r\n          }\r\n\r\n        }\r\n      })\r\n\r\n    }\r\n  })\r\n\r\n  const replacements: any = {\r\n    'H9531': 'H9571',\r\n    'H9532': 'H9572',\r\n    'H9533': 'H9573',\r\n    'H9535': 'H9574',\r\n    'H9536': 'H9575',\r\n    'H9537': 'H9576',\r\n    'H9534': 'H9577',\r\n    'H9538': 'H9578',\r\n    'H9542': 'H9518',\r\n    'H9544': 'H9520',\r\n    'H9546': 'H9517',\r\n    'H9548': 'H9519',\r\n    'H9550': 'H9522',\r\n    'H9552': 'H9521',\r\n    'H9554': 'H9525',\r\n    'H9556': 'H9524',\r\n    'H9558': 'H9526',\r\n    'H9560': 'H9523',\r\n    'H9562': 'H9528',\r\n    'H9564': 'H9530',\r\n    'H9594': 'H9595'\r\n  };\r\n\r\n  let rbcTmp2: any = rbcTmp.replace(/H9531|H9532|H9533|H9535|H9536|H9537|H9534|H9538|H9542|H9544|H9546|H9548|H9550|H9552|H9554|H9556|H9558|H9560|H9562|H9564|H9594/g, match => replacements[match]);\r\n\r\n  resultStr += rbcTmp;\r\n  resultStr += rbcTmp2;\r\n\r\n\r\n  var params = {\r\n    url: lisFilePathSetArr.value,\r\n    machine: 'ADUIMD',\r\n    episode: props.selectItems.barcodeNo,\r\n    result: resultStr\r\n  }\r\n\r\n  axios.post(params.url + '/api/MifMain/File', {\r\n    machine: params.machine,\r\n    episode: params.episode,\r\n    result: params.result\r\n  }).then(function (result) {\r\n    const res = result.data[0];\r\n    if (res.returnCode === '0') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showSuccessAlert('return code : ' + res.returnCode);\r\n    }\r\n\r\n  }).catch(function (err) {\r\n    showSuccessAlert(err.message);\r\n  })\r\n}\r\n\r\nconst godae = (): string => {\r\n  let data = 'H|\\^&||||||||||P||' + props.selectItems.barcodeNo + '\\n';\r\n  let seq = 0;\r\n  let kumcMergePercent = 0;\r\n  let kumcBandPercent = 0;\r\n\r\n  props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n    if (wbcItem.id === '02' || wbcItem.id === '03' ||\r\n        wbcItem.id === '04' || wbcItem.id === '10') {\r\n      kumcMergePercent += Number(wbcItem.percent)\r\n    }\r\n\r\n    if (wbcItem.id === '72') {\r\n      kumcBandPercent = Number(wbcItem.percent)\r\n    }\r\n  })\r\n\r\n  if (kumcMergePercent > 0 && kumcBandPercent < 6) {\r\n    // seg\r\n    const segItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '71'\r\n    })\r\n\r\n    // band\r\n    const bandItem = props.selectItems.wbcInfoAfter.filter(function (item: any) {\r\n      return item.id === '72'\r\n    })\r\n\r\n    segItem[0].percent = (Number(segItem[0].percent) + Number(kumcBandPercent)) + ''\r\n    bandItem[0].percent = '0'\r\n  }\r\n  lisCodeWbcArr.value.forEach(function (lisCode: any) {\r\n    if (lisCode.code !== '') {\r\n      props.selectItems.wbcInfoAfter.forEach(function (wbcItem: any) {\r\n        if (lisCode.IA_CD === wbcItem.id) {\r\n          // 5diff는 0이어도 데이터 올림\r\n          if (wbcItem.id === '01' || wbcItem.id === '71' || wbcItem.id === '05' ||\r\n              wbcItem.id === '07' || wbcItem.id === '08' || wbcItem.id === '09') {\r\n            // count\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n            // percent\r\n            data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n          } else {\r\n            if (Number(wbcItem.percent) > 0) {\r\n              // count\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '|' + wbcItem.count + '|||||||^' + userModuleDataGet.value.userId + '\\n'\r\n\r\n              // percent\r\n              data += 'R|' + (++seq) + '|^^^^' + lisCode.code + '%|' + wbcItem.percent + '|%||||||^' + userModuleDataGet.value.userId + '\\n'\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  })\r\n\r\n  return data += 'L|1|N'\r\n}\r\n\r\nconst lisFileUrlCreate = async (data: any) => {\r\n  if (!lisFilePathSetArr.value.includes(\"http\")) {\r\n    const url = lisFilePathSetArr.value;\r\n    const fileCreateRes = await createDirectory(url);\r\n    if (fileCreateRes) {\r\n      const parms = {\r\n        path: lisFilePathSetArr.value,\r\n        filename: `${lisFilePathSetArr.value}/${props.selectItems.barcodeNo}.lst2msg`,\r\n        content: data,\r\n      };\r\n      const res = await createFile(parms);\r\n      if (res) {\r\n        const result: any = await detailRunningApi(String(props.selectItems.id));\r\n        const updatedItem = {\r\n          submitState: 'lis',\r\n        };\r\n        const updatedRuningInfo ={...result.data,...updatedItem }\r\n        await resRunningItem(updatedRuningInfo, true);\r\n        showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n        if (!showAlert.value) {\r\n          emits('nextPage')\r\n        }\r\n      } else {\r\n        showErrorAlert('lis file err');\r\n      }\r\n    }\r\n  } else {// url 로 셋팅한 경우\r\n    sendLisMessage(data);\r\n  }\r\n}\r\n\r\nconst sendLisMessage = (data: any) => {\r\n  const params = {\r\n    url: lisFilePathSetArr.value,\r\n    barcodeNo: props.selectItems.barcodeNo,\r\n    userId: userModuleDataGet.value.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: data\r\n  }\r\n  axios.post(params.url, {\r\n    barcodeNo: params.barcodeNo,\r\n    userid: params.userId,\r\n    deviceBarcode: deviceSerialNm.value,\r\n    resultMsg: params.resultMsg\r\n  }).then(function (result) {\r\n    if (result.data.errorCode === 'E000') {\r\n      showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n    } else {\r\n      showErrorAlert(result.data.errorMessage);\r\n    }\r\n  }).catch(function (err) {\r\n    showErrorAlert(err.message);\r\n  })\r\n}\r\n\r\nconst getLisWbcRbcData = async () => {\r\n  try {\r\n    const wbcResult = await getLisCodeApi();\r\n    const rbcResult = await getLisCodeRbcApi();\r\n    if (wbcResult && wbcResult.data && rbcResult && rbcResult.data) {\r\n      const wbcData = wbcResult.data;\r\n      const rbcData = rbcResult.data;\r\n\r\n      if (wbcData) {\r\n        lisCodeWbcArr.value = wbcData;\r\n      }\r\n      if (rbcData) {\r\n        lisCodeRbcArr.value = rbcData;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\nconst getLisPathData = async () => {\r\n  try {\r\n    const result = await getFilePathSetApi();\r\n\r\n    if (result && result.data && result.data.length !== 0) {\r\n      lisFilePathSetArr.value = result.data[0].lisFilePath;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n\r\nconst checkUserAuth = async (empNo: any) => {\r\n  return new Promise((succ, fail) => {\r\n    if (siteCd.value === '0002') {\r\n      const url = `http://emr012.cmcnu.or.kr/cmcnu/.live?submit_id=TRLII00104&business_id=li&instcd=012&userid=${empNo}`;\r\n      axios.get(url).then(function (result) {\r\n        const xml = result.data\r\n        const json = JSON.parse(xml2json(xml, {compact: true}));\r\n        const userNm = json.root.getUsernm.usernm._text;\r\n        if (userNm === null || userNm === '') {\r\n          succ('fail')\r\n        } else {\r\n          succ('succ')\r\n        }\r\n\r\n      }).catch(function (err) {\r\n        console.log('checkUserAuth :' + err.message)\r\n        fail(new Error(err.message))\r\n      })\r\n\r\n    }\r\n  })\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nconst onCommit = async () => {\r\n  const localTime = moment().local();\r\n\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedItem = {\r\n    submitState: 'Submit',\r\n    submitOfDate: localTime.format(),\r\n    submitUserId: userModuleDataGet.value.name,\r\n  };\r\n  const updatedRuningInfo ={...result.data,...updatedItem }\r\n  await resRunningItem(updatedRuningInfo);\r\n}\r\n\r\n\r\nconst memoChange = async () => {\r\n  const updatedItem = {\r\n    wbcMemo: wbcMemo.value\r\n  };\r\n  const result: any = await detailRunningApi(String(props.selectItems.id));\r\n  const updatedRuningInfo = {...result.data,...updatedItem }\r\n\r\n  await resRunningItem(updatedRuningInfo);\r\n  memoModal.value = false;\r\n}\r\n\r\nconst memoOpen = () => {\r\n  wbcMemo.value = wbcMemo.value !== '' ? wbcMemo.value : props.selectItems.wbcMemo;\r\n  memoModal.value = !memoModal.value;\r\n}\r\n\r\nconst memoCancel = () => {\r\n  memoModal.value = false;\r\n}\r\n\r\nconst getStringValue = (title: string): string => {\r\n  if (title === 'Artifact(Smudge)' && siteCd.value === '0006') {\r\n    return \"Artifact\";\r\n  } else {\r\n    return title;\r\n  }\r\n};\r\n\r\n\r\nconst resRunningItem = async (updatedRuningInfo: any, noAlert?: boolean) => {\r\n  try {\r\n    const response = await updateRunningApi({\r\n      userId: Number(userModuleDataGet.value.id),\r\n      runingInfoDtoItems: [updatedRuningInfo]\r\n    })\r\n    if (response) {\r\n      if (!noAlert) {\r\n        showSuccessAlert('success');\r\n      }\r\n      const filteredItems = updatedRuningInfo;\r\n      sessionStorage.setItem('selectItems', JSON.stringify(filteredItems));\r\n      wbcMemo.value = filteredItems.wbcMemo;\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nconst beforeChang = async () => {\r\n  isBefore.value = true;\r\n  emits('isBefore', true);\r\n  const selectItemsData = sessionStorage.getItem(\"selectItems\");\r\n  selectItemsSessionStorageData.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  await getOrderClass();\r\n  const filteredItems: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = filteredItems.data.wbcInfo.wbcInfo[0];\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  const sortedWbcInfo = sortWbcInfo(wbcInfo, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfo.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfo.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\n\r\nconst afterChang = async (newItem: any) => {\r\n  await getOrderClass();\r\n  emits('isBefore', false);\r\n  isBefore.value = false;\r\n  const filteredItems: any =  await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  const wbcInfo = selectItemsSessionStorageData.value.wbcInfoAfter.length !== 0 ? selectItemsSessionStorageData.value.wbcInfoAfter : filteredItems.data.wbcInfo.wbcInfo[0];\r\n  const wbcInfoAfter = newItem.length === 0 ? wbcInfo : newItem;\r\n  let wbcArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  const sortedWbcInfoAfter = sortWbcInfo(wbcInfoAfter, wbcArr);\r\n  wbcInfoChangeVal.value = sortedWbcInfoAfter.filter((item: any) => !titleArr.includes(item.title));\r\n  nonRbcClassList.value = sortedWbcInfoAfter.filter((item: any) => titleArr.includes(item.title));\r\n  totalCountSet(wbcInfoChangeVal.value);\r\n}\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst totalCountSet = (wbcInfoChangeVal: any) => {\r\n  totalCount.value = 0;\r\n  wbcInfoChangeVal.forEach((item: any) => {\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n\r\n\r\n      const titleInArray = targetArray.includes(item.title);\r\n      if (!titleInArray) {\r\n        totalCount.value += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nasync function updateOriginalDb() {\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify([...wbcInfoChangeVal.value, ...nonRbcClassList.value]));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      if (projectBm.value) {\r\n        if (image.title !== 'OT') {\r\n          totalCount += 1\r\n        }\r\n      } else {\r\n        const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n        if (!targetArray.includes(image.title)) {\r\n          totalCount += 1;\r\n        }\r\n      }\r\n    });\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectBm.value) {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);  // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 0인경우 정수 표현\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage))) ? Math.floor(Number(percentage)).toString() : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n  selectItemsSessionStorageData.value.wbcInfoAfter = clonedWbcInfo;\r\n  sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItemsSessionStorageData.value));\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: [...wbcInfoChangeVal.value, ...nonRbcClassList.value]});\r\n  sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n\r\n  const sortArr = sortWbcInfo(orderClass.value, wbcInfoChangeVal.value);\r\n  sortArr.forEach((item: any, index: any) => {\r\n    item.orderIdx = index;\r\n  });\r\n\r\n  // originalDb 업데이트\r\n  const res: any = await detailRunningApi(String(selectItemsSessionStorageData.value.id));\r\n  if (res) {\r\n    res.data.wbcInfoAfter = clonedWbcInfo;\r\n  }\r\n\r\n  await putOrderClassApi(sortArr);\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, [res.data]);\r\n\r\n  await store.dispatch('commonModule/setCommonInfo', {classInfoSort: []});\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  // 러닝 인포 디비에 다시 재저장\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n  window.scrollTo({top: 0, behavior: 'smooth'});\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n</script>","import script from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./classInfo.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, unref as _unref, renderList as _renderList, Fragment as _Fragment, vShow as _vShow, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\"\n\nconst _hoisted_1 = { class: \"reportDiv\" }\nconst _hoisted_2 = { class: \"wbcDiv\" }\nconst _hoisted_3 = {\n  key: 0,\n  class: \"rbcDiv\"\n}\nconst _hoisted_4 = { class: \"reportDetail\" }\nconst _hoisted_5 = { class: \"reportTitle\" }\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", null, \"[Hospital]\", -1)\nconst _hoisted_7 = { class: \"reportDivTop\" }\nconst _hoisted_8 = {\n  key: 0,\n  class: \"reportH3\"\n}\nconst _hoisted_9 = {\n  key: 1,\n  class: \"reportH3\"\n}\nconst _hoisted_10 = { class: \"reportTable\" }\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Slot ID\", -1)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered date\", -1)\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed by ID\", -1)\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Signed date\", -1)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Patient ID\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Ordered Classification\", -1)\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\", -1)\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Birth\", -1)\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"th\", null, \"Gender\", -1)\nconst _hoisted_20 = { class: \"reportDivBottom\" }\nconst _hoisted_21 = { class: \"wbcLeft\" }\nconst _hoisted_22 = { class: \"reportH3 mb1 pl0\" }\nconst _hoisted_23 = { class: \"tableClass\" }\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"thead\", null, [\n  /*#__PURE__*/_createElementVNode(\"tr\", null, [\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Class\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"Count\"),\n    /*#__PURE__*/_createElementVNode(\"th\", null, \"%\")\n  ])\n], -1)\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"td\", null, \"total\", -1)\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"td\", null, \"100.00\", -1)\nconst _hoisted_28 = {\n  key: 0,\n  class: \"reportH3 mb1 pl0\"\n}\nconst _hoisted_29 = {\n  key: 1,\n  class: \"tableClass\"\n}\nconst _hoisted_30 = /*#__PURE__*/_createElementVNode(\"colgroup\", null, [\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"40%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" }),\n  /*#__PURE__*/_createElementVNode(\"col\", { width: \"20%\" })\n], -1)\nconst _hoisted_31 = { key: 0 }\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"td\", null, \"-\", -1)\nconst _hoisted_33 = {\n  key: 0,\n  class: \"rbcRight\"\n}\nconst _hoisted_34 = /*#__PURE__*/_createElementVNode(\"h3\", { class: \"reportH3 mb1 pl0\" }, \"RBC classification result\", -1)\nconst _hoisted_35 = { class: \"categoryNm\" }\nconst _hoisted_36 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_37 = { class: \"classNm\" }\nconst _hoisted_38 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_39 = { class: \"degree\" }\nconst _hoisted_40 = {\n  key: 0,\n  class: \"mb1 liTitle\"\n}\nconst _hoisted_41 = { key: 0 }\n\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'report',\n  setup(__props) {\n\r\n\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", {\n      class: _normalizeClass('reportSection' + (cbcLayer.value ? ' cbcLayer' : ''))\n    }, [\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _createVNode(WbcClass, {\n            wbcInfo: wbcInfo.value,\n            selectItems: selectItems.value,\n            type: \"report\"\n          }, null, 8, [\"wbcInfo\", \"selectItems\"])\n        ]),\n        (!projectBm.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [\n              _createVNode(RbcClass, {\n                rbcInfo: rbcInfo.value,\n                selectItems: selectItems.value,\n                type: \"report\"\n              }, null, 8, [\"rbcInfo\", \"selectItems\"])\n            ]))\n          : _createCommentVNode(\"\", true),\n        _createElementVNode(\"div\", _hoisted_4, [\n          _createElementVNode(\"div\", _hoisted_5, [\n            _hoisted_6,\n            _createTextVNode(),\n            _createElementVNode(\"span\", null, \"DM Serial Nbr : \" + _toDisplayString(selectItems.value?.slotId), 1),\n            _createVNode(_component_font_awesome_icon, {\n              icon: ['fas', 'print'],\n              onClick: printStart,\n              class: \"printStart\"\n            })\n          ]),\n          _createElementVNode(\"div\", _hoisted_7, [\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_8, \"Analysis Report from UIMD PB system\"))\n              : _createCommentVNode(\"\", true),\n            (projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_9, \"Analysis Report from UIMD BM system\"))\n              : _createCommentVNode(\"\", true),\n            _createElementVNode(\"table\", _hoisted_10, [\n              _createElementVNode(\"tbody\", null, [\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_11,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.slotId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_12,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(formatDateString)(selectItems.value?.orderDttm)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_13,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitUserId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_14,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.submitOfDate), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_15,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientId), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_16,\n                  _createElementVNode(\"td\", null, _toDisplayString(_unref(getTestTypeText)(selectItems.value?.testType)), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_17,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.patientName), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_18,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.birthDay), 1)\n                ]),\n                _createElementVNode(\"tr\", null, [\n                  _hoisted_19,\n                  _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.gender === '01' ? 'Male' : 'Female'), 1)\n                ])\n              ])\n            ])\n          ]),\n          _createElementVNode(\"div\", _hoisted_20, [\n            _createElementVNode(\"div\", _hoisted_21, [\n              _createElementVNode(\"h3\", _hoisted_22, _toDisplayString(wbcClassTileChange()) + \" result\", 1),\n              _createElementVNode(\"table\", _hoisted_23, [\n                _hoisted_24,\n                _hoisted_25,\n                _createElementVNode(\"tbody\", null, [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcArr.value, (item) => {\n                    return (_openBlock(), _createElementBlock(\"tr\", {\n                      key: item.id,\n                      class: \"wbcClassDbDiv\"\n                    }, [\n                      (shouldRenderCategory(item.title))\n                        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.name), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.count), 1),\n                            _createElementVNode(\"td\", null, _toDisplayString(item?.percent || '-'), 1)\n                          ], 64))\n                        : _createCommentVNode(\"\", true)\n                    ]))\n                  }), 128)),\n                  _createElementVNode(\"tr\", null, [\n                    _hoisted_26,\n                    _createElementVNode(\"td\", null, _toDisplayString(selectItems.value?.wbcInfo?.totalCount || 0), 1),\n                    _hoisted_27\n                  ])\n                ])\n              ]),\n              (!selectItems.value?.wbcInfo?.nonRbcClassList)\n                ? (_openBlock(), _createElementBlock(\"h3\", _hoisted_28, \"non-WBC\"))\n                : _createCommentVNode(\"\", true),\n              (!projectBm.value)\n                ? (_openBlock(), _createElementBlock(\"table\", _hoisted_29, [\n                    _hoisted_30,\n                    _createElementVNode(\"tbody\", null, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(selectItems.value?.wbcInfo?.nonRbcClassList, (nWbcItem, outerIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"tr\", { key: outerIndex }, [\n                          _createElementVNode(\"td\", null, _toDisplayString(getCategoryName(nWbcItem)), 1),\n                          _createElementVNode(\"td\", null, [\n                            _createTextVNode(_toDisplayString(nWbcItem?.count) + \" \", 1),\n                            (nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP')\n                              ? (_openBlock(), _createElementBlock(\"span\", _hoisted_31, \" /\" + _toDisplayString(selectItems.value?.wbcInfo?.maxWbcCount) + \" WBC\", 1))\n                              : _createCommentVNode(\"\", true)\n                          ]),\n                          _hoisted_32\n                        ], 512)), [\n                          [_vShow, siteCd.value !== '0006' && nWbcItem?.title !== 'SM']\n                        ])\n                      }), 128))\n                    ])\n                  ]))\n                : _createCommentVNode(\"\", true)\n            ]),\n            (!projectBm.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_33, [\n                  _hoisted_34,\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList([rbcInfo.value], (classList, outerIndex) => {\n                    return (_openBlock(), _createElementBlock(_Fragment, { key: outerIndex }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(classList, (category, innerIndex) => {\n                        return (_openBlock(), _createElementBlock(\"div\", {\n                          key: innerIndex,\n                          class: \"categories\"\n                        }, [\n                          _createElementVNode(\"ul\", _hoisted_35, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_36, \"Category\"))\n                              : _createCommentVNode(\"\", true),\n                            _createElementVNode(\"li\", null, _toDisplayString(category?.categoryNm), 1)\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_37, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_38, \"Class\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(\"li\", { key: classIndex }, _toDisplayString(classInfo?.classNm), 1))\n                            }), 128))\n                          ]),\n                          _createElementVNode(\"ul\", _hoisted_39, [\n                            (innerIndex === 0)\n                              ? (_openBlock(), _createElementBlock(\"li\", _hoisted_40, \"Degree\"))\n                              : _createCommentVNode(\"\", true),\n                            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(category?.classInfo, (classInfo, classIndex) => {\n                              return (_openBlock(), _createElementBlock(_Fragment, { key: classIndex }, [\n                                (classInfo.classId !== '01' || category.categoryId === '05')\n                                  ? (_openBlock(), _createElementBlock(\"li\", _hoisted_41, _toDisplayString(classInfo?.degree), 1))\n                                  : _createCommentVNode(\"\", true)\n                              ], 64))\n                            }), 128))\n                          ])\n                        ]))\n                      }), 128))\n                    ], 64))\n                  }), 128))\n                ]))\n              : _createCommentVNode(\"\", true)\n          ])\n        ])\n      ])\n    ], 2),\n    (printOnOff.value)\n      ? (_openBlock(), _createBlock(Print, {\n          key: 0,\n          selectItems: selectItems.value,\n          ref_key: \"printContent\",\n          ref: printContent,\n          printOnOff: printOnOff.value,\n          selectItemWbc: _unref(selectItemWbc),\n          onPrintClose: printClose\n        }, null, 8, [\"selectItems\", \"printOnOff\", \"selectItemWbc\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div :class=\"'reportSection' + (cbcLayer ? ' cbcLayer' : '')\">\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div class=\"reportDiv\">\r\n      <div class=\"wbcDiv\">\r\n        <WbcClass :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"rbcDiv\" v-if=\"!projectBm\">\r\n        <RbcClass :rbcInfo=\"rbcInfo\" :selectItems=\"selectItems\" type='report'/>\r\n      </div>\r\n      <div class=\"reportDetail\">\r\n        <div class=\"reportTitle\">\r\n          <span>[Hospital]</span> <span>DM Serial Nbr : {{ selectItems?.slotId }}</span>\r\n          <font-awesome-icon :icon=\"['fas', 'print']\" @click=\"printStart\" class=\"printStart\"/>\r\n        </div>\r\n        <div class=\"reportDivTop\">\r\n          <h3 class=\"reportH3\" v-if=\"!projectBm\">Analysis Report from UIMD PB system</h3>\r\n          <h3 class=\"reportH3\" v-if=\"projectBm\">Analysis Report from UIMD BM system</h3>\r\n          <table class=\"reportTable\">\r\n            <tbody>\r\n            <tr>\r\n              <th>Slot ID</th>\r\n              <td>{{ selectItems?.slotId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered date</th>\r\n              <td>{{ formatDateString(selectItems?.orderDttm) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed by ID</th>\r\n              <td>{{ selectItems?.submitUserId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Signed date</th>\r\n              <td>{{ selectItems?.submitOfDate }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Patient ID</th>\r\n              <td>{{ selectItems?.patientId }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Ordered Classification</th>\r\n              <td>{{ getTestTypeText(selectItems?.testType) }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Name</th>\r\n              <td>{{ selectItems?.patientName }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Birth</th>\r\n              <td>{{ selectItems?.birthDay }}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>Gender</th>\r\n              <td>{{ selectItems?.gender === '01' ? 'Male' : 'Female' }}</td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"reportDivBottom\">\r\n          <div class=\"wbcLeft\">\r\n            <h3 class=\"reportH3 mb1 pl0\">{{ wbcClassTileChange() }} result</h3>\r\n            <table class=\"tableClass\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <thead>\r\n              <tr>\r\n                <th>Class</th>\r\n                <th>Count</th>\r\n                <th>%</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(item) in wbcArr\" :key=\"item.id\" class=\"wbcClassDbDiv\">\r\n                <template v-if=\"shouldRenderCategory(item.title)\">\r\n                  <td>{{ item?.name }}</td>\r\n                  <td>{{ item?.count }}</td>\r\n                  <td> {{ item?.percent || '-' }}</td>\r\n                </template>\r\n              </tr>\r\n              <tr>\r\n                <td>total</td>\r\n                <td>{{ selectItems?.wbcInfo?.totalCount || 0 }}</td>\r\n                <td>100.00</td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n\r\n            <h3 v-if=\"!selectItems?.wbcInfo?.nonRbcClassList\" class=\"reportH3 mb1 pl0\">non-WBC</h3>\r\n            <table class=\"tableClass\" v-if=\"!projectBm\">\r\n              <colgroup>\r\n                <col width=\"40%\">\r\n                <col width=\"20%\">\r\n                <col width=\"20%\">\r\n              </colgroup>\r\n              <tbody>\r\n              <template v-for=\"(nWbcItem, outerIndex) in selectItems?.wbcInfo?.nonRbcClassList\" :key=\"outerIndex\">\r\n                <tr v-show=\"siteCd !== '0006' && nWbcItem?.title !== 'SM'\">\r\n                  <td>{{ getCategoryName(nWbcItem) }}</td>\r\n                  <td>\r\n                    {{ nWbcItem?.count }}\r\n                    <span v-if=\"nWbcItem?.title === 'NR' || nWbcItem?.title === 'GP'\"> /{{\r\n                        selectItems?.wbcInfo?.maxWbcCount\r\n                      }} WBC</span>\r\n                  </td>\r\n                  <td>-</td>\r\n                </tr>\r\n              </template>\r\n              </tbody>\r\n            </table>\r\n\r\n          </div>\r\n          <div class=\"rbcRight\" v-if=\"!projectBm\">\r\n            <h3 class=\"reportH3 mb1 pl0\">RBC classification result</h3>\r\n            <template v-for=\"(classList, outerIndex) in [rbcInfo]\" :key=\"outerIndex\">\r\n              <template v-for=\"(category, innerIndex) in classList\" :key=\"innerIndex\">\r\n                <div class=\"categories\">\r\n                  <ul class=\"categoryNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Category</li>\r\n                    <li>{{ category?.categoryNm }}</li>\r\n                  </ul>\r\n                  <ul class=\"classNm\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Class</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li>{{ classInfo?.classNm }}</li>\r\n                    </template>\r\n                  </ul>\r\n                  <ul class=\"degree\">\r\n                    <li v-if=\"innerIndex === 0\" class=\"mb1 liTitle\">Degree</li>\r\n                    <template v-for=\"(classInfo, classIndex) in category?.classInfo\" :key=\"classIndex\">\r\n                      <li v-if=\"classInfo.classId !== '01' || category.categoryId === '05'\">\r\n                        {{ classInfo?.degree }}\r\n                      </li>\r\n                    </template>\r\n                  </ul>\r\n                </div>\r\n              </template>\r\n            </template>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <Print v-if=\"printOnOff\" :selectItems=\"selectItems\" ref=\"printContent\" :printOnOff=\"printOnOff\"\r\n         :selectItemWbc=\"selectItemWbc\" @printClose=\"printClose\"/>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\n\r\nimport WbcClass from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport {computed, getCurrentInstance, onMounted, ref} from \"vue\";\r\nimport {getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {defaultBmClassList, defaultWbcClassList, WbcInfo} from \"@/store/modules/analysis/wbcclassification\";\r\nimport Print from \"@/views/datebase/commponent/detail/report/print.vue\";\r\nimport router from \"@/router\";\r\nimport RbcClass from \"@/views/datebase/commponent/detail/rbc/rbcClass.vue\";\r\nimport {useStore} from \"vuex\";\r\nimport process from \"process\";\r\nimport {formatDateString} from \"@/common/lib/utils/dateUtils\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport {getOrderClassApi} from \"@/common/api/service/setting/settingApi\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst getCategoryName = (category: WbcInfo) => category?.name;\r\nconst store = useStore();\r\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItemsSessionStorageData = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst printOnOff = ref(false);\r\nconst printContent = ref(null);\r\nconst rbcInfo = ref([]);\r\nconst selectItemRbc = sessionStorage.getItem(\"selectItemRbc\");\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst clonedWbcInfo = computed(() => store.state.commonModule.clonedWbcInfo);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst instance = getCurrentInstance();\r\nconst projectBm = ref(false);\r\nconst wbcArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\n\r\nonMounted(async () => {\r\n  await getOrderClass();\r\n  await initData();\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n});\r\n\r\nconst shouldRenderCategory = (title: string) => {\r\n  // 제외할 클래스들 정의\r\n  const targetArray = getStringArrayBySiteCd(siteCd.value, selectItemsSessionStorageData.value?.testType);\r\n  return !targetArray.includes(title);\r\n};\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  const arraysBySiteCd: any = { // 0006 -> 고대\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"SM\", \"MA\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 제외할 부분 정의\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  await initData(data);\r\n}\r\nconst printClose = () => {\r\n  printOnOff.value = false;\r\n}\r\nconst wbcClassTileChange = (): string => !projectBm.value ? 'WBC Classification' : 'BM Classification';\r\n\r\nconst printStart = () => {\r\n  printOnOff.value = true;\r\n}\r\n\r\nconst pageGo = (path: string) => {\r\n  router.push(path)\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nasync function initData(data?: any) {\r\n  if (selectItems.value.wbcInfoAfter && selectItems.value.wbcInfoAfter.length !== 0) {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(clonedWbcInfo.value, wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  } else {\r\n    let wbcArrs = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n    const sortedWbcInfo = sortWbcInfo(selectItems.value.wbcInfo.wbcInfo[0], wbcArrs);\r\n    wbcInfo.value = sortedWbcInfo;\r\n    wbcArr.value = sortedWbcInfo;\r\n  }\r\n  rbcInfo.value = selectItems.value.rbcInfoAfter.length !== 0 && selectItems.value.rbcInfoAfter ? selectItems.value.rbcInfoAfter : selectItems.value.rbcInfo.rbcInfo;\r\n}\r\n\r\nconst sortWbcInfo = (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = JSON.parse(JSON.stringify(wbcInfo));\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  return newSortArr;\r\n};\r\n\r\n\r\n</script>\r\n","import script from \"./report.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./report.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { vShow as _vShow, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createVNode as _createVNode, unref as _unref, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, resolveComponent as _resolveComponent, createTextVNode as _createTextVNode, vModelText as _vModelText, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, withModifiers as _withModifiers, normalizeStyle as _normalizeStyle } from \"vue\"\n\nconst _hoisted_1 = { class: \"moveImgIsBool\" }\nconst _hoisted_2 = { class: \"wbcContent\" }\nconst _hoisted_3 = { class: \"topClintInfo\" }\nconst _hoisted_4 = { class: \"sizeContainer\" }\nconst _hoisted_5 = {\n  class: \"imgSetWrap\",\n  ref: \"imgSetWrap\"\n}\nconst _hoisted_6 = { class: \"imgSet\" }\nconst _hoisted_7 = { class: \"wbcInfoDbUl\" }\nconst _hoisted_8 = [\"onClick\"]\nconst _hoisted_9 = [\"onDrop\"]\nconst _hoisted_10 = {\n  key: 0,\n  class: \"cellImgBox\"\n}\nconst _hoisted_11 = { class: \"mt1\" }\nconst _hoisted_12 = [\"onInput\", \"checked\"]\nconst _hoisted_13 = [\"onDrop\"]\nconst _hoisted_14 = [\"onClick\", \"onDblclick\", \"onContextmenu\"]\nconst _hoisted_15 = { style: {\"position\":\"relative\"} }\nconst _hoisted_16 = { class: \"titleImg\" }\nconst _hoisted_17 = { class: \"fileTitle\" }\nconst _hoisted_18 = [\"src\", \"width\", \"height\", \"onDragstart\", \"onError\"]\nconst _hoisted_19 = { key: 1 }\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"select\", null, [\n  /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n], -1)\nconst _hoisted_21 = { class: \"mt1\" }\nconst _hoisted_22 = [\"checked\"]\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"div\", null, [\n  /*#__PURE__*/_createElementVNode(\"select\", null, [\n    /*#__PURE__*/_createElementVNode(\"option\", null, \"1\")\n  ]),\n  /*#__PURE__*/_createElementVNode(\"div\")\n], -1)\nconst _hoisted_24 = [\"onClick\"]\nconst _hoisted_25 = { class: \"wbcModal\" }\nconst _hoisted_26 = { class: \"wbc-modal-content\" }\nconst _hoisted_27 = { class: \"wbcModalImageContent\" }\nconst _hoisted_28 = [\"src\"]\n\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'listDetail',\n  setup(__props) {\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {fullNm, abbreviation, customNum} = item;\r\n      const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: fullNm,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  // before 상태에서는 이미지 파일 이동 불가\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) =>  (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  if (!isBeforeChild.value) {\r\n    const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n    const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n    wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n  }\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation ===  (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title ===  (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _withDirectives(_createElementVNode(\"div\", _hoisted_1, \" Moving image...\", 512), [\n      [_vShow, moveImgIsBool.value]\n    ]),\n    _createVNode(ClassInfoMenu, {\n      onRefreshClass: refreshClass,\n      isNext: isNext.value,\n      onIsNextFalse: isNextFalse\n    }, null, 8, [\"isNext\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"ul\", null, [\n          _createElementVNode(\"li\", null, _toDisplayString(projectType.value === 'bm' ? _unref(getBmTestTypeText)(selectItems.value?.testType) : _unref(getTestTypeText)(selectItems.value?.testType)), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.barcodeNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientId || 'patientId No Data'), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNo), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.patientName), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.cbcPatientNm) + \" \" + _toDisplayString(selectItems.value?.cbcSex) + \" \" + _toDisplayString(selectItems.value?.cbcAge), 1),\n          _createElementVNode(\"li\", null, _toDisplayString(selectItems.value?.analyzedDttm), 1)\n        ])\n      ]),\n      (cbcLayer.value)\n        ? (_openBlock(), _createBlock(LisCbc, {\n            key: 0,\n            selectItems: selectItems.value\n          }, null, 8, [\"selectItems\"]))\n        : _createCommentVNode(\"\", true),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcRight' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createVNode(ClassInfo, {\n          wbcInfo: wbcInfo.value,\n          selectItems: selectItems.value,\n          type: \"listTable\",\n          onNextPage: nextPage,\n          onScrollEvent: scrollToElement,\n          onIsBefore: isBeforeDataSet\n        }, null, 8, [\"wbcInfo\", \"selectItems\"])\n      ], 2),\n      _createElementVNode(\"div\", {\n        class: _normalizeClass('databaseWbcLeft' + (cbcLayer.value ? ' cbcLayer' : ''))\n      }, [\n        _createElementVNode(\"div\", {\n          class: \"imgMenuSetDiv\",\n          onMouseleave: hideSizeControl\n        }, [\n          _createElementVNode(\"button\", {\n            type: \"button\",\n            onClick: _cache[0] || (_cache[0] = ($event: any) => (drawCellMarker(false)))\n          }, [\n            _createVNode(_component_font_awesome_icon, {\n              icon: cellMarkerIcon.value ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\n            }, null, 8, [\"icon\"]),\n            _createTextVNode(\" Cell Marking \")\n          ]),\n          _createElementVNode(\"button\", { onClick: excelDownload }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'file-csv'] }),\n            _createTextVNode(\" Excel \")\n          ]),\n          _createElementVNode(\"button\", { onMouseover: showSizeControl }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'plus-minus'] }),\n            _createTextVNode(\" Size \")\n          ], 32),\n          _withDirectives(_createElementVNode(\"div\", _hoisted_4, [\n            _createElementVNode(\"div\", null, [\n              _createTextVNode(\" Size \" + _toDisplayString(imageSize.value) + \" \", 1),\n              _createVNode(_component_font_awesome_icon, {\n                icon: ['fas', 'undo'],\n                onClick: imgSizeReset\n              }),\n              _withDirectives(_createElementVNode(\"input\", {\n                type: \"range\",\n                min: \"80\",\n                max: \"300\",\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((imageSize).value = $event)),\n                onInput: changeImageSize\n              }, null, 544), [\n                [_vModelText, imageSize.value]\n              ])\n            ])\n          ], 512), [\n            [_vShow, showSize.value]\n          ]),\n          _createElementVNode(\"div\", _hoisted_5, [\n            _createElementVNode(\"button\", { onClick: imgSetOpen }, [\n              _createVNode(_component_font_awesome_icon, { icon: ['fas', 'gear'] }),\n              _createTextVNode(\" IMG Setting \")\n            ]),\n            _withDirectives(_createElementVNode(\"div\", _hoisted_6, [\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'sun'] }),\n                _createTextVNode(\" Brightness \" + _toDisplayString(imgBrightness.value) + \" \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"50\",\n                  max: \"600\",\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((imgBrightness).value = $event)),\n                  onInput: changeImgBrightness\n                }, null, 544), [\n                  [_vModelText, imgBrightness.value]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn mb2\",\n                  onClick: brightnessReset\n                }, \"Brightness Reset\")\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'palette'] }),\n                _createTextVNode(\" RGB [ \" + _toDisplayString(`${imageRgb.value[0]} , ${imageRgb.value[1]}, ${imageRgb.value[2]}`) + \" ] \", 1),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((imageRgb.value[0]) = $event)),\n                  onInput: _cache[4] || (_cache[4] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[0]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[5] || (_cache[5] = ($event: any) => ((imageRgb.value[1]) = $event)),\n                  onInput: _cache[6] || (_cache[6] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[1]]\n                ]),\n                _withDirectives(_createElementVNode(\"input\", {\n                  type: \"range\",\n                  min: \"0\",\n                  max: \"255\",\n                  \"onUpdate:modelValue\": _cache[7] || (_cache[7] = ($event: any) => ((imageRgb.value[2]) = $event)),\n                  onInput: _cache[8] || (_cache[8] = ($event: any) => (changeImageRgb('')))\n                }, null, 544), [\n                  [_vModelText, imageRgb.value[2]]\n                ]),\n                _createElementVNode(\"button\", {\n                  class: \"resetBtn\",\n                  onClick: rgbReset\n                }, \"RGB Reset\")\n              ])\n            ], 512), [\n              [_vShow, imgSet.value]\n            ])\n          ], 512),\n          false\n            ? (_openBlock(), _createElementBlock(\"button\", {\n                key: 0,\n                onClick: classCompare\n              }, \"Class Compare\"))\n            : _createCommentVNode(\"\", true),\n          _createElementVNode(\"button\", {\n            onClick: rollbackChanges,\n            class: \"rollbackButton\"\n          }, [\n            _createVNode(_component_font_awesome_icon, { icon: ['fas', 'rotate-left'] }),\n            _createTextVNode(\" Rollback \")\n          ])\n        ], 32),\n        _createElementVNode(\"div\", null, [\n          _createElementVNode(\"ul\", _hoisted_7, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                key: item.id,\n                onClick: ($event: any) => (scrollToElement(item.id))\n              }, [\n                _createElementVNode(\"div\", {\n                  class: \"circle\",\n                  onDragover: _cache[9] || (_cache[9] = _withModifiers(($event: any) => (onDragOverCircle()), [\"prevent\"])),\n                  onDrop: ($event: any) => (onDropCircle(item))\n                }, [\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.title), 1),\n                  _createElementVNode(\"p\", null, _toDisplayString(item?.count), 1)\n                ], 40, _hoisted_9)\n              ], 8, _hoisted_8)), [\n                [_vShow, siteCd.value !== '0006' && item?.title !== 'SM']\n              ])\n            }), 128))\n          ]),\n          (!classCompareShow.value)\n            ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_10, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: item.id,\n                    ref_for: true,\n                    ref: setRef(item.id)\n                  }, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_11, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: ($event: any) => (allCheckChange($event,item.title)),\n                          checked: selectedTitle.value === item.title\n                        }, null, 40, _hoisted_12),\n                        _createTextVNode(\" \" + _toDisplayString(item?.title) + \" (\" + _toDisplayString(item?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ]),\n                    _withDirectives(_createElementVNode(\"ul\", {\n                      class: _normalizeClass('wbcImgWrap ' + item?.title),\n                      onDragover: _cache[10] || (_cache[10] = _withModifiers(($event: any) => (onDragOver()), [\"prevent\"])),\n                      onDrop: ($event: any) => (onDrop(itemIndex))\n                    }, [\n                      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.images, (image, imageIndex) => {\n                        return _withDirectives((_openBlock(), _createElementBlock(\"li\", {\n                          key: image.fileName,\n                          class: _normalizeClass({\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }),\n                          onClick: ($event: any) => (selectImage(itemIndex, imageIndex, item)),\n                          onDblclick: ($event: any) => (openModal(image, item)),\n                          onContextmenu: ($event: any) => (handleRightClick($event, image, item))\n                        }, [\n                          _createElementVNode(\"div\", _hoisted_15, [\n                            _withDirectives(_createElementVNode(\"div\", _hoisted_16, [\n                              _createElementVNode(\"div\", _hoisted_17, [\n                                _createTextVNode(_toDisplayString(replaceFileNamePrefix(image.fileName)) + \" \", 1),\n                                _createVNode(_component_font_awesome_icon, { icon: ['fas', 'arrow-right'] }),\n                                _createTextVNode(\" \" + _toDisplayString(image.title), 1)\n                              ])\n                            ], 512), [\n                              [_vShow, replaceFileNamePrefix(image.fileName) !== item?.title]\n                            ]),\n                            _withDirectives(_createElementVNode(\"img\", {\n                              src: getImageUrl(image.fileName, item.id, item.title, ''),\n                              width: image.width ? image.width : '150px',\n                              height: image.height ? image.height : '150px',\n                              style: _normalizeStyle({ filter: image.filter }),\n                              onDragstart: ($event: any) => (onDragStart(itemIndex, imageIndex)),\n                              draggable: \"true\",\n                              class: \"cellImg\",\n                              ref_for: true,\n                              ref_key: \"cellRef\",\n                              ref: cellRef,\n                              onError: ($event: any) => (hideImage(item.id, image.fileName, item.title))\n                            }, null, 44, _hoisted_18), [\n                              [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                            ]),\n                            _createElementVNode(\"div\", {\n                              class: \"center-point\",\n                              style: _normalizeStyle(image.coordinates)\n                            }, null, 4)\n                          ])\n                        ], 42, _hoisted_14)), [\n                          [_vShow, !hiddenImages.value[`${item.id}-${image.fileName}`]]\n                        ])\n                      }), 128))\n                    ], 42, _hoisted_13), [\n                      [_vShow, item?.count !== '0' && item?.count !== 0]\n                    ])\n                  ]))\n                }), 128))\n              ]))\n            : (_openBlock(), _createElementBlock(\"div\", _hoisted_19, [\n                _createElementVNode(\"div\", null, [\n                  _hoisted_20,\n                  _createElementVNode(\"div\", null, [\n                    _withDirectives(_createElementVNode(\"div\", null, [\n                      _createElementVNode(\"p\", _hoisted_21, [\n                        _createElementVNode(\"input\", {\n                          type: \"checkbox\",\n                          onInput: _cache[11] || (_cache[11] = ($event: any) => (allCheckChange($event,wbcInfo.value[0].title))),\n                          checked: selectedTitle.value === wbcInfo.value[0].title\n                        }, null, 40, _hoisted_22),\n                        _createTextVNode(\" \" + _toDisplayString(wbcInfo.value[0]?.title) + \" (\" + _toDisplayString(wbcInfo.value[0]?.count) + \")\", 1)\n                      ])\n                    ], 512), [\n                      [_vShow, wbcInfo.value[0]?.count !== '0' && wbcInfo.value[0]?.count !== 0]\n                    ])\n                  ])\n                ]),\n                _hoisted_23\n              ]))\n        ]),\n        (contextMenuVisible.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              style: _normalizeStyle({ top: contextMenuY.value + 'px', left: contextMenuX.value + 'px' }),\n              class: \"context-menu detail\"\n            }, [\n              _createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(wbcInfo.value, (item, itemIdx) => {\n                  return (_openBlock(), _createElementBlock(\"li\", {\n                    key: itemIdx,\n                    onClick: ($event: any) => (moveSelectedImages(item, itemIdx))\n                  }, _toDisplayString(item.name), 9, _hoisted_24))\n                }), 128))\n              ])\n            ], 4))\n          : _createCommentVNode(\"\", true),\n        _withDirectives(_createElementVNode(\"div\", _hoisted_25, [\n          _createElementVNode(\"div\", _hoisted_26, [\n            _createElementVNode(\"span\", {\n              class: \"wbcClose\",\n              onClick: closeModal\n            }, \"×\"),\n            _createElementVNode(\"div\", _hoisted_27, [\n              _createElementVNode(\"img\", {\n                src: selectedImageSrc.value,\n                style: _normalizeStyle({ width: modalImageWidth.value, height: modalImageHeight.value }),\n                class: \"modal-image\"\n              }, null, 12, _hoisted_28)\n            ]),\n            _createElementVNode(\"div\", { class: \"buttons\" }, [\n              _createElementVNode(\"button\", { onClick: zoomIn }, \"+\"),\n              _createElementVNode(\"button\", { onClick: zoomOut }, \"-\")\n            ])\n          ])\n        ], 512), [\n          [_vShow, modalOpen.value]\n        ])\n      ], 2)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div v-show=\"moveImgIsBool\" class=\"moveImgIsBool\"> Moving image...</div>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\" :isNext=\"isNext\" @isNextFalse=\"isNextFalse\"/>\r\n\r\n  <div class=\"wbcContent\">\r\n    <div class=\"topClintInfo\">\r\n      <ul>\r\n        <li>\r\n          {{ projectType === 'bm' ? getBmTestTypeText(selectItems?.testType) : getTestTypeText(selectItems?.testType) }}\r\n        </li>\r\n        <li>{{ selectItems?.barcodeNo }}</li>\r\n        <li>{{ selectItems?.patientId || 'patientId No Data' }}</li>\r\n        <li>{{ selectItems?.cbcPatientNo }}</li>\r\n        <li>{{ selectItems?.patientName }}</li>\r\n        <li> {{ selectItems?.cbcPatientNm }} {{ selectItems?.cbcSex }} {{ selectItems?.cbcAge }}</li>\r\n        <li>{{ selectItems?.analyzedDttm }}</li>\r\n      </ul>\r\n    </div>\r\n    <LisCbc v-if=\"cbcLayer\" :selectItems=\"selectItems\"/>\r\n    <div :class=\"'databaseWbcRight' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <ClassInfo :wbcInfo=\"wbcInfo\" :selectItems=\"selectItems\" type='listTable'\r\n                 @nextPage=\"nextPage\"\r\n                 @scrollEvent=\"scrollToElement\" @isBefore=\"isBeforeDataSet\"/>\r\n    </div>\r\n\r\n    <div :class=\"'databaseWbcLeft' + (cbcLayer ? ' cbcLayer' : '')\">\r\n      <div class=\"imgMenuSetDiv\" @mouseleave=\"hideSizeControl\">\r\n        <button type=\"button\" @click=\"drawCellMarker(false)\">\r\n          <font-awesome-icon\r\n              :icon=\"cellMarkerIcon ? ['fas', 'toggle-on'] : ['fas', 'toggle-off']\"\r\n          />\r\n          Cell Marking\r\n        </button>\r\n        <button @click=\"excelDownload\">\r\n          <font-awesome-icon :icon=\"['fas', 'file-csv']\"/>\r\n          Excel\r\n        </button>\r\n        <!--size-->\r\n        <button @mouseover=\"showSizeControl\">\r\n          <font-awesome-icon :icon=\"['fas', 'plus-minus']\"/>\r\n          Size\r\n        </button>\r\n        <div v-show=\"showSize\" class=\"sizeContainer\">\r\n          <div>\r\n            Size {{ imageSize }}\r\n            <font-awesome-icon :icon=\"['fas', 'undo']\" @click=\"imgSizeReset\"/>\r\n            <input\r\n                type=\"range\"\r\n                min=\"80\"\r\n                max=\"300\"\r\n                v-model=\"imageSize\"\r\n                @input=\"changeImageSize\"\r\n            />\r\n            <!--            <button class=\"resetBtn mb2\" @click=\"imgSizeReset\">Size Reset</button>-->\r\n          </div>\r\n\r\n        </div>\r\n        <div class=\"imgSetWrap\" ref=\"imgSetWrap\">\r\n          <button @click=\"imgSetOpen\">\r\n            <font-awesome-icon :icon=\"['fas', 'gear']\"/>\r\n            IMG Setting\r\n          </button>\r\n          <div class=\"imgSet\" v-show=\"imgSet\">\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'sun']\"/>\r\n              Brightness {{ imgBrightness }}\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"50\"\r\n                  max=\"600\"\r\n                  v-model=\"imgBrightness\"\r\n                  @input=\"changeImgBrightness\"\r\n              />\r\n              <button class=\"resetBtn mb2\" @click=\"brightnessReset\">Brightness Reset</button>\r\n            </div>\r\n            <div>\r\n              <font-awesome-icon :icon=\"['fas', 'palette']\"/>\r\n              RGB [ {{ `${imageRgb[0]} , ${imageRgb[1]}, ${imageRgb[2]}` }} ]\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[0]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[1]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <input\r\n                  type=\"range\"\r\n                  min=\"0\"\r\n                  max=\"255\"\r\n                  v-model=\"imageRgb[2]\"\r\n                  @input=\"changeImageRgb('')\"\r\n              />\r\n              <button class=\"resetBtn\" @click=\"rgbReset\">RGB Reset</button>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <button v-if=\"false\" @click=\"classCompare\">Class Compare</button>\r\n        <button @click=\"rollbackChanges\" class=\"rollbackButton\">\r\n          <font-awesome-icon :icon=\"['fas', 'rotate-left']\"/>\r\n          Rollback\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <ul class=\"wbcInfoDbUl\">\r\n          <template v-for=\"(item) in wbcInfo\" :key=\"item.id\">\r\n            <li @click=\"scrollToElement(item.id)\" v-show=\"siteCd !== '0006' && item?.title !== 'SM'\">\r\n              <div class=\"circle\" @dragover.prevent=\"onDragOverCircle()\" @drop=\"onDropCircle(item)\">\r\n                <p>{{ item?.title }}</p>\r\n                <p>{{ item?.count }}</p>\r\n              </div>\r\n            </li>\r\n          </template>\r\n        </ul>\r\n        <ul class=\"cellImgBox\" v-if=\"!classCompareShow\">\r\n          <li v-for=\"(item, itemIndex) in wbcInfo\" :key=\"item.id\" :ref=\"setRef(item.id)\">\r\n            <div v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <p class=\"mt1\">\r\n                <input type=\"checkbox\" @input=\"allCheckChange($event,item.title)\"\r\n                       :checked=\"selectedTitle === item.title\">\r\n                {{ item?.title }}\r\n                ({{ item?.count }})</p>\r\n            </div>\r\n            <ul :class=\"'wbcImgWrap ' + item?.title\" @dragover.prevent=\"onDragOver()\" @drop=\"onDrop(itemIndex)\"\r\n                v-show=\"item?.count !== '0' && item?.count !== 0\">\r\n              <template v-for=\"(image, imageIndex) in item.images\" :key=\"image.fileName\">\r\n                <li\r\n                    :class=\"{\r\n                    'border-changed': isBorderChanged(image),\r\n                    'selected-image': isSelected(image),\r\n                    'wbcImgWrapLi': true\r\n                  }\"\r\n                    @click=\"selectImage(itemIndex, imageIndex, item)\"\r\n                    @dblclick=\"openModal(image, item)\"\r\n                    v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    @contextmenu=\"handleRightClick($event, image, item)\"\r\n                >\r\n                  <div style=\"position: relative;\">\r\n                    <div class=\"titleImg\" v-show=\"replaceFileNamePrefix(image.fileName) !== item?.title\">\r\n                      <div class=\"fileTitle\">{{ replaceFileNamePrefix(image.fileName) }}\r\n                        <font-awesome-icon\r\n                            :icon=\"['fas', 'arrow-right']\"/>\r\n                        {{ image.title }}\r\n                      </div>\r\n                    </div>\r\n                    <img :src=\"getImageUrl(image.fileName, item.id, item.title, '')\"\r\n                         :width=\"image.width ? image.width : '150px'\"\r\n                         :height=\"image.height ? image.height : '150px'\"\r\n                         :style=\"{ filter: image.filter }\"\r\n                         @dragstart=\"onDragStart(itemIndex, imageIndex)\"\r\n                         draggable=\"true\"\r\n                         class=\"cellImg\"\r\n                         ref=\"cellRef\"\r\n                         @error=\"hideImage(item.id, image.fileName, item.title)\"\r\n                         v-show=\"!hiddenImages[`${item.id}-${image.fileName}`]\"\r\n                    />\r\n                    <div class=\"center-point\" :style=\"image.coordinates\"></div>\r\n                  </div>\r\n                </li>\r\n              </template>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n        <div v-else>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div>\r\n              <div v-show=\"wbcInfo[0]?.count !== '0' && wbcInfo[0]?.count !== 0\">\r\n                <p class=\"mt1\">\r\n                  <input type=\"checkbox\" @input=\"allCheckChange($event,wbcInfo[0].title)\"\r\n                         :checked=\"selectedTitle === wbcInfo[0].title\">\r\n                  {{ wbcInfo[0]?.title }}\r\n                  ({{ wbcInfo[0]?.count }})</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <select>\r\n              <option>1</option>\r\n            </select>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--   우클릭 항목 메뉴   -->\r\n      <div v-if=\"contextMenuVisible\" :style=\"{ top: contextMenuY + 'px', left: contextMenuX + 'px' }\"\r\n           class=\"context-menu detail\">\r\n        <ul>\r\n          <li v-for=\"(item, itemIdx) in wbcInfo\" :key=\"itemIdx\" @click=\"moveSelectedImages(item, itemIdx)\">\r\n            {{ item.name }}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 모달 창 -->\r\n      <div class=\"wbcModal\" v-show=\"modalOpen\">\r\n        <div class=\"wbc-modal-content\">\r\n          <span class=\"wbcClose\" @click=\"closeModal\">&times;</span>\r\n          <div class=\"wbcModalImageContent\">\r\n            <img :src=\"selectedImageSrc\" :style=\"{ width: modalImageWidth, height: modalImageHeight }\"\r\n                 class=\"modal-image\"/>\r\n          </div>\r\n          <div class=\"buttons\">\r\n            <button @click=\"zoomIn\">+</button>\r\n            <button @click=\"zoomOut\">-</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, getCurrentInstance, onMounted, onUnmounted, ref, watch} from \"vue\";\r\nimport {moveClassImagePost} from \"@/common/api/service/dataBase/wbc/wbcApi\";\r\nimport {detailRunningApi, updateRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport {useStore} from \"vuex\";\r\nimport {readJsonFile} from \"@/common/api/service/fileReader/fileReaderApi\";\r\nimport * as XLSX from 'xlsx';\r\nimport router from \"@/router\";\r\nimport {\r\n  calculateF1Score,\r\n  calculatePrecision,\r\n  calculateRecall, CellType,\r\n  confusionMatrixVal,\r\n  MetricsVal\r\n} from \"@/common/defines/constFile/classification\";\r\nimport {\r\n  getBfHotKeysApi,\r\n  getOrderClassApi,\r\n  getWbcCustomClassApi,\r\n  getWbcHotKeysApi\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {deleteRunningApi, fileSysPost} from \"@/common/api/service/fileSys/fileSysApi\";\r\nimport {getBmTestTypeText, getTestTypeText} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport {\r\n  basicBmClassList,\r\n  basicWbcArr,\r\n  defaultBmClassList,\r\n  defaultWbcClassList\r\n} from \"@/store/modules/analysis/wbcclassification\";\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nimport ClassInfo from \"@/views/datebase/commponent/detail/classInfo/commonRightInfo/classInfo.vue\";\r\nimport LisCbc from \"@/views/datebase/commponent/detail/lisCbc.vue\";\r\n\r\nconst cellRefs: any = ref({});\r\nconst selectedTitle = ref('');\r\nconst selectItemWbc = sessionStorage.getItem(\"selectItemWbc\");\r\nconst wbcInfo = ref<any>(null);\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\nconst store = useStore();\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst cbcLayer = computed(() => store.state.commonModule.cbcLayer);\r\nconst moveImgIsBool = computed(() => store.state.commonModule.moveImgIsBool);\r\nconst classInfoSort = computed(() => store.state.commonModule.classInfoSort);\r\nconst iaRootPath = ref<any>(store.state.commonModule.iaRootPath);\r\nconst siteCd = computed(() => store.state.commonModule.siteCd);\r\nconst draggedItemIndex = ref<any>(null);\r\nconst draggedImageIndex = ref<any>(null);\r\nconst isShiftKeyPressed = ref(false);\r\nconst firstClickedImageIndex = ref(null);\r\nconst isCtrlKeyPressed = ref(false);\r\nconst draggedCircleIndex = ref<number | null>(null);\r\nconst draggedCircleIndexArr = ref<any>([]);\r\nconst draggedCircleImgIndex = ref<number | null>(null);\r\nconst selectedClickImages = ref<any>([]);\r\nconst shiftClickImages = ref<any>([]);\r\nconst rollbackHistory: any = [];\r\nconst imageSize = ref(150);\r\nconst imgBrightness = ref(100);\r\nconst imageRgb = ref([0, 0, 0]);\r\nconst selectSizeTitle = ref('ME')\r\nconst refsArray = ref<any[]>([]);\r\nconst allCheck = ref('');\r\nconst cellRef = ref(null);\r\nconst cellMarkerIcon = ref(false);\r\nconst isBeforeChild = ref(false);\r\nconst modalOpen = ref(false);\r\nconst selectedImageSrc = ref('');\r\nconst modalImageWidth = ref('150px');\r\nconst modalImageHeight = ref('150px');\r\nconst imgSet = ref(false);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\nconst wbcCustomItems = ref<any>([]);\r\nconst wbcHotKeysItems = ref<any>([]);\r\nconst bfHotKeysItems = ref<any>([]);\r\nconst instance = getCurrentInstance();\r\nconst projectType = ref<any>('bm');\r\nconst opacity = ref('0.9');\r\n\r\nconst selectItemIamgeArr = ref<any>([]);\r\nconst moveRightClickArr = ref<any>([]);\r\nconst orderClass = ref<any>([]);\r\nconst showSize = ref(false);\r\nconst hiddenImages = ref<{ [key: string]: boolean }>({});\r\nconst contextMenuVisible = ref(false);\r\nconst contextMenuX = ref(0);\r\nconst contextMenuY = ref(0);\r\nconst targetItem = ref<any>(null);\r\nconst isNext = ref(false);\r\nconst classCompareShow = ref(false);\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\n\r\nonMounted(async () => {\r\n  wbcInfo.value = [];\r\n  selectItems.value = selectItemsData ? JSON.parse(selectItemsData) : null;\r\n  projectType.value = window.PROJECT_TYPE;\r\n  window.addEventListener(\"keydown\", handleKeyDown);\r\n  window.addEventListener(\"keyup\", handleKeyUp);\r\n  document.body.addEventListener(\"click\", handleBodyClick);\r\n  await getWbcCustomClasses(false, null);\r\n  document.addEventListener('click', handleClickOutside);\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  // 로컬 스토리지 값으로 이미지 셋팅 값들 채워넣기\r\n  await imgSetLocalStorage();\r\n  // end\r\n});\r\nonUnmounted(async () => {\r\n  document.addEventListener('click', handleClickOutside);\r\n})\r\n\r\nwatch(imgBrightness, (newVal) => {\r\n  localStorage.setItem('imgBrightness', String(newVal));\r\n});\r\n\r\nwatch(imageSize, (newVal) => {\r\n  localStorage.setItem('imageSize', String(newVal));\r\n})\r\n\r\nwatch(isBeforeChild, (newVal) => {\r\n  getWbcCustomClasses(false, null);\r\n}, {deep: true});\r\n\r\nwatch(imageRgb, (newVal) => {\r\n  const red = newVal[0];\r\n  const green = newVal[1];\r\n  const blue = newVal[2];\r\n  localStorage.setItem('imageRgb', JSON.stringify([red, green, blue]));\r\n}, {deep: true});\r\n\r\nconst classCompare = () => {\r\n  classCompareShow.value = !classCompareShow.value;\r\n}\r\n\r\nconst imgSetLocalStorage = async () => {\r\n  const storedBrightness = localStorage.getItem('imgBrightness');\r\n  const storedRgb = localStorage.getItem('imageRgb');\r\n  const imageSizeCopy = localStorage.getItem('imageSize');\r\n  if (storedRgb) {\r\n    imageRgb.value = JSON.parse(storedRgb);\r\n  }\r\n  if (storedBrightness) {\r\n    imgBrightness.value = Number(storedBrightness);\r\n  }\r\n\r\n  if (imageSizeCopy) {\r\n    imageSize.value = Number(imageSizeCopy);\r\n  }\r\n\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n      image.width = Number(imageSize.value);\r\n      image.height = Number(imageSize.value);\r\n    });\r\n  });\r\n}\r\n\r\nconst isBeforeDataSet = (data: any) => {\r\n  isBeforeChild.value = data;\r\n}\r\n\r\nconst nextPage = () => {\r\n  isNext.value = true;\r\n}\r\n\r\nconst isNextFalse = () => {\r\n  isNext.value = false;\r\n}\r\n\r\nconst handleRightClick = (event: MouseEvent, image: any, item: any) => {\r\n  event.preventDefault();\r\n  openContextMenu(event, item);\r\n};\r\n\r\nfunction hideImage(id: string, fileName: string, title?: string) {\r\n  hiddenImages.value[`${id}-${fileName}`] = true;\r\n}\r\n\r\nconst getNewImageUrl = (fileName: any, title: any): any => {\r\n  if(selectItems.value.wbcInfoAfter.length === 0){\r\n    return null;\r\n  }\r\n  if (isBeforeChild.value) {\r\n    const matchingImage = selectItems.value.wbcInfoAfter.find((el: any) => {\r\n      return el.images && el.images.find((image: any) => image.fileName === fileName);\r\n    });\r\n    if (matchingImage && matchingImage.title !== title) {\r\n      return {fileNameMa: fileName, idMa: matchingImage.id, titleMa: matchingImage.title};\r\n    }\r\n  }\r\n  return null; // 새로운 이미지 URL이 없는 경우 null을 반환\r\n}\r\n\r\n\r\nconst showSizeControl = () => {\r\n  showSize.value = true;\r\n};\r\n\r\nconst hideSizeControl = () => {\r\n  showSize.value = false;\r\n};\r\n\r\nconst handleClickOutside = (event: any) => {\r\n  // 클릭 이벤트의 대상이 imgSet이 아닌지 확인\r\n  if (!event.target.closest('.imgSetWrap')) {\r\n    imgSet.value = false;\r\n    selectedTitle.value = '';\r\n  }\r\n};\r\ndocument.addEventListener('click', (event) => {\r\n  if (contextMenuVisible.value) {\r\n    contextMenuVisible.value = false;\r\n  }\r\n});\r\nconst openContextMenu = (event: MouseEvent, item: any) => {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  contextMenuVisible.value = true;\r\n  contextMenuX.value = event.clientX;\r\n  contextMenuY.value = event.clientY - 250;\r\n  targetItem.value = item;\r\n};\r\n\r\nconst moveSelectedImages = async (item: any, itemIdx: any) => {\r\n  addToRollbackHistory();\r\n  const draggedItem = wbcInfo.value[itemIdx];\r\n  if (targetItem.value) {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n    contextMenuVisible.value = false;\r\n  }\r\n  contextMenuVisible.value = false;\r\n};\r\n\r\n\r\nconst sortWbcInfo = async (wbcInfo: any, basicWbcArr: any) => {\r\n  let newSortArr = wbcInfo.slice(); // 기존 배열 복사\r\n\r\n  newSortArr.sort((a: any, b: any) => {\r\n    const nameA = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (a.title || a.abbreviation));\r\n    const nameB = basicWbcArr.findIndex((item: any) => (item.title || item.abbreviation) === (b.title || b.abbreviation));\r\n\r\n    // 이름이 없는 경우는 배열 맨 뒤로 배치\r\n    if (nameA === -1) return 1;\r\n    if (nameB === -1) return -1;\r\n\r\n    return nameA - nameB;\r\n  });\r\n\r\n  // 정렬된 배열을 wbcInfo에 할당\r\n  wbcInfo.splice(0, wbcInfo.length, ...newSortArr);\r\n};\r\n\r\n\r\nconst getWbcCustomClasses = async (upDown: any, upDownData: any) => {\r\n  wbcInfo.value = [];\r\n  try {\r\n    const result = await getWbcCustomClassApi();\r\n\r\n    const data: any = result.data;\r\n    const newData = data.filter((item: any) => item.abbreviation);\r\n\r\n    const customClassData: any = sessionStorage.getItem('customClass');\r\n    const getCustomSessionData = JSON.parse(customClassData);\r\n\r\n    if (getCustomSessionData) { // 커스텀 클래스 삭제하는 if 문\r\n      getCustomSessionData.forEach((item: any) => {\r\n        const findDelData = data.find((dataItems: any) => dataItems.customNum === item.customNum && dataItems.abbreviation !== item.abbreviation);\r\n        if (findDelData) {\r\n          if (item?.abbreviation === '') {\r\n            return;\r\n          }\r\n          const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${item?.abbreviation}`;\r\n          deleteRunningApi({path: filePath})\r\n        }\r\n      });\r\n    }\r\n    sessionStorage.setItem('customClass', JSON.stringify(data));\r\n    wbcCustomItems.value = data;\r\n    for (const item of newData) { // 커스텀클래스 폴더 생성\r\n      const {fullNm, abbreviation, customNum} = item;\r\n      const filePath = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${customNum}_${abbreviation}`;\r\n      await fileSysPost({path: filePath});\r\n\r\n      const wbcPush = {\r\n        id: customNum,\r\n        name: fullNm,\r\n        count: '0',\r\n        images: [],\r\n        title: abbreviation,\r\n      };\r\n      let wbcinfo = [];\r\n      if (isBeforeChild.value) {\r\n        wbcinfo = selectItems.value.wbcInfo.wbcInfo[0];\r\n      } else {\r\n        wbcinfo = selectItems.value.wbcInfoAfter.length !== 0 ? selectItems.value.wbcInfoAfter : selectItems.value.wbcInfo.wbcInfo[0];\r\n      }\r\n      const foundObject = wbcinfo.find((wbcItem: any) => wbcItem.id === wbcPush.id && wbcItem.name === wbcPush.name);\r\n      if (!foundObject) {\r\n        wbcinfo.push(wbcPush);\r\n        wbcInfo.value = wbcinfo;\r\n        sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n        await updateOriginalDb('notWbcAfterSave');\r\n      }\r\n    }\r\n    await getWbcHotKeyClasses();\r\n    await getBfHotKeyClasses();\r\n    await getOrderClass();\r\n    await initData(newData, upDown, upDownData);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst getBfHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getBfHotKeysApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        bfHotKeysItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst getWbcHotKeyClasses = async () => {\r\n  try {\r\n    const result = await getWbcHotKeysApi();\r\n    if (result && result?.data) {\r\n      wbcHotKeysItems.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\nfunction isBorderChanged(image: any) {\r\n  const prefix = image.fileName.split('_')[0];\r\n\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const modifiedPrefix = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n\r\n  return image.title !== modifiedPrefix;\r\n}\r\n\r\nfunction replaceFileNamePrefix(fileName: string) {\r\n  const replacements: any = {\r\n    'NES': 'NS',\r\n    'NEB': 'NB'\r\n  };\r\n\r\n  const prefix = fileName.split('_')[0];\r\n\r\n  // 대체 규칙에 따라 prefix를 변경\r\n  const modifiedPrefix: any = Object.keys(replacements).reduce((acc, key) => {\r\n    return acc.replace(key, replacements[key]);\r\n  }, prefix);\r\n  // 변경된 prefix 반환\r\n  return modifiedPrefix;\r\n}\r\n\r\n\r\nconst openModal = (image: any, item: any) => {\r\n  modalOpen.value = true;\r\n  selectedImageSrc.value = getImageUrl(image.fileName, item.id, item.title, 'getImageRealTime');\r\n};\r\n\r\nconst closeModal = () => {\r\n  modalOpen.value = false;\r\n};\r\n\r\nconst imgSetOpen = () => {\r\n  imgSet.value = !imgSet.value\r\n}\r\n\r\nconst zoomIn = () => {\r\n  let newWidth = Math.min(parseFloat(modalImageWidth.value) + 50, 400);\r\n  let newHeight = Math.min(parseFloat(modalImageHeight.value) + 50, 400);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nconst zoomOut = () => {\r\n  let newWidth = Math.max(parseFloat(modalImageWidth.value) - 50, 150);\r\n  let newHeight = Math.max(parseFloat(modalImageHeight.value) - 50, 150);\r\n\r\n  modalImageWidth.value = `${newWidth}px`;\r\n  modalImageHeight.value = `${newHeight}px`;\r\n};\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch(() => classInfoSort.value, async (newItem) => { // 오더클래스부분 순서 변경시 감지하여 재정렬\r\n  await getOrderClass();\r\n  const sortArr = orderClass.value.length !== 0 ? orderClass.value : window.PROJECT_TYPE === 'bm' ? defaultBmClassList : defaultWbcClassList;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n  const path = selectItems.value?.rootPath !== '' && selectItems.value?.rootPath ? selectItems.value?.rootPath : store.state.commonModule.iaRootPath;\r\n  iaRootPath.value = path;\r\n  await getWbcCustomClasses(true, data);\r\n}\r\n\r\nconst excelDownload = () => {\r\n  //\r\n}\r\n\r\nconst drawCellMarker = async (imgResize?: boolean) => {\r\n  if (!imgResize) {\r\n    cellMarkerIcon.value = !cellMarkerIcon.value\r\n  }\r\n\r\n  if (cellMarkerIcon.value) {\r\n    let url = '';\r\n    if (projectType.value === 'pb') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${\r\n          selectItems.value.testType === '01' || selectItems.value.testType === '04'\r\n              ? '01_WBC_Classification'\r\n              : '05_BF_Classification'\r\n      }/${selectItems.value.slotId}.json`;\r\n    } else if (projectType.value === 'bm') {\r\n      url = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${selectItems.value.slotId}.json`\r\n    }\r\n    const response = await readJsonFile({fullPath: url});\r\n\r\n    if (response && response.success) {\r\n      const jsonImageDat = response.data;\r\n      wbcInfo.value.forEach((item: any) => {\r\n        if (item.images.length === 0) return;\r\n        item.images.forEach((image: any) => {\r\n          const imageElement: any = cellRef.value;\r\n          const foundItem = jsonImageDat.find((item: any) => item?.FILE_NM === image?.fileName);\r\n          if (foundItem) {\r\n            const widthRatio = (imageElement[0]?.width || 150) / Number(foundItem.ORG_WIDTH) * 100;\r\n            const heightRatio = (imageElement[0]?.height || 150) / Number(foundItem.ORG_HEIGHT) * 100;\r\n\r\n            const rectWidth = (Number(foundItem.POSX2) - Number(foundItem.POSX1)) * (widthRatio / 100);\r\n            const rectHeight = (Number(foundItem.POSY2) - Number(foundItem.POSY1)) * (heightRatio / 100);\r\n\r\n            const left = imageElement[0]?.offsetLeft + (Number(foundItem.POSX1) * (widthRatio / 100)) + (rectWidth / 2) + 'px';\r\n            const top = imageElement[0]?.offsetTop + (Number(foundItem.POSY1) * (heightRatio / 100)) + (rectHeight / 2) + 'px';\r\n\r\n            image.coordinates = {\r\n              position: 'absolute',\r\n              left,\r\n              top,\r\n              width: '5px',\r\n              height: '5px',\r\n              background: '#10ff00'\r\n            };\r\n          }\r\n        });\r\n      });\r\n    }\r\n  } else {\r\n    wbcInfo.value.forEach((item: any) => {\r\n      item.images.forEach((image: any) => {\r\n        image.coordinates = {\r\n          display: 'none'\r\n        };\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nconst allCheckChange = (event: any, title: string) => {\r\n  allCheck.value = event.target.checked ? title : '';\r\n  if (event.target.checked) {\r\n    // 선택된 항목을 저장\r\n    selectedTitle.value = title;\r\n  } else {\r\n    // 선택된 항목을 해제\r\n    selectedTitle.value = '';\r\n  }\r\n\r\n  allCheckInsert();\r\n}\r\n\r\nconst allCheckInsert = () => {\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  moveRightClickArr.value = [];\r\n  for (const idx in wbcInfo.value) {\r\n    if (allCheck.value === wbcInfo.value[idx].title) {\r\n      for (const idxKey in wbcInfo.value[idx].images) {\r\n        const item = {\r\n          id: wbcInfo.value[idx].id,\r\n          title: wbcInfo.value[idx].title,\r\n          ...wbcInfo.value[idx].images[idxKey],\r\n        };\r\n        selectedClickImages.value.push(item);\r\n        selectItemIamgeArr.value.push(item);\r\n\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst setRef = (itemId: any) => {\r\n  return (el: any) => {\r\n    if (el) {\r\n      refsArray.value[itemId] = el;\r\n    }\r\n  };\r\n};\r\n\r\n\r\nconst scrollToElement = (itemId: number) => {\r\n  const targetElement = refsArray.value[itemId];\r\n  if (targetElement) {\r\n    targetElement.scrollIntoView({behavior: 'smooth'});\r\n  }\r\n};\r\n\r\nfunction rgbReset() {\r\n  imageRgb.value = [0, 0, 0];\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction imgSizeReset() {\r\n  drawCellMarker(true);\r\n  imageSize.value = 150;\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 이미지의 width와 height를 조절\r\n      image.width = 150;\r\n      image.height = 150;\r\n    });\r\n  });\r\n}\r\n\r\nfunction brightnessReset() {\r\n  imgBrightness.value = 100;\r\n  opacity.value = '0.9';\r\n  changeImageRgb('reset');\r\n}\r\n\r\nfunction changeImageRgb(reset: string) {\r\n  const selectedSizeTitle = selectSizeTitle.value;\r\n  if (!selectedSizeTitle) {\r\n    rgbReset();\r\n    return;\r\n  }\r\n  if (reset !== 'reset') {\r\n    opacity.value = '0.9';\r\n  }\r\n  const red = 255 - imageRgb.value[0];\r\n  const green = 255 - imageRgb.value[1];\r\n  const blue = 255 - imageRgb.value[2];\r\n  // 선택된 크기 타이틀과 일치하는 이미지들에 대해 크기 조절\r\n  wbcInfo.value.forEach((item: any) => {\r\n    // if (item.title === selectedSizeTitle) {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(${opacity.value}) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${imgBrightness.value}%)`;\r\n\r\n    });\r\n    // }\r\n  });\r\n\r\n}\r\n\r\nfunction changeImgBrightness(event: any) {\r\n  const red = imageRgb.value[0];\r\n  const green = imageRgb.value[1];\r\n  const blue = imageRgb.value[2];\r\n  const brightness = event?.target?.value;\r\n\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 각 색상 채널 개별적으로 조절\r\n      image.filter = `opacity(0.9) drop-shadow(0 0 0 rgb(${red}, ${green}, ${blue})) brightness(${brightness}%)`;\r\n    });\r\n  });\r\n}\r\n\r\nfunction changeImageSize(event: any) {\r\n  wbcInfo.value.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      // 현재 이미지의 width와 height\r\n      let currentWidth = event?.target?.value;\r\n      let currentHeight = event?.target?.value;\r\n\r\n      // 이미지의 width와 height를 조절\r\n      image.width = Number(currentWidth);\r\n      image.height = Number(currentHeight);\r\n    });\r\n  });\r\n  drawCellMarker(true);\r\n}\r\n\r\n\r\nfunction onDragOverCircle() {\r\n  // 드래그 동작을 위한 빈 함수, 이벤트 리스너가 있어야 드롭이 작동함 지우지 마세요.\r\n}\r\n\r\nfunction addToRollbackHistory() {\r\n  rollbackHistory.push(JSON.parse(JSON.stringify(wbcInfo.value)));\r\n}\r\n\r\n// 상단 타이틀 이동 시 실행되는 함수\r\nasync function onDropCircle(item: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n\r\n  const draggedItem = wbcInfo.value[draggedCircleIndex.value];\r\n\r\n  // 선택한 이미지(들)가 같은 Class로 욺직이려고 할 때\r\n  if (item.id === draggedItem.id) {\r\n    return;\r\n  }\r\n\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    // 이미지를 한 개만 드래그한 경우\r\n    const draggedImage = draggedItem.images[draggedCircleImgIndex.value];\r\n    item.images.push(draggedImage);\r\n    // 드롭된 위치에 이미지 추가\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    if (matchingItemIndex !== -1) {\r\n      wbcInfo.value[matchingItemIndex].images.push(draggedImage);\r\n    } else {\r\n      console.error('일치하는 id를 가진 요소 없음');\r\n    }\r\n    // 이미지를 한 개만 드래그한 경우에만 이동 API 호출\r\n    await moveImage(matchingItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[matchingItemIndex], false);\r\n  } else {\r\n    const matchingItemIndex = wbcInfo.value.findIndex((infoItem: any) => infoItem.id === item.id);\r\n    // 여러 이미지를 드래그한 경우에도 이동 API 호출\r\n    await moveImage(matchingItemIndex, selectedClickImages.value, draggedItem, wbcInfo.value[matchingItemIndex], false, '', wbcInfo.value);\r\n\r\n  }\r\n}\r\n\r\nfunction handleBodyClick(event: Event) {\r\n  const target = event.target as HTMLElement;\r\n  // 클릭한 요소 또는 그 부모 중에 .wbcImgWrap 클래스를 가지고 있지 않으면\r\n  if (!target.closest('.wbcImgWrapLi') && !target.closest('.context-menu')) {\r\n    // 모든 selected-image 클래스를 리셋\r\n    selectedClickImages.value = [];\r\n    shiftClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n  }\r\n}\r\n\r\nasync function handleKeyDown(event: KeyboardEvent) {\r\n  // 쉬프트 키가 눌렸는지 확인\r\n  if (event.shiftKey) {\r\n    isShiftKeyPressed.value = true;\r\n  }\r\n\r\n  // 컨트롤 키가 눌렸는지 확인\r\n  if (event.ctrlKey) {\r\n    isCtrlKeyPressed.value = true;\r\n  }\r\n\r\n  // before 상태에서는 이미지 파일 이동 불가\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n\r\n\r\n  // 이미지 이동 단축키 확인\r\n  if (projectType.value === 'pb') {\r\n    if (event.key && (selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem((selectItems.value.testType === '01' || selectItems.value.testType === '04' ? wbcHotKeysItems.value : bfHotKeysItems.value).find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  } else if (projectType.value === 'bm') {\r\n    if (event.key && wbcHotKeysItems.value.some((item: any) => item.key.toUpperCase() === event.key.toUpperCase())) {\r\n      await moveSelectedImagesToTargetItem(wbcHotKeysItems.value.find((item: any) => item.key.toUpperCase() === event.key.toUpperCase()));\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\nasync function moveSelectedImagesToTargetItem(targetItem: any) {\r\n  const targetIndex = wbcInfo.value.findIndex((item: any) =>  (item.title || item.abbreviation) === (targetItem.title || targetItem.abbreviation));\r\n  const selectedImages = selectedClickImages.value;\r\n  addToRollbackHistory();\r\n  for (const selectedImage of selectedImages) {\r\n    const sourceItemIndex = wbcInfo.value.findIndex((item: any) => (item.title || item.abbreviation) === (selectedImage.title || selectedImage.abbreviation));\r\n    const sourceItem = wbcInfo.value[sourceItemIndex];\r\n    const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n    if (imageIndex !== -1) {\r\n      // 이동된 이미지 정보를 moveImage 함수로 전달하여 데이터 업데이트\r\n      await moveImage(targetIndex, [{\r\n        fileName: selectedImage.fileName,\r\n        id: selectedImage.id,\r\n        title: selectedImage.title\r\n      }], targetItem, wbcInfo.value[targetIndex], true, 'keyMove');\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction handleKeyUp(event: KeyboardEvent) {\r\n  // Shift 키가 떼어졌는지 확인\r\n  if (!event.shiftKey) {\r\n    isShiftKeyPressed.value = false;\r\n  }\r\n\r\n  // Ctrl 키가 떼어졌는지 확인\r\n  if (!event.ctrlKey) {\r\n    isCtrlKeyPressed.value = false;\r\n  }\r\n}\r\n\r\nasync function initData(newData: any, upDown: any, upDownData: any) {\r\n  wbcInfo.value = [];\r\n  let selectItemsVal: any = [];\r\n  if (!upDown) {\r\n    wbcInfo.value = selectItemWbc ? JSON.parse(selectItemWbc) : null;\r\n    selectItemsVal = selectItems.value;\r\n  } else {\r\n    wbcInfo.value = upDownData.wbcInfoAfter.length !== 0 ? upDownData.wbcInfoAfter : upDownData.wbcInfo.wbcInfo[0];\r\n    selectItemsVal = upDownData;\r\n  }\r\n  if (selectItemsVal.wbcInfoAfter && selectItemsVal.wbcInfoAfter.length !== 0 && !isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfoAfter;\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      const title = item.title;\r\n      const correspondingItem = selectItemsVal.wbcInfoAfter.find((afterItem: any) => afterItem.title === title);\r\n      if (correspondingItem) {\r\n        correspondingItem.images.forEach((item: any) => {\r\n          item.title = title;\r\n        })\r\n      }\r\n    });\r\n  } else if (isBeforeChild.value) {\r\n    wbcInfo.value = selectItemsVal.wbcInfo.wbcInfo[0];\r\n    selectItemsVal.wbcInfo.wbcInfo[0].forEach((item: any) => {\r\n      if (item.images && item.images.length > 0) {\r\n        item.images.forEach((itemImg: any) => {\r\n          itemImg.title = item.title;\r\n        })\r\n      }\r\n    });\r\n  }\r\n  if (newData !== '') {\r\n    selectItemsVal.wbcInfo.wbcInfo[0] = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => {\r\n      return !newData.find((dataItem: any) => dataItem.customNum === item.id && dataItem.abbreviation === \"\");\r\n    });\r\n  }\r\n\r\n  // customClass wbcInfo After 상태에서 추가하는 코드\r\n  if (!isBeforeChild.value) {\r\n    const wbcInfoIdArr = wbcInfo.value.map((item: any) => item.id)\r\n    const customClassArr = selectItemsVal.wbcInfo.wbcInfo[0].filter((item: any) => !wbcInfoIdArr.includes(item.id))\r\n    wbcInfo.value = [...wbcInfo.value, ...customClassArr];\r\n  }\r\n\r\n  const oArr = orderClass.value.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n  const sortArr = orderClass.value.length !== 0 ? oArr : window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n  await sortWbcInfo(wbcInfo.value, sortArr);\r\n}\r\n\r\nconst getOrderClass = async () => {\r\n  try {\r\n    const result = await getOrderClassApi();\r\n    if (result) {\r\n      if (result?.data.length === 0) {\r\n        orderClass.value = [];\r\n      } else {\r\n        orderClass.value = result.data.sort((a: any, b: any) => Number(a.orderIdx) - Number(b.orderIdx));\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nfunction onDragOver() {\r\n  //이부분이 없으면 드래그 동작안함 지우지마세요\r\n}\r\n\r\nfunction onDragStart(itemIndex: any, imageIndex: any) {\r\n  // 드래그 시작 시 인덱스 저장\r\n  draggedItemIndex.value = itemIndex;\r\n  draggedImageIndex.value = imageIndex;\r\n  draggedCircleImgIndex.value = imageIndex;\r\n  draggedCircleIndex.value = itemIndex;\r\n  draggedCircleIndexArr.value.push(itemIndex);\r\n}\r\n\r\nfunction selectImage(itemIndex: any, imageIndex: any, classInfoitem: any) {\r\n  // 쉬프트 키를 누른 경우\r\n  if (isShiftKeyPressed.value) {\r\n    if (firstClickedImageIndex.value !== null) {\r\n      // 현재 선택한 이미지\r\n      shiftClickImages.value.push(imageIndex);\r\n      // 시작과 끝 인덱스 결정\r\n      const start = Math.min(firstClickedImageIndex.value, imageIndex);\r\n      const end = Math.max(firstClickedImageIndex.value, imageIndex);\r\n\r\n      // 선택된 이미지 초기화\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      // 범위 내의 이미지 선택\r\n      for (let i = start; i <= end; i++) {\r\n        selectedClickImages.value.push({\r\n          id: wbcInfo.value[itemIndex].id,\r\n          title: wbcInfo.value[itemIndex].title,\r\n          ...wbcInfo.value[itemIndex].images[i],\r\n        });\r\n        selectItemIamgeArr.value.push(classInfoitem);\r\n      }\r\n    }\r\n  } else { // 쉬프트 키를 누르지 않은 경우\r\n    // 처음 클릭한 이미지의 인덱스를 저장\r\n    firstClickedImageIndex.value = imageIndex;\r\n\r\n    const selectedImage = wbcInfo.value[itemIndex].images[imageIndex];\r\n    if (!isCtrlKeyPressed.value) {\r\n      selectedClickImages.value = [];\r\n      selectItemIamgeArr.value = [];\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n      return;\r\n    }\r\n\r\n    // 선택된 이미지가 배열에 있는지 확인\r\n    const imageIndexInSelected = selectedClickImages.value.findIndex((img: any) => img === selectedImage);\r\n\r\n    if (imageIndexInSelected === -1) {\r\n      selectedClickImages.value.push({...selectedImage, id: wbcInfo.value[itemIndex].id});\r\n      selectItemIamgeArr.value.push(classInfoitem);\r\n    } else {\r\n      // 이미 선택된 이미지를 다시 클릭하면 선택 해제\r\n      selectedClickImages.value.splice(imageIndexInSelected, 1);\r\n      selectItemIamgeArr.value.splice(imageIndexInSelected, 1);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction isSelected(image: any) {\r\n  const imageFileName = image.fileName;\r\n  return selectedClickImages.value.some((selectedImage: any) => selectedImage.fileName === imageFileName);\r\n}\r\n\r\nasync function onDrop(targetItemIndex: any) {\r\n  if (isBeforeChild.value) {\r\n    return;\r\n  }\r\n  addToRollbackHistory();\r\n  if (selectedClickImages.value.length === 0) {\r\n    return await originalOnDrop(targetItemIndex);\r\n  }\r\n  // 화면 딜레이\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n  for (const selectedImage of selectedClickImages.value) {\r\n    const fileName = selectedImage.fileName;\r\n    const draggedItemIndex = wbcInfo.value.findIndex((item: any) => item.images.some((img: any) => img.fileName === fileName));\r\n    const draggedItem = wbcInfo.value[draggedItemIndex];\r\n    await moveImage(targetItemIndex, [{fileName: selectedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n  // 화면 딜레이 끄기\r\n  await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n}\r\n\r\nasync function originalOnDrop(targetItemIndex: number) {\r\n  //targetItemIndex -> 옮겨져야하는 index\r\n  if ((draggedItemIndex.value !== null && draggedImageIndex.value !== null) && (draggedItemIndex.value !== targetItemIndex)) {\r\n    const draggedItem = wbcInfo.value[draggedItemIndex.value];\r\n    const draggedImage = draggedItem.images[draggedImageIndex.value]; // 드래그 후 옮기는 이미지\r\n    // 이미지 이동 함수 호출\r\n    await moveImage(targetItemIndex, [{fileName: draggedImage.fileName}], draggedItem, wbcInfo.value[targetItemIndex], false);\r\n  }\r\n}\r\n\r\nasync function moveImage(targetItemIndex: number, selectedImagesToMove: any[], draggedItem: any, targetItem: any, type: boolean, keyMove?: string, wbcInfosArr?: any) {\r\n  const {slotId} = selectItems.value;\r\n  const arrType = selectedImagesToMove;\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 선택된 이미지 배열에 대해 반복\r\n  for (const selectedImage of arrType) {\r\n    const fileName = selectedImage.fileName;\r\n    fileNames.push(fileName)\r\n    if (keyMove === 'keyMove') { // 단축키로 움직였을 경우\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation ===  (selectedImage.title || selectedImage.abbreviation));\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      };\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n      const res = await moveClassImagePost(data);\r\n      if (res) {\r\n        // 이미지를 타겟 아이템으로 이동\r\n        const sourceItemIndex = wbcInfo.value.findIndex((item: any) => item.title ===  (selectedImage.title || selectedImage.abbreviation));\r\n        const sourceItem = wbcInfo.value[sourceItemIndex];\r\n        const imageIndex = sourceItem.images.findIndex((image: any) => image.fileName === selectedImage.fileName);\r\n        if (imageIndex !== -1) {\r\n          const image = sourceItem.images.splice(imageIndex, 1)[0];\r\n          image.title = wbcInfo.value[targetItemIndex].title;\r\n          image.width = imageSize.value;\r\n          image.height = imageSize.value;\r\n          wbcInfo.value[targetItemIndex].images.push(image);\r\n          // 카운트 업데이트\r\n          sourceItem.count--;\r\n          wbcInfo.value[targetItemIndex].count++;\r\n        }\r\n\r\n        // 선택된 이미지 초기화\r\n        selectedClickImages.value = [];\r\n        selectItemIamgeArr.value = [];\r\n        shiftClickImages.value = [];\r\n        await updateOriginalDb();\r\n        await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n      }\r\n      return;\r\n    }\r\n    // wbcInfosArr => 원에다가 움직이거나 우클릭 해서 클래스 옮길 시 사용 하는 부분임\r\n    if (!wbcInfosArr && keyMove !== 'keyMove') { // 마우스로 같은 class 공간으로 드롭시켜서 이동시\r\n      const sourceFolder = type ? `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${selectedImage.id}_${selectedImage.title}` :\r\n          `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${draggedItem.id}_${draggedItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n      const data = {\r\n        sourceFolders,\r\n        destinationFolders,\r\n        fileNames\r\n      }\r\n      let res = await moveClassImagePost(data);\r\n      // 드래그된 이미지를 원래 위치에서 제거\r\n      if (res) {\r\n        const draggedImageIndex = draggedItem.images.findIndex((img: any) => img.fileName === fileName);\r\n        draggedItem.images.splice(draggedImageIndex, 1);\r\n        const imgAttr = {\r\n          width: imageSize.value,\r\n          height: imageSize.value,\r\n        }\r\n        // 드롭된 위치에 이미지를 삽입\r\n        wbcInfo.value[targetItemIndex].images.push({...selectedImage, ...imgAttr});\r\n\r\n        wbcInfo.value = removeDuplicateImages(wbcInfo.value);\r\n        wbcInfo.value.forEach((item: any) => {\r\n          item.count = item.images.length;\r\n          if (item.images.length > 0) {\r\n            item.images.forEach((itemImg: any) => {\r\n              itemImg.title = item.title;\r\n            })\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n  if (wbcInfosArr) { // 동그라미 네비게이션 바로 옮길경우, 또는 우클릭 해서 클래스 이동시 사용\r\n    // destinationFolders -> 이동 되는 폴더\r\n    // sourceFolders -> 기존 폴더\r\n    // targetItemIndex -> 이동되어야하는 아이템 인덱스\r\n    // findImage - > 움직여야하는 이미지\r\n    // draggedItemIdx - > 기존 폴더 위치\r\n    // moveImgIsBool = > 사용자가 이미지 이동 시 다른 동작 못하도록 막는 레이어임\r\n    await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: true});\r\n    for (const seItem of selectItemIamgeArr.value) {\r\n      const classInfoBagic = window.PROJECT_TYPE === 'bm' ? basicBmClassList : basicWbcArr;\r\n      const matchingItem = classInfoBagic.find(item => item.abbreviation === (seItem.title || seItem.abbreviation));\r\n      const sourceFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${matchingItem?.id}_${seItem.title}`;\r\n      const destinationFolder = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${targetItem.id}_${targetItem.title}`;\r\n      destinationFolders.push(destinationFolder);\r\n      sourceFolders.push(sourceFolder);\r\n    }\r\n    const data = {\r\n      sourceFolders,\r\n      destinationFolders,\r\n      fileNames\r\n    }\r\n    let res = await moveClassImagePost(data);\r\n    if (res) {\r\n      // selectedImagesToMove 배열의 이미지를 targetItemIndex에서 wbcInfo.value의 객체에 추가\r\n      const targetItem = wbcInfo.value[targetItemIndex];\r\n      for (const seItem of removeDuplicatesByProperty(selectItemIamgeArr.value, 'title')) {\r\n        const findImage = selectedImagesToMove.filter(item => item.title === (seItem.title || seItem.abbreviation));\r\n        targetItem.images.push(...findImage);\r\n        targetItem.count = targetItem.images.length;\r\n        const draggedItemIdx = wbcInfo.value.findIndex((item: any) => item.title === (seItem.title || seItem.abbreviation));\r\n        if (draggedItemIdx !== -1) {\r\n          const draggedItemObj = wbcInfo.value[draggedItemIdx];\r\n          const selectedImagesFileNames = selectedImagesToMove.map(image => image.fileName);\r\n          const filteredImages = draggedItemObj.images.filter((image: any) => !selectedImagesFileNames.includes(image.fileName));\r\n          // 새로 생성한 배열을 draggedItemObj의 images 배열에 할당\r\n          draggedItemObj.images = filteredImages;\r\n          draggedItemObj.count = draggedItemObj.images.length;\r\n        }\r\n      }\r\n      for (const images of selectedImagesToMove) {\r\n        images.title = wbcInfo.value[targetItemIndex].title;\r\n        images.width = imageSize.value;\r\n        images.height = imageSize.value;\r\n      }\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    } else {\r\n      await store.dispatch('commonModule/setCommonInfo', {moveImgIsBool: false});\r\n    }\r\n  }\r\n  // 선택된 이미지 초기화\r\n  selectedClickImages.value = [];\r\n  selectItemIamgeArr.value = [];\r\n  shiftClickImages.value = [];\r\n  allCheck.value = '';\r\n  selectedTitle.value = '';\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nfunction removeDuplicatesByProperty(array: any, property: any) {\r\n  const seen = new Set();\r\n  return array.filter((item: any) => {\r\n    const key = item[property];\r\n    if (seen.has(key)) {\r\n      return false; // 중복된 객체는 제거\r\n    } else {\r\n      seen.add(key);\r\n      return true; // 처음 등장한 객체는 유지\r\n    }\r\n  });\r\n}\r\n\r\n\r\nfunction removeDuplicateImages(data: any[]): any[] {\r\n  const uniqueFileNames = new Set<string>();\r\n\r\n  return data.map(item => {\r\n    const uniqueImages = item.images.filter((image: any) => {\r\n      if (!uniqueFileNames.has(image.fileName)) {\r\n        uniqueFileNames.add(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    return {...item, images: uniqueImages};\r\n  });\r\n}\r\n\r\nconst getStringArrayBySiteCd = (siteCd: string, testType: string): string[] => {\r\n  if (!siteCd && siteCd === '') {\r\n    siteCd = '0000';\r\n    testType = '01';\r\n  }\r\n  // 사전을 사용하여 각 siteCd에 따라 반환할 배열을 정의\r\n  const arraysBySiteCd: any = {\r\n    '0006': {\r\n      includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n      includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    },\r\n  };\r\n\r\n  // 지정된 siteCd에 대한 배열을 가져오거나, 기본 배열을 반환\r\n  const arraysForSiteCd = arraysBySiteCd[siteCd] || {\r\n    includesStr: [\"AR\", \"NR\", \"GP\", \"PA\", \"MC\", \"MA\", \"SM\", 'NE', 'GP', 'PA', 'OT'],\r\n    includesStr2: [\"NR\", \"AR\", \"MC\", \"MA\", 'NE', \"SM\", 'GP', 'PA', 'OT'],\r\n  };\r\n\r\n  // testType에 따라 적절한 배열을 반환\r\n  return (testType === '01' || testType === '04') ? arraysForSiteCd.includesStr : arraysForSiteCd.includesStr2;\r\n};\r\n\r\n\r\nasync function updateOriginalDb(notWbcAfterSave?: string) {\r\n  let originalDbVal: any = [];\r\n  // wbcInfo.value를 깊은 복제(clone)하여 새로운 배열을 생성\r\n  let clonedWbcInfo = JSON.parse(JSON.stringify(wbcInfo.value));\r\n  let totalCount = 0;\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        totalCount += Number(item.count);\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) {\r\n        totalCount += Number(item.count);\r\n      }\r\n    }\r\n  });\r\n  // 각 이미지 객체에서 width와 height 속성은 저장 안해도되는 부분이라서 디비에 저장 안함\r\n  clonedWbcInfo.forEach((item: any) => {\r\n    item.images.forEach((image: any) => {\r\n      delete image.width;\r\n      delete image.height;\r\n      delete image.filter;\r\n    });\r\n    if (projectType.value === 'bm') {\r\n      if (item.title !== 'OT') {\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1);\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    } else {\r\n      const targetArray = getStringArrayBySiteCd(siteCd.value, selectItems.value?.testType);\r\n      if (!targetArray.includes(item.title)) { // 퍼센트를 소수점 한 자리까지 계산\r\n        const percentage = ((Number(item.count) / Number(totalCount)) * 100).toFixed(1); // 소수점 부분이 0이면 정수만, 아니면 소수점 한 자리까지 표시\r\n        item.percent = (Number(percentage) === Math.floor(Number(percentage)))\r\n            ? Math.floor(Number(percentage)).toString()\r\n            : percentage;\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  let uniqueImages: any = [];\r\n  const uniqueData = clonedWbcInfo.map((item: any) => {\r\n    const uniqueImagesForItem = item.images.filter((image: any) => {\r\n      if (!uniqueImages.includes(image.fileName)) {\r\n        uniqueImages.push(image.fileName);\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    return {...item, images: uniqueImagesForItem};\r\n  });\r\n  clonedWbcInfo = uniqueData;\r\n  if (notWbcAfterSave !== 'notWbcAfterSave') {\r\n    // wbcInfoAfter 업데이트 및 sessionStorage에 저장\r\n    selectItems.value.wbcInfoAfter = clonedWbcInfo;\r\n    sessionStorage.setItem(\"selectItems\", JSON.stringify(selectItems.value));\r\n    sessionStorage.setItem(\"selectItemWbc\", JSON.stringify(clonedWbcInfo));\r\n    await store.dispatch('commonModule/setCommonInfo', {clonedWbcInfo: clonedWbcInfo});\r\n\r\n    // originalDb 업데이트\r\n    const res: any = await detailRunningApi(String(selectItems.value.id));\r\n    if (res) {\r\n      res.data.wbcInfoAfter = clonedWbcInfo;\r\n    }\r\n    originalDbVal = [res.data];\r\n  }\r\n\r\n\r\n  //updateRunningApi 호출\r\n  await updateRunningApiPost(clonedWbcInfo, originalDbVal);\r\n}\r\n\r\nasync function updateRunningApiPost(wbcInfo: any, originalDb: any) {\r\n  try {\r\n    const response = await updateRunningApi({userId: Number(userId.value), runingInfoDtoItems: originalDb})\r\n    if (response) {\r\n      if (cellMarkerIcon.value) {\r\n        // 다시 불러올경우 셀마킹이 켜있는경우 다시 셀마크 그려주기\r\n        await drawCellMarker(true);\r\n      }\r\n    } else {\r\n      console.error('백엔드가 디비에 저장 실패함');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n  }\r\n}\r\n\r\nfunction getImageUrl(imageName: any, id: string, title: string, highImg: string, findAfterArr?: boolean): string {\r\n  // 이미지 정보가 없다면 빈 문자열 반환\r\n  if (!wbcInfo.value || wbcInfo.value.length === 0) {\r\n    return \"\";\r\n  }\r\n\r\n  const slotId = selectItems.value.slotId || \"\";\r\n  let folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${id}_${title}`;\r\n  let url = '';\r\n  if (isBeforeChild.value) {\r\n\r\n    if (getNewImageUrl(imageName, title)) {\r\n      const {idMa, titleMa} = getNewImageUrl(imageName, title);\r\n      folderPath = `${iaRootPath.value}/${slotId}/${projectTypeReturn(projectType.value)}/${idMa}_${titleMa}`;\r\n    }\r\n\r\n  }\r\n  if (highImg === 'getImageRealTime' || projectType.value === 'pb') {\r\n    url = `${apiBaseUrl}/images/getImageRealTime?folder=${folderPath}&imageName=${imageName}`;\r\n  } else {\r\n    url = `${apiBaseUrl}/images?folder=${folderPath}&imageName=${imageName}`;\r\n  }\r\n  return url;\r\n\r\n}\r\n\r\n\r\nasync function rollbackChanges() {\r\n  if (rollbackHistory.length > 0) {\r\n    // 롤백할 때마다 히스토리에서 마지막 상태를 꺼내어 복원\r\n    const prevWbcInfo = rollbackHistory.pop();\r\n\r\n    // 롤백 후 초기화\r\n    draggedItemIndex.value = null;\r\n    draggedImageIndex.value = null;\r\n    draggedCircleIndex.value = null;\r\n    draggedCircleIndexArr.value = [];\r\n    draggedCircleImgIndex.value = null;\r\n    selectedClickImages.value = [];\r\n    selectItemIamgeArr.value = [];\r\n    shiftClickImages.value = [];\r\n\r\n    // 현재 상태에서 이전 상태로 이미지 롤백\r\n    await rollbackImages(wbcInfo.value, prevWbcInfo);\r\n\r\n    // wbcInfo 업데이트\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n}\r\n\r\nconst findUndefinedImages = (sourceWbcInfo: any, targetWbcInfo: any, infoArray: any) => {\r\n  sourceWbcInfo.forEach((sourceItem: any, sourceIndex: any) => {\r\n    const targetItem = targetWbcInfo[sourceIndex];\r\n    if (sourceItem && targetItem) {\r\n      sourceItem.images.forEach((sourceImage: any, imageIndex: any) => {\r\n        const targetImage = targetItem.images[imageIndex];\r\n        if (targetImage === undefined) {\r\n          infoArray.push({\r\n            itemIndex: sourceIndex,\r\n            imageIndex,\r\n            fileName: sourceImage.fileName,\r\n            title: targetItem.title,\r\n            id: targetItem.id,\r\n          });\r\n        }\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nasync function rollbackImages(currentWbcInfo: any, prevWbcInfo: any) {\r\n  // 각 상태에서 이동된 이미지 정보 추출\r\n  const sourceFolderInfo: any = [];\r\n  const destinationFolderInfo: any = [];\r\n  findUndefinedImages(currentWbcInfo, prevWbcInfo, sourceFolderInfo);\r\n  findUndefinedImages(prevWbcInfo, currentWbcInfo, destinationFolderInfo);\r\n  let sourceFolders = [];\r\n  let destinationFolders = [];\r\n  let fileNames = [];\r\n\r\n  // 이동된 이미지들을 이전 위치로 다시 이동시킴\r\n  for (const index in sourceFolderInfo) {\r\n    const sourceFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${sourceFolderInfo[index].id}_${sourceFolderInfo[index].title}`;\r\n    const destinationFolder = `${iaRootPath.value}/${selectItems.value.slotId}/${projectTypeReturn(projectType.value)}/${destinationFolderInfo[index].id}_${destinationFolderInfo[index].title}`;\r\n    sourceFolders.push(sourceFolder)\r\n    destinationFolders.push(destinationFolder)\r\n    fileNames.push(sourceFolderInfo[index].fileName)\r\n\r\n  }\r\n  const data = {\r\n    sourceFolders: sourceFolders,\r\n    destinationFolders: destinationFolders,\r\n    fileNames: fileNames,\r\n  }\r\n  let response = await moveClassImagePost(data);\r\n\r\n  if (response) {\r\n    wbcInfo.value = prevWbcInfo;\r\n  }\r\n  // 원본 데이터베이스 업데이트\r\n  await updateOriginalDb();\r\n}\r\n\r\nconst projectTypeReturn = (type: string): any => {\r\n  if (type === 'bm') {\r\n    return '04_BM_Classification';\r\n  } else if (type === 'pb') {\r\n    return '01_WBC_Classification';\r\n  }\r\n}\r\n\r\n</script>\r\n","import script from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./listDetail.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4505cb42\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { id: \"viewerSmall\" }, null, -1))\nconst _hoisted_2 = { class: \"leftImgList\" }\nconst _hoisted_3 = { class: \"\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Partical Image\", -1))\nconst _hoisted_5 = [\"src\", \"onDblclick\"]\nconst _hoisted_6 = { class: \"\" }\nconst _hoisted_7 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal Zone\", -1))\nconst _hoisted_8 = [\"src\", \"onDblclick\"]\nconst _hoisted_9 = { class: \"\" }\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Ideal stitch\", -1))\nconst _hoisted_11 = [\"src\", \"onDblclick\"]\nconst _hoisted_12 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Megakaryocyte\", -1))\nconst _hoisted_13 = [\"src\", \"onDblclick\"]\n\nimport {nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'leftImgList',\n  props: ['selectItems'],\n  setup(__props) {\n\r\nconst props = __props;\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    (buttonOfen.value)\n      ? (_openBlock(), _createElementBlock(\"div\", {\n          key: 0,\n          class: \"closeViewer\",\n          onClick: closeViewer\n        }, \"x\"))\n      : _createCommentVNode(\"\", true),\n    _hoisted_1,\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"ul\", _hoisted_3, [\n        _hoisted_4,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(paImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'particle'),\n              alt: \"Partical Image\",\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'particle')))\n            }, null, 40, _hoisted_5)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_6, [\n        _hoisted_7,\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealZoneImages.value, (image, index) => {\n          return (_openBlock(), _createElementBlock(\"li\", {\n            key: index,\n            style: {\"width\":\"100px\"}\n          }, [\n            _createElementVNode(\"img\", {\n              src: getImageUrlsSmallImg(image, 'idealZone'),\n              onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealZone')))\n            }, null, 40, _hoisted_8)\n          ]))\n        }), 128))\n      ]),\n      _createElementVNode(\"ul\", _hoisted_9, [\n        _createElementVNode(\"div\", null, [\n          _hoisted_10,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(idealStitchImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'idealStitch'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'idealStitch')))\n              }, null, 40, _hoisted_11)\n            ]))\n          }), 128))\n        ]),\n        _createElementVNode(\"div\", null, [\n          _hoisted_12,\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(megaImages.value, (image, index) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: index }, [\n              _createElementVNode(\"img\", {\n                src: getImageUrlsSmallImg(image, 'mega'),\n                onDblclick: ($event: any) => (openInViewer(getImageUrls(image, 'mega')))\n              }, null, 40, _hoisted_13)\n            ]))\n          }), 128))\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <div class=\"closeViewer\" @click=\"closeViewer\" v-if=\"buttonOfen\">x</div>\r\n  <div id=\"viewerSmall\"></div>\r\n  <div class=\"leftImgList\">\r\n    <ul class=\"\">\r\n      <p>Partical Image</p>\r\n      <li v-for=\"(image, index) in paImages\" :key=\"index\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'particle')\" alt=\"Partical Image\"\r\n             @dblclick=\"openInViewer(getImageUrls(image, 'particle'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <p>Ideal Zone</p>\r\n      <li v-for=\"(image, index) in idealZoneImages\" :key=\"index\" style=\"width:100px\">\r\n        <img :src=\"getImageUrlsSmallImg(image, 'idealZone')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealZone'))\">\r\n      </li>\r\n    </ul>\r\n    <ul class=\"\">\r\n      <div>\r\n        <p>Ideal stitch</p>\r\n        <li v-for=\"(image, index) in idealStitchImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'idealStitch')\" @dblclick=\"openInViewer(getImageUrls(image, 'idealStitch'))\">\r\n        </li>\r\n      </div>\r\n      <div>\r\n        <p>Megakaryocyte</p>\r\n        <li v-for=\"(image, index) in megaImages\" :key=\"index\">\r\n          <img :src=\"getImageUrlsSmallImg(image, 'mega')\" @dblclick=\"openInViewer(getImageUrls(image, 'mega'))\">\r\n        </li>\r\n      </div>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {defineProps, nextTick, onMounted, ref, watch} from \"vue\";\r\nimport OpenSeadragon from \"openseadragon\";\r\nimport axios from \"axios\";\r\nimport {useStore} from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\n\r\nconst store = useStore();\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst paImages = ref([]);\r\nconst idealZoneImages = ref([]);\r\nconst idealStitchImages = ref([]);\r\nconst megaImages = ref([]);\r\nconst strArray = ['02_Particle_Image', '03_Cell_Ideal_Image', '04_Cell_Ideal_Stitch_Image', '05_Mega_Image'];\r\nconst buttonOfen = ref(false);\r\nlet viewerSmall: any = null;\r\n\r\nonMounted(() => {\r\n  getImgUrl();\r\n});\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  getImgUrl();\r\n});\r\nconst getImageUrls = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImageUrlsSmallImg = (imageName: string, type: string) => {\r\n  let folderName;\r\n  switch (type) {\r\n    case 'particle':\r\n      folderName = '02_Particle_Image';\r\n      break;\r\n    case 'idealZone':\r\n      folderName = '03_Cell_Ideal_Image';\r\n      break;\r\n    case 'idealStitch':\r\n      folderName = '04_Cell_Ideal_Stitch_Image';\r\n      break;\r\n    case 'mega':\r\n      folderName = '05_Mega_Image';\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/${folderName}`;\r\n\r\n  return `${apiBaseUrl}/folders/getFilesInFolderWhole?folderPath=${folderPath}/${imageName}`;\r\n};\r\n\r\nconst getImgUrl = () => {\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.rootPath !== '' && props.selectItems?.rootPath ? props.selectItems?.rootPath : sessionStorage.getItem('iaRootPath');\r\n\r\n  for (const item of strArray) {\r\n    axios.get(`${apiBaseUrl}/folders?folderPath=${path}/${slotId}/${item}`)\r\n        .then(response => {\r\n          switch (item) {\r\n            case '02_Particle_Image':\r\n              paImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 7);\r\n              break;\r\n            case '03_Cell_Ideal_Image':\r\n              idealZoneImages.value = response.data.filter((resp: any) => resp !== 'Thumb').slice(0, 14);\r\n              break;\r\n            case '04_Cell_Ideal_Stitch_Image':\r\n              idealStitchImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n            case '05_Mega_Image':\r\n              megaImages.value = response.data.filter((resp: any) => resp !== 'Thumb');\r\n              break;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n        });\r\n  }\r\n};\r\n\r\n// 이미지를 더블클릭하면 OpenSeadragon 뷰어에서 열기\r\nconst openInViewer = (imageUrl: string) => {\r\n  // 기존의 뷰어 제거\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n  }\r\n\r\n  // 새로운 OpenSeadragon 뷰어 생성\r\n  viewerSmall = OpenSeadragon({\r\n    id: \"viewerSmall\",\r\n    element: document.getElementById(\"viewerSmall\"),\r\n    tileSources: {\r\n      type: \"image\",\r\n      url: imageUrl,\r\n    },\r\n    defaultZoomLevel: 0.2,\r\n    navigator: false,\r\n    showZoomControl: false, // 줌 컨트롤 숨기기\r\n    showHomeControl: false, // 홈 컨트롤 숨기기\r\n    showFullScreenControl: false, // 전체 화면 컨트롤 숨기기\r\n    showRotationControl: false, // 회전 컨트롤 숨기기\r\n    showFullPageControl: false,\r\n  });\r\n  buttonOfen.value = true;\r\n  viewerSmall.addHandler(\"open\", function () {\r\n    // 타일링 뷰어에 height 동적 조정\r\n    const imageWidth = viewerSmall.source.dimensions.x;\r\n    const imageHeight = viewerSmall.source.dimensions.y;\r\n\r\n    const tilingViewerElement: any = document.getElementById(\"viewerSmall\");\r\n\r\n    const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n    const aspectRatio = imageHeight / imageWidth;\r\n\r\n    const dynamicHeight = containerWidth * aspectRatio;\r\n    tilingViewerElement.style.position = `fixed`;\r\n    tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n    tilingViewerElement.style.width = `100%`;\r\n    tilingViewerElement.style.left = `0`;\r\n    tilingViewerElement.style.background = `#00000061`;\r\n\r\n  });\r\n};\r\n\r\n\r\nconst closeViewer = () => {\r\n  if (viewerSmall) {\r\n    viewerSmall.destroy();\r\n\r\n    // viewerSmall 요소를 제거하여 닫기\r\n    const viewerElement = document.getElementById('viewerSmall');\r\n    if (viewerElement) {\r\n      viewerElement.innerHTML = '';  // 뷰어 요소의 내용을 비워서 닫기\r\n      viewerElement.style.background = 'none';\r\n      viewerElement.style.height = `0`;\r\n      viewerElement.style.width = `0`;\r\n\r\n      // 클릭 이벤트 리스너 제거\r\n      viewerElement.removeEventListener('click', closeViewer);\r\n    }\r\n\r\n    // viewerSmall 변수를 null로 설정\r\n    viewerSmall = null;\r\n    buttonOfen.value = false;\r\n  }\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 10px;\r\n}\r\n\r\ndiv#viewerSmall {\r\n  position: fixed;\r\n  top: 0;\r\n  height: 100%!important;\r\n}\r\n.closeViewer {\r\n  position: absolute;\r\n  font-size: 3.9rem;\r\n  z-index: 999;\r\n  right: 25px;\r\n  top: 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n","import script from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./leftImgList.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./leftImgList.vue?vue&type=style&index=0&id=4505cb42&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4505cb42\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = [\"src\"]\nconst _hoisted_2 = {\n  class: \"tilingViewerContainer\",\n  style: {\"height\":\"100%\"},\n  id: \"tiling-container\"\n}\n\nimport {onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'tilingViewer',\n  props: ['selectItems'],\n  setup(__props) {\n\r\n\r\nconst props = __props;\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"img\", {\n      src: hideImage.value,\n      ref_key: \"hideImageRef\",\n      ref: hideImageRef,\n      style: {\"display\":\"none\"},\n      onLoad: _cache[0] || (_cache[0] = ($event: any) => (onImageLoad(true)))\n    }, null, 40, _hoisted_1),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"div\", {\n        ref_key: \"tilingViewerLayer\",\n        ref: tilingViewerLayer,\n        id: \"tiling-viewer\"\n      }, null, 512)\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <img :src=\"hideImage\" ref=\"hideImageRef\" style=\"display: none\" @load=\"onImageLoad(true)\"  />\r\n    <div class=\"tilingViewerContainer\" style=\"height: 100%\" id=\"tiling-container\">\r\n      <div ref=\"tilingViewerLayer\" id=\"tiling-viewer\" ></div>\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport {defineProps, onMounted, ref, watch, computed, nextTick} from 'vue';\r\nimport OpenSeadragon from 'openseadragon';\r\nimport { useStore } from \"vuex\";\r\n\r\nconst props = defineProps(['selectItems']);\r\nconst iaRootPath = computed(() => store.state.commonModule.iaRootPath);\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.115:3002';\r\nconst store = useStore();\r\nconst tilingViewerLayer = ref(null);\r\nconst hideImageRef = ref(null);\r\nconst newImgHeight = ref('');\r\nconst newImgWidth = ref('');\r\nconst hideImage = ref('');\r\nlet viewer:any = null;\r\n\r\nonMounted(async () => {\r\n  await onImageLoad(true);\r\n});\r\n\r\nwatch( () => props.selectItems, async(newItem) => {\r\n  await nextTick()\r\n  await onImageLoad(false);\r\n});\r\nconst onImageLoad = async (bool: boolean) => {\r\n  const imgElement = hideImageRef.value;\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path : sessionStorage.getItem('iaRootPath');\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  if (imgElement && imgElement.complete) {\r\n    const imageHeight = imgElement.naturalHeight;\r\n    const imageWidth = imgElement.naturalWidth;\r\n\r\n    if (imageHeight !== 0) {\r\n      newImgHeight.value = imageHeight;\r\n      newImgWidth.value = imageWidth;\r\n      await initElement(imageHeight, bool);\r\n    }\r\n\r\n  }\r\n};\r\n\r\n\r\n\r\nconst initElement = async (imageHeight: any, bool: boolean) => {\r\n  if (viewer) {\r\n    viewer.destroy();\r\n  }\r\n  const slotId = props.selectItems?.slotId || \"\";\r\n  const path = props.selectItems?.img_drive_root_path  !== '' && props.selectItems?.img_drive_root_path  ? props.selectItems?.img_drive_root_path  : sessionStorage.getItem('iaRootPath');\r\n\r\n  const folderPath = `${path}/${slotId}/01_Stitching_Image`;\r\n\r\n  const imageUrl =  `${apiBaseUrl}/folders?folderPath=${folderPath}/PMC_Result.jpg`;\r\n  hideImage.value = imageUrl;\r\n  try {\r\n    const tilesInfo = await fetchTilesInfo(folderPath);\r\n    viewer = OpenSeadragon({\r\n      id: \"tiling-viewer\",\r\n      animationTime: 0.4,\r\n      navigatorSizeRatio: 0.25,\r\n      showNavigator: true,\r\n      sequenceMode: true,\r\n      defaultZoomLevel: 1,\r\n      prefixUrl:`${apiBaseUrl}/folders?folderPath=D:/UIMD_Data/Res/uimdFe/images/`,\r\n      tileSources: tilesInfo,\r\n      gestureSettingsMouse: { clickToZoom: false },\r\n    });\r\n\r\n    viewer.addHandler(\"open\", function() {\r\n      // 타일링 뷰어에 height 동적 조정\r\n      const imageWidth = viewer.source.dimensions.x;\r\n      const imageHeight = viewer.source.dimensions.y;\r\n\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n\r\n      const containerWidth = tilingViewerElement.clientWidth;\r\n\r\n      const aspectRatio = imageHeight / imageWidth;\r\n\r\n      const dynamicHeight = containerWidth * aspectRatio;\r\n      tilingViewerElement.style.width = `${containerWidth}px`;\r\n      // tilingViewerElement.style.height = `${dynamicHeight}px`;\r\n      tilingViewerElement.style.position = 'absolute';\r\n      tilingViewerElement.style.left = '50%';\r\n      tilingViewerElement.style.top = '50%';\r\n      tilingViewerElement.style.transform = 'translate(-50%, -50%)';\r\n    });\r\n\r\n    viewer.addHandler(\"zoom\", function () {\r\n      const tilingViewerElement: any = document.getElementById(\"tiling-viewer\");\r\n      if(bool){\r\n        tilingViewerElement && (tilingViewerElement.style.height = '80vh');\r\n      }\r\n    })\r\n\r\n\r\n  } catch (err) {\r\n    console.error('Error:', err);\r\n  }\r\n};\r\n\r\nconst fetchTilesInfo = async (folderPath: string) => {\r\n  const url = `${apiBaseUrl}/folders?folderPath=${folderPath}`;\r\n  const response = await fetch(url);\r\n\r\n  if (!response.ok) {\r\n    throw new Error('Network response was not ok');\r\n  }\r\n\r\n  const fileNames = await response.json();\r\n  const tilesInfo = [];\r\n  for (const fileName of fileNames) {\r\n    if (fileName.endsWith('_files')) {\r\n      tilesInfo.push({\r\n        Image: {\r\n          xmlns: \"http://schemas.microsoft.com/deepzoom/2009\",\r\n          Url: `${apiBaseUrl}/folders?folderPath=${folderPath}/${fileName}/`,\r\n          Format: \"jpg\",\r\n          Overlap: \"1\",\r\n          TileSize: \"1024\",\r\n          Size: {\r\n            Width: newImgWidth.value,\r\n            Height: newImgHeight.value\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  return tilesInfo;\r\n};\r\n\r\n</script>\r\n","import script from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./tilingViewer.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-71d7a081\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"imgContent\" }\nconst _hoisted_2 = { class: \"wrap-whole\" }\nconst _hoisted_3 = { class: \"leftWhole\" }\n\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createVNode(ClassInfoMenu, { onRefreshClass: refreshClass }),\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", {\n          ref_key: \"imageContainer\",\n          ref: imageContainer,\n          class: \"image-container\"\n        }, [\n          _createVNode(TilingViewer, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ], 512),\n        _createElementVNode(\"div\", _hoisted_3, [\n          _createVNode(LeftImgList, { selectItems: selectItems.value }, null, 8, [\"selectItems\"])\n        ])\n      ])\n    ])\n  ], 64))\n}\n}\n\n})","<template>\r\n  <ClassInfoMenu @refreshClass=\"refreshClass\"/>\r\n  <div class=\"imgContent\">\r\n    <div class=\"wrap-whole\">\r\n    <div ref=\"imageContainer\" class=\"image-container\" >\r\n      <TilingViewer :selectItems=\"selectItems\"/>\r\n    </div>\r\n    <div class=\"leftWhole\">\r\n      <LeftImgList :selectItems=\"selectItems\"/>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {computed, ref, onMounted, getCurrentInstance} from \"vue\";\r\nimport LeftImgList from \"@/views/datebase/commponent/detail/databaseWhole/leftImgList.vue\";\r\nimport TilingViewer from './tilingViewer.vue';\r\nimport ClassInfoMenu from \"@/views/datebase/commponent/detail/classInfoMenu.vue\";\r\nconst selectItemsData = sessionStorage.getItem(\"selectItems\");\r\nconst selectItems = ref(selectItemsData ? JSON.parse(selectItemsData) : null);\r\n\r\n\r\nconst imgRef = ref<HTMLElement | null>(null);\r\nconst imageContainer = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  imgRef.value = document.querySelector('.img'); // Assign imgRef ref\r\n});\r\n\r\nconst refreshClass = async (data: any) => {\r\n  selectItems.value = data;\r\n}\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.resize-overlay {\r\n  position: absolute;\r\n  border: 2px solid red;\r\n}\r\n\r\n.resize-handle {\r\n  position: absolute;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: black;\r\n}\r\n\r\n.top-left {\r\n  top: -5px;\r\n  left: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n.top-right {\r\n  top: -5px;\r\n  right: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-left {\r\n  bottom: -5px;\r\n  left: -5px;\r\n  cursor: nesw-resize;\r\n}\r\n\r\n.bottom-right {\r\n  bottom: -5px;\r\n  right: -5px;\r\n  cursor: nwse-resize;\r\n}\r\n\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=71d7a081&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-71d7a081\"]])\n\nexport default __exports__","// router/index.vue\r\nimport {createRouter, createWebHistory} from 'vue-router';\r\nimport HomeView from '@/views/HomeView.vue';\r\nimport JoinView from '@/views/join/index.vue';\r\nimport loginView from '@/views/login/index.vue';\r\nimport setting from '@/views/setting/index.vue'\r\nimport Database from '@/views/datebase/index.vue';\r\nimport DatabaseRbc from '@/views/datebase/commponent/detail/rbc/listDetailRbc.vue';\r\nimport DatabaseWbc from '@/views/datebase/commponent/detail/wbc/listDetailWbc.vue';\r\nimport Report from  '@/views/datebase/commponent/detail/report/report.vue';\r\nimport databaseDetail from '@/views/datebase/commponent/detail/classInfo/listDetail.vue';\r\nimport DatabaseWhole from '@/views/datebase/commponent/detail/databaseWhole/index.vue';\r\n\r\nimport {useStore} from \"vuex\";\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes: [\r\n        // {\r\n        //     path: '/',\r\n        //     name: 'HomeView',\r\n        //     component: HomeView,\r\n        // },\r\n        {\r\n            path: '/analysis',\r\n            name: 'AnalysisView',\r\n            component: HomeView,\r\n        },\r\n        {\r\n            path: '/user/join',\r\n            name: 'join',\r\n            component: JoinView,\r\n        },\r\n        {\r\n            path: '/user/login',\r\n            name: 'login',\r\n            component: loginView,\r\n        },\r\n        {\r\n            path: '/setting',\r\n            name: 'setting',\r\n            component: setting,\r\n        },\r\n        {\r\n            path: '/database',\r\n            name: 'database',\r\n            component: Database,\r\n        },\r\n        {\r\n            path: '/databaseDetail',\r\n            name: 'databaseDetail',\r\n            component: databaseDetail,\r\n        },\r\n        {\r\n            path: '/databaseWhole',\r\n            name: 'databaseWhole',\r\n            component: DatabaseWhole,\r\n        },\r\n        {\r\n            path: '/databaseRbc',\r\n            name: 'databaseRbc',\r\n            component: DatabaseRbc,\r\n        },\r\n        {\r\n            path: '/report',\r\n            name: 'report',\r\n            component: Report,\r\n        }\r\n    ],\r\n});\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    // 페이지 이동 전에 setInterval 정리\r\n    // clearIntervalIfExists();\r\n    // 세션 스토리지에서 사용자 정보 확인\r\n    const storedUser = sessionStorage.getItem('user');\r\n    const getStoredUser = JSON.parse(storedUser || '{}');\r\n// 스토어\r\n    const store = useStore();\r\n    // 스토어에서 사용자 정보 확인\r\n    const currentUser = store.state.userModule;\r\n\r\n    if ((to.name !== 'login' && to.name !== 'join') && (!getStoredUser.userId && !currentUser.userId)) {\r\n        // 로그인이 필요한 페이지에 접근하려고 할 때 로그인 페이지로 리다이렉트\r\n        next('/user/login');\r\n    } else {\r\n        // 그 외의 경우에는 계속 진행\r\n        next();\r\n    }\r\n});\r\n\r\nexport default router;\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, withCtx as _withCtx, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\"\nimport _imports_0 from '@/assets/celli.png'\n\n\nconst _hoisted_1 = { class: \"header\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"borderLine\" }, [\n  /*#__PURE__*/_createElementVNode(\"img\", {\n    src: _imports_0,\n    class: \"headerLogo\"\n  })\n], -1)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Setting\", -1)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Analysis\", -1)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"icoText\" }, \"Database\", -1)\nconst _hoisted_6 = { class: \"small-icon-menu\" }\nconst _hoisted_7 = { class: \"lastMenu\" }\nconst _hoisted_8 = { class: \"lastLiM\" }\nconst _hoisted_9 = { class: \"iconHeaderMenu\" }\nconst _hoisted_10 = { class: \"alarm\" }\nconst _hoisted_11 = [\"title\"]\nconst _hoisted_12 = [\"title\"]\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Immersion Oil\", -1)\nconst _hoisted_14 = { class: \"immersionOilContainer\" }\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Immersion Oil count Reset\", -1)\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Reset Immersion Oil count after changing Oil pack\", -1)\nconst _hoisted_17 = { class: \"smallTitle\" }\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"span\", null, \"Estimated number of slides left\", -1)\nconst _hoisted_19 = {\n  class: \"border ml-5\",\n  style: {\"width\":\"80px\"}\n}\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"h5\", { class: \"modalTitle\" }, \"Prime Immersion Oil\", -1)\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"span\", { class: \"colorGray\" }, \"Prime oil to remove air from the oil hose\", -1)\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"statusBarWrapper\" }, null, -1)\n\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'AppHeader',\n  setup(__props) {\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\")!\n  const _component_router_link = _resolveComponent(\"router-link\")!\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createElementVNode(\"nav\", null, [\n        (!appHeaderLeftHidden.value)\n          ? (_openBlock(), _createElementBlock(\"div\", {\n              key: 0,\n              class: _normalizeClass([\"appHeaderLeft\", { 'bmComponent': projectBm.value }])\n            }, [\n              _hoisted_2,\n              _createVNode(_component_router_link, {\n                to: noRouterPush.value ? '#' : '/setting',\n                class: _normalizeClass({ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush.value })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'gear'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_3\n                ]),\n                _: 1\n              }, 8, [\"to\", \"class\"]),\n              (viewerCheckData.value === 'main')\n                ? (_openBlock(), _createBlock(_component_router_link, {\n                    key: 0,\n                    to: \"/\",\n                    class: _normalizeClass({ \"leftActive\": isActive(\"/analysis\") || _unref(route).path === \"/\" })\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'chart-pie'],\n                        style: {\"font-size\":\"1rem\"}\n                      }),\n                      _hoisted_4\n                    ]),\n                    _: 1\n                  }, 8, [\"class\"]))\n                : _createCommentVNode(\"\", true),\n              _createVNode(_component_router_link, {\n                to: \"/dataBase\",\n                class: _normalizeClass({ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") })\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_font_awesome_icon, {\n                    icon: ['fas', 'server'],\n                    style: {\"font-size\":\"1rem\"}\n                  }),\n                  _hoisted_5\n                ]),\n                _: 1\n              }, 8, [\"class\"]),\n              _createElementVNode(\"div\", _hoisted_6, [\n                _createElementVNode(\"div\", _hoisted_7, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", null, _toDisplayString(formattedDate.value) + \" \" + _toDisplayString(formattedTime.value), 1),\n                    _createElementVNode(\"li\", _hoisted_8, [\n                      _createElementVNode(\"div\", {\n                        class: \"userBox\",\n                        onClick: logOutBoxOn\n                      }, [\n                        _createVNode(_component_font_awesome_icon, { icon: ['fas', 'circle-user'] }),\n                        _createTextVNode(\" \" + _toDisplayString(userModuleDataGet.value.userId), 1)\n                      ]),\n                      _createElementVNode(\"div\", {\n                        class: \"logOutBox\",\n                        onClick: logout\n                      }, \" LOG OUT \")\n                    ])\n                  ])\n                ]),\n                _createElementVNode(\"div\", _hoisted_9, [\n                  _createElementVNode(\"ul\", null, [\n                    _createElementVNode(\"li\", _hoisted_10, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: ['fas', 'bell'],\n                        class: _normalizeClass({ 'blinking': isAlarm.value })\n                      }, null, 8, [\"class\"])\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      (isDoorOpen.value !== 'Y')\n                        ? (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 0,\n                            icon: ['fas', 'door-closed']\n                          }))\n                        : (_openBlock(), _createBlock(_component_font_awesome_icon, {\n                            key: 1,\n                            icon: ['fas', 'door-open']\n                          }))\n                    ]),\n                    _createElementVNode(\"li\", null, [\n                      _createVNode(_component_font_awesome_icon, {\n                        icon: eqStatCdData.value.icon,\n                        class: _normalizeClass(eqStatCdData.value.class)\n                      }, null, 8, [\"icon\", \"class\"])\n                    ]),\n                    _createElementVNode(\"li\", {\n                      class: \"oliCount\",\n                      onClick: openLayer,\n                      title: 'oilCount: ' + (oilCountData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'droplet'] })\n                    ], 8, _hoisted_11),\n                    _createElementVNode(\"li\", {\n                      class: \"storage\",\n                      title: 'storage: ' + (storagePercentData.value || 0)\n                    }, [\n                      _createVNode(_component_font_awesome_icon, { icon: ['fas', 'database'] })\n                    ], 8, _hoisted_12)\n                  ])\n                ])\n              ])\n            ], 2))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    (visible.value)\n      ? (_openBlock(), _createBlock(Modal, {\n          key: 0,\n          \"onUpdate:closeLayer\": closeLayer,\n          onAfterOpen: onModalOpen\n        }, {\n          header: _withCtx(() => [\n            _hoisted_13\n          ]),\n          content: _withCtx(() => [\n            _createElementVNode(\"div\", _hoisted_14, [\n              _hoisted_15,\n              _hoisted_16,\n              _createElementVNode(\"div\", _hoisted_17, [\n                _hoisted_18,\n                _createElementVNode(\"div\", _hoisted_19, _toDisplayString(oilCount.value), 1)\n              ]),\n              _createElementVNode(\"div\", null, [\n                _createElementVNode(\"div\", {\n                  ref_key: \"statusBarWrapper\",\n                  ref: statusBarWrapper,\n                  class: \"statusBarWrapper\"\n                }, [\n                  _createElementVNode(\"div\", {\n                    ref_key: \"statusBar\",\n                    ref: statusBar,\n                    class: \"statusBar\"\n                  }, null, 512)\n                ], 512),\n                _createElementVNode(\"div\", null, [\n                  _createElementVNode(\"button\", {\n                    onClick: onReset,\n                    class: \"alertButton\"\n                  }, \"RESET\")\n                ])\n              ])\n            ]),\n            _createElementVNode(\"div\", { class: \"mt2\" }, [\n              _hoisted_20,\n              _hoisted_21,\n              _createElementVNode(\"div\", null, [\n                _hoisted_22,\n                _createElementVNode(\"button\", {\n                  onClick: onPrime,\n                  class: \"alertButton\"\n                }, \"PRIME\")\n              ])\n            ])\n          ]),\n          _: 1\n        }))\n      : _createCommentVNode(\"\", true),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true),\n    (showConfirm.value)\n      ? (_openBlock(), _createBlock(Confirm, {\n          key: 2,\n          \"is-visible\": showConfirm.value,\n          type: confirmType.value,\n          message: confirmMessage.value,\n          onHide: hideConfirm,\n          onOkConfirm: handleOkConfirm\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ], 64))\n}\n}\n\n})","<template>\r\n  <header class='header'>\r\n    <nav> \r\n      <div class='appHeaderLeft' :class=\"{ 'bmComponent': projectBm }\" v-if=\"!appHeaderLeftHidden\">\r\n        <div class=\"borderLine\">\r\n          <img src=\"@/assets/celli.png\" class=\"headerLogo\"/>\r\n        </div>\r\n        <router-link :to=\"noRouterPush ? '#' : '/setting'\"\r\n                     :class='{ \"leftActive\": isActive(\"/setting\"), \"disabledLink\": noRouterPush }'>\r\n          <font-awesome-icon :icon=\"['fas', 'gear']\" style=\"font-size: 1rem;\"/>\r\n          <span class='icoText'>Setting</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/\" v-if=\"viewerCheckData === 'main'\"\r\n                     :class='{ \"leftActive\": isActive(\"/analysis\") || route.path === \"/\" }'>\r\n          <font-awesome-icon :icon=\"['fas', 'chart-pie']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Analysis</span>\r\n        </router-link>\r\n\r\n        <router-link to=\"/dataBase\" :class='{ \"leftActive\": isActive(\"/dataBase\") || isActive(\"/databaseDetail\") || isActive(\"/databaseRbc\") || isActive(\"/report\") }'>\r\n          <font-awesome-icon :icon=\"['fas', 'server']\"\r\n                             style=\"font-size: 1rem;\"\r\n          />\r\n          <span class='icoText'>Database</span>\r\n        </router-link>\r\n\r\n        <!--  좌측메뉴  -->\r\n        <div class=\"small-icon-menu\">\r\n          <div class=\"lastMenu\">\r\n            <ul>\r\n              <li>{{ formattedDate }} {{ formattedTime }}</li>\r\n              <li class=\"lastLiM\">\r\n                <div class=\"userBox\" @click='logOutBoxOn'>\r\n                  <font-awesome-icon :icon=\"['fas', 'circle-user']\"/> {{ userModuleDataGet.userId }}\r\n                </div>\r\n                <div class='logOutBox' @click='logout'>\r\n                  LOG OUT\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"iconHeaderMenu\">\r\n          <ul>\r\n            <li class=\"alarm\">\r\n              <font-awesome-icon :icon=\"['fas', 'bell']\" :class=\"{ 'blinking': isAlarm }\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon v-if=\"isDoorOpen !== 'Y'\" :icon=\"['fas', 'door-closed']\"></font-awesome-icon>\r\n              <font-awesome-icon v-else :icon=\"['fas', 'door-open']\"/>\r\n            </li>\r\n            <li>\r\n              <font-awesome-icon :icon=\"eqStatCdData.icon\" :class=\"eqStatCdData.class\"/>\r\n            </li>\r\n            <li class=\"oliCount\" @click=\"openLayer\" :title=\"'oilCount: ' + (oilCountData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'droplet']\"/>\r\n            </li>\r\n            <li class=\"storage\" :title=\"'storage: ' + (storagePercentData || 0)\">\r\n              <font-awesome-icon :icon=\"['fas', 'database']\" />  \r\n            </li>\r\n          </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </header>\r\n  <Modal v-if=\"visible\" @update:closeLayer=\"closeLayer\" @afterOpen=\"onModalOpen\">\r\n    <!-- 헤더 슬롯에 들어갈 내용 -->\r\n    <template #header>\r\n      <h2>Immersion Oil</h2>\r\n    </template>\r\n\r\n    <!-- 컨텐츠 슬롯에 들어갈 내용 -->\r\n    <template #content>\r\n      <div class=\"immersionOilContainer\">\r\n        <h5 class=\"modalTitle\">Immersion Oil count Reset</h5>\r\n        <span class=\"colorGray\">Reset Immersion Oil count after changing Oil pack</span>\r\n        <div class=\"smallTitle\">\r\n          <span>Estimated number of slides left</span>\r\n          <div class=\"border ml-5\" style=\"width: 80px;\">{{ oilCount }}</div>\r\n        </div>\r\n\r\n        <div>\r\n          <div ref=\"statusBarWrapper\" class=\"statusBarWrapper\">\r\n            <div ref=\"statusBar\" class=\"statusBar\"></div>\r\n          </div>\r\n          <div>\r\n            <button @click='onReset' class=\"alertButton\">RESET</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class='mt2'>\r\n        <h5 class=\"modalTitle\">Prime Immersion Oil</h5>\r\n        <span class=\"colorGray\">Prime oil to remove air from the oil hose</span>\r\n        <div>\r\n          <div class=\"statusBarWrapper\">\r\n          </div>\r\n          <button @click='onPrime' class=\"alertButton\">PRIME</button>\r\n        </div>\r\n      </div>\r\n\r\n    </template>\r\n  </Modal>\r\n  <Alert\r\n      v-if=\"showAlert\"\r\n      :is-visible=\"showAlert\"\r\n      :type=\"alertType\"\r\n      :message=\"alertMessage\"\r\n      @hide=\"hideAlert\"\r\n      @update:hideAlert=\"hideAlert\"\r\n  />\r\n\r\n  <Confirm\r\n      v-if=\"showConfirm\"\r\n      :is-visible=\"showConfirm\"\r\n      :type=\"confirmType\"\r\n      :message=\"confirmMessage\"\r\n      @hide=\"hideConfirm\"\r\n      @okConfirm=\"handleOkConfirm\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {useRoute} from 'vue-router';\r\nimport {computed, getCurrentInstance, nextTick, onBeforeUnmount, onMounted, ref, watch} from \"vue\";\r\nimport {useStore} from \"vuex\";\r\nimport router from \"@/router\";\r\nimport Modal from '@/components/commonUi/modal.vue';\r\nimport {messages} from \"@/common/defines/constFile/constantMessageText\";\r\nimport {sendOilPrimeWebSocket, sendSettingInfoWebSocket} from \"@/common/lib/sendWebSocket/common\";\r\nimport {getCellImgApi} from \"@/common/api/service/setting/settingApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport * as process from \"process\";\r\nimport {tcpReq} from \"@/common/tcpRequest/tcpReq\";\r\nimport Confirm from \"@/components/commonUi/Confirm.vue\";\r\nimport {barcodeImgDir} from \"@/common/defines/constFile/settings\";\r\n\r\nconst route = useRoute();\r\nconst appHeaderLeftHidden = ref(false);\r\nconst store = useStore();\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst logOutBox = ref(false);\r\nconst viewerCheckData = computed(() => store.state.commonModule.viewerCheck);\r\n\r\nconst instance = getCurrentInstance();\r\nconst showConfirm = ref(false);\r\nconst confirmType = ref('');\r\nconst confirmMessage = ref('');\r\nconst embeddedStatusJobCmd = computed(() => store.state.embeddedStatusModule);\r\nconst oilCount = ref(0);\r\nconst isDoorOpen = ref('');\r\nconst storagePercent = ref(0);\r\nconst eqStatCd = ref('');\r\nconst runInfo = computed(() => store.state.commonModule);\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\n\r\nconst eqStatCdData = ref({\r\n  icon: ['fas', 'person'],\r\n  class: ''\r\n});\r\nconst oilCountData = ref('');\r\nconst storagePercentData = ref('');\r\nconst isAlarm = ref(false);\r\nconst visible = ref(false);\r\nconst maxOilCount = ref(1000);\r\nconst statusBarWrapper = ref<HTMLDivElement | null>(null);\r\nconst statusBar = ref<HTMLDivElement | null>(null);\r\nconst userId = ref('');\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst isNsNbIntegration = ref('');\r\nconst alarmCount = ref(0);\r\nconst noRouterPush = ref(false);\r\nconst currentDate = ref<string>(\"\");\r\nconst currentTime = ref<string>(\"\");\r\nlet isAralrmInterver = null;\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst projectBm = ref(false);\r\n\r\nconst formattedDate = computed(() => {\r\n  return currentDate.value;\r\n});\r\n\r\nconst formattedTime = computed(() => {\r\n  return currentTime.value;\r\n});\r\n\r\nconst updateDateTime = () => {\r\n  const now = new Date();\r\n  currentDate.value = now.toLocaleDateString(undefined, {year: 'numeric', month: '2-digit', day: '2-digit'});\r\n  currentTime.value = now.toLocaleTimeString('en-US');\r\n};\r\nconst handleOkConfirm = () => {\r\n  showConfirm.value = false;\r\n  sessionStorage.clear();\r\n  router.push('user/login');\r\n  // store.commit('resetStore');\r\n  if (document.fullscreenElement) {\r\n    document.exitFullscreen();\r\n  }\r\n}\r\n\r\nconst hideConfirm = () => {\r\n  showConfirm.value = false;\r\n}\r\n\r\nonMounted(async () => {\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm' ? true : false;\r\n\r\n  updateDateTime(); // 초기 시간 설정\r\n  const timerId = setInterval(updateDateTime, 1000); // 1초마다 현재 시간을 갱신\r\n  // 컴포넌트가 해제되기 전에 타이머를 정리하여 메모리 누수를 방지\r\n  onBeforeUnmount(() => {\r\n    clearInterval(timerId);\r\n  });\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n  }\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  cellImgGet();\r\n  userId.value = newUserId.id;\r\n});\r\n\r\nwatch([embeddedStatusJobCmd.value], async (newVals: any) => {\r\n  await nextTick();\r\n  oilCount.value = Number(newVals[0].sysInfo.oilCount);\r\n  isDoorOpen.value = newVals[0].sysInfo.isDoorOpen;\r\n  storagePercent.value = Number(newVals[0].sysInfo.storagePercent);\r\n  eqStatCd.value = newVals[0].sysInfo.eqStatCd;\r\n\r\n  eqStatCdData.value = eqStatCdChangeVal(newVals[0].sysInfo.eqStatCd);\r\n  oilCountData.value = oilCountChangeVal();\r\n  storagePercentData.value = storagePercentChangeVal();\r\n});\r\n\r\n\r\nwatch([commonDataGet.value], async (newVals: any) => {\r\n  const newValsObj = JSON.parse(JSON.stringify(newVals));\r\n  if (newValsObj[0].isRunningState) {\r\n    noRouterPush.value = true;\r\n  } else {\r\n    noRouterPush.value = false;\r\n  }\r\n});\r\n\r\nwatch([runInfo.value], async (newVals: any) => {\r\n\r\n  isAlarm.value = newVals[0].isAlarm;\r\n  if (newVals[0].isAlarm) {\r\n    isAralrmInterver = setTimeout(() => {\r\n      store.dispatch('commonModule/setCommonInfo', {isAlarm: false});\r\n    }, alarmCount.value);\r\n  }\r\n\r\n});\r\n\r\n\r\nconst showSuccessAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\nconst isActive = (path: string) => {\r\n  return route.path === path;\r\n};\r\n\r\nconst logOutBoxOn = () => {\r\n  logOutBox.value = !logOutBox.value;\r\n}\r\nconst logout = () => {\r\n  confirmMessage.value = messages.Logout;\r\n  showConfirm.value = true;\r\n  localStorage.removeItem('user')\r\n}\r\n\r\nconst oilCountChangeVal = (): string => {\r\n  if (oilCount.value >= 0 && oilCount.value <= 100) {\r\n    return '10%';\r\n  } else if (oilCount.value > 100 && oilCount.value <= 250) {\r\n    return '25%';\r\n  } else if (oilCount.value > 250 && oilCount.value <= 500) {\r\n    return '50%';\r\n  } else if (oilCount.value > 500 && oilCount.value <= 750) {\r\n    return '75%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\n\r\nconst storagePercentChangeVal = () => {\r\n  if (storagePercent.value >= 0 && storagePercent.value <= 30) {\r\n    return '30%';\r\n  } else if (storagePercent.value > 30 && storagePercent.value <= 60) {\r\n    return '60%';\r\n  } else if (storagePercent.value > 60 && storagePercent.value <= 90) {\r\n    return '90%';\r\n  } else {\r\n    return '100%';\r\n  }\r\n}\r\nconst eqStatCdChangeVal = (eqStatCdVal: string) => {\r\n  if (eqStatCdVal === '01') {\r\n    return {\r\n      icon: ['fas', 'person'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '02') {\r\n    return {\r\n      icon: ['fas', 'person-walking'],\r\n      class: ''\r\n    };\r\n  } else if (eqStatCdVal === '03') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runRed'\r\n    };\r\n  } else if (eqStatCdVal === '04' || eqStatCdVal === '05') {\r\n    return {\r\n      icon: ['fas', 'person-running'],\r\n      class: 'runBlue'\r\n    };\r\n  }\r\n\r\n  return {\r\n    icon: ['fas', 'person'],\r\n    class: ''\r\n  };\r\n}\r\n\r\nconst openLayer = () => {\r\n  visible.value = true;\r\n};\r\n\r\nconst closeLayer = (val: boolean) => {\r\n  visible.value = val;\r\n};\r\n\r\nconst onReset = () => {\r\n\r\n  getPercent();\r\n  const settings = tcpReq().embedStatus.settings;\r\n  settings.reqUserId = userId;\r\n\r\n  Object.assign(settings, {\r\n    oilCount,\r\n    isOilReset: 'Y',\r\n    // uiVersion: 'uimd-pb-comm_v3',\r\n    userId: '',\r\n    isNsNbIntegration: isNsNbIntegration.value,\r\n  });\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: settings\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst getPercent = () => {\r\n  if (!statusBarWrapper.value || !statusBar.value) {\r\n    return;\r\n  }\r\n  const percent = Math.round((oilCount.value / maxOilCount.value) * 100);\r\n  const progressBarWidth = `${(percent / 100) * statusBarWrapper.value.offsetWidth}px`;\r\n\r\n  statusBar.value.style.width = progressBarWidth;\r\n}\r\n\r\nconst onPrime = () => {\r\n  tcpReq().embedStatus.oilPrime.reqUserId = userId;\r\n  instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n    type: 'SEND_DATA',\r\n    payload: tcpReq().embedStatus.oilPrime\r\n  });\r\n\r\n  showSuccessAlert(messages.IDS_MSG_SUCCESS);\r\n}\r\n\r\nconst onModalOpen = () => {\r\n  // 모달이 열린 후에 실행되는 콜백 함수\r\n  getPercent();\r\n};\r\n\r\nconst cellImgGet = async () => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        isNsNbIntegration.value = data.isNsNbIntegration ? 'Y' : 'N';\r\n        alarmCount.value = data?.isAlarm ? Number(data.alarmCount) * 1000 : 5000;\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n</script>\r\n","import script from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./AppHeader.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","// userModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface UserState {\r\n    id: number;\r\n    userId: string;\r\n    password: string;\r\n    name: string;\r\n    employeeNo: string;\r\n    userType: string;\r\n    subscriptionDate: string;\r\n    latestDate: string;\r\n}\r\n\r\ninterface UserModule {\r\n    namespaced: true;\r\n    state: () => UserState;\r\n    mutations: {\r\n        setUserMutation: (state: UserState, user: UserState) => void;\r\n    };\r\n    actions: {\r\n        setUserAction: (context: { commit: Commit }, user: UserState) => void;\r\n    };\r\n}\r\n\r\nexport const userModule: UserModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        id: 0,\r\n        userId: '',\r\n        password: '',\r\n        name: '',\r\n        employeeNo: '',\r\n        userType: '',\r\n        subscriptionDate: '',\r\n        latestDate: '',\r\n    }),\r\n    mutations: {\r\n        setUserMutation(state: UserState, user: UserState): void {\r\n            Object.assign(state, user);\r\n        },\r\n    },\r\n    actions: {\r\n        setUserAction({ commit }: { commit: Commit }, user: UserState): void {\r\n            commit('setUserMutation', user);\r\n        },\r\n    },\r\n};\r\n","// executeModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ExecuteState {\r\n    analysisType: string;\r\n    wbcDiffVal: string;\r\n    stitchCount: string;\r\n}\r\n\r\ninterface ExecuteModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => ExecuteState;\r\n    mutations: {\r\n        analysisTypeSet: (state: ExecuteState, value: string) => void;\r\n        wbcDiffValSet: (state: ExecuteState, value: string) => void;\r\n        stitchCountSet: (state: ExecuteState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setAnalysisType: (context: { commit: Commit }, value: string) => void;\r\n        setWbcDiffValSet: (context: { commit: Commit }, value: string) => void;\r\n        setStitchCountSet: (context: { commit: Commit }, value: string) => void;\r\n    };\r\n}\r\n\r\nexport const executeModule: ExecuteModule = {\r\n    namespaced: true, // 네임스페이스 추가\r\n    state: () => ({\r\n        analysisType: '',\r\n        wbcDiffVal: '100',\r\n        stitchCount: '',\r\n    }),\r\n    mutations: {\r\n        analysisTypeSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        wbcDiffValSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n        stitchCountSet(state: ExecuteState, value: string): void {\r\n            state.analysisType = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setAnalysisType({ commit }: { commit: Commit }, value: string): void {\r\n            commit('analysisTypeSet', value);\r\n        },\r\n        setWbcDiffValSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('wbcDiffValSet', value);\r\n        },\r\n        setStitchCountSet({ commit }: { commit: Commit }, value: string): void {\r\n            commit('stitchCountSet', value);\r\n        },\r\n    },\r\n};\r\n","// workingViewModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotItem {\r\n    slotNo: number;\r\n    slotState: string;\r\n}\r\n\r\ninterface SlotInfoArr {\r\n    input: SlotItem[];\r\n    output: SlotItem[];\r\n}\r\n\r\ninterface WorkingViewState {\r\n    equipmentStatusCode: string;\r\n    wbcCount: string;\r\n    slideTime: string;\r\n    time: string;\r\n    slotInfo: SlotInfoArr;\r\n}\r\n\r\ninterface WorkingViewModule {\r\n    namespaced: true;\r\n    state: () => WorkingViewState;\r\n    mutations: {\r\n        setEquipmentStatusCode: (state: WorkingViewState, value: string) => void;\r\n        setWbcCount: (state: WorkingViewState, value: string) => void;\r\n        setSlideTime: (state: WorkingViewState, value: string) => void;\r\n        setTime: (state: WorkingViewState, value: string) => void;\r\n        setSlotInfo: (state: WorkingViewState, value: SlotInfoArr) => void;\r\n    };\r\n    actions: {\r\n        setWorkingViewInfo: (context: { commit: Commit }, payload: WorkingViewState) => void;\r\n    };\r\n}\r\n\r\nexport const workingViewModule: WorkingViewModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        equipmentStatusCode: '',\r\n        wbcCount: '',\r\n        slideTime: '',\r\n        time: '',\r\n        slotInfo: {\r\n            input: [],\r\n            output: [],\r\n        },\r\n    }),\r\n    mutations: {\r\n        setEquipmentStatusCode(state: WorkingViewState, value: string): void {\r\n            state.equipmentStatusCode = value;\r\n        },\r\n        setWbcCount(state: WorkingViewState, value: string): void {\r\n            state.wbcCount = value;\r\n        },\r\n        setSlideTime(state: WorkingViewState, value: string): void {\r\n            state.slideTime = value;\r\n        },\r\n        setTime(state: WorkingViewState, value: string): void {\r\n            state.time = value;\r\n        },\r\n        setSlotInfo(state: WorkingViewState, value: SlotInfoArr): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setWorkingViewInfo({ commit }: { commit: Commit }, payload: WorkingViewState): void {\r\n            commit('setEquipmentStatusCode', payload.equipmentStatusCode);\r\n            commit('setWbcCount', payload.wbcCount);\r\n            commit('setSlideTime', payload.slideTime);\r\n            commit('setTime', payload.time);\r\n            commit('setSlotInfo', payload.slotInfo);\r\n        },\r\n    },\r\n};\r\n","// embeddedStatusModule.ts\r\n// sysInfo - 시스템 정보 확인\r\nimport {Commit} from 'vuex';\r\n\r\n// 시스템 정보 타입\r\nexport interface SystemInfo {\r\n    eqStatCd: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    jobCmd: string;\r\n    isDoorOpen: string;\r\n    oilCount: string;\r\n    storageSize: string;\r\n}\r\n\r\nexport interface EmbeddedStatusState {\r\n    embeddedStatusJobCmd: string;\r\n    userStop: boolean;\r\n    isRecoveryRun: boolean;\r\n    isPause: boolean,\r\n    sysInfo: SystemInfo,\r\n    isInit: string;\r\n}\r\n\r\ninterface EmbeddedStatusModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => EmbeddedStatusState;\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd: (state: EmbeddedStatusState, value: string) => void;\r\n        setUserStop: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsRecoveryRun: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setIsPause: (state: EmbeddedStatusState, value: boolean) => void;\r\n        setSysInfo: (state: EmbeddedStatusState, value: SystemInfo) => void;\r\n        setIsInit: (state: EmbeddedStatusState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setEmbeddedStatusInfo: (context: { commit: Commit }, payload: EmbeddedStatusState) => void;\r\n    };\r\n}\r\n\r\nexport const embeddedStatusModule: EmbeddedStatusModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        embeddedStatusJobCmd: '',\r\n        userStop: false,\r\n        isRecoveryRun: false,\r\n        isPause: false,\r\n        sysInfo: {\r\n            eqStatCd: '',\r\n            iCasStat: '',\r\n            oCasStat: '',\r\n            jobCmd: '',\r\n            isDoorOpen: '',\r\n            oilCount: '',\r\n            storageSize: '',\r\n        },\r\n        isInit: '',\r\n    }),\r\n    mutations: {\r\n        setEmbeddedStatusJobCmd(state: EmbeddedStatusState, value: string): void {\r\n            state.embeddedStatusJobCmd = value;\r\n        },\r\n        setUserStop(state: EmbeddedStatusState, value: boolean): void {\r\n            state.userStop = value;\r\n        },\r\n        setIsRecoveryRun(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isRecoveryRun = value;\r\n        },\r\n        setIsPause(state: EmbeddedStatusState, value: boolean): void {\r\n            state.isPause = value;\r\n        },\r\n        setSysInfo(state: EmbeddedStatusState, value: SystemInfo): void {\r\n            state.sysInfo = value;\r\n        },\r\n        setIsInit(state: EmbeddedStatusState, value: string): void {\r\n            state.isInit = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setEmbeddedStatusInfo({commit}: { commit: Commit }, payload: EmbeddedStatusState): void {\r\n            Object.keys(payload).forEach(key => {\r\n                if (key === 'embeddedStatusJobCmd') {\r\n                    commit('setEmbeddedStatusJobCmd', payload[key]);\r\n                } else if (key === 'userStop') {\r\n                    commit('setUserStop', payload[key]);\r\n                } else if (key === 'isRecoveryRun') {\r\n                    commit('setIsRecoveryRun', payload[key]);\r\n                } else if (key === 'isPause') {\r\n                    commit('setIsPause', payload[key]);\r\n                } else if (key === 'sysInfo') {\r\n                    commit('setSysInfo', payload[key]);\r\n                } else if (key === 'isInit') {\r\n                    commit('setIsInit', payload[key]);\r\n                }\r\n            });\r\n        },\r\n    },\r\n};\r\n","// slotInfoModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface SlotInfo {\r\n    barcodeNo: string;\r\n    patientNm: string;\r\n    orderDttm: string;\r\n    stateCd: string;\r\n}\r\n\r\ninterface OrderListState {\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface SlotInfoModule {\r\n    namespaced: true; // 네임스페이스 추가\r\n    state: () => OrderListState;\r\n    mutations: {\r\n        setSlotInfo: (state: OrderListState, value: SlotInfo[]) => void;\r\n    };\r\n    actions: {\r\n        setSlotInfo: (context: { commit: Commit }, value: SlotInfo[]) => void;\r\n    };\r\n}\r\n\r\nexport const orderListModule: SlotInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        slotInfo: [],\r\n    }),\r\n    mutations: {\r\n        setSlotInfo(state: OrderListState, value: SlotInfo[]): void {\r\n            state.slotInfo = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setSlotInfo({ commit }: { commit: Commit }, value: SlotInfo[]): void {\r\n            commit('setSlotInfo', value);\r\n        },\r\n    },\r\n};\r\n","// runningInfoModule.ts\r\nimport {Commit, Dispatch} from 'vuex';\r\nexport interface ChangeSlideState {\r\n    changeSlide: string;\r\n}\r\n\r\nexport interface SlideBoolean {\r\n    slideIs: boolean;\r\n}\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    // maxWbcCount: string;\r\n    // maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface RunningInfo {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo;\r\n}\r\n\r\ninterface RunningInfoState {\r\n    runningInfo: RunningInfo | null;\r\n    changeSlideState: ChangeSlideState | null;\r\n    slideBooleanState: SlideBoolean | null;\r\n}\r\n\r\ninterface RunningInfoModule {\r\n    namespaced: true;\r\n    state: () => RunningInfoState;\r\n    mutations: {\r\n        setRunningInfo: (state: RunningInfoState, value: RunningInfo) => void;\r\n        setChangeSlide: (state: RunningInfoState, value: string) => void;\r\n        setSlideBoolean: (state: RunningInfoState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setRunningInfo: (context: { commit: Commit }, payload: RunningInfo) => void;\r\n        updateRunningInfo: (context: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }) => void;\r\n        setChangeSlide: (context: { commit: Commit }, value: string) => void;\r\n        setSlideBoolean: (context: { commit: Commit }, value: boolean) => void;\r\n    };\r\n}\r\n\r\nexport const runningInfoModule: RunningInfoModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        runningInfo: null,\r\n        changeSlideState: null,\r\n        slideBooleanState: null,\r\n    }),\r\n    mutations: {\r\n        setRunningInfo(state: RunningInfoState, value: RunningInfo): void {\r\n            // setRunningInfo에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.runningInfo = value;\r\n            }\r\n        },\r\n        setChangeSlide(state: RunningInfoState, value: string): void {\r\n            if (state.changeSlideState) {\r\n                state.changeSlideState.changeSlide = value;\r\n            } else {\r\n                state.changeSlideState = { changeSlide: value };\r\n            }\r\n        },\r\n        setSlideBoolean(state: RunningInfoState, value: boolean): void {\r\n            if (state.slideBooleanState) {\r\n                state.slideBooleanState.slideIs = value;\r\n            } else {\r\n                state.slideBooleanState = { slideIs: value };\r\n            }\r\n        }\r\n\r\n    },\r\n    actions: {\r\n        setRunningInfo({ commit }: { commit: Commit }, payload: RunningInfo): void {\r\n            commit('setRunningInfo', payload);\r\n        },\r\n        updateRunningInfo({ commit }: { commit: Commit }, payload: { key: keyof RunningInfo; value: string | number }): void {\r\n            if (payload && payload.key && payload.value !== undefined) {\r\n                commit(`set${payload.key.charAt(0).toUpperCase() + payload.key.slice(1)}`, payload.value);\r\n            }\r\n        },\r\n        setChangeSlide({ commit }: { commit: Commit }, value: string): void {\r\n            commit('setChangeSlide', value);\r\n        },\r\n        setSlideBoolean({ commit }: { commit: Commit }, value: boolean): void {\r\n            commit('setSlideBoolean', value);\r\n        },\r\n    },\r\n};\r\n","// commonModule.ts\r\nimport {Commit} from 'vuex';\r\n\r\nexport interface CommonState {\r\n    startEmbedded: boolean;\r\n    eqStatCd: number;\r\n    isRunningState: boolean;\r\n    totalCount: string;\r\n    embeddedNumber: string;\r\n    isAlarm: boolean;\r\n    bfSelectFiles: any[];\r\n    slideProceeding: string;\r\n    totalSlideTime: string;\r\n    iaRootPath: string;\r\n    runningSlotId: string;\r\n    isRequestInProgress: boolean;\r\n    startInfoBoolen: boolean;\r\n    runningInfoBoolen: boolean;\r\n    runningInfoStop: boolean;\r\n    reqArr: any[];\r\n    resFlag: boolean;\r\n    firstLoading: boolean;\r\n    slotIndex: number;\r\n    viewerCheck: string;\r\n    runningArr: any;\r\n    classArr: any[];\r\n    rbcArr: any[];\r\n    processInfo: any[];\r\n    orderList: any[];\r\n    loginSetData: string;\r\n    siteCd: string;\r\n    deviceSerialNm: string;\r\n    clonedWbcInfo: any[];\r\n    clonedRbcInfo: any[];\r\n    moveImgIsBool: boolean;\r\n    classInfoSort: any[];\r\n    chatRunningData: any[];\r\n    cbcLayer: boolean;\r\n    inhaTestCode: string;\r\n    rbcReData: boolean;\r\n}\r\n\r\ninterface CommonModule {\r\n    namespaced: true;\r\n    state: () => CommonState;\r\n    mutations: {\r\n        setStartEmbedded: (state: CommonState, value: boolean) => void;\r\n        setEqStatCd: (state: CommonState, value: number) => void;\r\n        setIsRunningState: (state: CommonState, value: boolean) => void;\r\n        setTotalCount: (state: CommonState, value: string) => void;\r\n        setEmbeddedNumber: (state: CommonState, value: string) => void;\r\n        setIsAlarm: (state: CommonState, value: boolean) => void;\r\n        setBfSelectFiles: (state: CommonState, value: []) => void;\r\n        setSlideProceeding: (state: CommonState, value: string) => void;\r\n        setTotalSlideTime: (state: CommonState, value: string) => void;\r\n        setIaRootPath: (state: CommonState, value: string) => void;\r\n        setRunningSlotId: (state: CommonState, value: string) => void;\r\n        setIsRequestInProgress: (state: CommonState, value: boolean) => void;\r\n        setStartInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoBoolen: (state: CommonState, value: boolean) => void;\r\n        setRunningInfoStop: (state: CommonState, value: boolean) => void;\r\n        setReqArr: (state: CommonState, value: string[]) => void;\r\n        shiftReqArr: (state: CommonState) => void;\r\n        setReqArrPaste: (state: CommonState, value: any[]) => void;\r\n        setResFlag: (state: CommonState, value: boolean) => void;\r\n        setFirstLoading: (state: CommonState, value: boolean) => void;\r\n        setSlotIndex: (state: CommonState, value: number) => void;\r\n        setViewerCheck: (state: CommonState, value: string) => void;\r\n        setRunningArr: (state: CommonState, value: any) => void;\r\n        setClassArr: (state: CommonState, value: any[]) => void;\r\n        setRbcArr: (state: CommonState, value: any[]) => void;\r\n        setProcessInfo: (state: CommonState, value: any[]) => void;\r\n        setOrderList: (state: CommonState, value: any[]) => void;\r\n        setLoginSetData: (state: CommonState, value: string) => void;\r\n        setSiteCd: (state: CommonState, value: string) => void;\r\n        setDeviceSerialNm: (state: CommonState, value: string) => void;\r\n        setClonedWbcInfo: (state: CommonState, value: any[]) => void;\r\n        setClonedRbcInfo: (state: CommonState, value: any[]) => void;\r\n        setMoveImgIsBool: (state: CommonState, value: boolean) => void;\r\n        setClassInfoSort: (state: CommonState, value: any[]) => void;\r\n        setChatRunningData: (state: CommonState, value: any[]) => void;\r\n        setCbcLayer: (state: CommonState, value: boolean) => void;\r\n        setInhaTestCode: (state: CommonState, value: string) => void;\r\n        setRbcReData: (state: CommonState, value: boolean) => void;\r\n    };\r\n    actions: {\r\n        setCommonInfo: (context: { commit: Commit }, payload: CommonState) => void;\r\n    };\r\n}\r\n\r\nexport const commonModule: CommonModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        startEmbedded: false,\r\n        eqStatCd: 0,\r\n        isRunningState: false,\r\n        totalCount: '',\r\n        embeddedNumber: '',\r\n        isAlarm: false,\r\n        bfSelectFiles: [],\r\n        slideProceeding: '',\r\n        totalSlideTime: '00:00:00',\r\n        iaRootPath: '',\r\n        runningSlotId: '',\r\n        isRequestInProgress: false,\r\n        startInfoBoolen: false,\r\n        runningInfoBoolen: false,\r\n        runningInfoStop: false,\r\n        reqArr: [],\r\n        resFlag: true,\r\n        firstLoading: false,\r\n        slotIndex: 0,\r\n        viewerCheck: '',\r\n        runningArr: [],\r\n        classArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        rbcArr: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        processInfo: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        orderList: [{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}],\r\n        loginSetData: '',\r\n        siteCd: '',\r\n        deviceSerialNm: '',\r\n        clonedWbcInfo: [],\r\n        clonedRbcInfo: [],\r\n        moveImgIsBool: false,\r\n        classInfoSort: [],\r\n        chatRunningData: [],\r\n        cbcLayer: false,\r\n        inhaTestCode: '',\r\n        rbcReData: false,\r\n    }),\r\n    mutations: {\r\n        setStartEmbedded(state: CommonState, value: boolean): void {\r\n            state.startEmbedded = value;\r\n        },\r\n        setEqStatCd(state: CommonState, value: number): void {\r\n            state.eqStatCd = value;\r\n        },\r\n        setIsRunningState(state: CommonState, value: boolean): void {\r\n            state.isRunningState = value;\r\n        },\r\n        setTotalCount(state: CommonState, value: string): void {\r\n            state.totalCount = value;\r\n        },\r\n        setEmbeddedNumber(state: CommonState, value: string): void {\r\n            state.embeddedNumber = value;\r\n        },\r\n        setIsAlarm(state: CommonState, value: boolean): void {\r\n            state.isAlarm = value;\r\n        },\r\n        setBfSelectFiles(state: CommonState, value: any[]): void {\r\n            state.bfSelectFiles = value;\r\n        },\r\n        setSlideProceeding(state: CommonState, value: string): void {\r\n            state.slideProceeding = value;\r\n        },\r\n        setTotalSlideTime(state: CommonState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setIaRootPath(state: CommonState, value: string): void {\r\n            state.iaRootPath = value;\r\n        },\r\n        setRunningSlotId(state: CommonState, value: string): void {\r\n            state.runningSlotId = value;\r\n        },\r\n        setIsRequestInProgress(state: CommonState, value: boolean): void {\r\n            state.isRequestInProgress = value;\r\n        },\r\n        setStartInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.startInfoBoolen = value;\r\n        },\r\n        setRunningInfoBoolen(state: CommonState, value: boolean): void {\r\n            state.runningInfoBoolen = value;\r\n        },\r\n        setRunningInfoStop(state: CommonState, value: boolean): void {\r\n            state.runningInfoStop = value;\r\n        },\r\n        setReqArr(state: CommonState, value: any[]): void {\r\n            if (!state.reqArr) {\r\n                state.reqArr = []; // 배열이 없으면 빈 배열로 초기화\r\n            }\r\n            state.reqArr.push(value);\r\n        },\r\n        shiftReqArr(state: CommonState): void {\r\n            state.reqArr.shift();\r\n        },\r\n        setReqArrPaste(state: CommonState, value: any[]): void {\r\n            state.reqArr = value;\r\n        },\r\n        setResFlag(state: CommonState, value: boolean): void {\r\n            state.resFlag = value;\r\n        },\r\n        setFirstLoading(state: CommonState, value: boolean): void {\r\n            state.firstLoading = value;\r\n        },\r\n        setSlotIndex(state: CommonState, value: number): void {\r\n            state.slotIndex = value;\r\n        },\r\n        setViewerCheck(state: CommonState, value: string): void {\r\n            state.viewerCheck = value;\r\n        },\r\n        setRunningArr(state: CommonState, value: any[]): void {\r\n            state.runningArr = value;\r\n        },\r\n        setClassArr(state: CommonState, value: any[]): void {\r\n            state.classArr = value;\r\n        },\r\n        setRbcArr(state: CommonState, value: any[]): void {\r\n            state.rbcArr = value;\r\n        },\r\n        setProcessInfo(state: CommonState, value: any[]): void {\r\n            state.processInfo = value;\r\n        },\r\n        setOrderList(state: CommonState, value: any[]): void {\r\n            state.orderList = value;\r\n        },\r\n        setLoginSetData(state: CommonState, value: string): void {\r\n            state.loginSetData = value;\r\n        },\r\n        setDeviceSerialNm(state: CommonState, value: string): void {\r\n            state.deviceSerialNm = value;\r\n        },\r\n        setSiteCd(state: CommonState, value: string): void {\r\n            state.siteCd = value;\r\n        },\r\n        setClonedWbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedWbcInfo = value;\r\n        },\r\n        setClonedRbcInfo(state: CommonState, value: any[]): void {\r\n            state.clonedRbcInfo = value;\r\n        },\r\n        setMoveImgIsBool(state: CommonState, value: boolean): void {\r\n            state.moveImgIsBool = value;\r\n        },\r\n        setClassInfoSort(state: CommonState, value: any[]): void {\r\n            state.classInfoSort = value;\r\n        },\r\n        setChatRunningData(state: CommonState, value: any[]): void {\r\n            state.chatRunningData = value;\r\n        },\r\n        setCbcLayer(state: CommonState, value: boolean): void {\r\n            state.cbcLayer = value;\r\n        },\r\n        setInhaTestCode(state: CommonState, value: string): void {\r\n            state.inhaTestCode = value;\r\n        },\r\n        setRbcReData(state: CommonState, value: boolean): void {\r\n            state.rbcReData = value;\r\n        },\r\n    },\r\n    actions: {\r\n        setCommonInfo({commit}: { commit: Commit }, payload: CommonState): void {\r\n            if (payload.hasOwnProperty('startEmbedded')) {\r\n                commit('setStartEmbedded', payload.startEmbedded);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('eqStatCd')) {\r\n                commit('setEqStatCd', payload.eqStatCd);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('isRunningState')) {\r\n                commit('setIsRunningState', payload.isRunningState);\r\n            }\r\n\r\n            if (payload.hasOwnProperty('totalCount')) {\r\n                commit('setTotalCount', payload.totalCount);\r\n            }\r\n            if (payload.hasOwnProperty('embeddedNumber')) {\r\n                commit('setEmbeddedNumber', payload.embeddedNumber);\r\n            }\r\n            if (payload.hasOwnProperty('isAlarm')) {\r\n                commit('setIsAlarm', payload.isAlarm);\r\n            }\r\n            if (payload.hasOwnProperty('bfSelectFiles')) {\r\n                commit('setBfSelectFiles', payload.bfSelectFiles);\r\n            }\r\n            if (payload.hasOwnProperty('slideProceeding')) {\r\n                commit('setSlideProceeding', payload.slideProceeding);\r\n            }\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('iaRootPath')) {\r\n                commit('setIaRootPath', payload.iaRootPath);\r\n            }\r\n            if (payload.hasOwnProperty('runningSlotId')) {\r\n                commit('setRunningSlotId', payload.runningSlotId);\r\n            }\r\n            if (payload.hasOwnProperty('isRequestInProgress')) {\r\n                commit('setIsRequestInProgress', payload.isRequestInProgress);\r\n            }\r\n            if (payload.hasOwnProperty('startInfoBoolen')) {\r\n                commit('setStartInfoBoolen', payload.startInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoBoolen')) {\r\n                commit('setRunningInfoBoolen', payload.runningInfoBoolen);\r\n            }\r\n            if (payload.hasOwnProperty('runningInfoStop')) {\r\n                commit('setRunningInfoStop', payload.runningInfoStop);\r\n            }\r\n            if (payload.hasOwnProperty('reqArr')) {\r\n                commit('setReqArr', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('shiftReqArr')) {\r\n                commit('shiftReqArr');\r\n            }\r\n            if (payload.hasOwnProperty('reqArrPaste')) {\r\n                commit('setReqArrPaste', payload.reqArr);\r\n            }\r\n            if (payload.hasOwnProperty('resFlag')) {\r\n                commit('setResFlag', payload.resFlag);\r\n            }\r\n            if (payload.hasOwnProperty('firstLoading')) {\r\n                commit('setFirstLoading', payload.firstLoading);\r\n            }\r\n            if (payload.hasOwnProperty('slotIndex')) {\r\n                commit('setSlotIndex', payload.slotIndex);\r\n            }\r\n            if (payload.hasOwnProperty('viewerCheck')) {\r\n                commit('setViewerCheck', payload.viewerCheck);\r\n            }\r\n            if (payload.hasOwnProperty('runningArr')) {\r\n                commit('setRunningArr', payload.runningArr);\r\n            }\r\n            if (payload.hasOwnProperty('classArr')) {\r\n                commit('setClassArr', payload.classArr);\r\n            }\r\n            if (payload.hasOwnProperty('rbcArr')) {\r\n                commit('setRbcArr', payload.rbcArr);\r\n            }\r\n            if (payload.hasOwnProperty('processInfo')) {\r\n                commit('setProcessInfo', payload.processInfo);\r\n            }\r\n            if (payload.hasOwnProperty('orderList')) {\r\n                commit('setOrderList', payload.orderList);\r\n            }\r\n            if (payload.hasOwnProperty('loginSetData')) {\r\n                commit('setLoginSetData', payload.loginSetData);\r\n            }\r\n            if (payload.hasOwnProperty('siteCd')) {\r\n                commit('setSiteCd', payload.siteCd);\r\n            }\r\n            if (payload.hasOwnProperty('deviceSerialNm')) {\r\n                commit('setDeviceSerialNm', payload.deviceSerialNm);\r\n            }\r\n            if (payload.hasOwnProperty('clonedWbcInfo')) {\r\n                commit('setClonedWbcInfo', payload.clonedWbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('clonedRbcInfo')) {\r\n                commit('setClonedRbcInfo', payload.clonedRbcInfo);\r\n            }\r\n            if (payload.hasOwnProperty('moveImgIsBool')) {\r\n                commit('setMoveImgIsBool', payload.moveImgIsBool)\r\n            }\r\n            if (payload.hasOwnProperty('classInfoSort')) {\r\n                commit('setClassInfoSort', payload.classInfoSort)\r\n            }\r\n            if (payload.hasOwnProperty('chatRunningData')) {\r\n                commit('setChatRunningData', payload.chatRunningData)\r\n            }\r\n            if (payload.hasOwnProperty('cbcLayer')) {\r\n                commit('setCbcLayer', payload.cbcLayer)\r\n            }\r\n            // setInhaTestCode\r\n            if (payload.hasOwnProperty('inhaTestCode')) {\r\n                commit('setInhaTestCode', payload.inhaTestCode)\r\n            }\r\n            if (payload.hasOwnProperty('rbcReData')) {\r\n                commit('setRbcReData', payload.rbcReData)\r\n            }\r\n        },\r\n    },\r\n};\r\n","// dataBaseSetDataModule.ts\r\nimport { Commit } from 'vuex';\r\n\r\ninterface ClassInfo {\r\n    classId: string;\r\n    classNm: string;\r\n    degree: string;\r\n}\r\n\r\ninterface Image {\r\n    fileName: string;\r\n}\r\n\r\ninterface WbcInfo {\r\n    id: string;\r\n    title: string;\r\n    name: string;\r\n    count: string;\r\n    images: Image[];\r\n}\r\n\r\ninterface RbcInfo {\r\n    categoryId: string;\r\n    categoryNm: string;\r\n    classInfo: ClassInfo[];\r\n}\r\n\r\nexport interface SlotInfo {\r\n    slotNo: string;\r\n    barcodeNo: string;\r\n    patientId: string;\r\n    patientNm: string;\r\n    gender: string;\r\n    birthDay: string;\r\n    runningPath: string[];\r\n    wbcCount: string;\r\n    slotId: string;\r\n    orderDttm: string;\r\n    testType: string;\r\n    analyzedDttm: string;\r\n    malariaCount: string;\r\n    // pltCount: string;\r\n    maxWbcCount: string;\r\n    maxRbcCount: string;\r\n    stateCd: string;\r\n    isLowPowerScan: string;\r\n    tactTime: string;\r\n    lowPowerPath: string[];\r\n    isNsNbIntegration: string;\r\n    seqNo: string;\r\n    path: string;\r\n    isHighPowerScan: string;\r\n    wbcInfo: WbcInfo[];\r\n    rbcInfo: RbcInfo[];\r\n}\r\n\r\nexport interface DataBaseSetData {\r\n    changeSlide: string;\r\n    resultCode: string;\r\n    resultMsg: string;\r\n    errorLevel: { level: string; message: string };\r\n    jobCmd: string;\r\n    processingCode: string;\r\n    iCasStat: string;\r\n    oCasStat: string;\r\n    cassetId: string;\r\n    isRunningState: boolean;\r\n    slotInfo: SlotInfo[];\r\n}\r\n\r\ninterface DataBaseSetDataState {\r\n    dataBaseSetData: DataBaseSetData | null;\r\n}\r\n\r\ninterface DataBaseSetDataModule {\r\n    namespaced: true;\r\n    state: () => DataBaseSetDataState;\r\n    mutations: {\r\n        setDataBaseSetData: (state: DataBaseSetDataState, value: DataBaseSetData) => void;\r\n    };\r\n    actions: {\r\n        setDataBaseSetData: (context: { commit: Commit }, payload: DataBaseSetData) => void;\r\n    };\r\n}\r\n\r\nexport const dataBaseSetDataModule: DataBaseSetDataModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        dataBaseSetData: null,\r\n    }),\r\n    mutations: {\r\n        setDataBaseSetData(state: DataBaseSetDataState, value: DataBaseSetData): void {\r\n            // setDataBaseSetData에서 호출된 경우에만 값을 덮어쓰기\r\n            if (value) {\r\n                state.dataBaseSetData = {\r\n                    ...state.dataBaseSetData, // 기존 데이터 유지\r\n                    changeSlide: value.changeSlide ?? state.dataBaseSetData?.changeSlide,\r\n                    resultCode: value.resultCode ?? state.dataBaseSetData?.resultCode,\r\n                    resultMsg: value.resultMsg ?? state.dataBaseSetData?.resultMsg,\r\n                    errorLevel: value.errorLevel ?? state.dataBaseSetData?.errorLevel,\r\n                    jobCmd: value.jobCmd ?? state.dataBaseSetData?.jobCmd,\r\n                    processingCode: value.processingCode ?? state.dataBaseSetData?.processingCode,\r\n                    iCasStat: value.iCasStat ?? state.dataBaseSetData?.iCasStat,\r\n                    oCasStat: value.oCasStat ?? state.dataBaseSetData?.oCasStat,\r\n                    cassetId: value.cassetId ?? state.dataBaseSetData?.cassetId,\r\n                    isRunningState: value.isRunningState ?? state.dataBaseSetData?.isRunningState,\r\n                    slotInfo: value.slotInfo\r\n                        ? value.slotInfo.map((slot) => {\r\n                            const existingSlot = state.dataBaseSetData?.slotInfo?.find(\r\n                                (existing) => existing?.slotId === slot?.slotId\r\n                            );\r\n                            return existingSlot ? { ...existingSlot, ...slot } : slot!;\r\n                        })\r\n                        : state.dataBaseSetData?.slotInfo ?? [],\r\n                };\r\n            }\r\n        },\r\n    },\r\n    actions: {\r\n        setDataBaseSetData({ commit }: { commit: Commit }, payload: DataBaseSetData): void {\r\n            commit('setDataBaseSetData', payload);\r\n        },\r\n    },\r\n};\r\n","import {Commit} from 'vuex';\r\n\r\nexport interface TimeState {\r\n    totalSlideTime: string,\r\n    slideTime: string,\r\n}\r\n\r\ninterface TimeModule {\r\n    namespaced: true;\r\n    state: () => TimeState;\r\n    mutations: {\r\n        setTotalSlideTime: (state: TimeState, value: string) => void;\r\n        setSlideTime: (state: TimeState, value: string) => void;\r\n    };\r\n    actions: {\r\n        setTimeInfo: (context: { commit: Commit }, payload: TimeState) => void;\r\n    };\r\n}\r\n\r\nexport const timeModule: TimeModule = {\r\n    namespaced: true,\r\n    state: () => ({\r\n        totalSlideTime: '00:00:00',\r\n        slideTime: '00:00:00',\r\n    }),\r\n    mutations: {\r\n        setTotalSlideTime(state: TimeState, value: string): void {\r\n            state.totalSlideTime = value;\r\n        },\r\n        setSlideTime(state: TimeState, value: string): void {\r\n            state.slideTime = value;\r\n        }\r\n    },\r\n    actions: {\r\n        setTimeInfo({commit}: { commit: Commit }, payload: TimeState): void {\r\n            if (payload.hasOwnProperty('totalSlideTime')) {\r\n                commit('setTotalSlideTime', payload.totalSlideTime);\r\n            }\r\n            if (payload.hasOwnProperty('slideTime')) {\r\n                commit('setSlideTime', payload.slideTime);\r\n            }\r\n        },\r\n    },\r\n};\r\n","// index.vue\r\nimport {createStore} from \"vuex\";\r\nimport {userModule} from \"@/store/modules/userModule\";\r\nimport {executeModule} from '@/store/modules/analysis/executeModule';\r\nimport {rbcClassificationModule} from '@/store/modules/analysis/rbcClassification';\r\nimport {wbcClassificationModule} from '@/store/modules/analysis/wbcclassification';\r\nimport {workingViewModule} from '@/store/modules/analysis/workingViewModule';\r\nimport { embeddedStatusModule } from '@/store/modules/embeddedStatusModule';\r\nimport { orderListModule } from '@/store/modules/analysis/orderListModule';\r\nimport { runningInfoModule } from '@/store/modules/testPageCommon/ruuningInfo';\r\nimport {commonModule} from \"@/store/modules/commonModule\";\r\nimport {dataBaseSetDataModule} from \"@/store/modules/dataBaseSetData/dataBaseSetDataModule\";\r\nimport {timeModule} from \"@/store/modules/timeModule\";\r\n// import createPersistedState from 'vuex-persistedstate';\r\n\r\n\r\nconst store = createStore({\r\n    modules: {\r\n        userModule,\r\n        executeModule,\r\n        // rbcClassificationModule,\r\n        // wbcClassificationModule,\r\n        workingViewModule,\r\n        embeddedStatusModule,\r\n        orderListModule,\r\n        runningInfoModule,\r\n        commonModule,\r\n        dataBaseSetDataModule,\r\n        timeModule,\r\n    }\r\n\r\n});\r\n\r\nexport default store;\r\n\r\n\r\n","import store from '@/store/index';\r\nimport {SlotInfo} from \"@/store/modules/testPageCommon/ruuningInfo\";\r\n// 다른 페이지에서 호출 시 명확하게 알 수 있게 변수 생성 시 뒤에 store 를 붙여주세요.\r\nexport const sysInfoStore = async (data: any) => {\r\n    if (data?.resultCd === '00000') {\r\n        const embeddedInfoData = {\r\n            embeddedStatusJobCmd: '',\r\n            userStop: data.isRecovery === 'Y',\r\n            isRecoveryRun: data.isRecovery === 'N' && false,\r\n            isPause: data.jobCmd === 'PAUSE',\r\n            sysInfo: data,\r\n            isInit: data ? data.isInit : undefined,\r\n        };\r\n\r\n        const deviceInfoData = {\r\n            siteCd: data.siteCd,\r\n            deviceSerialNm: data.deviceSerialNm\r\n        }\r\n\r\n        await store.dispatch('commonModule/setCommonInfo', deviceInfoData);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', embeddedInfoData);\r\n    }else {\r\n        alert(data?.resultMsg);\r\n    }\r\n};\r\n\r\nexport const runningInfoStore = async (data: any) => {\r\n    // await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n    await store.dispatch('runningInfoModule/setRunningInfo', data);\r\n}\r\n\r\n// export const wbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('wbcClassificationModule/setWbcInfo', data.slotInfo);\r\n// }\r\n\r\n// export const rbcInfoStore = async (data: any) => {\r\n//     await store.dispatch('rbcClassificationModule/setRbcInfo', data.slotInfo);\r\n// }","export const checkPbNormalCell = (wbcInfo: any, norMalRange: any) => {\r\n    // const norMalRange = this.$store.getters.getWbcNormalRange;\r\n    let totalCount = 0;\r\n    let neutrophilCount = 0;\r\n    const resultObj: any = {\r\n        'isNormal': 'Y',\r\n        'class': []\r\n    };\r\n\r\n    if (wbcInfo) {\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            if (['NR', 'AR', 'GP', 'PA', 'MC', 'MA'].indexOf(wbcItem.title) === -1) {\r\n                totalCount += Number(wbcItem.count);\r\n            }\r\n\r\n            if (['NE', 'NS', 'NB'].includes(wbcItem.title)) {\r\n                neutrophilCount += Number(wbcItem.count);\r\n            }\r\n        });\r\n\r\n        wbcInfo.forEach((wbcItem: any) => {\r\n            norMalRange.forEach((range: any) => {\r\n                // neutrophils\r\n                if (range.classId === '01') {\r\n                    let percent = 0;\r\n\r\n                    if (['01', '71'].includes(wbcItem.id)) {\r\n                        percent = (neutrophilCount / totalCount) * 100;\r\n                        if (percent < range.min || percent > range.max) {\r\n                            console.log(`SET [NE] Abnormal : ${wbcItem.title}`);\r\n                            resultObj.isNormal = 'N';\r\n                            resultObj.class.push(`[NE] : [${percent.toFixed(2)}]%`);\r\n                        } else {\r\n                            console.log(`SET [NE] NORMAL : ${wbcItem.title}`);\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (wbcItem.id === range.classId) {\r\n                        if (range.unit === 'Count') {\r\n                            if (Number(wbcItem.count) < range.min || Number(wbcItem.count) > range.max) {\r\n                                // console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${wbcItem.count}]Count`);\r\n                            } else {\r\n                                // console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        } else {\r\n                            let percent = 0;\r\n\r\n                            percent = (Number(wbcItem.count) / totalCount) * 100;\r\n\r\n                            if (percent < range.min || percent > range.max) {\r\n                                console.log(`SET Abnormal : ${wbcItem.title}`);\r\n                                resultObj.isNormal = 'N';\r\n                                resultObj.class.push(`${wbcItem.title} : [${percent.toFixed(2)}]%`);\r\n                            } else {\r\n                                console.log(`SET NORMAL : ${wbcItem.title}`);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return resultObj;\r\n};\r\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'App',\n  setup(__props) {\n\r\n\r\nconst router = useRouter();\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        break;\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId?: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_router_view = _resolveComponent(\"router-view\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    (_unref(router).currentRoute.value.path !== '/user/login' && _unref(router).currentRoute.value.path !== '/user/join')\n      ? (_openBlock(), _createBlock(AppHeader, { key: 0 }))\n      : _createCommentVNode(\"\", true),\n    _createElementVNode(\"main\", {\n      class: _normalizeClass([\"content\", { bmComponent: projectBm.value }])\n    }, [\n      _createVNode(_component_router_view),\n      _createVNode(Analysis, {\n        onClassAppUpdateLast: classAppUpdateLast,\n        onRbcAppUpdate: rbcAppUpdate,\n        parsedData: parsedDataProps.value,\n        isClass: _unref(router).currentRoute.value.path === '/',\n        startStatus: startStatus.value,\n        pb100aCassette: pb100aCassette.value\n      }, null, 8, [\"parsedData\", \"isClass\", \"startStatus\", \"pb100aCassette\"])\n    ], 2),\n    (showAlert.value)\n      ? (_openBlock(), _createBlock(Alert, {\n          key: 1,\n          \"is-visible\": showAlert.value,\n          type: alertType.value,\n          message: alertMessage.value,\n          onHide: hideAlert,\n          \"onUpdate:hideAlert\": hideAlert\n        }, null, 8, [\"is-visible\", \"type\", \"message\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<!-- App.vue -->\r\n<template>\r\n  <div>\r\n    <AppHeader\r\n        v-if=\"router.currentRoute.value.path !== '/user/login' && router.currentRoute.value.path !== '/user/join'\"/>\r\n    <main class=\"content\" :class=\"{ bmComponent: projectBm }\">\r\n      <router-view/>\r\n      <Analysis @classAppUpdateLast=\"classAppUpdateLast\"\r\n                @rbcAppUpdate=\"rbcAppUpdate\"\r\n                :parsedData=\"parsedDataProps\"\r\n                :isClass=\"router.currentRoute.value.path === '/'\"\r\n                :startStatus=\"startStatus\"\r\n                :pb100aCassette=\"pb100aCassette\"\r\n      />\r\n    </main>\r\n    <Alert\r\n        v-if=\"showAlert\"\r\n        :is-visible=\"showAlert\"\r\n        :type=\"alertType\"\r\n        :message=\"alertMessage\"\r\n        @hide=\"hideAlert\"\r\n        @update:hideAlert=\"hideAlert\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n\r\nimport AppHeader from \"@/components/layout/AppHeader.vue\";\r\n\r\nconst router = useRouter();\r\nimport {getCurrentInstance, ref, computed, watch, onMounted, nextTick, onBeforeUnmount, onBeforeMount} from 'vue';\r\nimport {useStore} from \"vuex\";\r\nimport {sysInfoStore, runningInfoStore} from '@/common/lib/storeSetData/common';\r\nimport {tcpReq} from '@/common/tcpRequest/tcpReq';\r\nimport {messages} from '@/common/defines/constFile/constantMessageText';\r\nimport {\r\n  getCellImgApi,\r\n  getNormalRangeApi,\r\n} from \"@/common/api/service/setting/settingApi\";\r\nimport {checkPbNormalCell} from \"@/common/lib/utils/changeData\";\r\nimport {ApiResponse} from \"@/common/api/httpClient\";\r\nimport {createRunningApi} from \"@/common/api/service/runningInfo/runningInfoApi\";\r\nimport Alert from \"@/components/commonUi/Alert.vue\";\r\nimport {useRouter} from \"vue-router\";\r\nimport {createDeviceInfoApi, getDeviceInfoApi, getDeviceIpApi} from \"@/common/api/service/device/deviceApi\";\r\nimport EventBus from \"@/eventBus/eventBus\";\r\nimport {basicBmClassList, basicWbcArr} from \"@/common/defines/constFile/classArr\";\r\nimport {stringToDateTime} from \"@/common/lib/utils/conversionDataUtils\";\r\nimport Analysis from \"@/views/analysis/index.vue\";\r\n\r\nconst showAlert = ref(false);\r\nconst alertType = ref('');\r\nconst alertMessage = ref('');\r\nconst store = useStore();\r\nconst commonDataGet = computed(() => store.state.commonModule);\r\nconst instance = getCurrentInstance();\r\nconst userId = ref('');\r\nconst storedUser = sessionStorage.getItem('user');\r\nconst getStoredUser = JSON.parse(storedUser || '{}');\r\nconst normalItems = ref<any>([]);\r\nconst userModuleDataGet = computed(() => store.state.userModule);\r\nconst reqArr = computed(() => store.state.commonModule);\r\nconst runningInfoBoolen = ref(false);\r\nlet countingInterStartval: any = null;\r\nlet countingInterRunval: any = null;\r\nconst isNsNbIntegration = ref('');\r\nconst pbiaRootDir = computed(() => store.state.commonModule.iaRootPath);\r\nconst slotIndex = computed(() => store.state.commonModule.slotIndex);\r\nconst runningArr: any = ref<any>([]);\r\nconst classArr = ref<any>([]);\r\nconst rbcArr = ref<any>([]);\r\nconst viewerCheckApp = ref('');\r\nconst projectBm = ref(false);\r\nconst parsedDataProps = ref<any>({});\r\nconst startStatus = ref(false);\r\nconst pbVersion = ref<any>('');\r\nconst pb100aCassette = ref<any>('');\r\nconst deleteData = ref(false);\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('viewerCheck', async (ip) => { // 뷰어인지 아닌지 체크하는곳\r\n  await getIpAddress(ip)\r\n})\r\nconst siteCdDvBarCode = ref(false);\r\n\r\nconst getIpAddress = async (ip: string) => {\r\n  try {\r\n    const result = await getDeviceIpApi();\r\n    if (result.data === ip) {\r\n      viewerCheckApp.value = result.data;\r\n    } else {\r\n      viewerCheckApp.value = result.data;\r\n    }\r\n  } catch (e) {\r\n    console.log(e)\r\n  }\r\n}\r\n\r\nwatch(reqArr.value, async (newVal, oldVal) => {\r\n  if (!newVal.reqArr) return;\r\n  if (deleteData.value) {\r\n    deleteData.value = false;\r\n    await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n    return\r\n  }\r\n  const uniqueReqArr = removeDuplicateJobCmd(newVal.reqArr);\r\n\r\n  if (uniqueReqArr.length === 0) return;\r\n\r\n  // `notSysRunInfo` 생성 최적화\r\n  const notSysRunInfo = uniqueReqArr.filter((item: any) => !['SYSINFO', 'RUNNING_INFO'].includes(item.jobCmd));\r\n\r\n  // `notSysRunInfo`와 `uniqueReqArr` 처리\r\n  if (notSysRunInfo.length > 0) {\r\n    await sendMessage(notSysRunInfo[0]);\r\n  } else {\r\n    await sendMessage(uniqueReqArr[0]);\r\n  }\r\n\r\n  // `reqArrPaste` 상태 초기화\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArrPaste: []});\r\n});\r\n\r\n\r\nwatch(userModuleDataGet.value, (newUserId, oldUserId) => {\r\n  if (newUserId.id === '') {\r\n    return;\r\n  }\r\n  cellImgGet(newUserId.id);\r\n  userId.value = newUserId.id;\r\n});\r\n\r\n\r\nonBeforeMount(() => {\r\n  instance?.appContext.config.globalProperties.$socket.emit('viewerCheck', {\r\n    type: 'SEND_DATA',\r\n    payload: window.APP_API_BASE_URL\r\n  });\r\n});\r\nwindow.addEventListener('beforeunload', function (event: any) {\r\n  store.dispatch('commonModule/setCommonInfo', {firstLoading: false});\r\n});\r\nconst leave = (event: any) => {\r\n  event.preventDefault();\r\n};\r\n\r\nonMounted(async () => {\r\n  await nextTick();\r\n  await cellImgGet();\r\n  siteCdDvBarCode.value = false;\r\n  window.addEventListener('beforeunload', leave);\r\n  // 현재 프로젝트가 bm인지 확인하고 클래스 부여\r\n  projectBm.value = window.PROJECT_TYPE === 'bm';\r\n  if (!projectBm.value) {\r\n    pbVersion.value = window.PB_VERSION;\r\n  }\r\n\r\n  if (userId.value === '') { // 사용자가 강제 초기화 시킬 시 유저 정보를 다시 세션스토리지에 담아준다.\r\n    await store.dispatch('userModule/setUserAction', getStoredUser);\r\n    userId.value = userModuleDataGet.value.id\r\n  }\r\n\r\n  if (!commonDataGet.value.isRunningState) {\r\n    if (userId.value && userId.value !== '') {\r\n      await getNormalRange();\r\n    }\r\n    if (!commonDataGet.value.firstLoading) {\r\n      countingInterStartval = setInterval(async () => {\r\n        await startSysPostWebSocket();\r\n      }, 400);\r\n\r\n      countingInterRunval = setInterval(async () => {\r\n        if (!commonDataGet.value.runningInfoStop) {\r\n          await runInfoPostWebSocket();\r\n        }\r\n      }, 500);\r\n      await store.dispatch('commonModule/setCommonInfo', {firstLoading: true});\r\n    }\r\n    isNsNbIntegration.value = sessionStorage.getItem('isNsNbIntegration') || '';\r\n  }\r\n  console.log(window.APP_API_BASE_URL)\r\n  EventBus.subscribe('executeAction', emitSocketData);\r\n\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('beforeunload', leave);\r\n\r\n  if (countingInterRunval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n  if (countingInterStartval) {\r\n    clearInterval(countingInterRunval);\r\n    countingInterRunval = null;\r\n  }\r\n});\r\n\r\ninstance?.appContext.config.globalProperties.$socket.on('chat', async (data) => {\r\n  if (commonDataGet.value.viewerCheck !== 'main') {\r\n    return;\r\n  }\r\n  deleteData.value = false;\r\n  try {\r\n    if (typeof data === 'string') {\r\n      instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n        type: 'SEND_DATA',\r\n        payload: {\r\n          jobCmd: 'clientExit',\r\n          reqUserId: '',\r\n          reqDttm: '',\r\n        }\r\n      });\r\n      await showSuccessAlert(messages.TCP_DiSCONNECTED);\r\n      return\r\n    } else {\r\n      hideAlert();\r\n    }\r\n    const textDecoder = new TextDecoder('utf-8');\r\n    const stringData = textDecoder.decode(data);\r\n\r\n    const parsedData = JSON.parse(stringData);\r\n    const parseDataWarp = parsedData;\r\n    // 시스템정보 스토어에 담기\r\n    switch (parseDataWarp.jobCmd) {\r\n      case 'RBC_RE_CLASSIFICATION':\r\n        await store.dispatch('commonModule/setCommonInfo', {rbcReData: true});\r\n        break;\r\n      case 'SYSINFO':\r\n        await sysInfoStore(parseDataWarp);\r\n        const deviceInfoObj = {\r\n          siteCd: parseDataWarp.siteCd,\r\n          deviceSerialNm: parseDataWarp.deviceSerialNm\r\n        }\r\n        if (!siteCdDvBarCode.value) {\r\n          await saveDeviceInfo(deviceInfoObj);\r\n        }\r\n        break;\r\n      case 'INIT':\r\n        sendSettingInfo();\r\n        break;\r\n      case 'START':\r\n        await runnStart();\r\n        break;\r\n      case 'RUNNING_INFO':\r\n        parsedDataProps.value = parseDataWarp;\r\n        runningInfoBoolen.value = true;\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        break;\r\n      case 'STOP':\r\n        console.log('stop!=--------------------------')\r\n        await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RUNNING_COMP':// 완료가 된 상태이므로 각 페이지에 완료가 되었다는 정보를 저장한다.\r\n        await runnComp();\r\n        break;\r\n      case 'PAUSE':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: true}); // 일시정지 상태로 변경한다.\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n        startStatus.value = false;\r\n        runningInfoBoolen.value = false;\r\n        break;\r\n      case 'RESTART':\r\n        await runningInfoStore(parseDataWarp);\r\n        await runningInfoCheckStore(parseDataWarp);\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {isPause: false}); // start 가 되면 false로 변경\r\n        await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n        await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n        runningInfoBoolen.value = true;\r\n        startStatus.value = true;\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        classArr.value = [];\r\n        rbcArr.value = [];\r\n        break;\r\n      case 'RECOVERY':\r\n        await store.dispatch('embeddedStatusModule/setEmbeddedStatusInfo', {userStop: false});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n        await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n        await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n        break;\r\n      case 'ERROR_CLEAR':\r\n        console.log('err')\r\n        await showSuccessAlert(messages.IDS_MSG_FAILED);\r\n        break;\r\n    }\r\n\r\n    async function runnComp() {\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n      await store.dispatch('commonModule/setCommonInfo', {embeddedNumber: String(data?.iCasStat)});\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: false}); // 시스템이 돌아가는 상태를 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {isAlarm: true}); // 알람을 킨다.\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'stop'});// 슬라이드가 끝났으므로 stop을 넣어서 끝낸다.\r\n      await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: false});\r\n      runningInfoBoolen.value = false;\r\n      startStatus.value = false;\r\n    }\r\n\r\n    async function runnStart() {\r\n      await store.dispatch('commonModule/setCommonInfo', {isRunningState: true});// 실행중이라는 여부를 보낸다\r\n      await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'}); // 첫 슬라이드가 시작되었음을 알려준다.\r\n      await store.dispatch('commonModule/setCommonInfo', {startEmbedded: 'start',});\r\n      await store.dispatch('timeModule/setTimeInfo', {totalSlideTime: '00:00:00'});\r\n      await store.dispatch('timeModule/setTimeInfo', {slideTime: '00:00:00'});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: false});\r\n      await store.dispatch('commonModule/setCommonInfo', {slotIndex: 0});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningSlotId: ''});\r\n      await store.dispatch('commonModule/setCommonInfo', {runningArr: []});\r\n      startStatus.value = true;\r\n      classArr.value = [];\r\n      rbcArr.value = [];\r\n      runningInfoBoolen.value = true;\r\n    }\r\n\r\n    async function runningInfoCheckStore(data: any | undefined) {\r\n      const regex = /[1,2,9]/g;\r\n      if (String(data?.iCasStat) !== '999999999999') { // 스캔중일때는 pass + 완료상태일때도\r\n        const dataICasStat = String(data?.iCasStat);\r\n        const currentSlot = data?.slotInfo;\r\n        const str: any = data?.iCasStat;\r\n        const iCasStatArr: any = [...str];\r\n        const lastCompleteIndex = iCasStatArr.lastIndexOf(\"3\") === -1 ? 0 : iCasStatArr.lastIndexOf(\"3\") + 1;\r\n\r\n        if (iCasStatArr.lastIndexOf(\"2\") === 0) {\r\n          await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n        }\r\n        if (data?.iCasStat.indexOf(\"2\") !== -1) {\r\n          await store.dispatch('commonModule/setCommonInfo', {slideProceeding: data?.iCasStat.indexOf(\"2\")});\r\n        }\r\n\r\n        if (pbVersion.value === '100a') {\r\n          if (data?.iCasChange === '1') {\r\n            pb100aCassette.value = 'reset';\r\n          } else {\r\n            pb100aCassette.value = '';\r\n          }\r\n        }\r\n\r\n        // iCasStat (0 - 없음, 1 - 있음, 2 - 진행중, 3 - 완료, 4 - 에러, 9 - 스캔)\r\n        if ((dataICasStat.search(regex) < 0) || data?.oCasStat === '111111111111' && !commonDataGet.value.runningInfoStop) {\r\n          tcpReq().embedStatus.runIngComp.reqUserId = userModuleDataGet.value.userId;\r\n          if (pbVersion.value !== '100a') {\r\n            await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n            await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n          } else {\r\n            if (data?.workingDone === 'Y') {\r\n              await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.runIngComp});\r\n              await store.dispatch('commonModule/setCommonInfo', {runningInfoStop: true});\r\n            }\r\n          }\r\n          await saveTestHistory(data, data?.slotInfo?.slotNo);\r\n          return;\r\n        }\r\n\r\n        await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'start'});\r\n        //슬라이드 변경시 데이터 저장\r\n        if (currentSlot?.isLowPowerScan === 'Y' && currentSlot?.testType === '03') {// running info 종료\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {reqArr: tcpReq().embedStatus.pause});\r\n          tcpReq().embedStatus.pause.reqUserId = userId.value;\r\n          await store.dispatch('commonModule/setCommonInfo', {isRunningState: false});\r\n        } else {\r\n          if (lastCompleteIndex !== slotIndex.value) {\r\n            console.log('save')\r\n            await store.dispatch('runningInfoModule/setChangeSlide', {key: 'changeSlide', value: 'afterChange'});\r\n            await store.dispatch('runningInfoModule/setSlideBoolean', {key: 'slideBoolean', value: true});\r\n            await saveTestHistory(runningArr.value, runningArr.value?.slotInfo?.slotNo);\r\n            await store.dispatch('commonModule/setCommonInfo', {runningSlotId: currentSlot?.slotId});\r\n            await store.dispatch('commonModule/setCommonInfo', {slotIndex: lastCompleteIndex})\r\n          }\r\n        }\r\n        // 데이터 넣는 부분\r\n        if (iCasStatArr.lastIndexOf(\"2\") !== -1) {\r\n          runningArr.value = data;\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n    async function saveTestHistory(params: any, idx: any, slotId?: any, lastCompleteIndex?: any) {\r\n      const completeSlot = params.slotInfo;\r\n      if (completeSlot) {\r\n        completeSlot.userId = userId.value;\r\n        completeSlot.cassetId = params.cassetId;\r\n        // PB 비정상 클래스 체크\r\n        completeSlot.isNormal = 'Y'\r\n\r\n        if (completeSlot.analysisType === '01') {\r\n          completeSlot.isNormal = checkPbNormalCell(completeSlot.wbcInfo, normalItems.value).isNormal;\r\n        }\r\n\r\n        const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n        const classElements = classArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n        const rbcArrElements = rbcArr.value.filter((element: any) => element?.slotId === completeSlot.slotId);\r\n\r\n        const matchedWbcInfo = classElements[0];\r\n        const newWbcInfo = {\r\n          wbcInfo: matchedWbcInfo?.wbcInfo,\r\n          nonRbcClassList: matchedWbcInfo?.nonRbcClassList,\r\n          totalCount: matchedWbcInfo?.totalCount,\r\n          maxWbcCount: matchedWbcInfo?.maxWbcCount,\r\n        }\r\n\r\n        const newObj = {\r\n          slotNo: completeSlot.slotNo,\r\n          lock_status: false,\r\n          traySlot: '1-' + idx,\r\n          barcodeNo: completeSlot.barcodeNo,\r\n          patientId: completeSlot.patientId,\r\n          patientNm: completeSlot.patientNm,\r\n          gender: completeSlot.gender,\r\n          birthDay: completeSlot.birthDay,\r\n          wbcCount: completeSlot.wbcCount,\r\n          slotId: completeSlot.slotId,\r\n          orderDttm: completeSlot.orderDttm,\r\n          testType: completeSlot.testType,\r\n          analyzedDttm: tcpReq().embedStatus.settings.reqDttm,\r\n          // createDate: tcpReq().embedStatus.settings.reqDttm,\r\n          // pltCount: completeSlot.pltCount,\r\n          // malariaCount: completeSlot.malariaCount,\r\n          // maxRbcCount: completeSlot.maxRbcCount,\r\n          // stateCd: completeSlot.stateCd,\r\n          tactTime: completeSlot.tactTime,\r\n          maxWbcCount: completeSlot.maxWbcCount,\r\n          bf_lowPowerPath: completeSlot.bf_lowPowerPath,\r\n          // runningPath: completeSlot.runningPath,\r\n          wbcInfo: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? {wbcInfo: [basicWbcArr]} : {wbcInfo: [basicBmClassList]} : newWbcInfo,\r\n          wbcInfoAfter: Object.keys(newWbcInfo).length === 0 ? !projectBm.value ? [basicWbcArr] : [basicBmClassList] : newWbcInfo?.wbcInfo[0],\r\n          rbcInfo: !projectBm.value ? {\r\n            pltCount: completeSlot.pltCount,\r\n            malariaCount: completeSlot.malariaCount,\r\n            maxRbcCount: completeSlot.maxRbcCount,\r\n            rbcClass: rbcArrElements[0].rbcInfo,\r\n          } : [],\r\n          rbcInfoAfter: !projectBm.value ? rbcArrElements[0].rbcInfo : [],\r\n          bminfo: completeSlot.bminfo,\r\n          // userId: userModuleDataGet.value.name,\r\n          cassetId: completeSlot.cassetId,\r\n          isNormal: completeSlot.isNormal,\r\n          // processInfo: {\r\n          //   processInfo: processInfoItem,\r\n          //   slotId: completeSlot.slotId\r\n          // },\r\n          // orderList: {\r\n          //   barcodeId: completeSlot.barcodeNo,\r\n          //   patientName: completeSlot.patientNm,\r\n          //   orderDate: stringToDateTime(completeSlot.orderDttm),\r\n          //   analyzedDttm: stringToDateTime(completeSlot.analyzedDttm),\r\n          //   state: completeSlot.stateCd,\r\n          // },\r\n          submitState: '',\r\n          submitOfDate: '',\r\n          submitUserId: '',\r\n          // classificationResult: [],\r\n          isNsNbIntegration: isNsNbIntegration,\r\n          wbcMemo: '',\r\n          rbcMemo: '',\r\n        }\r\n        await saveRunningInfo(newObj, slotId, lastCompleteIndex);\r\n      }\r\n    }\r\n\r\n    async function saveDeviceInfo(deviceInfo: any) {\r\n      try {\r\n        const deviceData = await getDeviceInfoApi();\r\n        if (deviceData.data.length === 0 || !deviceData.data) {\r\n          await createDeviceInfoApi({deviceItem: deviceInfo});\r\n          siteCdDvBarCode.value = true;\r\n        } else {\r\n          siteCdDvBarCode.value = true;\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Error handling device information\", err);\r\n        siteCdDvBarCode.value = true;\r\n      }\r\n    }\r\n\r\n    async function saveRunningInfo(runningInfo: any, slotId: any, last: any) {\r\n      try {\r\n        let result: ApiResponse<void>;\r\n        result = await createRunningApi({userId: Number(userId.value), runingInfoDtoItems: runningInfo});\r\n\r\n        if (result) {\r\n          if (slotId) {\r\n            console.log('save successful');\r\n          }\r\n          instance?.appContext.config.globalProperties.$socket.emit('state', {\r\n            type: 'SEND_DATA',\r\n            payload: 'refreshDb'\r\n          });\r\n          // alert('성공~')\r\n        }\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n});\r\n\r\nconst rbcAppUpdate = (data: any) => {\r\n  rbcArr.value[data.iCasStatArr] = data.rbc;\r\n}\r\n\r\nconst classAppUpdateLast = (data: any) => {\r\n  classArr.value[data.iCasStatArr] = data.classInfo;\r\n}\r\n\r\n// jobCmd가 중복되지 않도록 배열 필터링\r\nconst removeDuplicateJobCmd = (reqArr: any) => {\r\n  const uniqueJobCmds = new Set(); // 중복을 체크하기 위한 Set 생성\r\n  const uniqueReqArr: any = []; // 중복되지 않은 jobCmd를 담을 배열\r\n  reqArr.forEach((req: any) => {\r\n    if (!uniqueJobCmds.has(req.jobCmd)) {\r\n      uniqueJobCmds.add(req.jobCmd); // Set에 jobCmd 추가\r\n      uniqueReqArr.push(req); // 유니크한 jobCmd인 경우 배열에 추가\r\n    }\r\n  });\r\n  return uniqueReqArr;\r\n};\r\n\r\nconst startSysPostWebSocket = async () => {\r\n  tcpReq().embedStatus.sysInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.sysInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst runInfoPostWebSocket = async () => {\r\n  if (!runningInfoBoolen.value) {\r\n    return;\r\n  }\r\n  tcpReq().embedStatus.runningInfo.reqUserId = userId.value;\r\n  const req = tcpReq().embedStatus.runningInfo;\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n};\r\n\r\nconst emitSocketData = async (payload: object) => {\r\n  // console.log('sss')\r\n  await store.dispatch('commonModule/setCommonInfo', {reqArr: payload});\r\n};\r\n\r\nconst sendSettingInfo = () => {\r\n  const isNsNbIntegration = sessionStorage.getItem('isNsNbIntegration');\r\n\r\n  const req = {\r\n    jobCmd: 'SETTINGS',\r\n    reqUserId: '',\r\n    reqDttm: tcpReq().embedStatus.settings.reqDttm,\r\n    pbiaRootDir: pbiaRootDir.value || '',\r\n    oilCount: '1000',\r\n    isOilReset: 'N',\r\n    deviceType: '01',\r\n    // uiVersion: 'uimd-pb-comm_v2.0.102',\r\n    isNsNbIntegration: isNsNbIntegration || 'N',\r\n  };\r\n  store.dispatch('commonModule/setCommonInfo', {reqArr: req});\r\n}\r\n\r\nconst getNormalRange = async () => {\r\n  try {\r\n    const result = await getNormalRangeApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        normalItems.value = data;\r\n      }\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\n\r\n// 메시지를 보내는 함수\r\nconst sendMessage = async (payload: any) => {\r\n  const executeAfterDelay = async () => {\r\n    instance?.appContext.config.globalProperties.$socket.emit('message', {\r\n      type: 'SEND_DATA',\r\n      payload: payload\r\n    });\r\n  };\r\n\r\n  await executeAfterDelay();\r\n  deleteData.value = true;\r\n};\r\n\r\n\r\nconst cellImgGet = async (newUserId?: string) => {\r\n  try {\r\n    const result = await getCellImgApi();\r\n    if (result) {\r\n      if (result?.data) {\r\n        const data = result.data;\r\n        sessionStorage.setItem('iaRootPath', data?.iaRootPath);\r\n        await store.dispatch('commonModule/setCommonInfo', {iaRootPath: String(data?.iaRootPath)});\r\n        await store.dispatch('dataBaseSetDataModule/setDataBaseSetData', {\r\n          isNsNbIntegration: data?.isNsNbIntegration ? 'Y' : 'N'\r\n        });\r\n        // 공통으로 사용되는 부분 세션스토리지 저장 새로고침시에도 가지고 있어야하는부분\r\n        sessionStorage.setItem('isNsNbIntegration', isNsNbIntegration.value);\r\n        sessionStorage.setItem('wbcPositionMargin', data?.wbcPositionMargin);\r\n        sessionStorage.setItem('rbcPositionMargin', data?.rbcPositionMargin);\r\n        sessionStorage.setItem('pltPositionMargin', data?.pltPositionMargin);\r\n        sessionStorage.setItem('keepPage', String(data?.keepPage));\r\n      }\r\n    }\r\n\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nconst showSuccessAlert = async (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'success';\r\n  alertMessage.value = message;\r\n};\r\nconst showErrorAlert = (message: string) => {\r\n  showAlert.value = true;\r\n  alertType.value = 'error';\r\n  alertMessage.value = message;\r\n};\r\n\r\nconst hideAlert = () => {\r\n  showAlert.value = false;\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n#app {\r\n  font-family: Avenir, Helvetica, Arial, sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./App.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=b70f1296&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { Plugin } from 'vue';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n// 소켓 인스턴스를 보유할 앱 컨텍스트의 속성을 생성합니다.\r\ndeclare module '@vue/runtime-core' {\r\n    interface ComponentCustomProperties {\r\n        $socket: Socket;\r\n    }\r\n}\r\nconst apiBaseUrl = window.APP_API_BASE_URL || 'http://192.168.0.131:3002';\r\n\r\nconst socketPlugin: Plugin = {\r\n    install: (app) => {\r\n        const socket: Socket = io(`${apiBaseUrl}`, { transports: ['websocket'], withCredentials: true });\r\n\r\n        app.config.globalProperties.$socket = socket;\r\n    },\r\n};\r\n\r\nexport default socketPlugin;\r\n","// src/icons/customIcons.ts\r\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core';\r\n\r\nconst faHalfCircleUp: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-up',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e002', // unicode\r\n        'M256 0c141.385 0 256 114.615 256 256H0C0 114.615 114.615 0 256 0z' // SVG path data for top half circle\r\n    ]\r\n};\r\n\r\nconst faHalfCircleDown: IconDefinition = {\r\n    prefix: 'fac',\r\n    iconName: 'half-circle-down',\r\n    icon: [\r\n        512, // width\r\n        512, // height\r\n        [], // ligatures\r\n        'e003', // unicode\r\n        'M256 512c-141.385 0-256-114.615-256-256h512c0 141.385-114.615 256-256 256z' // SVG path data for bottom half circle\r\n    ]\r\n};\r\n\r\nexport { faHalfCircleUp, faHalfCircleDown };\r\n","// main.ts\r\nimport { createApp } from 'vue';\r\nimport App from './App.vue';\r\nimport router from './router';\r\nimport store from './store';\r\nimport './assets/css/global.css';\r\nimport './assets/css/layout.css';\r\nimport './assets/css/layoutExtraWide.css';\r\nimport './assets/css/icoBtn.css';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n// @ts-ignore\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n// @ts-ignore\r\nimport { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';\r\nimport socketPlugin from '@/plugins/socketPlugin';\r\nimport { faCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faHalfCircleUp, faHalfCircleDown } from './icons/customIcons'; // 커스텀 아이콘 불러오기\r\n/// <reference path=\"../types/webapi.d.ts\" />\r\n\r\nlibrary.add(fas);\r\nlibrary.add(faCircle);\r\nlibrary.add(faHalfCircleUp);\r\nlibrary.add(faHalfCircleDown); // 커스텀 아이콘 추가\r\n\r\nconst app = createApp(App);\r\n\r\n\r\n// Vuex store 및 router 등록\r\napp.use(router);\r\napp.use(store);\r\napp.use(socketPlugin);\r\n\r\napp.component('font-awesome-icon', FontAwesomeIcon);\r\n\r\napp.mount('#app');\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkuimdCell\"] = self[\"webpackChunkuimdCell\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(6912); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","commonCodeList","grpCd","grpNm","cd","cdNm","testType","value","text","bmTestType","getCommonCode","foundCode","find","stringToDateTime","str","year","month","day","hour","minute","second","substring","getTestTypeText","matchingOption","option","getBmTestTypeText","getBarcodeDetailImageUrl","imageName","iaRootPath","slotId","barcodeDirName","baseUrl","window","APP_API_BASE_URL","_hoisted_1","_createElementVNode","class","_createTextVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_defineComponent","__name","props","setup","__props","store","useStore","embeddedStatusJobCmd","computed","state","embeddedStatusModule","siteCd","commonModule","processInfoItem","ref","prevOilCount","projectBm","getCurrentInstance","watch","async","newVal","length","sysInfo","oilCount","onMounted","PROJECT_TYPE","parsedData","oldVal","runningInfoGet","deep","data","jobCmd","currentSlot","slotInfo","cassetteNo","barcodeId","barcodeNo","patientId","patientName","patientNm","orderDate","orderDttm","analyzedDttm","_ctx","_cache","_openBlock","_createElementBlock","_toDisplayString","wbcCount","__exports__","analysisOptions","wbcCountOptions","bmCountOptions","stitchCountOptions","slideCard","input","slotNo","slotState","output","slideCard100a","messages","Logout","GET_POSITION_LIST","GET_LOGIN_HISTORY","SET_USER","IS_REGIST_USER","UPDATE_LOGIN_DTTM","UPDATE_USER_AVAILABLE","GET_WBC_CLASS_LIST","GET_WBC_CLASS_LIST_ALL","GET_WBC_TOTAL_COUNT","UPDATE_WBC_COUNT","GET_WBC_COUNT","GET_TEST_TYPE","GET_MODIFIED_TEST_TYPE","GET_STITCH_COUNT","GET_RBC_COUNT","GET_RBC_COUNT_HIST","GET_RBC_COUNT_SKMC","UPDATE_DEGREE","INIT_WBC_COUNT","INIT_RBC_DEGREE","GET_WBC_INFO","SET_WBC_IMAGE_HIST","GET_WBC_IMAGE_HIST","INIT_WBC_IMAGE_HIST","INSERT_WBC_CLASSIFICATION","SET_WBC_CUSTOM_LIST","UPDATE_HOT_KEYS","UPDATE_BF_HOT_KEYS","UPDATE_ORDER","UPDATE_ORDER_BF","UPDATE_IMAGE_HIST","SET_CURRENT_WBC_RESULTS","GET_CURRENT_WBC_RESULTS","SET_BEFORE_WBC_RESULTS","GET_BEFORE_WBC_RESULTS","GET_WBC_MODIFY_LIST","GET_WBC_MODIFY_LIST_ALL","GET_BF_MODIFY_LIST","GET_RBC_CLASS_LIST","GET_MALARIA_COUNT","UPDATE_MALARIA_COUNT","SET_CURRENT_RBC_RESULTS","GET_CURRENT_RBC_RESULTS","SET_CLASSIFICATION","GET_CLASSIFICATION_ITEM","SET_CLASSIFICATION_ITEM","UPDATE_RBC_CLASSIFICATION","UPDATE_RBC_CLASSIFICATION_SKMC","INSERT_WBC_SUCCESS","SELECT_RBC_DEGREE","UPDATE_RBC_DEGREE","SET_TEST_LIST","GET_TEST_LIST","GET_TEST_RESULT","GET_RBC_FIELDS","GET_WBC_FIELDS","GET_RBC_ITEMS","GET_WBC_ITEMS","INIT_OIL_COUNT","UPDATE_RESULT","UPDATE_RUNNING_STATE","GET_ORDER_LIST","SET_ORDER_LIST","UPDATE_ORDER_LIST","INIT_ORDER_LIST","GET_TEST_RESULT_ALL","GET_SEARCH_OPTIONS","UPDATE_SEARCH_OPTIONS","SET_TEST_HISTORY","GET_TEST_HISTORY_LIST","ALL_TEST_HISTORY_LIST","SEARCH_TEST_HISTORY_LIST","UPDATE_TEST_HISTORY","GET_TEST_HISTORY","DELETE_TEST_HISTORY","UPDATE_SIGNED_STATE","UPDATE_TEST_HISTORY_WBC_INFO","GET_RBC_COMMENT","GET_WBC_COMMENT","GET_RUNNING_INTERVAL_ID","SET_RUNNING_INTERVAL_ID","UPDATE_TIMER","GET_TIMER","SET_TIMER","SET_WORKING_INTERVAL_ID","GET_WORKING_INTERVAL_ID","GET_RUNNING_STATE","SET_SLIDE_TIMER","UPDATE_SLIDE_TIMER","GET_SLIDE_TIME_COUNT","SET_USER_STOP","GET_USER_STOP","SET_WBC_CELL_POSITION","GET_WBC_CELL_POSITION","GET_TEST_HISTORY_PREV","GET_TEST_HISTORY_NEXT","SET_IS_RECOVERY_RUN","GET_IS_RECOVERY_RUN","SET_WORK_LIST","GET_WORK_LIST","INIT_WORK_LIST","DELETE_WORK_LIST","UPDATE_WORK_LIST","UPDATE_WORK_LIST_BM","UPDATE_SIGNED_WORK_LIST","UPDATE_RBC_COMMENT","UPDATE_WBC_COMMENT","UPDATE_BM_COMMENT","UPDATE_SELECT_ORDER_ID","GET_SELECT_ORDER_ID","ADD_WORK_LIST","GET_TEST_BARCODES","ADD_DSP_LIST","GET_DSP_LIST","SET_LIS_HOT_KEY","UPDATE_NEW_TEST_SET","UPDATE_EXEC_TEST_TYPE","INITIALIZE_MOUNT_CNT","UPDATE_MOUNT_CNT","GET_CURRENT_USER","GET_SETTINGS","UPDATE_RUNNING_PATH","UPDATE_RESULT_PATH_WBC","UPDATE_RESULT_PATH_RBC","UPDATE_BARCODE_PATH","GET_SYSTEM_TIME_ID","SET_SYSTEM_TIME_ID","GET_USER","UPDATE_REMEMBER_STATE","SET_CURRENT_USER","UPDATE_ROOT_PATH","GET_FILE_FILTER","GET_USER_LIST","UPDATE_ANALYSIS_TYPE","UPDATE_TEST_TYPE","UPDATE_RUNNING_MODE","UPDATE_USER","DELETE_USER","UPDATE_MARKER_STATE","GET_MARKER_STATE","SET_PAUSE_STATE","GET_PAUSE_STATE","GET_BF_WHOLE_SLIDE_PATH","GET_BF_WBC_CLASS_LIST","GET_SIZE_SLIDE_VALUE","UPDATE_LIS_CODE","SELECT_LIS_CODE","SELECT_LIS_CODE_RBC","UPDATE_CBC_CODE","SELECT_CBC_CODE","UPDATE_LIS_CONN_PATH","SELECT_LIS_CONN_PATH","GET_BACKUP_LIST","RESTORE_BACKUP_DATA","DELETE_BACKUP_DATA","RESET_RBC_DEGREE","GET_DEFAULT_RBC_DEGREE","UPDATE_CHECKED_CELL","SET_LOCK_SLIDE","SET_HOST_IP","GET_HOST_IP","GET_NORMAL_RANGE","UPDATE_NORMAL_RANGE","GET_LOCK_STATE","GET_KUMC_CBC_PATH","SET_WBC_NORMAL_RANGE","GET_WBC_NORMAL_RANGE","GET_SKMC_RESULT_CD","SET_SKMC_RESULT_CD","REMOVE_SKMC_RESULT_CD","GET_SKMC_REMARK","SET_SKMC_REMARK","REMOVE_SKMC_REMARK","SET_SKMC_FAVORITE","GET_SKMC_FAVORITE","GET_SKMC_LIS_RESULTS","SET_SKMC_LIS_RESULTS","SET_ALARM_COUNT","SET_SORT_TYPE","GET_SORT_TYPE","SET_CUSTOM_CLASS","GET_CUSTOM_CLASS","SET_SYS_INFO","GET_SYS_INFO","SET_BACKEND_DATA","GET_BACKEND_DATA","SELECT_CBC_CODE_INHA","SELECT_LIS_CODE_INHA","SELECT_LIS_CODE_RBC_INHA","SELECT_LIS_CONN_PATH_INHA","GET_RBC_COUNT_INHA","SELECT_WBC_RUNNING_COUNT","GET_BRIGHTNESS_SLIDE_VALUE","GET_RED_VALUE","GET_GREEN_VALUE","GET_BLUE_VALUE","GET_RGB_VALUE","SET_SIZE_SLIDE_VALUE","SET_BRIGHTNESS_SLIDE_VALUE","SET_RED_VALUE","SET_GREEN_VALUE","SET_BLUE_VALUE","SET_RGB_VALUE","SET_ROLLBACK_LIST","GET_ROLLBACK_LIST","GET_IMAGE_ROLLBACK_LIST","SET_CLONED_WBC_INFO","GET_RBC_BRIGHTNESS_SLIDE_VALUE","GET_RBC_RED_VALUE","GET_RBC_GREEN_VALUE","GET_RBC_BLUE_VALUE","SET_RBC_BRIGHTNESS_SLIDE_VALUE","SET_RBC_RED_VALUE","SET_RBC_GREEN_VALUE","SET_RBC_BLUE_VALUE","SET_CLONED_RBC_INFO","UPDATE_OIL_COUNT","SET_RESULT_LIST","CLEAR_RESULT_LIST","GET_RESULT_LIST","SET_WBC_REPORT_PRINT","GET_WBC_REPORT_PRINT","SET_RBC_REPORT_PRINT","GET_RBC_REPORT_PRINT","SET_RBC_SIZE","GET_RBC_SIZE","SET_RBC_CHROMIA","GET_RBC_CHROMIA","SET_RBC_SHAPE","GET_RBC_SHAPE","PUSH_RBC_SHAPE","POP_RBC_SHAPE","SET_RBC_PLATELET","GET_RBC_PLATELET","PUSH_RBC_PLATELET","POP_RBC_PLATELET","SET_RBC_INCLUSION","GET_RBC_INCLUSION","POP_RBC_INCLUSION","PUSH_RBC_INCLUSION","SET_IS_SHOW_MODAL_BARCODE","GET_IS_SHOW_MODAL_BARCODE","SET_IS_NS_NB_INTEGRATION","GET_IS_NS_NB_INTEGRATION","SET_IS_ALARM","GET_IS_ALARM","SET_IS_CBC_SHOW","GET_IS_CBC_SHOW","SET_SITE_CD","GET_SITE_CD","SET_DEVICE_SERIALNUM","GET_DEVICE_SERIALNUM","SELECT_BF_HOT_KEY","SELECT_WBC_HOT_KEY","SELECT_WBC_CUSTOM_CLASS","SELECT_EMP_NO","INSERT_WBC_MODIFY_HIST","GET_WBC_MODIFY_HIST","UPDATE_WBC_HIST_LIST","GET_WBC_HIST_LIST","GET_COMMON_CODE_LIST","GET_COMMON_CODE","GET_CODE_LIST_USER_POSITION","GET_CODE_LIST_USER_AUTHORIZATION","GET_CODE_LIST_USER_CASSETE_STATE","GET_CODE_LIST_PROCESSING_STATE","GET_CODE_LIST_ANALYSIS_TYPE","GET_CODE_LIST_CELL_COUNT","GET_CODE_LIST_GENERAL_STAIN","GET_CODE_LIST_SPECIAL_STAIN","GET_CODE_LIST_IMMUNO_STAIN","GET_CODE_LIST_SAMPLING_STAIN","GET_CODE_LIST_GENDER","GET_CODE_LIST_TEST_TYPE","GET_CODE_SIGNED_STATE","GET_CODE_LOG_TYPE","GET_CODE_SLOT_STATE","EVENT_TYPE_USER","EVENT_TYPE_SYSTEM","SET_EVENT_LOG","GET_EVENT_LOG","REMOVE_EVENT_LOG","REMEMBER_PWD_KEY","REMEMBER_PWD_IV","RECEIVE_DATA_BROADCAST_CHAN","GET_PB_CLASSIFICATIONS","GET_CLASSIFICATION_IMAGES","GET_MARKER_POSITION","GET_PB_HOT_KEYS","UPDATE_CLASSIFICATION","PB_IA_MOVE_IMAGE","SET_WBC_IMAGE_LIST","GET_PB_WBC_IMAGES","SET_SELECTED_ITEM","GET_SELECTED_ITEM","IA_SET_CUSTOM_CLASS","IA_GET_CUSTOM_CLASS","IDS_MSG_SUCCESS","IDS_MSG_FAILED","IDS_MSG_OIL_REMAIN_COUNTER","IDS_MSG_POWEROFF","IDS_MSG_INITALIZE","IDS_MSG_SIGNING_COMPLETE","IDS_MSG_DELETE_THE_SELECTED_ITEMS","IDS_MSG_ACCOUNT_CHANGED","IDS_MSG_DELETE_ACCOUNT","IDS_MSG_LOGOUT","IDS_MSG_DUPLICATE_KEY","IDS_MSG_HOTKEY_IN_ENGLISH","IDS_ERROR_CHECK_ID","IDS_ERROR_CHECK_PASSWORD","IDS_ERROR_NOT_MATCHED_PASSWORD","IDS_ERROR_SIGINUP","IDS_ERROR_SIGINUP_ALREADY_ID","IDS_ERROR_LOGIN_ERROR","IDS_ERROR_LOGIN_ID","IDS_ERROR_ALREADY_RUNNING","IDS_ERROR_STOP_PROCESS","IDS_ERROR_INIT_ERROR","IDS_ERROR_CHECK_REQUIRED_FIELDS","IDS_ERROR_CHECK_SLOT_NO","IDS_ERROR_FAVORITE_MAX_REGIST","IDS_ERROR_FAVORITE_MAX_REGIST2","IDS_ERROR_ENTER_YOUR_ORDER_DETAILS","IDS_ERROR_SELECT_A_TARGET_ITEM","IDS_ERROR_PLEASE_SELECT_AN_IMAGE","IDS_ERROR_ALREADY_ADDED","IDS_ERROR_ADD_A_WORKLIST","IDS_ERROR_NO_TEST_RESULTS","IDS_ERROR_FILE_CLISSIFICATION","IDS_ERROR_ENTER_CLASS_INFO","IDS_ERROR_PLEASE_CONFIRM_YOUR_USER_ID","IDS_DOWNLOAD_COMPLETE","IDS_SELECT_SLIDE","IDS_SIGNED_ITEMS_CANNOT_BE_MODIFIED","IDS_RECOVER_GRIPPER_CONDITION","IDS_PLEASE_ENTER_END_DATE","IDS_PLEASE_ENTER_START_DATE","IDS_THE_MAXIMUM_INQUIRY_DATE_IS_31_DAYS","IDS_START_DATE_IS_NOT_GREATER_THEN_END_DATE","IDS_RESTART_SYSTEM","IDS_PLEASE_ENTER_YOUR_BARCODE_NUMBER","IDS_BARCODE_REGISTRATION_SUCCESSFUL","IDS_THIS_IS_A_DUPLICATION_ABBREVIATION","IDS_THIS_CARD_HAS_ALREADY_BEEN_USED","IDS_MSG_UPLOAD_LIS","IDS_MSG_SUBMIT_SLIDE","IDS_MSG_CONFIRM_SLIDE","IDS_PLEASE_SELECT_A_CLASS","IDS_PLEASE_SELECT_A_BACKUP_DATE","IDS_PLEASE_SELECT_A_BACKUP_PATH","IDS_PLEASE_SELECT_A_BACKUP_FILE","IDS_NO_DATA_FOUND","IDS_MSG_DATA_BACKUP","IDS_MSG_DATA_RESTORE","IDS_MSG_SIZE_CHROMIA_LINKED_LIS","UPDATE_SUCCESSFULLY","TCP_DiSCONNECTED","alreadyInitialized","getDateTimeStr","now","moment","formattedTime","format","formatDateString","dateString","momentObj","getCountToTime","timeCount","Math","floor","minutes","seconds","pad","String","padStart","formatDate","date","getFullYear","getMonth","toString","getDate","tcpReq","reqDttm","embedStatus","start","reqUserId","startAction","stitchCount","runningMode","positionMargin","wbcPositionMargin","pltPositionMargin","init","restart","bfSelectFiles","stop","isEmergency","isUserStop","end","runningInfo","pause","runIngComp","recovery","settings","pbiaRootDir","isOilReset","deviceType","isNsNbIntegration","oilPrime","gripperOpen","cameraReset","useHttpClient","apiBaseUrl","httpGet","url","parameters","type","httpGetAct","endpoint","options","headers","axios","defaults","withCredentials","slush","response","get","Promise","undefined","success","reject","httpPost","payload","contentType","formData","httpPostAct","responseType","post","httpPut","httpPutAct","put","httpDelete","httpDeleteAct","delete","apiConstants","auth","refresh","requiresToken","processInfo","list","rbcclassification","wbcclassification","user","register","login","userCheck","getUsers","userDataPut","cellImgAnalyzedPost","cellImgAdd","cellImgGet","cellImgPut","rbcDegree","rbcDegreeAdd","wbcCustomClass","create","update","wbcHotKeys","bfHotKeys","normalRange","imagePrint","lisCode","lisCodeRbc","cbcCode","filePathSet","runCount","minCount","detail","pageUpDown","updatePcIpState","clearPcIpState","folder","folders","classOrder","images","move","moveClassImage","jsonReader","jsonCreate","pdf","filesystem","readGet","createDirectory","fileCreate","fileTxtRead","H7Read","H7Message","Hl7Create","device","getDeviceInfo","ip","backUp","backUpDate","httpClient","createCellImgApi","request","getCellImgApi","putCellImgApi","createRbcDegreeApi","putRbcDegreeApi","getRbcDegreeApi","createWbcCustomClassApi","updateWbcCustomClassApi","getWbcCustomClassApi","createWbcHotKeysApi","updateWbcHotKeysApi","getWbcHotKeysApi","createBfHotKeysApi","updateBfHotKeysApi","getBfHotKeysApi","createNormalRangeApi","updateNormalRangeApi","getNormalRangeApi","createImagePrintApi","updateImagePrintApi","getImagePrintApi","createLisCodeWbcApi","updateLisCodeWbcApi","getLisCodeWbcApi","createLisCodeRbcApi","updateLisCodeRbcApi","getLisCodeRbcApi","createCbcCodeRbcApi","updateCbcCodeRbcApi","getCbcCodeRbcApi","createFilePathSetApi","updateFilePathSetApi","getFilePathSetApi","createRunInfoWbcApi","updateRunInfoApi","getRunInfoApi","createMinCountApi","updateMinCountApi","getMinCountApi","getLisCodeApi","getDrivesApi","createOrderClassApi","getOrderClassApi","putOrderClassApi","EventBus","constructor","_defineProperty","subscribe","eventName","handler","this","events","push","publish","args","handlers","forEach","unsubscribe","filter","h","typeClass","emit","__emit","hideAlert","testTypeList","testBmTypeList","AnalysisList","bmAnalysisList","AnalysisList2","stitchCountList","PositionMarginList","WbcPositionMarginList","defaultCbcList","classCd","fullNm","isSelected","rbcClassList","categoryId","categoryNm","classInfo","classId","classNm","degree","malariaCount","currentRbcResults","defaultRbcDegree","degree1","degree2","degree3","abbreviation","key","orderIdx","bmHotKeys","min","max","unit","imagePrintAndWbc","checked","imagePrintAndBm","lisCodeWbcOption","lisCodeRbcOption","minRunCount","minGPCount","minPACount","wbcRunningCount","wbcConditionCount","lisHotKeyAndLisFilePathAndUrl","lisHotKey","lisFilePath","cbcFilePath","barcodeImgDir","dirName","howellJollyDirName","malariaDirName","noMalariaDirName","rbcClassDirName","rbcImageDirName","wbcClassDirName","bfDirName","bfHighDirName","bfClassDirName","userModuleDataGet","userModule","projectType","countType","runInfo","executeState","executeModule","isPause","isRunningState","userStop","isRecoveryRun","isInit","userId","analysisType","commonDataGet","showStopBtn","btnStatus","showAlert","alertType","alertMessage","testTypeArr","emits","newUserId","oldUserId","initDataExecut","nextTick","initData","loginSetData","dispatch","newRunInfo","newVals","newIsRunningState","newBfSelectFiles","newEmbeddedStatusJobCmd","newExecuteState","newIsPause","newUserStop","newIsRecoveryRun","newIsInit","emitSocketData","toggleStartStop","action","showSuccessAlert","confirm","rbcPositionMargin","sessionStorage","getItem","assign","console","log","InfoData","startEmbedded","message","sendInit","newObj","runInfoObj","result","diffCellAnalyzingCount","pbsCellAnalyzingCount","bfCellAnalyzingCount","_component_font_awesome_icon","_resolveComponent","_Fragment","_withDirectives","$event","disabled","_renderList","_vModelSelect","_createVNode","icon","_normalizeClass","onClick","_unref","style","_createBlock","Alert","onHide","_createCommentVNode","width","height","runningInfoModule","timeDataGet","timeModule","timeNum","size","strokeWidth","progressColor","radius","circumference","PI","dashoffset","maxWbcCount","eqStatCd","slideTime","totalSlideTime","countingInterval","countingIntervalTotal","slideCardData","totalElapsedTimeCount","elapsedTimeCount","isBlinking","interval","newData","updateInputState","iCasStat","oCasStat","stopTotalCounting","stopCounting","regex","dataICasStat","search","newValsObj","JSON","parse","stringify","runningSlotId","startTotalCounting","newSlot","slotArray","changeSlideState","changeSlide","slideBooleanState","slideIs","startCounting","clearInterval","stateCd","Number","percentage","setInterval","initValData","item","source","target","index","charAt","setItem","onBeforeUnmount","removeItem","changeWqStatCd","getSlotStateClass","cx","cy","r","stroke","fill","colspan","dspOrderList","pb100aCassette","startStatus","existingItemIndex","findIndex","slot","basicWbcArr","basicBmClassList","defaultWbcClassList","defaultBmClassList","basicWbcArrClint","title","name","count","percent","order","basicBmClassListClint","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","storeEm","dspWbcClassList","dspBfClassList","nonWbcClassList","totalCount","updateDataArray","wbcInfo","newSlotInfo","wbcinfoType","bmIsBoolen","bmInfo","wbcInfoArray","arrType","areAllCountsZero","classList","every","classGroup","category","allCountsAreZero","flat","nonRbcWbcInfoArray","includes","updateCounts","iCasStatArr","lastIndexOf","getIncludesStrBySiteCd","arraysBySiteCd","includesStr","includesStr2","arraysForSiteCd","calculateWbcPercentages","wbcList","total","totalVal","toFixed","updatePercentages","shouldRenderCategory","targetArray","getStringArrayBySiteCd","formattedPercent","getCategoryName","outerIndex","innerIndex","nWbcItem","basicRbcArr","dspRbcClassList","maxRbcCount","pltCount","bfSelectModeList","rbcDegreeStandard","getRbcDegreeData","rbcInfo","lowPowerPath","Array","isArray","wbcInfoArr","calcRbcDegree","sort","a","b","seqNo","rbcInfos","sizeTotal","chromiaTotal","originalData","rbcCategory","rbcClass","idx1","idx2","degreeStandard","originalDegree","degreeCount","isNaN","setDegree","poikiloDegree","rbc","onClickBfImg","event","lowPower","existingIndex","splice","rowStart","rowIndex","slice","colIndex","src","path","ref_for","classIndex","degreeIndex","generateUniqueId","random","getImageUrl","types","imageUrls","folderPath","match","fileName","imageUrl","unshift","accumulatedRunningPath","runningPath","pathItem","isDuplicate","image","existingImage","_Transition","mode","default","_withCtx","alt","_","iCasExist","oCasExist","casExistChangeText","val","pbVersion","PB_VERSION","rbcUpdate","classInfoUpdate","initDataChangeText","Execute","onInitDataChangeText","ProcessInfo","orderList","_vShow","isClass","workingView","WorkingView100A","onRbcUpdate","onClassInfoUpdate","FoundingCells","_component_Fragment","Analysis","createUser","getAllUsersApi","employeeNo","idVal","nameVal","passwordRepeat","password","userType","goLoginPage","router","createAccount","currentDate","Date","subscriptionDate","_vModelText","createDeviceInfoApi","getDeviceInfoApi","getDeviceIpApi","saveHttpType","orderHttpType","normalItems","rbcClassListArr","reactive","defaultCellImgData","testTypeCd","isAlarm","alarmCount","keepPage","backupPath","backupStartDate","backupEndDate","firstCellImgSet","cellImgData","cellImgSet","toISOString","split","firstSaveOrderClass","firstSaveNormalRange","normalRangeItems","firstCreateRbcDegreeData","combindDegree","rbcDegreeList","classItem","error","defaultDegree","defaultItem","isAutoLoginEnabled","isAutoLogginable","getStoredUser","localStorage","loginUser","goJoinPage","getIpAddress","viewerCheck","updateAccount","document","documentElement","requestFullscreen","resFlag","placeholder","rowspan","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","analysisVal","backupRootPath","local","toDate","drive","backupDrive","cellimgId","createBackup","backupDto","startDate","add","endDate","sourceFolderPath","driveGet","saveData","backUpData","savePlace","backupPlace","dataKey","toggleNsNbIntegration","toggleAlarm","toggleKeepPage","Datepicker","modelValue","onResetDegree","createRbcDegreeData","showErrorAlert","processData","categoryMap","Map","has","existingCategory","existingClassIndex","ci","newCategory","set","from","values","instance","onGripperOpenWebSocket","sendMessage","onCameraResetWebSocket","appContext","config","globalProperties","$socket","onGripperOpen","onCameraReset","wbcCustomParm","customNum","wbcCustomItems","getWbcCustomClasses","saveWbcCustomClass","updateResult","classArr","maxlength","wbcHotKeysItems","getWbcHotKeyClasses","bfHotKeysItems","getBfHotKeyClasses","saveBfCustomClass","getNormalRange","saveNormalRange","wbcInfoChangeVal","dragIndex","dragOffsetY","getOrderClass","saveOrderClassSave","startDrag","clientY","getBoundingClientRect","top","drop","preventDefault","movedItem","idx","draggable","onDragstart","onDragover","_withModifiers","onDrop","wbcRunInfoCountArr","getWbcRunningCountData","runCountResult","runInfoData","saveWbcRunningCount","wbcRunCountItems","wbcRunning","activeTab","activateTab","tabName","activeTabComponent","CellImageAnalyzed","RbcDegree","DeviceControls","WbcCustomClass","WbcHotKey","BfHotKey","NormalRange","WbcOrder","WbcRunningCount","_resolveDynamicComponent","currentUserId","getAllUsers","storedUser","allUsers","replace","userSearchOption","userSearchOptions","inputText","filterUsers","users","searchText","searchOption","searchQuery","toLowerCase","searchField","onSearch","filteredUsers","latestDate","imagePrintAndWbcArr","selectedItems","getImagePrintData","saveImagePrint","imagePrintItems","_vModelCheckbox","lisCodeWbcArr","lisCodeRbcArr","minCountArr","saveLisCode","rbcResult","minCountResult","lisCodeItems","updateRbcResult","updateMinCountResult","minCountItems","wbcResult","wbcData","rbcData","minCountData","cbcCodeArr","saveCbcCode","cbcCodeItems","filePathSetArr","getFilePathSetData","saveFilePathSet","filePathSetItems","updateHotKey","updateFilePath","updateCbcFilePath","onInput","selectedTab","selectTab","selectedTabComponent","ImagePrint","LisCode","FilePathSet","script","render","projectVersion","AI_VERSION","WEB_FRONTEND_VERSION","WEB_BACKEND_VERSION","tabs","currentTab","changeTab","tab","components","LognAccount","AnalysisDatabase","Report","QualityCheck","Version","storedTab","currentTabComponent","visible","closeLayer","createRunningApi","updateRunningApi","getRunningApi","queryString","entries","encodeURIComponent","join","deleteRunningApi","detailRunningApi","pageUpDownRunnIngApi","updatePcIpStateApi","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","printContent","selectItemsData","sessionStorageSelectItems","nonWbcIdList","selectItemWbc","printPage","filteredWbcInfo","selectItems","img_drive_root_path","content","compressedContent","pako","innerHTML","level","fetch","method","body","ok","blob","URL","createObjectURL","open","revokeObjectURL","closePrint","ref_key","submitUserId","submitOfDate","birthDay","gender","rbcMemo","wbcMemo","_normalizeStyle","coordinates","loadMoreRef","selectedItemId","itemObj","myIp","contextMenu","x","y","rightClickItem","printOnOff","selectAllCheckbox","barcodeImg","addEventListener","handleOutsideClick","onUnmounted","removeEventListener","watchEffect","dbData","dbBaseTrClickId","filteredItems","selectItem","observer","IntersectionObserver","handleIntersection","root","rootMargin","threshold","observe","printClose","printStart","resetContextMenu","editOrderData","editData","classificationRowDbClick","rowDbClick","selectAllItems","contextMenuElement","querySelector","contains","rowRightClick","wbcInfoData","sortedArray","clientX","handleCheckboxChange","hasOwnProperty","entry","isIntersecting","intersectionRatio","selectedRow","scrollIntoView","behavior","block","ipAddress","then","catch","lock_status","clonedWbcInfo","wbcInfoAfter","clonedRbcInfo","onModalOpen","dbDataEditSet","updatedRuningInfo","localDbData","indexToUpdate","runingInfoDtoItems","openLayer","submitState","deleteRow","idsToDelete","rootArr","ids","submitStateChangeText","pilePath","selectedItem","newSelectedItem","showClassificationResults","classificationResult","_withScopeId","n","_pushScopeId","_popScopeId","allImages","hiddenImages","selectedImage","createAllImages","clickImage","selectImageText","isSelectedImage","reduce","acc","hideImage","imageSet","onError","rootPath","dbGetData","today","thirtyDaysAgo","setDate","searchType","page","titleItem","titleItemArr","nrCount","wbcCountOrder","classListToggle","bmClassIsBoolen","on","initDbData","classListToggleEvent","changeTestType","updateFilter","lastSearchParams","loadLastSearchParams","numberOfCalls","i","getDbData","saveLastSearchParams","storedSearchParams","pageNum","requestData","pageSize","startDay","endDay","dateA","dateB","diff","diffInMs","getTime","diffInDays","loadMoreData","onChange","for","ListTable","onLoadMoreData","onInitData","onSelectItem","onRefresh","ListInfo","ListWbcImg","ListBmImg","hideConfirm","okConfirm","newValue","updateValue","readJsonFile","readFileTxt","readH7File","readH7Message","createH17","checkedClassIndices","rbcInfoAfterVal","rbcInfoBeforeVal","memo","sliderValue","memoModal","showConfirm","confirmType","confirmMessage","isBefore","classInfoArr","useRouter","except","selectedClass","allCheckType","rbcInfoPathAfter","rbcTotalVal","jsonIsBool","rbcReData","currentRoute","rbcTotalAndReCount","processItems","argument","newItem","afterChange","allCheckClear","url_new","response_new","fullPath","url_Old","response_old","newJsonData","rbcItem","newRbcData","foundElementIndex","el","sss","posX","posY","percentageChange","classChange","sensitivity","classInfoItem","sensRbcReJsonSend","rbcInfoAfterSensitivity","className","clickChangeSens","rbcInfoAfter","rbcInfoAfterData","selectedClassVal","findClass","updatedSelectItems","updatedItem","resRunningItem","toggleAll","check","allCheckboxes","checkbox","updateClassInfoArr","isChecked","some","onClickDegree","isNormal","memoOpen","memoCancel","memoChange","alertShow","scrollTo","commitConfirmed","handleOkConfirm","onCommit","localTime","SliderBar","Confirm","onOkConfirm","rulers","moveImgPost","moveClassImagePost","malariaList","noMalariaList","selectedClickImages","indexBeforePressingShift","draggedImages","imageExist","getImageList","folderName","json","err","handleBodyClick","closest","handleClickImage","section","imgName","clickedImage","shiftKey","startIdx","endIdx","ctrlKey","onDragStart","targetSection","draggedImage","moveImage","pathNew","sourceFolder","destinationFolder","imgNameArr","malaria","noMalaria","viewer","imgSet","imgBrightness","imageRgb","isGrid","isMagnifyingGlass","activeRuler","showSelect","rulerPos","prevPosX","prevPosY","left","rulerSize","rulerWidth","viewBoxWH","tilingViewerLayer","tileExist","canvasOverlay","drawPath","moveRbcClass","selectBoxX","selectBoxY","removeRbcMarker","removeDiv","initElement","closeSelectBox","moveRbcClassEvent","newAsrr","moveRbcClassItem","rbcInfoPathAfterJsonCreate","drawRbcMarker","existingOverlays","getElementsByClassName","overlaysArray","overlay","removeOverlay","compareData","jsonData","jsonString","utf8Data","TextEncoder","encode","compressedData","Blob","FormData","append","filePath","selectBox","rbcMarker","rbcClassRightClick","currentTarget","HTMLElement","getElementById","newHtml","insertAdjacentHTML","ctx","getContext","canvas","clearRect","beginPath","colors","info","lineWidth","strokeStyle","rectPath","Path2D","classItemPosX","classItemPosY","x2","x1","y2","y1","ddrr","rect","tilesInfo","fetchTilesInfo","OpenSeadragon","animationTime","navigatorSizeRatio","showNavigator","sequenceMode","defaultZoomLevel","prefixUrl","tileSources","showReferenceStrip","gestureSettingsMouse","clickToZoom","maxZoomLevel","element","moveHandler","magCanvas","removeChild","drawer","createElement","magCtx","magWidth","magHeight","zoomLevel","position","border","borderRadius","zIndex","appendChild","drawImage","visibility","addOverlay","location","addHandler","originalEvent","itemPos","color","setAttribute","backgroundColor","opacity","parseFloat","overlayRect","viewport","imageToViewportRectangle","clickPos","pointFromPixel","canvasPos","existingOverlay","previousOverlay","updateOverlay","fileNames","endsWith","Image","xmlns","Url","Format","Overlap","TileSize","Size","Height","Width","toggleViewer","viewerType","imgSetOpen","changeImgBrightness","brightness","red","green","blue","imageContainer","changeImageRgb","rgbReset","onClickGrid","drawLines","removeGridLines","imageHeight","world","getItemAt","getContentSize","imageWidth","zoom","getZoom","maxNumberOfLines","numberOfLines","round","minGap","linePosition","drawLine","lineElement","background","userSelect","pointerEvents","container","gridLines","querySelectorAll","line","remove","onClickRuler","ruler","drawRuler","divtilingViewer","rulerOverlay","clientWidth","clientHeight","refreshRuler","isPress","onmousedown","onmouseup","onwheel","deltaY","parent","onmousemove","offsetLeft","offsetTop","rSize","zoomRatio","viewportToImageZoom","titleElement","textAlign","fontSize","minWidth","startX","endX","startY","endY","centerX","centerY","halfWidth","onClickZoom","Malaria","onContextmenu","resData","route","useRoute","orderClass","cbcLayer","isButtonDisabled","timeoutId","pageMoveDeleteStop","isNext","moveWbc","getRunningInfoDetail","deleteConnectionStatus","upDownBlockAccess","pageGo","sortWbcInfo","newSortArr","nameA","nameB","pageUpDownRunnIng","step","res","clearTimeout","processNextDbIndex","direction","setTimeout","handleDataResponse","dbId","resClassInfo","wbcArr","sortedWbcInfo","updateUpDown","selectWbc","selectItemsNewVal","isActive","lisCbcClick","onRight","cbcWorkList","cbcPatientNo","cbcPatientNm","cbcSex","cbcAge","inhaTestCode","cbcFilePathSetArr","deviceSerialNm","cbcCodeList","selectItemsVal","getCbcPathData","getCbcCodeList","initCbcData","realUrl","params","submit_id","business_id","instcd","bcno","xml","xml2json","compact","spcworklist","worklist","readFileTxtRes","cbcData","cbcDataArray","excludedTitles","trim","machine","episode","returnCode","regNo","sex","age","testCode","testCodeList","codes","codeArray","obj","deviceBarcode","msg","segments","cbcSegment","CBC_CD","getField","updateRunningApiPost","originalDb","cbcItem","tclsscrnnm","_cdata","inptrslt","cham","isBeforeUpdate","refreshClass","classInfoArrUpdate","unChecked","ClassInfoMenu","onRefreshClass","LisCbc","RbcClass","onIsBeforeUpdate","onClassInfoArrUpdate","RbcImageList","onUnChecked","eqmtcd","CbcWbcTestCdList_0002","spcParams","fileSysPost","createFile","selectItemsSessionStorageData","clonedWbcInfoStore","nonRbcClassList","titleArr","toggleLock","okMessageType","lisFilePathSetArr","afterChang","getLisWbcRbcData","getLisPathData","lisModalOpen","goClass","wbcClassTileChange","updateOriginalDb","toggleLockEvent","uploadLis","codeList","fiveDiffWorkList","wbcDiffCountItem","wbcItem","wbcTemp","fiveDiffItem","nsPercentItem","ancResult","checkUserAuth","isUserAuth","empNo","separator1","fromCharCode","separator2","terminator","resultFlag","ResultFlag","resultflag","_text","error2","lisLastStep","seq","IA_CD","lisFileUrlCreate","godae","inhaDataSend","otherDataSend","fileCreateRes","sendingApp","sendingFacility","receivingApp","receivingFacility","dateTime","security","messageType","messageControlId","processingId","hl7VersionId","sendLisMessage","filepath","resultStr","tmpList","tmpStr","rbcTmp","MIN_COUNT","specialCodes","rbcItemElement","replacements","rbcTmp2","kumcMergePercent","kumcBandPercent","segItem","bandItem","parms","filename","resultMsg","userid","errorCode","errorMessage","succ","fail","userNm","getUsernm","usernm","getStringValue","noAlert","beforeChang","totalCountSet","sortedWbcInfoAfter","titleInArray","classInfoSort","sortArr","isBeforeClicked","wbcArrs","WbcClass","Print","onPrintClose","selectedTitle","moveImgIsBool","draggedItemIndex","draggedImageIndex","isShiftKeyPressed","firstClickedImageIndex","isCtrlKeyPressed","draggedCircleIndex","draggedCircleIndexArr","draggedCircleImgIndex","shiftClickImages","rollbackHistory","imageSize","selectSizeTitle","refsArray","allCheck","cellRef","cellMarkerIcon","isBeforeChild","modalOpen","selectedImageSrc","modalImageWidth","modalImageHeight","selectItemIamgeArr","moveRightClickArr","showSize","contextMenuVisible","contextMenuX","contextMenuY","targetItem","classCompareShow","handleKeyDown","handleKeyUp","handleClickOutside","imgSetLocalStorage","storedBrightness","storedRgb","imageSizeCopy","isBeforeDataSet","nextPage","isNextFalse","handleRightClick","openContextMenu","getNewImageUrl","matchingImage","fileNameMa","idMa","titleMa","showSizeControl","hideSizeControl","moveSelectedImages","itemIdx","addToRollbackHistory","draggedItem","matchingItemIndex","infoItem","upDown","upDownData","customClassData","getCustomSessionData","findDelData","dataItems","projectTypeReturn","wbcPush","wbcinfo","foundObject","isBorderChanged","prefix","modifiedPrefix","replaceFileNamePrefix","openModal","closeModal","zoomIn","newWidth","newHeight","zoomOut","excelDownload","drawCellMarker","imgResize","jsonImageDat","imageElement","foundItem","FILE_NM","widthRatio","ORG_WIDTH","heightRatio","ORG_HEIGHT","rectWidth","POSX2","POSX1","rectHeight","POSY2","POSY1","display","allCheckChange","allCheckInsert","idxKey","setRef","itemId","scrollToElement","targetElement","imgSizeReset","brightnessReset","reset","selectedSizeTitle","changeImageSize","currentWidth","currentHeight","onDragOverCircle","onDropCircle","toUpperCase","moveSelectedImagesToTargetItem","targetIndex","selectedImages","sourceItemIndex","sourceItem","imageIndex","correspondingItem","afterItem","itemImg","dataItem","wbcInfoIdArr","customClassArr","oArr","onDragOver","itemIndex","selectImage","classInfoitem","imageIndexInSelected","img","imageFileName","targetItemIndex","originalOnDrop","selectedImagesToMove","keyMove","wbcInfosArr","sourceFolders","destinationFolders","classInfoBagic","matchingItem","imgAttr","removeDuplicateImages","seItem","removeDuplicatesByProperty","findImage","draggedItemIdx","draggedItemObj","selectedImagesFileNames","filteredImages","array","property","seen","Set","uniqueFileNames","uniqueImages","notWbcAfterSave","originalDbVal","uniqueData","uniqueImagesForItem","highImg","findAfterArr","rollbackChanges","prevWbcInfo","pop","rollbackImages","findUndefinedImages","sourceWbcInfo","targetWbcInfo","infoArray","sourceIndex","sourceImage","targetImage","currentWbcInfo","sourceFolderInfo","destinationFolderInfo","onIsNextFalse","ClassInfo","onNextPage","onScrollEvent","onIsBefore","onMouseleave","onMouseover","onDblclick","paImages","idealZoneImages","idealStitchImages","megaImages","strArray","buttonOfen","viewerSmall","getImgUrl","getImageUrls","getImageUrlsSmallImg","resp","openInViewer","destroy","navigator","showZoomControl","showHomeControl","showFullScreenControl","showRotationControl","showFullPageControl","dimensions","tilingViewerElement","containerWidth","aspectRatio","dynamicHeight","closeViewer","viewerElement","hideImageRef","newImgHeight","newImgWidth","onImageLoad","imgElement","complete","naturalHeight","naturalWidth","bool","transform","onLoad","imgRef","TilingViewer","LeftImgList","createRouter","history","createWebHistory","routes","component","HomeView","JoinView","loginView","setting","Database","databaseDetail","DatabaseWhole","DatabaseRbc","beforeEach","to","next","currentUser","_imports_0","appHeaderLeftHidden","logOutBox","viewerCheckData","isDoorOpen","storagePercent","eqStatCdData","oilCountData","storagePercentData","maxOilCount","statusBarWrapper","statusBar","noRouterPush","currentTime","isAralrmInterver","formattedDate","updateDateTime","toLocaleDateString","toLocaleTimeString","clear","fullscreenElement","exitFullscreen","timerId","eqStatCdChangeVal","oilCountChangeVal","storagePercentChangeVal","logOutBoxOn","logout","eqStatCdVal","onReset","getPercent","progressBarWidth","offsetWidth","onPrime","_component_router_link","Modal","onAfterOpen","header","namespaced","mutations","setUserMutation","actions","setUserAction","commit","wbcDiffVal","analysisTypeSet","wbcDiffValSet","stitchCountSet","setAnalysisType","setWbcDiffValSet","setStitchCountSet","workingViewModule","equipmentStatusCode","time","setEquipmentStatusCode","setWbcCount","setSlideTime","setTime","setSlotInfo","setWorkingViewInfo","storageSize","setEmbeddedStatusJobCmd","setUserStop","setIsRecoveryRun","setIsPause","setSysInfo","setIsInit","setEmbeddedStatusInfo","orderListModule","setRunningInfo","setChangeSlide","setSlideBoolean","updateRunningInfo","embeddedNumber","slideProceeding","isRequestInProgress","startInfoBoolen","runningInfoBoolen","runningInfoStop","reqArr","firstLoading","slotIndex","runningArr","rbcArr","chatRunningData","setStartEmbedded","setEqStatCd","setIsRunningState","setTotalCount","setEmbeddedNumber","setIsAlarm","setBfSelectFiles","setSlideProceeding","setTotalSlideTime","setIaRootPath","setRunningSlotId","setIsRequestInProgress","setStartInfoBoolen","setRunningInfoBoolen","setRunningInfoStop","setReqArr","shiftReqArr","shift","setReqArrPaste","setResFlag","setFirstLoading","setSlotIndex","setViewerCheck","setRunningArr","setClassArr","setRbcArr","setProcessInfo","setOrderList","setLoginSetData","setDeviceSerialNm","setSiteCd","setClonedWbcInfo","setClonedRbcInfo","setMoveImgIsBool","setClassInfoSort","setChatRunningData","setCbcLayer","setInhaTestCode","setRbcReData","setCommonInfo","dataBaseSetDataModule","dataBaseSetData","setDataBaseSetData","resultCode","errorLevel","processingCode","cassetId","existingSlot","existing","setTimeInfo","createStore","modules","sysInfoStore","resultCd","embeddedInfoData","isRecovery","deviceInfoData","alert","runningInfoStore","checkPbNormalCell","norMalRange","neutrophilCount","resultObj","indexOf","range","countingInterStartval","countingInterRunval","viewerCheckApp","parsedDataProps","deleteData","siteCdDvBarCode","reqArrPaste","uniqueReqArr","removeDuplicateJobCmd","notSysRunInfo","onBeforeMount","leave","startSysPostWebSocket","runInfoPostWebSocket","textDecoder","TextDecoder","stringData","decode","parseDataWarp","deviceInfoObj","saveDeviceInfo","sendSettingInfo","runnStart","runningInfoCheckStore","runnComp","lastCompleteIndex","iCasChange","workingDone","saveTestHistory","isLowPowerScan","completeSlot","classElements","rbcArrElements","matchedWbcInfo","newWbcInfo","traySlot","tactTime","bf_lowPowerPath","bminfo","saveRunningInfo","deviceInfo","deviceData","deviceItem","last","rbcAppUpdate","classAppUpdateLast","uniqueJobCmds","executeAfterDelay","_component_router_view","AppHeader","bmComponent","onClassAppUpdateLast","onRbcAppUpdate","socketPlugin","install","app","socket","io","transports","faHalfCircleUp","iconName","faHalfCircleDown","library","fas","faCircle","createApp","App","use","FontAwesomeIcon","mount","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","getter","__esModule","d","definition","defineProperty","enumerable","g","globalThis","Function","prop","prototype","Symbol","toStringTag","nmd","paths","children","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}